<?xml version="1.0" encoding="UTF-8"?>

<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
           xmlns="http://www.hibernate.org/xsd/orm"
           xmlns:orm="http://www.hibernate.org/xsd/orm"
           targetNamespace="http://www.hibernate.org/xsd/orm"
           elementFormDefault="qualified"
           version="2.1.0">

    <xsd:annotation>
        <xsd:documentation><![CDATA[
        This is the Hibernate-specific XML Schema for object/relational mapping files.

        Object/relational mapping files must indicate the object/relational
        mapping file schema by using the persistence namespace:

        http://www.hibernate.org/xsd/orm

        and indicate the version of the schema by using the version element as shown below:

        <entity-mappings xmlns="http://www.hibernate.org/xsd/orm"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                version="2.1.0">
            ...
        </entity-mappings>
        ]]></xsd:documentation>
    </xsd:annotation>


    <!-- **************************************************** -->

    <xsd:element name="entity-mappings">
        <xsd:complexType>
            <xsd:annotation>
                <xsd:documentation>
                    The entity-mappings element is the root element of a mapping
                    file. It contains the following four types of elements:

                    1. The persistence-unit-metadata element contains metadata
                    for the entire persistence unit. The behavior is undefined if this element
                    occurs in multiple mapping files within the same persistence unit.

                    2. The package, schema, catalog and access elements apply to all of
                    the entity, mapped-superclass and embeddable elements defined in
                    the same file in which they occur.

                    3. The sequence-generator, table-generator, converter, named-query,
                    named-native-query, named-stored-procedure-query, and
                    sql-result-set-mapping elements are global to the persistence
                    unit.

                        a. The behavior is undefined when having more than one sequence-generator
                        or table-generator occur in a persistence unit (whether in the same or
                        different mapping file).

                        b. The behavior is undefined when having more than one named-query,
                        named-native-query, sql-result-set-mapping, or named-stored-procedure-query
                        of the same name in a persistence unit (whether in the same or different
                        mapping file).

                        c. The behavior is undefined when having more than one converter for the same
                        target type in a persistence unit (whether in the same or different mapping file).

                    4. The entity, mapped-superclass and embeddable elements each define
                    the mapping information for a managed persistent class. The mapping
                    information contained in these elements may be complete or it may
                    be partial.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <!-- hbm: "meta information", used by tooling -->
                <xsd:element name="meta" minOccurs="0" maxOccurs="unbounded" type="orm:tooling-meta-type"/>

                <xsd:element name="description" type="xsd:string" minOccurs="0"/>
                <xsd:element name="persistence-unit-metadata" type="orm:persistence-unit-metadata" minOccurs="0"/>
                <xsd:element name="package" type="xsd:string" minOccurs="0"/>
                <xsd:element name="schema" type="xsd:string" minOccurs="0"/>
                <xsd:element name="catalog" type="xsd:string" minOccurs="0"/>

                <!-- allow a choice between the JPA and Hibernate "attribute access" declaration -->
                <xsd:choice>
                    <!-- The JPA declaration is discrete (property|field) -->
                    <xsd:element name="access" type="orm:access-type" minOccurs="0"/>
                    <!-- Hibernate allows pluggable contracts, so its declaration is open-ended -->
                    <xsd:element name="default-access" type="xsd:string"/>
                </xsd:choice>

                <xsd:element name="auto-import" type="xsd:boolean" />
                <xsd:element name="default-cascade" type="xsd:string" />
                <xsd:element name="default-lazy" type="xsd:boolean" />

                <xsd:element name="sequence-generator" type="orm:sequence-generator" minOccurs="0" maxOccurs="unbounded"/>
                <xsd:element name="table-generator" type="orm:table-generator" minOccurs="0" maxOccurs="unbounded"/>

                <xsd:element name="identifier-generator" type="orm:generic-generator-type" minOccurs="0" maxOccurs="unbounded" />

                <xsd:element name="named-query" type="orm:named-query" minOccurs="0" maxOccurs="unbounded"/>
                <xsd:element name="named-native-query" type="orm:named-native-query" minOccurs="0" maxOccurs="unbounded"/>
                <xsd:element name="named-stored-procedure-query" type="orm:named-stored-procedure-query" minOccurs="0" maxOccurs="unbounded"/>
                <xsd:element name="sql-result-set-mapping" type="orm:sql-result-set-mapping" minOccurs="0" maxOccurs="unbounded"/>

                <xsd:element name="mapped-superclass" type="orm:mapped-superclass" minOccurs="0" maxOccurs="unbounded"/>
                <xsd:element name="entity" type="orm:entity" minOccurs="0" maxOccurs="unbounded"/>
                <xsd:element name="embeddable" type="orm:embeddable" minOccurs="0" maxOccurs="unbounded"/>
                <xsd:element name="converter" type="orm:converter" minOccurs="0" maxOccurs="unbounded"/>

                <!-- hbm : explicit query language "import" -->
                <xsd:element name="import" minOccurs="0" maxOccurs="unbounded">
                    <xsd:complexType>
                        <xsd:attribute name="class" type="xsd:string" use="required" />
                        <!-- default is unqualified class name -->
                        <xsd:attribute name="rename" type="xsd:string" use="optional"/>
                    </xsd:complexType>
                </xsd:element>

                <!-- todo : hbm : filter-def -->
                <!-- todo : hbm : typedef -->

            </xsd:sequence>
            <xsd:attribute name="version" type="orm:supportedVersionsType" default="2.1.0" use="optional"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:complexType name="emptyType"/>

    <xsd:simpleType name="versionType">
        <xsd:restriction base="xsd:token">
            <xsd:pattern value="[0-9]+(\.[0-9]+)*"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="supportedVersionsType">
        <xsd:restriction base="orm:versionType">
            <xsd:enumeration value="2.1.0"/>
        </xsd:restriction>
    </xsd:simpleType>


    <!-- **************************************************** -->

    <xsd:complexType name="persistence-unit-metadata">
        <xsd:annotation>
            <xsd:documentation>
                Metadata that applies to the persistence unit and not just to the mapping
                file in which it is contained.

                If the xml-mapping-metadata-complete element is specified,
                the complete set of mapping metadata for the persistence unit
                is contained in the XML mapping files for the persistence unit.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="description" type="xsd:string" minOccurs="0"/>
            <xsd:element name="xml-mapping-metadata-complete" type="orm:emptyType" minOccurs="0"/>
            <xsd:element name="persistence-unit-defaults" type="orm:persistence-unit-defaults" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>

    <!-- **************************************************** -->

    <xsd:complexType name="persistence-unit-defaults">
        <xsd:annotation>
            <xsd:documentation>
                These defaults are applied to the persistence unit as a whole unless they
                are overridden by local annotation or XML element settings.

                schema - Used as the schema for all tables, secondary tables, join
                tables, collection tables, sequence generators, and table
                generators that apply to the persistence unit

                catalog - Used as the catalog for all tables, secondary tables, join
                tables, collection tables, sequence generators, and table
                generators that apply to the persistence unit

                delimited-identifiers - Used to treat database identifiers as
                delimited identifiers.

                access - Used as the access type for all managed classes in
                the persistence unit

                cascade-persist - Adds cascade-persist to the set of cascade options
                in all entity relationships of the persistence unit

                entity-listeners - List of default entity listeners to be invoked
                on each entity in the persistence unit.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="description" type="xsd:string" minOccurs="0"/>
            <xsd:element name="schema" type="xsd:string" minOccurs="0"/>
            <xsd:element name="catalog" type="xsd:string" minOccurs="0"/>
            <xsd:element name="delimited-identifiers" type="orm:emptyType" minOccurs="0"/>

            <!-- allow a choice between the JPA and Hibernate "attribute access" declaration -->
            <xsd:choice minOccurs="0">
                <!-- The JPA declaration is discrete (property|field) -->
                <xsd:element name="access" type="orm:access-type"/>
                <!-- Hibernate allows pluggable contracts, so its declaration is open-ended -->
                <xsd:element name="default-access" type="xsd:string"/>
            </xsd:choice>

            <!-- allow a choice between the JPA and Hibernate default cascading options -->
            <xsd:choice minOccurs="0">
                <xsd:element name="cascade-persist" type="orm:emptyType" minOccurs="0"/>
                <!-- Hibernate allows fully specified cascade options to use as default -->
                <xsd:element name="default-cascade" type="xsd:string" />
            </xsd:choice>

            <!-- hbm : should all referenced entities (and superclasses) be auto-imported for hql/jpql -->
            <xsd:element name="auto-import" type="xsd:boolean" minOccurs="0"/>
            <!-- hbm : whether entities should be lazy (by default) or not -->
            <xsd:element name="default-lazy" type="xsd:boolean" minOccurs="0"/>

            <xsd:element name="entity-listeners" type="orm:entity-listeners" minOccurs="0"/>
        </xsd:sequence>
    </xsd:complexType>


    <!-- **************************************************** -->

    <xsd:simpleType name="access-type">
        <xsd:annotation>
            <xsd:documentation>
                The JPA "attribute access" enumeration, declaring the discrete set of values
                describing how the persistence provider accesses the state of an entity or
                embedded object.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:token">
            <xsd:enumeration value="PROPERTY"/>
            <xsd:enumeration value="FIELD"/>
        </xsd:restriction>
    </xsd:simpleType>


    <!-- **************************************************** -->

    <xsd:complexType name="attributes">
        <xsd:annotation>
            <xsd:documentation>
                This element contains the entity field or property mappings.
                It may be sparsely populated to include only a subset of the
                fields or properties. If metadata-complete for the entity is true
                then the remainder of the attributes will be defaulted according
                to the default rules.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="description" type="xsd:string" minOccurs="0"/>
            <xsd:choice>
                <xsd:element name="id" type="orm:id" minOccurs="0" maxOccurs="unbounded"/>
                <xsd:element name="embedded-id" type="orm:embedded-id" minOccurs="0"/>
            </xsd:choice>
            <xsd:element name="basic" type="orm:basic" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="version" type="orm:version" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="many-to-one" type="orm:many-to-one" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="one-to-many" type="orm:one-to-many" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="one-to-one" type="orm:one-to-one" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="many-to-many" type="orm:many-to-many" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="element-collection" type="orm:element-collection" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="embedded" type="orm:embedded" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="transient" type="orm:transient" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <!-- **************************************************** -->

    <xsd:complexType name="basic">
        <xsd:annotation>
            <xsd:documentation>
                See javax.persistence.Basic
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="column" type="orm:column" minOccurs="0"/>
            <xsd:choice>
                <xsd:element name="lob" type="orm:lob" minOccurs="0"/>
                <xsd:element name="temporal" type="orm:temporal" minOccurs="0"/>
                <xsd:element name="enumerated" type="orm:enumerated" minOccurs="0"/>
                <xsd:element name="convert" type="orm:convert" minOccurs="0"/>
            </xsd:choice>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="required"/>
        <xsd:attribute name="fetch" type="orm:fetch-type"/>
        <xsd:attribute name="optional" type="xsd:boolean"/>
        <xsd:attribute name="access" type="orm:access-type"/>
    </xsd:complexType>


    <!-- **************************************************** -->

    <xsd:simpleType name="cache-mode-type">
        <xsd:annotation>
            <xsd:documentation>
                Enumeration values for Hibernate's CacheMode
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:token">
            <xsd:enumeration value="get"/>
            <xsd:enumeration value="ignore"/>
            <xsd:enumeration value="normal"/>
            <xsd:enumeration value="put"/>
            <xsd:enumeration value="refresh"/>
        </xsd:restriction>
    </xsd:simpleType>


    <!-- **************************************************** -->

    <xsd:complexType name="convert">
        <xsd:annotation>
            <xsd:documentation>
                Corresponds to the javax.persistence.Convert annotation
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="description" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="converter" type="xsd:string"/>
        <xsd:attribute name="attribute-name" type="xsd:string"/>
        <xsd:attribute name="disable-conversion" type="xsd:boolean"/>
    </xsd:complexType>


    <!-- **************************************************** -->

    <xsd:complexType name="converter">
        <xsd:annotation>
            <xsd:documentation>
                Corresponds to the javax.persistence.Converter annotation
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="description" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="class" type="xsd:string" use="required"/>
        <xsd:attribute name="auto-apply" type="xsd:boolean"/>
    </xsd:complexType>


    <!-- **************************************************** -->

    <xsd:complexType name="embeddable">
        <xsd:annotation>
            <xsd:documentation>
                See javax.persistence.Embeddable

                Defines the settings and mappings for embeddable objects.

                Again, with metadata-complete=false the mapping is used in
                conjunction with annotations.  Alternatively, metadata-complete=true
                can be used to indicate that no annotations are to be processed
                in the class. If this is the case then the defaulting rules will
                be recursively applied.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="description" type="xsd:string" minOccurs="0"/>
            <xsd:element name="attributes" type="orm:embeddable-attributes" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="class" type="xsd:string" use="required"/>
        <xsd:attribute name="access" type="orm:access-type"/>
        <xsd:attribute name="metadata-complete" type="xsd:boolean"/>
    </xsd:complexType>


    <!-- **************************************************** -->

    <xsd:complexType name="embeddable-attributes">
        <xsd:sequence>
            <xsd:element name="basic" type="orm:basic" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="many-to-one" type="orm:many-to-one" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="one-to-many" type="orm:one-to-many" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="one-to-one" type="orm:one-to-one" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="many-to-many" type="orm:many-to-many" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="element-collection" type="orm:element-collection" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="embedded" type="orm:embedded" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="transient" type="orm:transient" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <!-- **************************************************** -->

    <xsd:complexType name="embedded">
        <xsd:annotation>
            <xsd:documentation>
                Corresponds to the javax.persistence.Embedded annotation
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="attribute-override" type="orm:attribute-override" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="association-override" type="orm:association-override" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="convert" type="orm:convert" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="required"/>
        <xsd:attribute name="access" type="orm:access-type"/>
    </xsd:complexType>

    <!-- **************************************************** -->

    <xsd:complexType name="embedded-id">
        <xsd:annotation>
            <xsd:documentation>
                Corresponds to the javax.persistence.EmbeddedId annotation
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="attribute-override" type="orm:attribute-override" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="required"/>
        <xsd:attribute name="access" type="orm:access-type"/>
    </xsd:complexType>


    <!-- **************************************************** -->

    <xsd:complexType name="entity">
        <xsd:annotation>
            <xsd:documentation>
                See javax.persistence.Entity

                Defines the settings and mappings for an entity.

                May be used in 2 ways:
                1. sparsely populated (metadata-complete=false) and used in
                conjunction with the annotations.
                2. as complete self-contained metadata (metadata-complete=true)
                indicating that no annotations on the entity class (and its fields
                or properties) are to be processed. If this is the case then
                the defaulting rules for the entity and its subelements will
                be recursively applied.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="description" type="xsd:string" minOccurs="0"/>
            <!-- hbm: "meta information", used by tooling -->
            <xsd:element name="meta" minOccurs="0" maxOccurs="unbounded" type="orm:tooling-meta-type"/>
            <!-- hbm: is the entity considered abstract -->
            <xsd:element name="abstract" type="xsd:boolean"/>
            <!-- hbm: The size for batch fetching -->
            <xsd:element name="batch-size" type="xsd:string"/>
            <!-- hbm : Hibernate specific caching configuration -->
            <xsd:element name="cache" minOccurs="0" type="orm:cache-element"/>

            <xsd:choice>
                <!-- Physical table -->
                <xsd:element name="table" type="orm:table" minOccurs="0"/>
                <!-- "inline view" -->
                <xsd:element name="subselect" minOccurs="0" type="xsd:string"/>
            </xsd:choice>
            <!-- hbm : additional names to synchronize against (partial flush) -->
            <xsd:element name="synchronize" minOccurs="0" maxOccurs="unbounded" type="orm:synchronize-type"/>
            <xsd:element name="secondary-table" type="orm:secondary-table" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:sequence>
                <xsd:element name="primary-key-join-column" type="orm:primary-key-join-column" minOccurs="0" maxOccurs="unbounded"/>
                <xsd:element name="primary-key-foreign-key" type="orm:foreign-key" minOccurs="0"/>
            </xsd:sequence>

            <xsd:element name="id-class" type="orm:id-class" minOccurs="0"/>

            <xsd:element name="inheritance" type="orm:inheritance" minOccurs="0"/>
            <xsd:element name="discriminator-value" type="orm:discriminator-value" minOccurs="0"/>
            <xsd:element name="discriminator-column" type="orm:discriminator-column" minOccurs="0"/>

            <xsd:element name="sequence-generator" type="orm:sequence-generator-type" minOccurs="0"/>
            <xsd:element name="table-generator" type="orm:table-generator-type" minOccurs="0"/>

            <xsd:element name="named-query" type="orm:named-query-type" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="named-native-query" type="orm:named-native-query" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="named-stored-procedure-query" type="orm:named-stored-procedure-query" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="sql-result-set-mapping" type="orm:sql-result-set-mapping" minOccurs="0" maxOccurs="unbounded"/>

            <xsd:element name="exclude-default-listeners" type="orm:emptyType" minOccurs="0"/>
            <xsd:element name="exclude-superclass-listeners" type="orm:emptyType" minOccurs="0"/>

            <xsd:element name="entity-listeners" type="orm:entity-listeners" minOccurs="0"/>

            <xsd:element name="pre-persist" type="orm:pre-persist" minOccurs="0"/>
            <xsd:element name="post-persist" type="orm:post-persist" minOccurs="0"/>
            <xsd:element name="pre-remove" type="orm:pre-remove" minOccurs="0"/>
            <xsd:element name="post-remove" type="orm:post-remove" minOccurs="0"/>
            <xsd:element name="pre-update" type="orm:pre-update" minOccurs="0"/>
            <xsd:element name="post-update" type="orm:post-update" minOccurs="0"/>
            <xsd:element name="post-load" type="orm:post-load" minOccurs="0"/>

            <xsd:element name="attribute-override" type="orm:attribute-override" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="association-override" type="orm:association-override" minOccurs="0" maxOccurs="unbounded"/>

            <xsd:element name="convert" type="orm:convert" minOccurs="0" maxOccurs="unbounded"/>

            <xsd:element name="named-entity-graph" type="orm:named-entity-graph" minOccurs="0" maxOccurs="unbounded"/>

            <xsd:element name="tuplizer" minOccurs="0" maxOccurs="unbounded" type="orm:tuplizer-element"/>

            <xsd:element name="loader" minOccurs="0" type="orm:loader-element"/>

            <xsd:element name="sql-insert" minOccurs="0" type="orm:sql-insert-element"/>
            <xsd:element name="sql-update" minOccurs="0" type="orm:sql-update-element"/>
            <xsd:element name="sql-delete" minOccurs="0" type="orm:sql-delete-element"/>

            <xsd:element name="filter" minOccurs="0" maxOccurs="unbounded" type="orm:filter-element"/>

            <xsd:element name="fetch-profile" minOccurs="0" maxOccurs="unbounded" type="orm:fetch-profile-element"/>

            <xsd:element name="attributes" type="orm:attributes" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string"/>
        <xsd:attribute name="class" type="xsd:string" use="required"/>
        <xsd:attribute name="access" type="orm:access-type"/>
        <xsd:attribute name="cacheable" type="xsd:boolean"/>
        <xsd:attribute name="metadata-complete" type="xsd:boolean"/>
    </xsd:complexType>


    <!-- **************************************************** -->

    <xsd:complexType name="entity-listeners">
        <xsd:annotation>
            <xsd:documentation>
                Corresponds to the JPA javax.persistence.EntityListeners annotation
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="entity-listener" type="orm:entity-listener" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>


    <!-- **************************************************** -->

    <xsd:complexType name="entity-listener">
        <xsd:annotation>
            <xsd:documentation>
                Corresponds to the JPA javax.persistence.EntityListener annotation

                Defines an entity listener to be invoked at lifecycle events for
                the entities that list this listener.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="description" type="xsd:string" minOccurs="0"/>
            <xsd:element name="pre-persist" type="orm:pre-persist" minOccurs="0"/>
            <xsd:element name="post-persist" type="orm:post-persist" minOccurs="0"/>
            <xsd:element name="pre-remove" type="orm:pre-remove" minOccurs="0"/>
            <xsd:element name="post-remove" type="orm:post-remove" minOccurs="0"/>
            <xsd:element name="pre-update" type="orm:pre-update" minOccurs="0"/>
            <xsd:element name="post-update" type="orm:post-update" minOccurs="0"/>
            <xsd:element name="post-load" type="orm:post-load" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="class" type="xsd:string" use="required"/>
    </xsd:complexType>


    <!-- **************************************************** -->

    <xsd:simpleType name="flush-mode-type">
        <xsd:annotation>
            <xsd:documentation>
                Enumeration values for Hibernate's FlushMode
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:token">
            <xsd:enumeration value="always"/>
            <xsd:enumeration value="auto"/>
            <xsd:enumeration value="never"/>
        </xsd:restriction>
    </xsd:simpleType>

    <!-- **************************************************** -->

    <xsd:complexType name="generic-generator-type">
        <xsd:annotation>
            <xsd:documentation>
                Hibernate-specific element used declare and short-name custom
                org.hibernate.id.IdentifierGenerator implementations
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="class" use="required" type="xsd:string"/>
        <xsd:attribute name="name" use="required" type="xsd:string"/>
    </xsd:complexType>


    <!-- **************************************************** -->

    <xsd:complexType name="id">
        <xsd:annotation>
            <xsd:documentation>
                Corresponds to the javax.persistence.Id annotation
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="column" type="orm:column" minOccurs="0"/>
            <xsd:element name="generated-value" type="orm:generated-value" minOccurs="0"/>
            <xsd:element name="temporal" type="orm:temporal" minOccurs="0"/>
            <xsd:element name="table-generator" type="orm:table-generator" minOccurs="0"/>
            <xsd:element name="sequence-generator" type="orm:sequence-generator" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="required"/>
        <xsd:attribute name="access" type="orm:access-type"/>
    </xsd:complexType>


    <!-- **************************************************** -->

    <xsd:complexType name="id-class">
        <xsd:annotation>
            <xsd:documentation>
                Corresponds to the javax.persistence.IdClass annotation
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="class" type="xsd:string" use="required"/>
    </xsd:complexType>


    <!-- **************************************************** -->

    <xsd:simpleType name="lock-mode-type">
        <xsd:annotation>
            <xsd:documentation>
                Enumerated values specified by javax.persistence.LockModeType
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:token">
            <xsd:enumeration value="READ"/>
            <xsd:enumeration value="WRITE"/>
            <xsd:enumeration value="OPTIMISTIC"/>
            <xsd:enumeration value="OPTIMISTIC_FORCE_INCREMENT"/>
            <xsd:enumeration value="PESSIMISTIC_READ"/>
            <xsd:enumeration value="PESSIMISTIC_WRITE"/>
            <xsd:enumeration value="PESSIMISTIC_FORCE_INCREMENT"/>
            <xsd:enumeration value="NONE"/>
        </xsd:restriction>
    </xsd:simpleType>


    <!-- **************************************************** -->

    <xsd:complexType name="mapped-superclass">
        <xsd:annotation>
            <xsd:documentation>
                See javax.persistence.MappedSuperclass

                Defines the settings and mappings for a mapped superclass.

                May be used in 2 ways:
                1. sparsely populated (metadata-complete=false) and used in
                conjunction with the annotations.
                2. as complete self-contained metadata (metadata-complete=true)
                indicating that no annotations are to be processed. If this is
                the case then the defaulting rules will be recursively applied.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="description" type="xsd:string" minOccurs="0"/>
            <xsd:element name="id-class" type="orm:id-class" minOccurs="0"/>
            <xsd:element name="exclude-default-listeners" type="orm:emptyType" minOccurs="0"/>
            <xsd:element name="exclude-superclass-listeners" type="orm:emptyType" minOccurs="0"/>
            <xsd:element name="entity-listeners" type="orm:entity-listeners" minOccurs="0"/>
            <xsd:element name="pre-persist" type="orm:pre-persist" minOccurs="0"/>
            <xsd:element name="post-persist" type="orm:post-persist" minOccurs="0"/>
            <xsd:element name="pre-remove" type="orm:pre-remove" minOccurs="0"/>
            <xsd:element name="post-remove" type="orm:post-remove" minOccurs="0"/>
            <xsd:element name="pre-update" type="orm:pre-update" minOccurs="0"/>
            <xsd:element name="post-update" type="orm:post-update" minOccurs="0"/>
            <xsd:element name="post-load" type="orm:post-load" minOccurs="0"/>
            <xsd:element name="attributes" type="orm:attributes" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="class" type="xsd:string" use="required"/>
        <xsd:attribute name="access" type="orm:access-type"/>
        <xsd:attribute name="metadata-complete" type="xsd:boolean"/>
    </xsd:complexType>


    <!-- **************************************************** -->

    <xsd:complexType name="meta-value-type">
        <xsd:annotation>
            <xsd:documentation>
                Hibernate-specific element used to describe the meta-value (discriminator)
                mapping for ANY associations.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="class" use="required" type="xsd:string"/>
        <xsd:attribute name="value" use="required" type="xsd:string"/>
    </xsd:complexType>


    <!-- **************************************************** -->

    <xsd:group name="named-query-common-ext-elements">
        <xsd:annotation>
            <xsd:documentation>
                Common Hibernate specific extensions available for named query definitions.

                todo : a lot of these extensions could be handled by JPA QueryHint scheme
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="comment" type="xsd:string" minOccurs="0" />
            <xsd:element name="timeout" type="xsd:string" minOccurs="0" />
            <xsd:element name="flush-mode" type="orm:flush-mode-type" minOccurs="0" />
            <xsd:element name="cacheable" type="xsd:boolean" minOccurs="0" />
            <xsd:element name="cache-mode" type="orm:cache-mode-type" minOccurs="0" />
            <xsd:element name="cache-region" type="xsd:string" minOccurs="0" />
            <xsd:element name="fetch-size" type="xsd:string" minOccurs="0" />
            <xsd:element name="read-only" type="xsd:boolean" minOccurs="0" />

            <xsd:sequence minOccurs="0" maxOccurs="unbounded">
                <xsd:element name="query-param" type="orm:query-param-type"/>
            </xsd:sequence>
        </xsd:sequence>
    </xsd:group>

    <xsd:complexType name="named-native-query">
        <xsd:annotation>
            <xsd:documentation>
                Mix of javax.persistence.NamedNativeQuery and  org.hibernate.annotations.NamedNativeQuery
                annotations.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="description" type="xsd:string" minOccurs="0"/>
            <xsd:element name="query" type="xsd:string"/>
            <xsd:element name="hint" type="orm:query-hint" minOccurs="0" maxOccurs="unbounded"/>

            <xsd:element name="synchronize" type="orm:synchronize-type"/>
            <!-- previous versions of hbm also support callable, to indicate a proc call -->
            <xsd:group ref="named-query-common-ext-elements"/>
        </xsd:sequence>

        <xsd:attribute name="name" type="xsd:string" use="required"/>
        <xsd:attribute name="result-class" type="xsd:string"/>
        <xsd:attribute name="result-set-mapping" type="xsd:string"/>
    </xsd:complexType>

    <xsd:complexType name="named-query">
        <xsd:annotation>
            <xsd:documentation>
                Mix of javax.persistence.NamedQuery and  org.hibernate.annotations.NamedQuery
                annotations.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="description" type="xsd:string" minOccurs="0" />
            <xsd:element name="query" type="xsd:string" />
            <xsd:element name="lock-mode" type="orm:lock-mode-type" minOccurs="0" />
            <xsd:element name="hint" type="orm:query-hint" minOccurs="0" maxOccurs="unbounded" />

            <xsd:group ref="named-query-common-ext-elements"/>

        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="required"/>
    </xsd:complexType>


    <!-- **************************************************** -->

    <xsd:complexType name="named-stored-procedure-query">
        <xsd:annotation>
            <xsd:documentation>
                Corresponds to the javax.persistence.NamedStoredProcedureQuery annotation
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="description" type="xsd:string" minOccurs="0"/>
            <xsd:element name="parameter" type="orm:named-stored-procedure-query-parameter" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="result-class" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="result-set-mapping" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="hint" type="orm:query-hint" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="required"/>
        <xsd:attribute name="procedure-name" type="xsd:string" use="required"/>
    </xsd:complexType>

    <xsd:complexType name="named-stored-procedure-query-parameter">
        <xsd:annotation>
            <xsd:documentation>
                Corresponds to javax.persistence.StoredProcedureParameter annotation
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="description" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string"/>
        <xsd:attribute name="class" type="xsd:string" use="required"/>
        <xsd:attribute name="mode" type="orm:parameter-mode"/>
    </xsd:complexType>

    <xsd:simpleType name="parameter-mode">
        <xsd:annotation>
            <xsd:documentation>
                Corresponds to enumerated values defined by javax.persistence.ParameterMode
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:token">
            <xsd:enumeration value="IN"/>
            <xsd:enumeration value="INOUT"/>
            <xsd:enumeration value="OUT"/>
            <xsd:enumeration value="REF_CURSOR"/>
        </xsd:restriction>
    </xsd:simpleType>


    <!-- **************************************************** -->

    <xsd:complexType name="post-load">
        <xsd:annotation>
            <xsd:documentation>
                Corresponds to the javax.persistence.PostLoad annotation
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="description" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="method-name" type="xsd:string" use="required"/>
    </xsd:complexType>


    <!-- **************************************************** -->

    <xsd:complexType name="post-persist">
        <xsd:annotation>
            <xsd:documentation>
                Corresponds to the javax.persistence.PostPersist annotation
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="description" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="method-name" type="xsd:string" use="required"/>
    </xsd:complexType>


    <!-- **************************************************** -->

    <xsd:complexType name="post-remove">
        <xsd:annotation>
            <xsd:documentation>
                Corresponds to the javax.persistence.PostRemove annotation
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="description" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="method-name" type="xsd:string" use="required"/>
    </xsd:complexType>


    <!-- **************************************************** -->

    <xsd:complexType name="post-update">
        <xsd:annotation>
            <xsd:documentation>
                Corresponds to the javax.persistence.PostUpdate annotation
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="description" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="method-name" type="xsd:string" use="required"/>
    </xsd:complexType>


    <!-- **************************************************** -->

    <xsd:complexType name="pre-persist">
        <xsd:annotation>
            <xsd:documentation>
                Corresponds to the javax.persistence.PrePersist annotation
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="description" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="method-name" type="xsd:string" use="required"/>
    </xsd:complexType>


    <!-- **************************************************** -->

    <xsd:complexType name="pre-remove">
        <xsd:annotation>
            <xsd:documentation>
                Corresponds to the javax.persistence.PreRemove annotation
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="description" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="method-name" type="xsd:string" use="required"/>
    </xsd:complexType>


    <!-- **************************************************** -->

    <xsd:complexType name="pre-update">
        <xsd:annotation>
            <xsd:documentation>
                Corresponds to the javax.persistence.PreUpdate annotation
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="description" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="method-name" type="xsd:string" use="required"/>
    </xsd:complexType>


    <!-- **************************************************** -->

    <xsd:complexType name="query-hint">
        <xsd:annotation>
            <xsd:documentation>
                @Target({}) @Retention(RUNTIME)
                public @interface QueryHint {
                    String name();
                    String value();
                }
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="description" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="required"/>
        <xsd:attribute name="value" type="xsd:string" use="required"/>
    </xsd:complexType>


    <!-- **************************************************** -->

    <xsd:complexType name="query-param-type">
        <xsd:annotation>
            <xsd:documentation>
                Used only by tools to generate finder methods for named queries
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="name" use="required" type="xsd:string"/>
        <xsd:attribute name="type" use="required" type="xsd:string"/>
    </xsd:complexType>


    <!-- **************************************************** -->

    <xsd:complexType name="sequence-generator">
        <xsd:annotation>
            <xsd:documentation>
                @Target({TYPE, METHOD, FIELD}) @Retention(RUNTIME)
                public @interface SequenceGenerator {
                    String name();
                    String sequenceName() default "";
                    String catalog() default "";
                    String schema() default "";
                    int initialValue() default 1;
                    int allocationSize() default 50;
                }
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="description" type="xsd:string" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="required"/>
        <xsd:attribute name="sequence-name" type="xsd:string"/>
        <xsd:attribute name="catalog" type="xsd:string"/>
        <xsd:attribute name="schema" type="xsd:string"/>
        <xsd:attribute name="initial-value" type="xsd:int"/>
        <xsd:attribute name="allocation-size" type="xsd:int"/>
    </xsd:complexType>


    <!-- **************************************************** -->

    <xsd:complexType name="sql-result-set-mapping">
        <xsd:annotation>
            <xsd:documentation>
                Corresponds to the javax.persistence.SqlResultSetMapping annotation
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="description" type="xsd:string" minOccurs="0"/>
            <xsd:element name="entity-result" type="orm:sql-result-set-mapping-entity-result" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="constructor-result" type="orm:sql-result-set-mapping-constructor-result" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="column-result" type="orm:sql-result-set-mapping-column-result" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="required"/>
    </xsd:complexType>

    <xsd:complexType name="sql-result-set-mapping-column-result">
        <xsd:annotation>
            <xsd:documentation>
                Corresponds to the javax.persistence.ColumnResult annotation
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="name" type="xsd:string" use="required"/>
        <xsd:attribute name="class" type="xsd:string"/>
    </xsd:complexType>

    <xsd:complexType name="sql-result-set-mapping-constructor-result">
        <xsd:annotation>
            <xsd:documentation>
                Corresponds to the javax.persistence.ConstructorResult annotation
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="column" type="orm:sql-result-set-mapping-column-result" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="target-class" type="xsd:string" use="required"/>
    </xsd:complexType>

    <xsd:complexType name="sql-result-set-mapping-entity-result">
        <xsd:annotation>
            <xsd:documentation>
                Corresponds to the javax.persistence.EntityResult annotation
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="field-result" type="orm:sql-result-set-mapping-field-result" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="entity-class" type="xsd:string" use="required"/>
        <xsd:attribute name="discriminator-column" type="xsd:string"/>
    </xsd:complexType>


    <xsd:complexType name="sql-result-set-mapping-field-result">
        <xsd:annotation>
            <xsd:documentation>
                Corresponds to javax.persistence.FieldResult annotation
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="name" type="xsd:string" use="required"/>
        <xsd:attribute name="column" type="xsd:string" use="required"/>
    </xsd:complexType>


    <!-- **************************************************** -->

    <xsd:complexType name="synchronize-type">
        <xsd:attribute name="table" type="xsd:string"/>
    </xsd:complexType>

    <xsd:group name="table-common-extensions">
        <xsd:sequence>
            <xsd:element name="comment" type="xsd:string" minOccurs="0" />
            <xsd:element name="check" type="xsd:string" minOccurs="0" />
        </xsd:sequence>
    </xsd:group>

    <!-- **************************************************** -->

    <xsd:complexType name="table">
        <xsd:annotation>
            <xsd:documentation>
                Corresponds to javax.persistence.Table annotation
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:group ref="table-common-extensions" />
            <xsd:element name="unique-constraint" type="orm:unique-constraint" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="index" type="orm:index" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string"/>
        <xsd:attribute name="catalog" type="xsd:string"/>
        <xsd:attribute name="schema" type="xsd:string"/>
    </xsd:complexType>


    <!-- **************************************************** -->

    <xsd:complexType name="table-generator">
        <xsd:annotation>
            <xsd:documentation>
                Corresponds to the javax.persistence.TableGenerator annotation
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="description" type="xsd:string" minOccurs="0"/>
            <xsd:group ref="table-common-extensions" />
            <xsd:element name="unique-constraint" type="orm:unique-constraint" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="index" type="orm:index" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="required"/>
        <xsd:attribute name="table" type="xsd:string"/>
        <xsd:attribute name="catalog" type="xsd:string"/>
        <xsd:attribute name="schema" type="xsd:string"/>
        <xsd:attribute name="pk-column-name" type="xsd:string"/>
        <xsd:attribute name="value-column-name" type="xsd:string"/>
        <xsd:attribute name="pk-column-value" type="xsd:string"/>
        <xsd:attribute name="initial-value" type="xsd:int"/>
        <xsd:attribute name="allocation-size" type="xsd:int"/>
    </xsd:complexType>


    <!-- **************************************************** -->

    <xsd:simpleType name="temporal">
        <xsd:annotation>
            <xsd:documentation>
                See javax.persistence.Temporal
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="orm:temporal-type"/>
    </xsd:simpleType>


    <!-- **************************************************** -->

    <xsd:simpleType name="temporal-type">
        <xsd:annotation>
            <xsd:documentation>
                See javax.persistence.TemporalType enum
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:token">
            <xsd:enumeration value="DATE"/>
            <xsd:enumeration value="TIME"/>
            <xsd:enumeration value="TIMESTAMP"/>
        </xsd:restriction>
    </xsd:simpleType>


    <!-- **************************************************** -->

    <xsd:complexType name="transient">
        <xsd:annotation>
            <xsd:documentation>
                See javax.persistence.Transient
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="name" type="xsd:string" use="required"/>
    </xsd:complexType>


    <!-- **************************************************** -->

    <xsd:complexType name="tooling-meta-type" mixed="true">
        <xsd:annotation>
            <xsd:documentation>
                Hibernate-specific element used to assign meta-level attributes to a
                class or property.  Is currently used by tooling (code generators) as
                a placeholder for values that is not directly related to O/R mappings.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:simpleContent>
            <xsd:extension base="xsd:string">
                <xsd:attribute name="attribute" use="required" type="xsd:string"/>
                <xsd:attribute name="inherit" default="true" type="xsd:boolean"/>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>


    <!-- **************************************************** -->

    <xsd:complexType name="unique-constraint">
        <xsd:annotation>
            <xsd:documentation>
                Corresponds to javax.persistence.UniqueConstraint
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="column-name" type="xsd:string" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string"/>
    </xsd:complexType>


    <!-- **************************************************** -->

    <xsd:complexType name="version">
        <xsd:annotation>
            <xsd:documentation>
                Corresponds to javax.persistence.Version
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="column" type="orm:column" minOccurs="0"/>
            <xsd:element name="temporal" type="orm:temporal" minOccurs="0"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string" use="required"/>
        <xsd:attribute name="access" type="orm:access-type"/>
    </xsd:complexType>

</xsd:schema>