<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" hostname="dhcp-10.15.208.168.stl.redhat.com" name="org.hibernate.test.legacy.MultiTableTest" tests="16" time="5.631" timestamp="2013-02-28T20:16:30">
  <properties />
  <testcase classname="org.hibernate.test.legacy.MultiTableTest" name="testCollection" time="0.3" />
  <testcase classname="org.hibernate.test.legacy.MultiTableTest" name="testCollectionOnly" time="0.053" />
  <testcase classname="org.hibernate.test.legacy.MultiTableTest" name="testCollectionPointer" time="0.376" />
  <testcase classname="org.hibernate.test.legacy.MultiTableTest" name="testConstraints" time="0.046" />
  <testcase classname="org.hibernate.test.legacy.MultiTableTest" name="testCriteria" time="0.218" />
  <testcase classname="org.hibernate.test.legacy.MultiTableTest" name="testFetchOneToMany" time="0.187" />
  <testcase classname="org.hibernate.test.legacy.MultiTableTest" name="testJoins" time="0.3" />
  <testcase classname="org.hibernate.test.legacy.MultiTableTest" name="testMultiTable" time="1.281" />
  <testcase classname="org.hibernate.test.legacy.MultiTableTest" name="testMultiTableCollections" time="0.331" />
  <testcase classname="org.hibernate.test.legacy.MultiTableTest" name="testMultiTableGeneratedId" time="0.883" />
  <testcase classname="org.hibernate.test.legacy.MultiTableTest" name="testMultiTableManyToOne" time="0.368" />
  <testcase classname="org.hibernate.test.legacy.MultiTableTest" name="testMultiTableNativeId" time="0.029" />
  <testcase classname="org.hibernate.test.legacy.MultiTableTest" name="testNarrow" time="0.068" />
  <testcase classname="org.hibernate.test.legacy.MultiTableTest" name="testOneToOne" time="0.473" />
  <testcase classname="org.hibernate.test.legacy.MultiTableTest" name="testQueries" time="0.162" />
  <testcase classname="org.hibernate.test.legacy.MultiTableTest" name="testSubclassCollection" time="0.379" />
  <system-out><![CDATA[14:16:30,524  INFO CustomRunner:132 - BeforeClass: org.hibernate.test.legacy.MultiTableTest
14:16:30,525  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:16:30,526  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/legacy/Multi.hbm.xml
14:16:30,532  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/legacy/MultiExtends.hbm.xml
14:16:30,539  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:16:30,539  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:16:30,539  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:16:30,540  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:16:30,540  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:16:30,541  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:16:30,541  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:16:30,541  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:16:30,542  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:16:30,573  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:16:30,574 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:16:30,574 DEBUG SQL:104 - 
    alter table Po 
        drop constraint FKA1FDED16EBE
14:16:30,575 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Po drop constraint FKA1FDED16EBE
14:16:30,575 ERROR SchemaExport:426 - Table "PO" not found; SQL statement:

    alter table Po 
        drop constraint FKA1FDED16EBE [42102-145]
14:16:30,575 DEBUG SQL:104 - 
    alter table Po 
        drop constraint FKA1F6F89E02A
14:16:30,575 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Po drop constraint FKA1F6F89E02A
14:16:30,575 ERROR SchemaExport:426 - Table "PO" not found; SQL statement:

    alter table Po 
        drop constraint FKA1F6F89E02A [42102-145]
14:16:30,575 DEBUG SQL:104 - 
    alter table TrivialClass 
        drop constraint FKC09264CFDF079C10
14:16:30,576 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table TrivialClass drop constraint FKC09264CFDF079C10
14:16:30,576 ERROR SchemaExport:426 - Table "TRIVIALCLASS" not found; SQL statement:

    alter table TrivialClass 
        drop constraint FKC09264CFDF079C10 [42102-145]
14:16:30,576 DEBUG SQL:104 - 
    alter table leafsubclass 
        drop constraint FK24853496DF029E81
14:16:30,576 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table leafsubclass drop constraint FK24853496DF029E81
14:16:30,576 ERROR SchemaExport:426 - Table "LEAFSUBCLASS" not found; SQL statement:

    alter table leafsubclass 
        drop constraint FK24853496DF029E81 [42102-145]
14:16:30,576 DEBUG SQL:104 - 
    alter table leafsubclass 
        drop constraint FK24853496A2CEC367
14:16:30,576 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table leafsubclass drop constraint FK24853496A2CEC367
14:16:30,577 ERROR SchemaExport:426 - Table "LEAFSUBCLASS" not found; SQL statement:

    alter table leafsubclass 
        drop constraint FK24853496A2CEC367 [42102-145]
14:16:30,577 DEBUG SQL:104 - 
    alter table leafsubclass 
        drop constraint FK24853496338734D5
14:16:30,577 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table leafsubclass drop constraint FK24853496338734D5
14:16:30,577 ERROR SchemaExport:426 - Table "LEAFSUBCLASS" not found; SQL statement:

    alter table leafsubclass 
        drop constraint FK24853496338734D5 [42102-145]
14:16:30,577 DEBUG SQL:104 - 
    alter table leafsubsubclass 
        drop constraint FK443F0B5A6F9C38B8
14:16:30,577 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table leafsubsubclass drop constraint FK443F0B5A6F9C38B8
14:16:30,578 ERROR SchemaExport:426 - Table "LEAFSUBSUBCLASS" not found; SQL statement:

    alter table leafsubsubclass 
        drop constraint FK443F0B5A6F9C38B8 [42102-145]
14:16:30,578 DEBUG SQL:104 - 
    alter table leafsubsubclass 
        drop constraint FK443F0B5A8B3D2732
14:16:30,578 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table leafsubsubclass drop constraint FK443F0B5A8B3D2732
14:16:30,578 ERROR SchemaExport:426 - Table "LEAFSUBSUBCLASS" not found; SQL statement:

    alter table leafsubsubclass 
        drop constraint FK443F0B5A8B3D2732 [42102-145]
14:16:30,578 DEBUG SQL:104 - 
    alter table leafsubsubclass 
        drop constraint FK443F0B5AAC6C3EE
14:16:30,579 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table leafsubsubclass drop constraint FK443F0B5AAC6C3EE
14:16:30,579 ERROR SchemaExport:426 - Table "LEAFSUBSUBCLASS" not found; SQL statement:

    alter table leafsubsubclass 
        drop constraint FK443F0B5AAC6C3EE [42102-145]
14:16:30,579 DEBUG SQL:104 - 
    alter table leafsubsubclass 
        drop constraint FK443F0B5A3310E22E
14:16:30,580 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table leafsubsubclass drop constraint FK443F0B5A3310E22E
14:16:30,580 ERROR SchemaExport:426 - Table "LEAFSUBSUBCLASS" not found; SQL statement:

    alter table leafsubsubclass 
        drop constraint FK443F0B5A3310E22E [42102-145]
14:16:30,580 DEBUG SQL:104 - 
    alter table mono 
        drop constraint FK333AE3703EEA1C
14:16:30,580 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table mono drop constraint FK333AE3703EEA1C
14:16:30,580 ERROR SchemaExport:426 - Table "MONO" not found; SQL statement:

    alter table mono 
        drop constraint FK333AE3703EEA1C [42102-145]
14:16:30,580 DEBUG SQL:104 - 
    alter table monostrings 
        drop constraint FKA118F23F450AC6F3
14:16:30,581 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table monostrings drop constraint FKA118F23F450AC6F3
14:16:30,581 ERROR SchemaExport:426 - Table "MONOSTRINGS" not found; SQL statement:

    alter table monostrings 
        drop constraint FKA118F23F450AC6F3 [42102-145]
14:16:30,581 DEBUG SQL:104 - 
    alter table nonleafsubclass 
        drop constraint FK2C4413E3DED31D14
14:16:30,581 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table nonleafsubclass drop constraint FK2C4413E3DED31D14
14:16:30,581 ERROR SchemaExport:426 - Table "NONLEAFSUBCLASS" not found; SQL statement:

    alter table nonleafsubclass 
        drop constraint FK2C4413E3DED31D14 [42102-145]
14:16:30,581 DEBUG SQL:104 - 
    alter table nonleafsubclass 
        drop constraint FK2C4413E33397DF0C
14:16:30,581 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table nonleafsubclass drop constraint FK2C4413E33397DF0C
14:16:30,582 ERROR SchemaExport:426 - Table "NONLEAFSUBCLASS" not found; SQL statement:

    alter table nonleafsubclass 
        drop constraint FK2C4413E33397DF0C [42102-145]
14:16:30,582 DEBUG SQL:104 - 
    alter table nonleafsubclass 
        drop constraint FK2C4413E328385AED
14:16:30,582 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table nonleafsubclass drop constraint FK2C4413E328385AED
14:16:30,582 ERROR SchemaExport:426 - Table "NONLEAFSUBCLASS" not found; SQL statement:

    alter table nonleafsubclass 
        drop constraint FK2C4413E328385AED [42102-145]
14:16:30,582 DEBUG SQL:104 - 
    alter table rootclass 
        drop constraint FKCC8765D6DF07C9F0
14:16:30,583 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table rootclass drop constraint FKCC8765D6DF07C9F0
14:16:30,583 ERROR SchemaExport:426 - Table "ROOTCLASS" not found; SQL statement:

    alter table rootclass 
        drop constraint FKCC8765D6DF07C9F0 [42102-145]
14:16:30,583 DEBUG SQL:104 - 
    alter table rootclass 
        drop constraint FKCC8765D63434DA5C
14:16:30,583 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table rootclass drop constraint FKCC8765D63434DA5C
14:16:30,583 ERROR SchemaExport:426 - Table "ROOTCLASS" not found; SQL statement:

    alter table rootclass 
        drop constraint FKCC8765D63434DA5C [42102-145]
14:16:30,583 DEBUG SQL:104 - 
    alter table simple_simple 
        drop constraint FK869810DF5B9F6506
14:16:30,583 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table simple_simple drop constraint FK869810DF5B9F6506
14:16:30,584 ERROR SchemaExport:426 - Table "SIMPLE_SIMPLE" not found; SQL statement:

    alter table simple_simple 
        drop constraint FK869810DF5B9F6506 [42102-145]
14:16:30,584 DEBUG SQL:104 - 
    alter table simple_simple 
        drop constraint FK869810DFEC57D671
14:16:30,584 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table simple_simple drop constraint FK869810DFEC57D671
14:16:30,584 ERROR SchemaExport:426 - Table "SIMPLE_SIMPLE" not found; SQL statement:

    alter table simple_simple 
        drop constraint FK869810DFEC57D671 [42102-145]
14:16:30,584 DEBUG SQL:104 - 
    drop table Po if exists
14:16:30,584 DEBUG SQL:104 - 
    drop table TrivialClass if exists
14:16:30,584 DEBUG SQL:104 - 
    drop table leafsubclass if exists
14:16:30,585 DEBUG SQL:104 - 
    drop table leafsubsubclass if exists
14:16:30,585 DEBUG SQL:104 - 
    drop table mono if exists
14:16:30,585 DEBUG SQL:104 - 
    drop table monostrings if exists
14:16:30,585 DEBUG SQL:104 - 
    drop table nonleafsubclass if exists
14:16:30,585 DEBUG SQL:104 - 
    drop table rootclass if exists
14:16:30,585 DEBUG SQL:104 - 
    drop table simple_simple if exists
14:16:30,586 DEBUG SQL:104 - 
    create table Po (
        id_ bigint generated by default as identity,
        value_ varchar(255),
        tl bigint,
        primary key (id_)
    )
14:16:30,586 DEBUG SQL:104 - 
    create table TrivialClass (
        tcid bigint not null,
        primary key (tcid)
    )
14:16:30,586 DEBUG SQL:104 - 
    create table leafsubclass (
        id__ bigint not null,
        intprop integer not null,
        other1 bigint,
        other3 bigint,
        foo varchar(255),
        primary key (id__)
    )
14:16:30,600 DEBUG SQL:104 - 
    create table leafsubsubclass (
        sid bigint not null,
        dupe float,
        parent bigint,
        another_parent bigint,
        list_ind integer,
        list_po bigint,
        i integer,
        primary key (sid)
    )
14:16:30,600 DEBUG SQL:104 - 
    create table mono (
        superid bigint not null,
        primary key (superid)
    )
14:16:30,601 DEBUG SQL:104 - 
    create table monostrings (
        monoid_ bigint not null,
        str_ varchar(255) not null,
        primary key (monoid_, str_)
    )
14:16:30,601 DEBUG SQL:104 - 
    create table nonleafsubclass (
        sid bigint not null,
        dupe varchar(255),
        other2 bigint,
        po bigint,
        cal timestamp,
        floaty float,
        primary key (sid)
    )
14:16:30,612 DEBUG SQL:104 - 
    create table rootclass (
        id1_ bigint generated by default as identity,
        count_ integer not null,
        name varchar(255),
        address varchar(255),
        date_ timestamp,
        top_ bigint,
        parent bigint,
        primary key (id1_)
    )
14:16:30,612 DEBUG SQL:104 - 
    create table simple_simple (
        simple1 bigint not null,
        simple2 bigint not null
    )
14:16:30,612 DEBUG SQL:104 - 
    alter table Po 
        add constraint FKA1FDED16EBE 
        foreign key (tl) 
        references rootclass
14:16:30,613 DEBUG SQL:104 - 
    alter table Po 
        add constraint FKA1F6F89E02A 
        foreign key (tl) 
        references leafsubclass
14:16:30,613 DEBUG SQL:104 - 
    alter table TrivialClass 
        add constraint FKC09264CFDF079C10 
        foreign key (tcid) 
        references rootclass
14:16:30,622 DEBUG SQL:104 - 
    alter table leafsubclass 
        add constraint FK24853496DF029E81 
        foreign key (id__) 
        references rootclass
14:16:30,623 DEBUG SQL:104 - 
    alter table leafsubclass 
        add constraint FK24853496A2CEC367 
        foreign key (other1) 
        references rootclass
14:16:30,623 DEBUG SQL:104 - 
    alter table leafsubclass 
        add constraint FK24853496338734D5 
        foreign key (other3) 
        references leafsubclass
14:16:30,623 DEBUG SQL:104 - 
    alter table leafsubsubclass 
        add constraint FK443F0B5A6F9C38B8 
        foreign key (sid) 
        references nonleafsubclass
14:16:30,624 DEBUG SQL:104 - 
    alter table leafsubsubclass 
        add constraint FK443F0B5A8B3D2732 
        foreign key (parent) 
        references leafsubsubclass
14:16:30,624 DEBUG SQL:104 - 
    alter table leafsubsubclass 
        add constraint FK443F0B5AAC6C3EE 
        foreign key (another_parent) 
        references leafsubsubclass
14:16:30,633 DEBUG SQL:104 - 
    alter table leafsubsubclass 
        add constraint FK443F0B5A3310E22E 
        foreign key (list_po) 
        references Po
14:16:30,634 DEBUG SQL:104 - 
    alter table mono 
        add constraint FK333AE3703EEA1C 
        foreign key (superid) 
        references rootclass
14:16:30,634 DEBUG SQL:104 - 
    alter table monostrings 
        add constraint FKA118F23F450AC6F3 
        foreign key (monoid_) 
        references mono
14:16:30,635 DEBUG SQL:104 - 
    alter table nonleafsubclass 
        add constraint FK2C4413E3DED31D14 
        foreign key (sid) 
        references rootclass 
        on delete cascade
14:16:30,635 DEBUG SQL:104 - 
    alter table nonleafsubclass 
        add constraint FK2C4413E33397DF0C 
        foreign key (other2) 
        references nonleafsubclass
14:16:30,635 DEBUG SQL:104 - 
    alter table nonleafsubclass 
        add constraint FK2C4413E328385AED 
        foreign key (po) 
        references Po
14:16:30,644 DEBUG SQL:104 - 
    alter table rootclass 
        add constraint FKCC8765D6DF07C9F0 
        foreign key (top_) 
        references rootclass
14:16:30,645 DEBUG SQL:104 - 
    alter table rootclass 
        add constraint FKCC8765D63434DA5C 
        foreign key (parent) 
        references leafsubclass
14:16:30,645 DEBUG SQL:104 - 
    alter table simple_simple 
        add constraint FK869810DF5B9F6506 
        foreign key (simple2) 
        references rootclass
14:16:30,646 DEBUG SQL:104 - 
    alter table simple_simple 
        add constraint FK869810DFEC57D671 
        foreign key (simple1) 
        references leafsubclass
14:16:30,646  INFO SchemaExport:405 - HHH000230: Schema export complete
14:16:30,648  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:16:30,649  INFO CustomRunner:139 - Test: testCollection
14:16:30,653 DEBUG SQL:104 - 
    insert 
    into
        Po
        (id_) 
    values
        (null)
14:16:30,660 DEBUG SQL:104 - 
    insert 
    into
        rootclass
        (id1_, count_, name, address, date_, top_) 
    values
        (null, ?, ?, ?, ?, ?)
14:16:30,661 DEBUG SQL:104 - 
    insert 
    into
        nonleafsubclass
        (dupe, other2, po, cal, floaty, sid) 
    values
        (?, ?, ?, ?, ?, ?)
14:16:30,661 DEBUG SQL:104 - 
    insert 
    into
        leafsubsubclass
        (dupe, parent, sid) 
    values
        (?, ?, ?)
14:16:30,662 DEBUG SQL:104 - 
    insert 
    into
        rootclass
        (id1_, count_, name, address, date_, top_) 
    values
        (null, ?, ?, ?, ?, ?)
14:16:30,670 DEBUG SQL:104 - 
    insert 
    into
        nonleafsubclass
        (dupe, other2, po, cal, floaty, sid) 
    values
        (?, ?, ?, ?, ?, ?)
14:16:30,670 DEBUG SQL:104 - 
    insert 
    into
        rootclass
        (id1_, count_, name, address, date_, top_) 
    values
        (null, ?, ?, ?, ?, ?)
14:16:30,671 DEBUG SQL:104 - 
    insert 
    into
        nonleafsubclass
        (dupe, other2, po, cal, floaty, sid) 
    values
        (?, ?, ?, ?, ?, ?)
14:16:30,671 DEBUG SQL:104 - 
    update
        leafsubsubclass 
    set
        list_po=?,
        i=? 
    where
        sid=?
14:16:30,672 DEBUG SQL:104 - 
    select
        po0_.id_ as id1_0_8_,
        po0_.value_ as value2_0_8_,
        po0_.tl as tl0_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        top2_.id1_ as id1_7_1_,
        top2_.count_ as count2_7_1_,
        top2_.name as name7_1_,
        top2_.address as address7_1_,
        top2_.date_ as date5_7_1_,
        top2_.top_ as top6_7_1_,
        top2_2_.intprop as intprop2_1_,
        top2_2_.other1 as other3_2_1_,
        top2_2_.other3 as other4_2_1_,
        top2_2_.foo as foo2_1_,
        top2_3_.dupe as dupe6_1_,
        top2_3_.other2 as other3_6_1_,
        top2_3_.po as po6_1_,
        top2_3_.cal as cal6_1_,
        top2_3_.floaty as floaty6_1_,
        top2_4_.dupe as dupe3_1_,
        top2_4_.parent as parent3_1_,
        upper(top2_3_.dupe) as formula91_1_,
        case 
            when top2_4_.sid is not null then 4 
            when top2_1_.tcid is not null then 1 
            when top2_2_.id__ is not null then 2 
            when top2_3_.sid is not null then 3 
            when top2_5_.superid is not null then 5 
            when top2_.id1_ is not null then 0 
        end as clazz_1_,
        lower3_.id__ as id1_7_2_,
        lower3_1_.count_ as count2_7_2_,
        lower3_1_.name as name7_2_,
        lower3_1_.address as address7_2_,
        lower3_1_.date_ as date5_7_2_,
        lower3_1_.top_ as top6_7_2_,
        lower3_.intprop as intprop2_2_,
        lower3_.other1 as other3_2_2_,
        lower3_.other3 as other4_2_2_,
        lower3_.foo as foo2_2_,
        top4_.id1_ as id1_7_3_,
        top4_.count_ as count2_7_3_,
        top4_.name as name7_3_,
        top4_.address as address7_3_,
        top4_.date_ as date5_7_3_,
        top4_.top_ as top6_7_3_,
        top4_2_.intprop as intprop2_3_,
        top4_2_.other1 as other3_2_3_,
        top4_2_.other3 as other4_2_3_,
        top4_2_.foo as foo2_3_,
        top4_3_.dupe as dupe6_3_,
        top4_3_.other2 as other3_6_3_,
        top4_3_.po as po6_3_,
        top4_3_.cal as cal6_3_,
        top4_3_.floaty as floaty6_3_,
        top4_4_.dupe as dupe3_3_,
        top4_4_.parent as parent3_3_,
        upper(top4_3_.dupe) as formula91_3_,
        case 
            when top4_4_.sid is not null then 4 
            when top4_1_.tcid is not null then 1 
            when top4_2_.id__ is not null then 2 
            when top4_3_.sid is not null then 3 
            when top4_5_.superid is not null then 5 
            when top4_.id1_ is not null then 0 
        end as clazz_3_,
        lower5_.id__ as id1_7_4_,
        lower5_1_.count_ as count2_7_4_,
        lower5_1_.name as name7_4_,
        lower5_1_.address as address7_4_,
        lower5_1_.date_ as date5_7_4_,
        lower5_1_.top_ as top6_7_4_,
        lower5_.intprop as intprop2_4_,
        lower5_.other1 as other3_2_4_,
        lower5_.other3 as other4_2_4_,
        lower5_.foo as foo2_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        Po po0_ 
    left outer join
        rootclass top1_ 
            on po0_.tl=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        rootclass top2_ 
            on top1_.top_=top2_.id1_ 
    left outer join
        TrivialClass top2_1_ 
            on top2_.id1_=top2_1_.tcid 
    left outer join
        leafsubclass top2_2_ 
            on top2_.id1_=top2_2_.id__ 
    left outer join
        nonleafsubclass top2_3_ 
            on top2_.id1_=top2_3_.sid 
    left outer join
        leafsubsubclass top2_4_ 
            on top2_.id1_=top2_4_.sid 
    left outer join
        mono top2_5_ 
            on top2_.id1_=top2_5_.superid 
    left outer join
        leafsubclass lower3_ 
            on top2_.id1_=lower3_.id__ 
    left outer join
        rootclass lower3_1_ 
            on lower3_.id__=lower3_1_.id1_ 
    left outer join
        rootclass top4_ 
            on lower3_.other1=top4_.id1_ 
    left outer join
        TrivialClass top4_1_ 
            on top4_.id1_=top4_1_.tcid 
    left outer join
        leafsubclass top4_2_ 
            on top4_.id1_=top4_2_.id__ 
    left outer join
        nonleafsubclass top4_3_ 
            on top4_.id1_=top4_3_.sid 
    left outer join
        leafsubsubclass top4_4_ 
            on top4_.id1_=top4_4_.sid 
    left outer join
        mono top4_5_ 
            on top4_.id1_=top4_5_.superid 
    left outer join
        leafsubclass lower5_ 
            on top4_2_.other3=lower5_.id__ 
    left outer join
        rootclass lower5_1_ 
            on lower5_.id__=lower5_1_.id1_ 
    left outer join
        nonleafsubclass multi6_ 
            on top4_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on top4_3_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on top4_4_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        po0_.id_=?
14:16:30,784 DEBUG SQL:104 - 
    select
        set0_.po as po0_8_,
        set0_.sid as sid6_8_,
        set0_.sid as id1_7_7_,
        set0_1_.count_ as count2_7_7_,
        set0_1_.name as name7_7_,
        set0_1_.address as address7_7_,
        set0_1_.date_ as date5_7_7_,
        set0_1_.top_ as top6_7_7_,
        set0_.dupe as dupe6_7_,
        set0_.other2 as other3_6_7_,
        set0_.po as po6_7_,
        set0_.cal as cal6_7_,
        set0_.floaty as floaty6_7_,
        set0_2_.dupe as dupe3_7_,
        set0_2_.parent as parent3_7_,
        upper(set0_.dupe) as formula91_7_,
        case 
            when set0_2_.sid is not null then 4 
            when set0_.sid is not null then 3 
        end as clazz_7_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        lower2_.id__ as id1_7_1_,
        lower2_1_.count_ as count2_7_1_,
        lower2_1_.name as name7_1_,
        lower2_1_.address as address7_1_,
        lower2_1_.date_ as date5_7_1_,
        lower2_1_.top_ as top6_7_1_,
        lower2_.intprop as intprop2_1_,
        lower2_.other1 as other3_2_1_,
        lower2_.other3 as other4_2_1_,
        lower2_.foo as foo2_1_,
        top3_.id1_ as id1_7_2_,
        top3_.count_ as count2_7_2_,
        top3_.name as name7_2_,
        top3_.address as address7_2_,
        top3_.date_ as date5_7_2_,
        top3_.top_ as top6_7_2_,
        top3_2_.intprop as intprop2_2_,
        top3_2_.other1 as other3_2_2_,
        top3_2_.other3 as other4_2_2_,
        top3_2_.foo as foo2_2_,
        top3_3_.dupe as dupe6_2_,
        top3_3_.other2 as other3_6_2_,
        top3_3_.po as po6_2_,
        top3_3_.cal as cal6_2_,
        top3_3_.floaty as floaty6_2_,
        top3_4_.dupe as dupe3_2_,
        top3_4_.parent as parent3_2_,
        upper(top3_3_.dupe) as formula91_2_,
        case 
            when top3_4_.sid is not null then 4 
            when top3_1_.tcid is not null then 1 
            when top3_2_.id__ is not null then 2 
            when top3_3_.sid is not null then 3 
            when top3_5_.superid is not null then 5 
            when top3_.id1_ is not null then 0 
        end as clazz_2_,
        lower4_.id__ as id1_7_3_,
        lower4_1_.count_ as count2_7_3_,
        lower4_1_.name as name7_3_,
        lower4_1_.address as address7_3_,
        lower4_1_.date_ as date5_7_3_,
        lower4_1_.top_ as top6_7_3_,
        lower4_.intprop as intprop2_3_,
        lower4_.other1 as other3_2_3_,
        lower4_.other3 as other4_2_3_,
        lower4_.foo as foo2_3_,
        po5_.id_ as id1_0_4_,
        po5_.value_ as value2_0_4_,
        po5_.tl as tl0_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        submulti7_.sid as id1_7_6_,
        submulti7_2_.count_ as count2_7_6_,
        submulti7_2_.name as name7_6_,
        submulti7_2_.address as address7_6_,
        submulti7_2_.date_ as date5_7_6_,
        submulti7_2_.top_ as top6_7_6_,
        submulti7_1_.dupe as dupe6_6_,
        submulti7_1_.other2 as other3_6_6_,
        submulti7_1_.po as po6_6_,
        submulti7_1_.cal as cal6_6_,
        submulti7_1_.floaty as floaty6_6_,
        submulti7_.dupe as dupe3_6_,
        submulti7_.parent as parent3_6_,
        upper(submulti7_1_.dupe) as formula91_6_ 
    from
        nonleafsubclass set0_ 
    inner join
        rootclass set0_1_ 
            on set0_.sid=set0_1_.id1_ 
    left outer join
        leafsubsubclass set0_2_ 
            on set0_.sid=set0_2_.sid 
    left outer join
        rootclass top1_ 
            on set0_1_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        leafsubclass lower2_ 
            on top1_.id1_=lower2_.id__ 
    left outer join
        rootclass lower2_1_ 
            on lower2_.id__=lower2_1_.id1_ 
    left outer join
        rootclass top3_ 
            on lower2_.other1=top3_.id1_ 
    left outer join
        TrivialClass top3_1_ 
            on top3_.id1_=top3_1_.tcid 
    left outer join
        leafsubclass top3_2_ 
            on top3_.id1_=top3_2_.id__ 
    left outer join
        nonleafsubclass top3_3_ 
            on top3_.id1_=top3_3_.sid 
    left outer join
        leafsubsubclass top3_4_ 
            on top3_.id1_=top3_4_.sid 
    left outer join
        mono top3_5_ 
            on top3_.id1_=top3_5_.superid 
    left outer join
        leafsubclass lower4_ 
            on top3_2_.other3=lower4_.id__ 
    left outer join
        rootclass lower4_1_ 
            on lower4_.id__=lower4_1_.id1_ 
    left outer join
        Po po5_ 
            on lower4_.id__=po5_.id_ 
    left outer join
        nonleafsubclass multi6_ 
            on top3_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        leafsubsubclass submulti7_ 
            on multi6_2_.parent=submulti7_.sid 
    left outer join
        nonleafsubclass submulti7_1_ 
            on submulti7_.sid=submulti7_1_.sid 
    left outer join
        rootclass submulti7_2_ 
            on submulti7_.sid=submulti7_2_.id1_ 
    where
        set0_.po=?
14:16:30,846 DEBUG SQL:104 - 
    select
        list0_.list_po as list6_0_9_,
        list0_.sid as sid3_9_,
        list0_.i as i9_,
        list0_.sid as id1_7_8_,
        list0_2_.count_ as count2_7_8_,
        list0_2_.name as name7_8_,
        list0_2_.address as address7_8_,
        list0_2_.date_ as date5_7_8_,
        list0_2_.top_ as top6_7_8_,
        list0_1_.dupe as dupe6_8_,
        list0_1_.other2 as other3_6_8_,
        list0_1_.po as po6_8_,
        list0_1_.cal as cal6_8_,
        list0_1_.floaty as floaty6_8_,
        list0_.dupe as dupe3_8_,
        list0_.parent as parent3_8_,
        upper(list0_1_.dupe) as formula91_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        lower2_.id__ as id1_7_1_,
        lower2_1_.count_ as count2_7_1_,
        lower2_1_.name as name7_1_,
        lower2_1_.address as address7_1_,
        lower2_1_.date_ as date5_7_1_,
        lower2_1_.top_ as top6_7_1_,
        lower2_.intprop as intprop2_1_,
        lower2_.other1 as other3_2_1_,
        lower2_.other3 as other4_2_1_,
        lower2_.foo as foo2_1_,
        top3_.id1_ as id1_7_2_,
        top3_.count_ as count2_7_2_,
        top3_.name as name7_2_,
        top3_.address as address7_2_,
        top3_.date_ as date5_7_2_,
        top3_.top_ as top6_7_2_,
        top3_2_.intprop as intprop2_2_,
        top3_2_.other1 as other3_2_2_,
        top3_2_.other3 as other4_2_2_,
        top3_2_.foo as foo2_2_,
        top3_3_.dupe as dupe6_2_,
        top3_3_.other2 as other3_6_2_,
        top3_3_.po as po6_2_,
        top3_3_.cal as cal6_2_,
        top3_3_.floaty as floaty6_2_,
        top3_4_.dupe as dupe3_2_,
        top3_4_.parent as parent3_2_,
        upper(top3_3_.dupe) as formula91_2_,
        case 
            when top3_4_.sid is not null then 4 
            when top3_1_.tcid is not null then 1 
            when top3_2_.id__ is not null then 2 
            when top3_3_.sid is not null then 3 
            when top3_5_.superid is not null then 5 
            when top3_.id1_ is not null then 0 
        end as clazz_2_,
        lower4_.id__ as id1_7_3_,
        lower4_1_.count_ as count2_7_3_,
        lower4_1_.name as name7_3_,
        lower4_1_.address as address7_3_,
        lower4_1_.date_ as date5_7_3_,
        lower4_1_.top_ as top6_7_3_,
        lower4_.intprop as intprop2_3_,
        lower4_.other1 as other3_2_3_,
        lower4_.other3 as other4_2_3_,
        lower4_.foo as foo2_3_,
        po5_.id_ as id1_0_4_,
        po5_.value_ as value2_0_4_,
        po5_.tl as tl0_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        leafsubsubclass list0_ 
    inner join
        nonleafsubclass list0_1_ 
            on list0_.sid=list0_1_.sid 
    inner join
        rootclass list0_2_ 
            on list0_.sid=list0_2_.id1_ 
    left outer join
        rootclass top1_ 
            on list0_2_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        leafsubclass lower2_ 
            on top1_.id1_=lower2_.id__ 
    left outer join
        rootclass lower2_1_ 
            on lower2_.id__=lower2_1_.id1_ 
    left outer join
        rootclass top3_ 
            on lower2_.other1=top3_.id1_ 
    left outer join
        TrivialClass top3_1_ 
            on top3_.id1_=top3_1_.tcid 
    left outer join
        leafsubclass top3_2_ 
            on top3_.id1_=top3_2_.id__ 
    left outer join
        nonleafsubclass top3_3_ 
            on top3_.id1_=top3_3_.sid 
    left outer join
        leafsubsubclass top3_4_ 
            on top3_.id1_=top3_4_.sid 
    left outer join
        mono top3_5_ 
            on top3_.id1_=top3_5_.superid 
    left outer join
        leafsubclass lower4_ 
            on top3_2_.other3=lower4_.id__ 
    left outer join
        rootclass lower4_1_ 
            on lower4_.id__=lower4_1_.id1_ 
    left outer join
        Po po5_ 
            on lower4_.id__=po5_.id_ 
    left outer join
        nonleafsubclass multi6_ 
            on top3_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on multi6_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on multi6_2_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        list0_.list_po=?
14:16:30,916 DEBUG SQL:104 - 
    update
        leafsubsubclass 
    set
        list_po=null,
        i=null 
    where
        list_po=?
14:16:30,916 DEBUG SQL:104 - 
    update
        leafsubsubclass 
    set
        another_parent=null,
        list_ind=null 
    where
        another_parent=?
14:16:30,916 DEBUG SQL:104 - 
    delete 
    from
        leafsubsubclass 
    where
        sid=?
14:16:30,917 DEBUG SQL:104 - 
    delete 
    from
        rootclass 
    where
        id1_=? 
        and count_=?
14:16:30,922 DEBUG SQL:104 - 
    delete 
    from
        rootclass 
    where
        id1_=? 
        and count_=?
14:16:30,922 DEBUG SQL:104 - 
    delete 
    from
        rootclass 
    where
        id1_=? 
        and count_=?
14:16:30,923 DEBUG SQL:104 - 
    delete 
    from
        Po 
    where
        id_=?
14:16:30,923 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_,
        top0_.count_ as count2_7_,
        top0_.name as name7_,
        top0_.address as address7_,
        top0_.date_ as date5_7_,
        top0_.top_ as top6_7_,
        top0_2_.intprop as intprop2_,
        top0_2_.other1 as other3_2_,
        top0_2_.other3 as other4_2_,
        top0_2_.foo as foo2_,
        top0_3_.dupe as dupe6_,
        top0_3_.other2 as other3_6_,
        top0_3_.po as po6_,
        top0_3_.cal as cal6_,
        top0_3_.floaty as floaty6_,
        top0_4_.dupe as dupe3_,
        top0_4_.parent as parent3_,
        upper(top0_3_.dupe) as formula91_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    where
        (
            top0_.id1_ is not null
        )
14:16:30,937 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_,
        top0_.count_ as count2_7_,
        top0_.name as name7_,
        top0_.address as address7_,
        top0_.date_ as date5_7_,
        top0_.top_ as top6_7_,
        top0_2_.intprop as intprop2_,
        top0_2_.other1 as other3_2_,
        top0_2_.other3 as other4_2_,
        top0_2_.foo as foo2_,
        top0_3_.dupe as dupe6_,
        top0_3_.other2 as other3_6_,
        top0_3_.po as po6_,
        top0_3_.cal as cal6_,
        top0_3_.floaty as floaty6_,
        top0_4_.dupe as dupe3_,
        top0_4_.parent as parent3_,
        upper(top0_3_.dupe) as formula91_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    where
        (
            top0_.id1_ is not null
        )
14:16:30,950 DEBUG SQL:104 - 
    select
        po0_.id_ as id1_0_,
        po0_.value_ as value2_0_,
        po0_.tl as tl0_ 
    from
        Po po0_
14:16:30,951  INFO CustomRunner:139 - Test: testCollectionOnly
14:16:30,952 DEBUG SQL:104 - 
    insert 
    into
        rootclass
        (count_, id1_) 
    values
        (?, null)
14:16:30,973 DEBUG SQL:104 - 
    insert 
    into
        mono
        (superid) 
    values
        (?)
14:16:30,974 DEBUG SQL:104 - 
    update
        rootclass 
    set
        count_=?,
        name=?,
        address=?,
        date_=?,
        top_=? 
    where
        id1_=? 
        and count_=?
14:16:30,974 DEBUG SQL:104 - 
    delete 
    from
        monostrings 
    where
        monoid_=?
14:16:30,974 DEBUG SQL:104 - 
    update
        rootclass 
    set
        count_=?,
        address=? 
    where
        id1_=? 
        and count_=?
14:16:30,983 DEBUG SQL:104 - 
    delete 
    from
        mono 
    where
        superid=?
14:16:30,984 DEBUG SQL:104 - 
    delete 
    from
        rootclass 
    where
        id1_=? 
        and count_=?
14:16:30,984 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_,
        top0_.count_ as count2_7_,
        top0_.name as name7_,
        top0_.address as address7_,
        top0_.date_ as date5_7_,
        top0_.top_ as top6_7_,
        top0_2_.intprop as intprop2_,
        top0_2_.other1 as other3_2_,
        top0_2_.other3 as other4_2_,
        top0_2_.foo as foo2_,
        top0_3_.dupe as dupe6_,
        top0_3_.other2 as other3_6_,
        top0_3_.po as po6_,
        top0_3_.cal as cal6_,
        top0_3_.floaty as floaty6_,
        top0_4_.dupe as dupe3_,
        top0_4_.parent as parent3_,
        upper(top0_3_.dupe) as formula91_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    where
        (
            top0_.id1_ is not null
        )
14:16:31,004 DEBUG SQL:104 - 
    select
        po0_.id_ as id1_0_,
        po0_.value_ as value2_0_,
        po0_.tl as tl0_ 
    from
        Po po0_
14:16:31,005  INFO CustomRunner:139 - Test: testCollectionPointer
14:16:31,006 DEBUG SQL:104 - 
    insert 
    into
        rootclass
        (count_, id1_) 
    values
        (?, null)
14:16:31,007 DEBUG SQL:104 - 
    insert 
    into
        leafsubclass
        (intprop, id__) 
    values
        (?, ?)
14:16:31,013 DEBUG SQL:104 - 
    insert 
    into
        rootclass
        (count_, id1_) 
    values
        (?, null)
14:16:31,015 DEBUG SQL:104 - 
    update
        rootclass 
    set
        count_=? 
    where
        id1_=? 
        and count_=?
14:16:31,015 DEBUG SQL:104 - 
    insert 
    into
        simple_simple
        (simple1, simple2) 
    values
        (?, ?)
14:16:31,016 DEBUG SQL:104 - 
    select
        lower0_.id__ as id1_7_8_,
        lower0_1_.count_ as count2_7_8_,
        lower0_1_.name as name7_8_,
        lower0_1_.address as address7_8_,
        lower0_1_.date_ as date5_7_8_,
        lower0_1_.top_ as top6_7_8_,
        lower0_.intprop as intprop2_8_,
        lower0_.other1 as other3_2_8_,
        lower0_.other3 as other4_2_8_,
        lower0_.foo as foo2_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        top2_.id1_ as id1_7_1_,
        top2_.count_ as count2_7_1_,
        top2_.name as name7_1_,
        top2_.address as address7_1_,
        top2_.date_ as date5_7_1_,
        top2_.top_ as top6_7_1_,
        top2_2_.intprop as intprop2_1_,
        top2_2_.other1 as other3_2_1_,
        top2_2_.other3 as other4_2_1_,
        top2_2_.foo as foo2_1_,
        top2_3_.dupe as dupe6_1_,
        top2_3_.other2 as other3_6_1_,
        top2_3_.po as po6_1_,
        top2_3_.cal as cal6_1_,
        top2_3_.floaty as floaty6_1_,
        top2_4_.dupe as dupe3_1_,
        top2_4_.parent as parent3_1_,
        upper(top2_3_.dupe) as formula91_1_,
        case 
            when top2_4_.sid is not null then 4 
            when top2_1_.tcid is not null then 1 
            when top2_2_.id__ is not null then 2 
            when top2_3_.sid is not null then 3 
            when top2_5_.superid is not null then 5 
            when top2_.id1_ is not null then 0 
        end as clazz_1_,
        lower3_.id__ as id1_7_2_,
        lower3_1_.count_ as count2_7_2_,
        lower3_1_.name as name7_2_,
        lower3_1_.address as address7_2_,
        lower3_1_.date_ as date5_7_2_,
        lower3_1_.top_ as top6_7_2_,
        lower3_.intprop as intprop2_2_,
        lower3_.other1 as other3_2_2_,
        lower3_.other3 as other4_2_2_,
        lower3_.foo as foo2_2_,
        po4_.id_ as id1_0_3_,
        po4_.value_ as value2_0_3_,
        po4_.tl as tl0_3_,
        top5_.id1_ as id1_7_4_,
        top5_.count_ as count2_7_4_,
        top5_.name as name7_4_,
        top5_.address as address7_4_,
        top5_.date_ as date5_7_4_,
        top5_.top_ as top6_7_4_,
        top5_2_.intprop as intprop2_4_,
        top5_2_.other1 as other3_2_4_,
        top5_2_.other3 as other4_2_4_,
        top5_2_.foo as foo2_4_,
        top5_3_.dupe as dupe6_4_,
        top5_3_.other2 as other3_6_4_,
        top5_3_.po as po6_4_,
        top5_3_.cal as cal6_4_,
        top5_3_.floaty as floaty6_4_,
        top5_4_.dupe as dupe3_4_,
        top5_4_.parent as parent3_4_,
        upper(top5_3_.dupe) as formula91_4_,
        case 
            when top5_4_.sid is not null then 4 
            when top5_1_.tcid is not null then 1 
            when top5_2_.id__ is not null then 2 
            when top5_3_.sid is not null then 3 
            when top5_5_.superid is not null then 5 
            when top5_.id1_ is not null then 0 
        end as clazz_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        leafsubclass lower0_ 
    inner join
        rootclass lower0_1_ 
            on lower0_.id__=lower0_1_.id1_ 
    left outer join
        rootclass top1_ 
            on lower0_1_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        rootclass top2_ 
            on top1_2_.other1=top2_.id1_ 
    left outer join
        TrivialClass top2_1_ 
            on top2_.id1_=top2_1_.tcid 
    left outer join
        leafsubclass top2_2_ 
            on top2_.id1_=top2_2_.id__ 
    left outer join
        nonleafsubclass top2_3_ 
            on top2_.id1_=top2_3_.sid 
    left outer join
        leafsubsubclass top2_4_ 
            on top2_.id1_=top2_4_.sid 
    left outer join
        mono top2_5_ 
            on top2_.id1_=top2_5_.superid 
    left outer join
        leafsubclass lower3_ 
            on top2_2_.other3=lower3_.id__ 
    left outer join
        rootclass lower3_1_ 
            on lower3_.id__=lower3_1_.id1_ 
    left outer join
        Po po4_ 
            on lower3_.id__=po4_.id_ 
    left outer join
        rootclass top5_ 
            on po4_.tl=top5_.id1_ 
    left outer join
        TrivialClass top5_1_ 
            on top5_.id1_=top5_1_.tcid 
    left outer join
        leafsubclass top5_2_ 
            on top5_.id1_=top5_2_.id__ 
    left outer join
        nonleafsubclass top5_3_ 
            on top5_.id1_=top5_3_.sid 
    left outer join
        leafsubsubclass top5_4_ 
            on top5_.id1_=top5_4_.sid 
    left outer join
        mono top5_5_ 
            on top5_.id1_=top5_5_.superid 
    left outer join
        nonleafsubclass multi6_ 
            on top2_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on multi6_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on multi6_2_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        lower0_.id__=? 
        and (
            lower0_1_.id1_ is not null
        ) 
14:16:31,080 DEBUG SQL:104 - 
    select
        po0_.id_ as id1_0_8_,
        po0_.value_ as value2_0_8_,
        po0_.tl as tl0_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        top2_.id1_ as id1_7_1_,
        top2_.count_ as count2_7_1_,
        top2_.name as name7_1_,
        top2_.address as address7_1_,
        top2_.date_ as date5_7_1_,
        top2_.top_ as top6_7_1_,
        top2_2_.intprop as intprop2_1_,
        top2_2_.other1 as other3_2_1_,
        top2_2_.other3 as other4_2_1_,
        top2_2_.foo as foo2_1_,
        top2_3_.dupe as dupe6_1_,
        top2_3_.other2 as other3_6_1_,
        top2_3_.po as po6_1_,
        top2_3_.cal as cal6_1_,
        top2_3_.floaty as floaty6_1_,
        top2_4_.dupe as dupe3_1_,
        top2_4_.parent as parent3_1_,
        upper(top2_3_.dupe) as formula91_1_,
        case 
            when top2_4_.sid is not null then 4 
            when top2_1_.tcid is not null then 1 
            when top2_2_.id__ is not null then 2 
            when top2_3_.sid is not null then 3 
            when top2_5_.superid is not null then 5 
            when top2_.id1_ is not null then 0 
        end as clazz_1_,
        lower3_.id__ as id1_7_2_,
        lower3_1_.count_ as count2_7_2_,
        lower3_1_.name as name7_2_,
        lower3_1_.address as address7_2_,
        lower3_1_.date_ as date5_7_2_,
        lower3_1_.top_ as top6_7_2_,
        lower3_.intprop as intprop2_2_,
        lower3_.other1 as other3_2_2_,
        lower3_.other3 as other4_2_2_,
        lower3_.foo as foo2_2_,
        top4_.id1_ as id1_7_3_,
        top4_.count_ as count2_7_3_,
        top4_.name as name7_3_,
        top4_.address as address7_3_,
        top4_.date_ as date5_7_3_,
        top4_.top_ as top6_7_3_,
        top4_2_.intprop as intprop2_3_,
        top4_2_.other1 as other3_2_3_,
        top4_2_.other3 as other4_2_3_,
        top4_2_.foo as foo2_3_,
        top4_3_.dupe as dupe6_3_,
        top4_3_.other2 as other3_6_3_,
        top4_3_.po as po6_3_,
        top4_3_.cal as cal6_3_,
        top4_3_.floaty as floaty6_3_,
        top4_4_.dupe as dupe3_3_,
        top4_4_.parent as parent3_3_,
        upper(top4_3_.dupe) as formula91_3_,
        case 
            when top4_4_.sid is not null then 4 
            when top4_1_.tcid is not null then 1 
            when top4_2_.id__ is not null then 2 
            when top4_3_.sid is not null then 3 
            when top4_5_.superid is not null then 5 
            when top4_.id1_ is not null then 0 
        end as clazz_3_,
        lower5_.id__ as id1_7_4_,
        lower5_1_.count_ as count2_7_4_,
        lower5_1_.name as name7_4_,
        lower5_1_.address as address7_4_,
        lower5_1_.date_ as date5_7_4_,
        lower5_1_.top_ as top6_7_4_,
        lower5_.intprop as intprop2_4_,
        lower5_.other1 as other3_2_4_,
        lower5_.other3 as other4_2_4_,
        lower5_.foo as foo2_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        Po po0_ 
    left outer join
        rootclass top1_ 
            on po0_.tl=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        rootclass top2_ 
            on top1_.top_=top2_.id1_ 
    left outer join
        TrivialClass top2_1_ 
            on top2_.id1_=top2_1_.tcid 
    left outer join
        leafsubclass top2_2_ 
            on top2_.id1_=top2_2_.id__ 
    left outer join
        nonleafsubclass top2_3_ 
            on top2_.id1_=top2_3_.sid 
    left outer join
        leafsubsubclass top2_4_ 
            on top2_.id1_=top2_4_.sid 
    left outer join
        mono top2_5_ 
            on top2_.id1_=top2_5_.superid 
    left outer join
        leafsubclass lower3_ 
            on top2_.id1_=lower3_.id__ 
    left outer join
        rootclass lower3_1_ 
            on lower3_.id__=lower3_1_.id1_ 
    left outer join
        rootclass top4_ 
            on lower3_.other1=top4_.id1_ 
    left outer join
        TrivialClass top4_1_ 
            on top4_.id1_=top4_1_.tcid 
    left outer join
        leafsubclass top4_2_ 
            on top4_.id1_=top4_2_.id__ 
    left outer join
        nonleafsubclass top4_3_ 
            on top4_.id1_=top4_3_.sid 
    left outer join
        leafsubsubclass top4_4_ 
            on top4_.id1_=top4_4_.sid 
    left outer join
        mono top4_5_ 
            on top4_.id1_=top4_5_.superid 
    left outer join
        leafsubclass lower5_ 
            on top4_2_.other3=lower5_.id__ 
    left outer join
        rootclass lower5_1_ 
            on lower5_.id__=lower5_1_.id1_ 
    left outer join
        nonleafsubclass multi6_ 
            on top4_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on top4_3_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on top4_4_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        po0_.id_=?
14:16:31,177 DEBUG SQL:104 - 
    select
        set0_.parent as parent7_9_,
        set0_.id1_ as id1_7_9_,
        set0_.id1_ as id1_7_8_,
        set0_.count_ as count2_7_8_,
        set0_.name as name7_8_,
        set0_.address as address7_8_,
        set0_.date_ as date5_7_8_,
        set0_.top_ as top6_7_8_,
        set0_2_.intprop as intprop2_8_,
        set0_2_.other1 as other3_2_8_,
        set0_2_.other3 as other4_2_8_,
        set0_2_.foo as foo2_8_,
        set0_3_.dupe as dupe6_8_,
        set0_3_.other2 as other3_6_8_,
        set0_3_.po as po6_8_,
        set0_3_.cal as cal6_8_,
        set0_3_.floaty as floaty6_8_,
        set0_4_.dupe as dupe3_8_,
        set0_4_.parent as parent3_8_,
        upper(set0_3_.dupe) as formula91_8_,
        case 
            when set0_4_.sid is not null then 4 
            when set0_1_.tcid is not null then 1 
            when set0_2_.id__ is not null then 2 
            when set0_3_.sid is not null then 3 
            when set0_5_.superid is not null then 5 
            when set0_.id1_ is not null then 0 
        end as clazz_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        lower2_.id__ as id1_7_1_,
        lower2_1_.count_ as count2_7_1_,
        lower2_1_.name as name7_1_,
        lower2_1_.address as address7_1_,
        lower2_1_.date_ as date5_7_1_,
        lower2_1_.top_ as top6_7_1_,
        lower2_.intprop as intprop2_1_,
        lower2_.other1 as other3_2_1_,
        lower2_.other3 as other4_2_1_,
        lower2_.foo as foo2_1_,
        top3_.id1_ as id1_7_2_,
        top3_.count_ as count2_7_2_,
        top3_.name as name7_2_,
        top3_.address as address7_2_,
        top3_.date_ as date5_7_2_,
        top3_.top_ as top6_7_2_,
        top3_2_.intprop as intprop2_2_,
        top3_2_.other1 as other3_2_2_,
        top3_2_.other3 as other4_2_2_,
        top3_2_.foo as foo2_2_,
        top3_3_.dupe as dupe6_2_,
        top3_3_.other2 as other3_6_2_,
        top3_3_.po as po6_2_,
        top3_3_.cal as cal6_2_,
        top3_3_.floaty as floaty6_2_,
        top3_4_.dupe as dupe3_2_,
        top3_4_.parent as parent3_2_,
        upper(top3_3_.dupe) as formula91_2_,
        case 
            when top3_4_.sid is not null then 4 
            when top3_1_.tcid is not null then 1 
            when top3_2_.id__ is not null then 2 
            when top3_3_.sid is not null then 3 
            when top3_5_.superid is not null then 5 
            when top3_.id1_ is not null then 0 
        end as clazz_2_,
        lower4_.id__ as id1_7_3_,
        lower4_1_.count_ as count2_7_3_,
        lower4_1_.name as name7_3_,
        lower4_1_.address as address7_3_,
        lower4_1_.date_ as date5_7_3_,
        lower4_1_.top_ as top6_7_3_,
        lower4_.intprop as intprop2_3_,
        lower4_.other1 as other3_2_3_,
        lower4_.other3 as other4_2_3_,
        lower4_.foo as foo2_3_,
        po5_.id_ as id1_0_4_,
        po5_.value_ as value2_0_4_,
        po5_.tl as tl0_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        rootclass set0_ 
    left outer join
        TrivialClass set0_1_ 
            on set0_.id1_=set0_1_.tcid 
    left outer join
        leafsubclass set0_2_ 
            on set0_.id1_=set0_2_.id__ 
    left outer join
        nonleafsubclass set0_3_ 
            on set0_.id1_=set0_3_.sid 
    left outer join
        leafsubsubclass set0_4_ 
            on set0_.id1_=set0_4_.sid 
    left outer join
        mono set0_5_ 
            on set0_.id1_=set0_5_.superid 
    left outer join
        rootclass top1_ 
            on set0_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        leafsubclass lower2_ 
            on top1_.id1_=lower2_.id__ 
    left outer join
        rootclass lower2_1_ 
            on lower2_.id__=lower2_1_.id1_ 
    left outer join
        rootclass top3_ 
            on lower2_.other1=top3_.id1_ 
    left outer join
        TrivialClass top3_1_ 
            on top3_.id1_=top3_1_.tcid 
    left outer join
        leafsubclass top3_2_ 
            on top3_.id1_=top3_2_.id__ 
    left outer join
        nonleafsubclass top3_3_ 
            on top3_.id1_=top3_3_.sid 
    left outer join
        leafsubsubclass top3_4_ 
            on top3_.id1_=top3_4_.sid 
    left outer join
        mono top3_5_ 
            on top3_.id1_=top3_5_.superid 
    left outer join
        leafsubclass lower4_ 
            on top3_2_.other3=lower4_.id__ 
    left outer join
        rootclass lower4_1_ 
            on lower4_.id__=lower4_1_.id1_ 
    left outer join
        Po po5_ 
            on lower4_.id__=po5_.id_ 
    left outer join
        nonleafsubclass multi6_ 
            on top3_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on multi6_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on multi6_2_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        set0_.parent=?
14:16:31,249 DEBUG SQL:104 - 
    select
        bag0_.simple1 as simple1_7_9_,
        bag0_.simple2 as simple2_8_9_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        top2_.id1_ as id1_7_1_,
        top2_.count_ as count2_7_1_,
        top2_.name as name7_1_,
        top2_.address as address7_1_,
        top2_.date_ as date5_7_1_,
        top2_.top_ as top6_7_1_,
        top2_2_.intprop as intprop2_1_,
        top2_2_.other1 as other3_2_1_,
        top2_2_.other3 as other4_2_1_,
        top2_2_.foo as foo2_1_,
        top2_3_.dupe as dupe6_1_,
        top2_3_.other2 as other3_6_1_,
        top2_3_.po as po6_1_,
        top2_3_.cal as cal6_1_,
        top2_3_.floaty as floaty6_1_,
        top2_4_.dupe as dupe3_1_,
        top2_4_.parent as parent3_1_,
        upper(top2_3_.dupe) as formula91_1_,
        case 
            when top2_4_.sid is not null then 4 
            when top2_1_.tcid is not null then 1 
            when top2_2_.id__ is not null then 2 
            when top2_3_.sid is not null then 3 
            when top2_5_.superid is not null then 5 
            when top2_.id1_ is not null then 0 
        end as clazz_1_,
        lower3_.id__ as id1_7_2_,
        lower3_1_.count_ as count2_7_2_,
        lower3_1_.name as name7_2_,
        lower3_1_.address as address7_2_,
        lower3_1_.date_ as date5_7_2_,
        lower3_1_.top_ as top6_7_2_,
        lower3_.intprop as intprop2_2_,
        lower3_.other1 as other3_2_2_,
        lower3_.other3 as other4_2_2_,
        lower3_.foo as foo2_2_,
        top4_.id1_ as id1_7_3_,
        top4_.count_ as count2_7_3_,
        top4_.name as name7_3_,
        top4_.address as address7_3_,
        top4_.date_ as date5_7_3_,
        top4_.top_ as top6_7_3_,
        top4_2_.intprop as intprop2_3_,
        top4_2_.other1 as other3_2_3_,
        top4_2_.other3 as other4_2_3_,
        top4_2_.foo as foo2_3_,
        top4_3_.dupe as dupe6_3_,
        top4_3_.other2 as other3_6_3_,
        top4_3_.po as po6_3_,
        top4_3_.cal as cal6_3_,
        top4_3_.floaty as floaty6_3_,
        top4_4_.dupe as dupe3_3_,
        top4_4_.parent as parent3_3_,
        upper(top4_3_.dupe) as formula91_3_,
        case 
            when top4_4_.sid is not null then 4 
            when top4_1_.tcid is not null then 1 
            when top4_2_.id__ is not null then 2 
            when top4_3_.sid is not null then 3 
            when top4_5_.superid is not null then 5 
            when top4_.id1_ is not null then 0 
        end as clazz_3_,
        lower5_.id__ as id1_7_4_,
        lower5_1_.count_ as count2_7_4_,
        lower5_1_.name as name7_4_,
        lower5_1_.address as address7_4_,
        lower5_1_.date_ as date5_7_4_,
        lower5_1_.top_ as top6_7_4_,
        lower5_.intprop as intprop2_4_,
        lower5_.other1 as other3_2_4_,
        lower5_.other3 as other4_2_4_,
        lower5_.foo as foo2_4_,
        po6_.id_ as id1_0_5_,
        po6_.value_ as value2_0_5_,
        po6_.tl as tl0_5_,
        multi7_.sid as id1_7_6_,
        multi7_1_.count_ as count2_7_6_,
        multi7_1_.name as name7_6_,
        multi7_1_.address as address7_6_,
        multi7_1_.date_ as date5_7_6_,
        multi7_1_.top_ as top6_7_6_,
        multi7_.dupe as dupe6_6_,
        multi7_.other2 as other3_6_6_,
        multi7_.po as po6_6_,
        multi7_.cal as cal6_6_,
        multi7_.floaty as floaty6_6_,
        multi7_2_.dupe as dupe3_6_,
        multi7_2_.parent as parent3_6_,
        upper(multi7_.dupe) as formula91_6_,
        case 
            when multi7_2_.sid is not null then 4 
            when multi7_.sid is not null then 3 
        end as clazz_6_,
        po8_.id_ as id1_0_7_,
        po8_.value_ as value2_0_7_,
        po8_.tl as tl0_7_,
        submulti9_.sid as id1_7_8_,
        submulti9_2_.count_ as count2_7_8_,
        submulti9_2_.name as name7_8_,
        submulti9_2_.address as address7_8_,
        submulti9_2_.date_ as date5_7_8_,
        submulti9_2_.top_ as top6_7_8_,
        submulti9_1_.dupe as dupe6_8_,
        submulti9_1_.other2 as other3_6_8_,
        submulti9_1_.po as po6_8_,
        submulti9_1_.cal as cal6_8_,
        submulti9_1_.floaty as floaty6_8_,
        submulti9_.dupe as dupe3_8_,
        submulti9_.parent as parent3_8_,
        upper(submulti9_1_.dupe) as formula91_8_ 
    from
        simple_simple bag0_ 
    inner join
        rootclass top1_ 
            on bag0_.simple2=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        rootclass top2_ 
            on top1_.top_=top2_.id1_ 
    left outer join
        TrivialClass top2_1_ 
            on top2_.id1_=top2_1_.tcid 
    left outer join
        leafsubclass top2_2_ 
            on top2_.id1_=top2_2_.id__ 
    left outer join
        nonleafsubclass top2_3_ 
            on top2_.id1_=top2_3_.sid 
    left outer join
        leafsubsubclass top2_4_ 
            on top2_.id1_=top2_4_.sid 
    left outer join
        mono top2_5_ 
            on top2_.id1_=top2_5_.superid 
    left outer join
        leafsubclass lower3_ 
            on top2_.id1_=lower3_.id__ 
    left outer join
        rootclass lower3_1_ 
            on lower3_.id__=lower3_1_.id1_ 
    left outer join
        rootclass top4_ 
            on lower3_.other1=top4_.id1_ 
    left outer join
        TrivialClass top4_1_ 
            on top4_.id1_=top4_1_.tcid 
    left outer join
        leafsubclass top4_2_ 
            on top4_.id1_=top4_2_.id__ 
    left outer join
        nonleafsubclass top4_3_ 
            on top4_.id1_=top4_3_.sid 
    left outer join
        leafsubsubclass top4_4_ 
            on top4_.id1_=top4_4_.sid 
    left outer join
        mono top4_5_ 
            on top4_.id1_=top4_5_.superid 
    left outer join
        leafsubclass lower5_ 
            on top4_2_.other3=lower5_.id__ 
    left outer join
        rootclass lower5_1_ 
            on lower5_.id__=lower5_1_.id1_ 
    left outer join
        Po po6_ 
            on lower5_.id__=po6_.id_ 
    left outer join
        nonleafsubclass multi7_ 
            on top4_3_.other2=multi7_.sid 
    left outer join
        rootclass multi7_1_ 
            on multi7_.sid=multi7_1_.id1_ 
    left outer join
        leafsubsubclass multi7_2_ 
            on multi7_.sid=multi7_2_.sid 
    left outer join
        Po po8_ 
            on multi7_.po=po8_.id_ 
    left outer join
        leafsubsubclass submulti9_ 
            on multi7_2_.parent=submulti9_.sid 
    left outer join
        nonleafsubclass submulti9_1_ 
            on submulti9_.sid=submulti9_1_.sid 
    left outer join
        rootclass submulti9_2_ 
            on submulti9_.sid=submulti9_2_.id1_ 
    where
        bag0_.simple1=?
14:16:31,318 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_,
        top0_.count_ as count2_7_,
        top0_.name as name7_,
        top0_.address as address7_,
        top0_.date_ as date5_7_,
        top0_.top_ as top6_7_,
        top0_2_.intprop as intprop2_,
        top0_2_.other1 as other3_2_,
        top0_2_.other3 as other4_2_,
        top0_2_.foo as foo2_,
        top0_3_.dupe as dupe6_,
        top0_3_.other2 as other3_6_,
        top0_3_.po as po6_,
        top0_3_.cal as cal6_,
        top0_3_.floaty as floaty6_,
        top0_4_.dupe as dupe3_,
        top0_4_.parent as parent3_,
        upper(top0_3_.dupe) as formula91_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    where
        (
            top0_.id1_ is not null
        )
14:16:31,350 DEBUG SQL:104 - 
    select
        po0_.id_ as id1_0_,
        po0_.value_ as value2_0_,
        po0_.tl as tl0_ 
    from
        Po po0_
14:16:31,351 DEBUG SQL:104 - 
    delete 
    from
        simple_simple 
    where
        simple1=?
14:16:31,351 DEBUG SQL:104 - 
    delete 
    from
        rootclass 
    where
        id1_=? 
        and count_=?
14:16:31,352 DEBUG SQL:104 - 
    delete 
    from
        leafsubclass 
    where
        id__=?
14:16:31,352 DEBUG SQL:104 - 
    delete 
    from
        rootclass 
    where
        id1_=? 
        and count_=?
14:16:31,360 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_,
        top0_.count_ as count2_7_,
        top0_.name as name7_,
        top0_.address as address7_,
        top0_.date_ as date5_7_,
        top0_.top_ as top6_7_,
        top0_2_.intprop as intprop2_,
        top0_2_.other1 as other3_2_,
        top0_2_.other3 as other4_2_,
        top0_2_.foo as foo2_,
        top0_3_.dupe as dupe6_,
        top0_3_.other2 as other3_6_,
        top0_3_.po as po6_,
        top0_3_.cal as cal6_,
        top0_3_.floaty as floaty6_,
        top0_4_.dupe as dupe3_,
        top0_4_.parent as parent3_,
        upper(top0_3_.dupe) as formula91_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    where
        (
            top0_.id1_ is not null
        )
14:16:31,372 DEBUG SQL:104 - 
    select
        po0_.id_ as id1_0_,
        po0_.value_ as value2_0_,
        po0_.tl as tl0_ 
    from
        Po po0_
14:16:31,382  INFO CustomRunner:139 - Test: testConstraints
14:16:31,383 DEBUG SQL:104 - 
    insert 
    into
        rootclass
        (id1_, count_, name, address, date_, top_) 
    values
        (null, ?, ?, ?, ?, ?)
14:16:31,383 DEBUG SQL:104 - 
    insert 
    into
        nonleafsubclass
        (dupe, other2, po, cal, floaty, sid) 
    values
        (?, ?, ?, ?, ?, ?)
14:16:31,383 DEBUG SQL:104 - 
    insert 
    into
        leafsubsubclass
        (dupe, parent, sid) 
    values
        (?, ?, ?)
14:16:31,384 DEBUG SQL:104 - 
    select
        submulti0_.sid as id1_7_,
        submulti0_2_.count_ as count2_7_,
        submulti0_2_.name as name7_,
        submulti0_2_.address as address7_,
        submulti0_2_.date_ as date5_7_,
        submulti0_2_.top_ as top6_7_,
        submulti0_1_.dupe as dupe6_,
        submulti0_1_.other2 as other3_6_,
        submulti0_1_.po as po6_,
        submulti0_1_.cal as cal6_,
        submulti0_1_.floaty as floaty6_,
        submulti0_.dupe as dupe3_,
        submulti0_.parent as parent3_,
        upper(submulti0_1_.dupe) as formula91_ 
    from
        leafsubsubclass submulti0_ 
    inner join
        nonleafsubclass submulti0_1_ 
            on submulti0_.sid=submulti0_1_.sid 
    inner join
        rootclass submulti0_2_ 
            on submulti0_.sid=submulti0_2_.id1_ 
    where
        (
            submulti0_2_.id1_ is not null
        )
14:16:31,396 DEBUG SQL:104 - 
    update
        leafsubsubclass 
    set
        another_parent=null,
        list_ind=null 
    where
        another_parent=?
14:16:31,405 DEBUG SQL:104 - 
    delete 
    from
        leafsubsubclass 
    where
        sid=?
14:16:31,406 DEBUG SQL:104 - 
    delete 
    from
        rootclass 
    where
        id1_=? 
        and count_=?
14:16:31,407 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_,
        top0_.count_ as count2_7_,
        top0_.name as name7_,
        top0_.address as address7_,
        top0_.date_ as date5_7_,
        top0_.top_ as top6_7_,
        top0_2_.intprop as intprop2_,
        top0_2_.other1 as other3_2_,
        top0_2_.other3 as other4_2_,
        top0_2_.foo as foo2_,
        top0_3_.dupe as dupe6_,
        top0_3_.other2 as other3_6_,
        top0_3_.po as po6_,
        top0_3_.cal as cal6_,
        top0_3_.floaty as floaty6_,
        top0_4_.dupe as dupe3_,
        top0_4_.parent as parent3_,
        upper(top0_3_.dupe) as formula91_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    where
        (
            top0_.id1_ is not null
        )
14:16:31,427 DEBUG SQL:104 - 
    select
        po0_.id_ as id1_0_,
        po0_.value_ as value2_0_,
        po0_.tl as tl0_ 
    from
        Po po0_
14:16:31,428  INFO CustomRunner:139 - Test: testCriteria
14:16:31,429 DEBUG SQL:104 - 
    insert 
    into
        rootclass
        (count_, id1_) 
    values
        (?, null)
14:16:31,430 DEBUG SQL:104 - 
    insert 
    into
        leafsubclass
        (intprop, id__) 
    values
        (?, ?)
14:16:31,431 DEBUG SQL:104 - 
    select
        this_.id1_ as id1_7_8_,
        this_.count_ as count2_7_8_,
        this_.name as name7_8_,
        this_.address as address7_8_,
        this_.date_ as date5_7_8_,
        this_.top_ as top6_7_8_,
        this_2_.intprop as intprop2_8_,
        this_2_.other1 as other3_2_8_,
        this_2_.other3 as other4_2_8_,
        this_2_.foo as foo2_8_,
        this_3_.dupe as dupe6_8_,
        this_3_.other2 as other3_6_8_,
        this_3_.po as po6_8_,
        this_3_.cal as cal6_8_,
        this_3_.floaty as floaty6_8_,
        this_4_.dupe as dupe3_8_,
        this_4_.parent as parent3_8_,
        upper(this_3_.dupe) as formula91_8_,
        case 
            when this_4_.sid is not null then 4 
            when this_1_.tcid is not null then 1 
            when this_2_.id__ is not null then 2 
            when this_3_.sid is not null then 3 
            when this_5_.superid is not null then 5 
            when this_.id1_ is not null then 0 
        end as clazz_8_,
        top2_.id1_ as id1_7_0_,
        top2_.count_ as count2_7_0_,
        top2_.name as name7_0_,
        top2_.address as address7_0_,
        top2_.date_ as date5_7_0_,
        top2_.top_ as top6_7_0_,
        top2_2_.intprop as intprop2_0_,
        top2_2_.other1 as other3_2_0_,
        top2_2_.other3 as other4_2_0_,
        top2_2_.foo as foo2_0_,
        top2_3_.dupe as dupe6_0_,
        top2_3_.other2 as other3_6_0_,
        top2_3_.po as po6_0_,
        top2_3_.cal as cal6_0_,
        top2_3_.floaty as floaty6_0_,
        top2_4_.dupe as dupe3_0_,
        top2_4_.parent as parent3_0_,
        upper(top2_3_.dupe) as formula91_0_,
        case 
            when top2_4_.sid is not null then 4 
            when top2_1_.tcid is not null then 1 
            when top2_2_.id__ is not null then 2 
            when top2_3_.sid is not null then 3 
            when top2_5_.superid is not null then 5 
            when top2_.id1_ is not null then 0 
        end as clazz_0_,
        lower3_.id__ as id1_7_1_,
        lower3_1_.count_ as count2_7_1_,
        lower3_1_.name as name7_1_,
        lower3_1_.address as address7_1_,
        lower3_1_.date_ as date5_7_1_,
        lower3_1_.top_ as top6_7_1_,
        lower3_.intprop as intprop2_1_,
        lower3_.other1 as other3_2_1_,
        lower3_.other3 as other4_2_1_,
        lower3_.foo as foo2_1_,
        top4_.id1_ as id1_7_2_,
        top4_.count_ as count2_7_2_,
        top4_.name as name7_2_,
        top4_.address as address7_2_,
        top4_.date_ as date5_7_2_,
        top4_.top_ as top6_7_2_,
        top4_2_.intprop as intprop2_2_,
        top4_2_.other1 as other3_2_2_,
        top4_2_.other3 as other4_2_2_,
        top4_2_.foo as foo2_2_,
        top4_3_.dupe as dupe6_2_,
        top4_3_.other2 as other3_6_2_,
        top4_3_.po as po6_2_,
        top4_3_.cal as cal6_2_,
        top4_3_.floaty as floaty6_2_,
        top4_4_.dupe as dupe3_2_,
        top4_4_.parent as parent3_2_,
        upper(top4_3_.dupe) as formula91_2_,
        case 
            when top4_4_.sid is not null then 4 
            when top4_1_.tcid is not null then 1 
            when top4_2_.id__ is not null then 2 
            when top4_3_.sid is not null then 3 
            when top4_5_.superid is not null then 5 
            when top4_.id1_ is not null then 0 
        end as clazz_2_,
        lower5_.id__ as id1_7_3_,
        lower5_1_.count_ as count2_7_3_,
        lower5_1_.name as name7_3_,
        lower5_1_.address as address7_3_,
        lower5_1_.date_ as date5_7_3_,
        lower5_1_.top_ as top6_7_3_,
        lower5_.intprop as intprop2_3_,
        lower5_.other1 as other3_2_3_,
        lower5_.other3 as other4_2_3_,
        lower5_.foo as foo2_3_,
        po6_.id_ as id1_0_4_,
        po6_.value_ as value2_0_4_,
        po6_.tl as tl0_4_,
        multi7_.sid as id1_7_5_,
        multi7_1_.count_ as count2_7_5_,
        multi7_1_.name as name7_5_,
        multi7_1_.address as address7_5_,
        multi7_1_.date_ as date5_7_5_,
        multi7_1_.top_ as top6_7_5_,
        multi7_.dupe as dupe6_5_,
        multi7_.other2 as other3_6_5_,
        multi7_.po as po6_5_,
        multi7_.cal as cal6_5_,
        multi7_.floaty as floaty6_5_,
        multi7_2_.dupe as dupe3_5_,
        multi7_2_.parent as parent3_5_,
        upper(multi7_.dupe) as formula91_5_,
        case 
            when multi7_2_.sid is not null then 4 
            when multi7_.sid is not null then 3 
        end as clazz_5_,
        po8_.id_ as id1_0_6_,
        po8_.value_ as value2_0_6_,
        po8_.tl as tl0_6_,
        submulti9_.sid as id1_7_7_,
        submulti9_2_.count_ as count2_7_7_,
        submulti9_2_.name as name7_7_,
        submulti9_2_.address as address7_7_,
        submulti9_2_.date_ as date5_7_7_,
        submulti9_2_.top_ as top6_7_7_,
        submulti9_1_.dupe as dupe6_7_,
        submulti9_1_.other2 as other3_6_7_,
        submulti9_1_.po as po6_7_,
        submulti9_1_.cal as cal6_7_,
        submulti9_1_.floaty as floaty6_7_,
        submulti9_.dupe as dupe3_7_,
        submulti9_.parent as parent3_7_,
        upper(submulti9_1_.dupe) as formula91_7_ 
    from
        rootclass this_ 
    left outer join
        TrivialClass this_1_ 
            on this_.id1_=this_1_.tcid 
    left outer join
        leafsubclass this_2_ 
            on this_.id1_=this_2_.id__ 
    left outer join
        nonleafsubclass this_3_ 
            on this_.id1_=this_3_.sid 
    left outer join
        leafsubsubclass this_4_ 
            on this_.id1_=this_4_.sid 
    left outer join
        mono this_5_ 
            on this_.id1_=this_5_.superid 
    left outer join
        rootclass top2_ 
            on this_.top_=top2_.id1_ 
    left outer join
        TrivialClass top2_1_ 
            on top2_.id1_=top2_1_.tcid 
    left outer join
        leafsubclass top2_2_ 
            on top2_.id1_=top2_2_.id__ 
    left outer join
        nonleafsubclass top2_3_ 
            on top2_.id1_=top2_3_.sid 
    left outer join
        leafsubsubclass top2_4_ 
            on top2_.id1_=top2_4_.sid 
    left outer join
        mono top2_5_ 
            on top2_.id1_=top2_5_.superid 
    left outer join
        leafsubclass lower3_ 
            on top2_.id1_=lower3_.id__ 
    left outer join
        rootclass lower3_1_ 
            on lower3_.id__=lower3_1_.id1_ 
    left outer join
        rootclass top4_ 
            on lower3_.other1=top4_.id1_ 
    left outer join
        TrivialClass top4_1_ 
            on top4_.id1_=top4_1_.tcid 
    left outer join
        leafsubclass top4_2_ 
            on top4_.id1_=top4_2_.id__ 
    left outer join
        nonleafsubclass top4_3_ 
            on top4_.id1_=top4_3_.sid 
    left outer join
        leafsubsubclass top4_4_ 
            on top4_.id1_=top4_4_.sid 
    left outer join
        mono top4_5_ 
            on top4_.id1_=top4_5_.superid 
    left outer join
        leafsubclass lower5_ 
            on top4_2_.other3=lower5_.id__ 
    left outer join
        rootclass lower5_1_ 
            on lower5_.id__=lower5_1_.id1_ 
    left outer join
        Po po6_ 
            on lower5_.id__=po6_.id_ 
    left outer join
        nonleafsubclass multi7_ 
            on top4_3_.other2=multi7_.sid 
    left outer join
        rootclass multi7_1_ 
            on multi7_.sid=multi7_1_.id1_ 
    left outer join
        leafsubsubclass multi7_2_ 
            on multi7_.sid=multi7_2_.sid 
    left outer join
        Po po8_ 
            on multi7_.po=po8_.id_ 
    left outer join
        leafsubsubclass submulti9_ 
            on multi7_2_.parent=submulti9_.sid 
    left outer join
        nonleafsubclass submulti9_1_ 
            on submulti9_.sid=submulti9_1_.sid 
    left outer join
        rootclass submulti9_2_ 
            on submulti9_.sid=submulti9_2_.id1_ 
    where
        (
            this_.id1_ is not null
        )
14:16:31,513 DEBUG SQL:104 - 
    delete 
    from
        leafsubclass 
    where
        id__=?
14:16:31,513 DEBUG SQL:104 - 
    delete 
    from
        rootclass 
    where
        id1_=? 
        and count_=?
14:16:31,523 DEBUG SQL:104 - 
    select
        this_.id__ as id1_7_11_,
        this_1_.count_ as count2_7_11_,
        this_1_.name as name7_11_,
        this_1_.address as address7_11_,
        this_1_.date_ as date5_7_11_,
        this_1_.top_ as top6_7_11_,
        this_.intprop as intprop2_11_,
        this_.other1 as other3_2_11_,
        this_.other3 as other4_2_11_,
        this_.foo as foo2_11_,
        top5_.id1_ as id1_7_0_,
        top5_.count_ as count2_7_0_,
        top5_.name as name7_0_,
        top5_.address as address7_0_,
        top5_.date_ as date5_7_0_,
        top5_.top_ as top6_7_0_,
        top5_2_.intprop as intprop2_0_,
        top5_2_.other1 as other3_2_0_,
        top5_2_.other3 as other4_2_0_,
        top5_2_.foo as foo2_0_,
        top5_3_.dupe as dupe6_0_,
        top5_3_.other2 as other3_6_0_,
        top5_3_.po as po6_0_,
        top5_3_.cal as cal6_0_,
        top5_3_.floaty as floaty6_0_,
        top5_4_.dupe as dupe3_0_,
        top5_4_.parent as parent3_0_,
        upper(top5_3_.dupe) as formula91_0_,
        case 
            when top5_4_.sid is not null then 4 
            when top5_1_.tcid is not null then 1 
            when top5_2_.id__ is not null then 2 
            when top5_3_.sid is not null then 3 
            when top5_5_.superid is not null then 5 
            when top5_.id1_ is not null then 0 
        end as clazz_0_,
        top6_.id1_ as id1_7_1_,
        top6_.count_ as count2_7_1_,
        top6_.name as name7_1_,
        top6_.address as address7_1_,
        top6_.date_ as date5_7_1_,
        top6_.top_ as top6_7_1_,
        top6_2_.intprop as intprop2_1_,
        top6_2_.other1 as other3_2_1_,
        top6_2_.other3 as other4_2_1_,
        top6_2_.foo as foo2_1_,
        top6_3_.dupe as dupe6_1_,
        top6_3_.other2 as other3_6_1_,
        top6_3_.po as po6_1_,
        top6_3_.cal as cal6_1_,
        top6_3_.floaty as floaty6_1_,
        top6_4_.dupe as dupe3_1_,
        top6_4_.parent as parent3_1_,
        upper(top6_3_.dupe) as formula91_1_,
        case 
            when top6_4_.sid is not null then 4 
            when top6_1_.tcid is not null then 1 
            when top6_2_.id__ is not null then 2 
            when top6_3_.sid is not null then 3 
            when top6_5_.superid is not null then 5 
            when top6_.id1_ is not null then 0 
        end as clazz_1_,
        lower7_.id__ as id1_7_2_,
        lower7_1_.count_ as count2_7_2_,
        lower7_1_.name as name7_2_,
        lower7_1_.address as address7_2_,
        lower7_1_.date_ as date5_7_2_,
        lower7_1_.top_ as top6_7_2_,
        lower7_.intprop as intprop2_2_,
        lower7_.other1 as other3_2_2_,
        lower7_.other3 as other4_2_2_,
        lower7_.foo as foo2_2_,
        po8_.id_ as id1_0_3_,
        po8_.value_ as value2_0_3_,
        po8_.tl as tl0_3_,
        top9_.id1_ as id1_7_4_,
        top9_.count_ as count2_7_4_,
        top9_.name as name7_4_,
        top9_.address as address7_4_,
        top9_.date_ as date5_7_4_,
        top9_.top_ as top6_7_4_,
        top9_2_.intprop as intprop2_4_,
        top9_2_.other1 as other3_2_4_,
        top9_2_.other3 as other4_2_4_,
        top9_2_.foo as foo2_4_,
        top9_3_.dupe as dupe6_4_,
        top9_3_.other2 as other3_6_4_,
        top9_3_.po as po6_4_,
        top9_3_.cal as cal6_4_,
        top9_3_.floaty as floaty6_4_,
        top9_4_.dupe as dupe3_4_,
        top9_4_.parent as parent3_4_,
        upper(top9_3_.dupe) as formula91_4_,
        case 
            when top9_4_.sid is not null then 4 
            when top9_1_.tcid is not null then 1 
            when top9_2_.id__ is not null then 2 
            when top9_3_.sid is not null then 3 
            when top9_5_.superid is not null then 5 
            when top9_.id1_ is not null then 0 
        end as clazz_4_,
        multi10_.sid as id1_7_5_,
        multi10_1_.count_ as count2_7_5_,
        multi10_1_.name as name7_5_,
        multi10_1_.address as address7_5_,
        multi10_1_.date_ as date5_7_5_,
        multi10_1_.top_ as top6_7_5_,
        multi10_.dupe as dupe6_5_,
        multi10_.other2 as other3_6_5_,
        multi10_.po as po6_5_,
        multi10_.cal as cal6_5_,
        multi10_.floaty as floaty6_5_,
        multi10_2_.dupe as dupe3_5_,
        multi10_2_.parent as parent3_5_,
        upper(multi10_.dupe) as formula91_5_,
        case 
            when multi10_2_.sid is not null then 4 
            when multi10_.sid is not null then 3 
        end as clazz_5_,
        po11_.id_ as id1_0_6_,
        po11_.value_ as value2_0_6_,
        po11_.tl as tl0_6_,
        submulti12_.sid as id1_7_7_,
        submulti12_2_.count_ as count2_7_7_,
        submulti12_2_.name as name7_7_,
        submulti12_2_.address as address7_7_,
        submulti12_2_.date_ as date5_7_7_,
        submulti12_2_.top_ as top6_7_7_,
        submulti12_1_.dupe as dupe6_7_,
        submulti12_1_.other2 as other3_6_7_,
        submulti12_1_.po as po6_7_,
        submulti12_1_.cal as cal6_7_,
        submulti12_1_.floaty as floaty6_7_,
        submulti12_.dupe as dupe3_7_,
        submulti12_.parent as parent3_7_,
        upper(submulti12_1_.dupe) as formula91_7_,
        top3_.id1_ as id1_7_8_,
        top3_.count_ as count2_7_8_,
        top3_.name as name7_8_,
        top3_.address as address7_8_,
        top3_.date_ as date5_7_8_,
        top3_.top_ as top6_7_8_,
        top3_2_.intprop as intprop2_8_,
        top3_2_.other1 as other3_2_8_,
        top3_2_.other3 as other4_2_8_,
        top3_2_.foo as foo2_8_,
        top3_3_.dupe as dupe6_8_,
        top3_3_.other2 as other3_6_8_,
        top3_3_.po as po6_8_,
        top3_3_.cal as cal6_8_,
        top3_3_.floaty as floaty6_8_,
        top3_4_.dupe as dupe3_8_,
        top3_4_.parent as parent3_8_,
        upper(top3_3_.dupe) as formula91_8_,
        case 
            when top3_4_.sid is not null then 4 
            when top3_1_.tcid is not null then 1 
            when top3_2_.id__ is not null then 2 
            when top3_3_.sid is not null then 3 
            when top3_5_.superid is not null then 5 
            when top3_.id1_ is not null then 0 
        end as clazz_8_,
        lower1_.id__ as id1_7_9_,
        lower1_1_.count_ as count2_7_9_,
        lower1_1_.name as name7_9_,
        lower1_1_.address as address7_9_,
        lower1_1_.date_ as date5_7_9_,
        lower1_1_.top_ as top6_7_9_,
        lower1_.intprop as intprop2_9_,
        lower1_.other1 as other3_2_9_,
        lower1_.other3 as other4_2_9_,
        lower1_.foo as foo2_9_,
        top2_.id1_ as id1_7_10_,
        top2_.count_ as count2_7_10_,
        top2_.name as name7_10_,
        top2_.address as address7_10_,
        top2_.date_ as date5_7_10_,
        top2_.top_ as top6_7_10_,
        top2_2_.intprop as intprop2_10_,
        top2_2_.other1 as other3_2_10_,
        top2_2_.other3 as other4_2_10_,
        top2_2_.foo as foo2_10_,
        top2_3_.dupe as dupe6_10_,
        top2_3_.other2 as other3_6_10_,
        top2_3_.po as po6_10_,
        top2_3_.cal as cal6_10_,
        top2_3_.floaty as floaty6_10_,
        top2_4_.dupe as dupe3_10_,
        top2_4_.parent as parent3_10_,
        upper(top2_3_.dupe) as formula91_10_,
        case 
            when top2_4_.sid is not null then 4 
            when top2_1_.tcid is not null then 1 
            when top2_2_.id__ is not null then 2 
            when top2_3_.sid is not null then 3 
            when top2_5_.superid is not null then 5 
            when top2_.id1_ is not null then 0 
        end as clazz_10_ 
    from
        leafsubclass this_ 
    inner join
        rootclass this_1_ 
            on this_.id__=this_1_.id1_ 
    left outer join
        rootclass top5_ 
            on this_1_.top_=top5_.id1_ 
    left outer join
        TrivialClass top5_1_ 
            on top5_.id1_=top5_1_.tcid 
    left outer join
        leafsubclass top5_2_ 
            on top5_.id1_=top5_2_.id__ 
    left outer join
        nonleafsubclass top5_3_ 
            on top5_.id1_=top5_3_.sid 
    left outer join
        leafsubsubclass top5_4_ 
            on top5_.id1_=top5_4_.sid 
    left outer join
        mono top5_5_ 
            on top5_.id1_=top5_5_.superid 
    left outer join
        rootclass top6_ 
            on top5_2_.other1=top6_.id1_ 
    left outer join
        TrivialClass top6_1_ 
            on top6_.id1_=top6_1_.tcid 
    left outer join
        leafsubclass top6_2_ 
            on top6_.id1_=top6_2_.id__ 
    left outer join
        nonleafsubclass top6_3_ 
            on top6_.id1_=top6_3_.sid 
    left outer join
        leafsubsubclass top6_4_ 
            on top6_.id1_=top6_4_.sid 
    left outer join
        mono top6_5_ 
            on top6_.id1_=top6_5_.superid 
    left outer join
        leafsubclass lower7_ 
            on top6_2_.other3=lower7_.id__ 
    left outer join
        rootclass lower7_1_ 
            on lower7_.id__=lower7_1_.id1_ 
    left outer join
        Po po8_ 
            on lower7_.id__=po8_.id_ 
    left outer join
        rootclass top9_ 
            on po8_.tl=top9_.id1_ 
    left outer join
        TrivialClass top9_1_ 
            on top9_.id1_=top9_1_.tcid 
    left outer join
        leafsubclass top9_2_ 
            on top9_.id1_=top9_2_.id__ 
    left outer join
        nonleafsubclass top9_3_ 
            on top9_.id1_=top9_3_.sid 
    left outer join
        leafsubsubclass top9_4_ 
            on top9_.id1_=top9_4_.sid 
    left outer join
        mono top9_5_ 
            on top9_.id1_=top9_5_.superid 
    left outer join
        nonleafsubclass multi10_ 
            on top6_3_.other2=multi10_.sid 
    left outer join
        rootclass multi10_1_ 
            on multi10_.sid=multi10_1_.id1_ 
    left outer join
        leafsubsubclass multi10_2_ 
            on multi10_.sid=multi10_2_.sid 
    left outer join
        Po po11_ 
            on multi10_.po=po11_.id_ 
    left outer join
        leafsubsubclass submulti12_ 
            on multi10_2_.parent=submulti12_.sid 
    left outer join
        nonleafsubclass submulti12_1_ 
            on submulti12_.sid=submulti12_1_.sid 
    left outer join
        rootclass submulti12_2_ 
            on submulti12_.sid=submulti12_2_.id1_ 
    inner join
        rootclass top3_ 
            on this_.other1=top3_.id1_ 
    left outer join
        TrivialClass top3_1_ 
            on top3_.id1_=top3_1_.tcid 
    left outer join
        leafsubclass top3_2_ 
            on top3_.id1_=top3_2_.id__ 
    left outer join
        nonleafsubclass top3_3_ 
            on top3_.id1_=top3_3_.sid 
    left outer join
        leafsubsubclass top3_4_ 
            on top3_.id1_=top3_4_.sid 
    left outer join
        mono top3_5_ 
            on top3_.id1_=top3_5_.superid 
    inner join
        leafsubclass lower1_ 
            on this_.other3=lower1_.id__ 
    left outer join
        rootclass lower1_1_ 
            on lower1_.id__=lower1_1_.id1_ 
    inner join
        rootclass top2_ 
            on lower1_.other1=top2_.id1_ 
    left outer join
        TrivialClass top2_1_ 
            on top2_.id1_=top2_1_.tcid 
    left outer join
        leafsubclass top2_2_ 
            on top2_.id1_=top2_2_.id__ 
    left outer join
        nonleafsubclass top2_3_ 
            on top2_.id1_=top2_3_.sid 
    left outer join
        leafsubsubclass top2_4_ 
            on top2_.id1_=top2_4_.sid 
    left outer join
        mono top2_5_ 
            on top2_.id1_=top2_5_.superid 
    where
        (
            this_1_.id1_ is not null
        ) 
        and lower1_.id__ is not null 
        and top3_.id1_ is not null
14:16:31,629 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_,
        top0_.count_ as count2_7_,
        top0_.name as name7_,
        top0_.address as address7_,
        top0_.date_ as date5_7_,
        top0_.top_ as top6_7_,
        top0_2_.intprop as intprop2_,
        top0_2_.other1 as other3_2_,
        top0_2_.other3 as other4_2_,
        top0_2_.foo as foo2_,
        top0_3_.dupe as dupe6_,
        top0_3_.other2 as other3_6_,
        top0_3_.po as po6_,
        top0_3_.cal as cal6_,
        top0_3_.floaty as floaty6_,
        top0_4_.dupe as dupe3_,
        top0_4_.parent as parent3_,
        upper(top0_3_.dupe) as formula91_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    where
        (
            top0_.id1_ is not null
        )
14:16:31,646 DEBUG SQL:104 - 
    select
        po0_.id_ as id1_0_,
        po0_.value_ as value2_0_,
        po0_.tl as tl0_ 
    from
        Po po0_
14:16:31,647  INFO CustomRunner:139 - Test: testFetchOneToMany
14:16:31,649 DEBUG SQL:104 - 
    select
        this_.id_ as id1_0_8_,
        this_.value_ as value2_0_8_,
        this_.tl as tl0_8_,
        set2_.po as po0_10_,
        set2_.sid as sid6_10_,
        set2_.sid as id1_7_0_,
        set2_1_.count_ as count2_7_0_,
        set2_1_.name as name7_0_,
        set2_1_.address as address7_0_,
        set2_1_.date_ as date5_7_0_,
        set2_1_.top_ as top6_7_0_,
        set2_.dupe as dupe6_0_,
        set2_.other2 as other3_6_0_,
        set2_.po as po6_0_,
        set2_.cal as cal6_0_,
        set2_.floaty as floaty6_0_,
        set2_2_.dupe as dupe3_0_,
        set2_2_.parent as parent3_0_,
        upper(set2_.dupe) as formula91_0_,
        case 
            when set2_2_.sid is not null then 4 
            when set2_.sid is not null then 3 
        end as clazz_0_,
        top3_.id1_ as id1_7_1_,
        top3_.count_ as count2_7_1_,
        top3_.name as name7_1_,
        top3_.address as address7_1_,
        top3_.date_ as date5_7_1_,
        top3_.top_ as top6_7_1_,
        top3_2_.intprop as intprop2_1_,
        top3_2_.other1 as other3_2_1_,
        top3_2_.other3 as other4_2_1_,
        top3_2_.foo as foo2_1_,
        top3_3_.dupe as dupe6_1_,
        top3_3_.other2 as other3_6_1_,
        top3_3_.po as po6_1_,
        top3_3_.cal as cal6_1_,
        top3_3_.floaty as floaty6_1_,
        top3_4_.dupe as dupe3_1_,
        top3_4_.parent as parent3_1_,
        upper(top3_3_.dupe) as formula91_1_,
        case 
            when top3_4_.sid is not null then 4 
            when top3_1_.tcid is not null then 1 
            when top3_2_.id__ is not null then 2 
            when top3_3_.sid is not null then 3 
            when top3_5_.superid is not null then 5 
            when top3_.id1_ is not null then 0 
        end as clazz_1_,
        lower4_.id__ as id1_7_2_,
        lower4_1_.count_ as count2_7_2_,
        lower4_1_.name as name7_2_,
        lower4_1_.address as address7_2_,
        lower4_1_.date_ as date5_7_2_,
        lower4_1_.top_ as top6_7_2_,
        lower4_.intprop as intprop2_2_,
        lower4_.other1 as other3_2_2_,
        lower4_.other3 as other4_2_2_,
        lower4_.foo as foo2_2_,
        top5_.id1_ as id1_7_3_,
        top5_.count_ as count2_7_3_,
        top5_.name as name7_3_,
        top5_.address as address7_3_,
        top5_.date_ as date5_7_3_,
        top5_.top_ as top6_7_3_,
        top5_2_.intprop as intprop2_3_,
        top5_2_.other1 as other3_2_3_,
        top5_2_.other3 as other4_2_3_,
        top5_2_.foo as foo2_3_,
        top5_3_.dupe as dupe6_3_,
        top5_3_.other2 as other3_6_3_,
        top5_3_.po as po6_3_,
        top5_3_.cal as cal6_3_,
        top5_3_.floaty as floaty6_3_,
        top5_4_.dupe as dupe3_3_,
        top5_4_.parent as parent3_3_,
        upper(top5_3_.dupe) as formula91_3_,
        case 
            when top5_4_.sid is not null then 4 
            when top5_1_.tcid is not null then 1 
            when top5_2_.id__ is not null then 2 
            when top5_3_.sid is not null then 3 
            when top5_5_.superid is not null then 5 
            when top5_.id1_ is not null then 0 
        end as clazz_3_,
        lower6_.id__ as id1_7_4_,
        lower6_1_.count_ as count2_7_4_,
        lower6_1_.name as name7_4_,
        lower6_1_.address as address7_4_,
        lower6_1_.date_ as date5_7_4_,
        lower6_1_.top_ as top6_7_4_,
        lower6_.intprop as intprop2_4_,
        lower6_.other1 as other3_2_4_,
        lower6_.other3 as other4_2_4_,
        lower6_.foo as foo2_4_,
        multi7_.sid as id1_7_5_,
        multi7_1_.count_ as count2_7_5_,
        multi7_1_.name as name7_5_,
        multi7_1_.address as address7_5_,
        multi7_1_.date_ as date5_7_5_,
        multi7_1_.top_ as top6_7_5_,
        multi7_.dupe as dupe6_5_,
        multi7_.other2 as other3_6_5_,
        multi7_.po as po6_5_,
        multi7_.cal as cal6_5_,
        multi7_.floaty as floaty6_5_,
        multi7_2_.dupe as dupe3_5_,
        multi7_2_.parent as parent3_5_,
        upper(multi7_.dupe) as formula91_5_,
        case 
            when multi7_2_.sid is not null then 4 
            when multi7_.sid is not null then 3 
        end as clazz_5_,
        submulti8_.sid as id1_7_6_,
        submulti8_2_.count_ as count2_7_6_,
        submulti8_2_.name as name7_6_,
        submulti8_2_.address as address7_6_,
        submulti8_2_.date_ as date5_7_6_,
        submulti8_2_.top_ as top6_7_6_,
        submulti8_1_.dupe as dupe6_6_,
        submulti8_1_.other2 as other3_6_6_,
        submulti8_1_.po as po6_6_,
        submulti8_1_.cal as cal6_6_,
        submulti8_1_.floaty as floaty6_6_,
        submulti8_.dupe as dupe3_6_,
        submulti8_.parent as parent3_6_,
        upper(submulti8_1_.dupe) as formula91_6_,
        top9_.id1_ as id1_7_7_,
        top9_.count_ as count2_7_7_,
        top9_.name as name7_7_,
        top9_.address as address7_7_,
        top9_.date_ as date5_7_7_,
        top9_.top_ as top6_7_7_,
        top9_2_.intprop as intprop2_7_,
        top9_2_.other1 as other3_2_7_,
        top9_2_.other3 as other4_2_7_,
        top9_2_.foo as foo2_7_,
        top9_3_.dupe as dupe6_7_,
        top9_3_.other2 as other3_6_7_,
        top9_3_.po as po6_7_,
        top9_3_.cal as cal6_7_,
        top9_3_.floaty as floaty6_7_,
        top9_4_.dupe as dupe3_7_,
        top9_4_.parent as parent3_7_,
        upper(top9_3_.dupe) as formula91_7_,
        case 
            when top9_4_.sid is not null then 4 
            when top9_1_.tcid is not null then 1 
            when top9_2_.id__ is not null then 2 
            when top9_3_.sid is not null then 3 
            when top9_5_.superid is not null then 5 
            when top9_.id1_ is not null then 0 
        end as clazz_7_ 
    from
        Po this_ 
    left outer join
        nonleafsubclass set2_ 
            on this_.id_=set2_.po 
    left outer join
        rootclass set2_1_ 
            on set2_.sid=set2_1_.id1_ 
    left outer join
        leafsubsubclass set2_2_ 
            on set2_.sid=set2_2_.sid 
    left outer join
        rootclass top3_ 
            on set2_1_.top_=top3_.id1_ 
    left outer join
        TrivialClass top3_1_ 
            on top3_.id1_=top3_1_.tcid 
    left outer join
        leafsubclass top3_2_ 
            on top3_.id1_=top3_2_.id__ 
    left outer join
        nonleafsubclass top3_3_ 
            on top3_.id1_=top3_3_.sid 
    left outer join
        leafsubsubclass top3_4_ 
            on top3_.id1_=top3_4_.sid 
    left outer join
        mono top3_5_ 
            on top3_.id1_=top3_5_.superid 
    left outer join
        leafsubclass lower4_ 
            on top3_.id1_=lower4_.id__ 
    left outer join
        rootclass lower4_1_ 
            on lower4_.id__=lower4_1_.id1_ 
    left outer join
        rootclass top5_ 
            on lower4_.other1=top5_.id1_ 
    left outer join
        TrivialClass top5_1_ 
            on top5_.id1_=top5_1_.tcid 
    left outer join
        leafsubclass top5_2_ 
            on top5_.id1_=top5_2_.id__ 
    left outer join
        nonleafsubclass top5_3_ 
            on top5_.id1_=top5_3_.sid 
    left outer join
        leafsubsubclass top5_4_ 
            on top5_.id1_=top5_4_.sid 
    left outer join
        mono top5_5_ 
            on top5_.id1_=top5_5_.superid 
    left outer join
        leafsubclass lower6_ 
            on top5_2_.other3=lower6_.id__ 
    left outer join
        rootclass lower6_1_ 
            on lower6_.id__=lower6_1_.id1_ 
    left outer join
        nonleafsubclass multi7_ 
            on top5_3_.other2=multi7_.sid 
    left outer join
        rootclass multi7_1_ 
            on multi7_.sid=multi7_1_.id1_ 
    left outer join
        leafsubsubclass multi7_2_ 
            on multi7_.sid=multi7_2_.sid 
    left outer join
        leafsubsubclass submulti8_ 
            on top5_4_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    left outer join
        rootclass top9_ 
            on this_.tl=top9_.id1_ 
    left outer join
        TrivialClass top9_1_ 
            on top9_.id1_=top9_1_.tcid 
    left outer join
        leafsubclass top9_2_ 
            on top9_.id1_=top9_2_.id__ 
    left outer join
        nonleafsubclass top9_3_ 
            on top9_.id1_=top9_3_.sid 
    left outer join
        leafsubsubclass top9_4_ 
            on top9_.id1_=top9_4_.sid 
    left outer join
        mono top9_5_ 
            on top9_.id1_=top9_5_.superid
14:16:31,738 DEBUG SQL:104 - 
    select
        this_.id_ as id1_0_9_,
        this_.value_ as value2_0_9_,
        this_.tl as tl0_9_,
        list2_.list_po as list6_0_11_,
        list2_.sid as sid3_11_,
        list2_.i as i11_,
        list2_.sid as id1_7_0_,
        list2_2_.count_ as count2_7_0_,
        list2_2_.name as name7_0_,
        list2_2_.address as address7_0_,
        list2_2_.date_ as date5_7_0_,
        list2_2_.top_ as top6_7_0_,
        list2_1_.dupe as dupe6_0_,
        list2_1_.other2 as other3_6_0_,
        list2_1_.po as po6_0_,
        list2_1_.cal as cal6_0_,
        list2_1_.floaty as floaty6_0_,
        list2_.dupe as dupe3_0_,
        list2_.parent as parent3_0_,
        upper(list2_1_.dupe) as formula91_0_,
        top3_.id1_ as id1_7_1_,
        top3_.count_ as count2_7_1_,
        top3_.name as name7_1_,
        top3_.address as address7_1_,
        top3_.date_ as date5_7_1_,
        top3_.top_ as top6_7_1_,
        top3_2_.intprop as intprop2_1_,
        top3_2_.other1 as other3_2_1_,
        top3_2_.other3 as other4_2_1_,
        top3_2_.foo as foo2_1_,
        top3_3_.dupe as dupe6_1_,
        top3_3_.other2 as other3_6_1_,
        top3_3_.po as po6_1_,
        top3_3_.cal as cal6_1_,
        top3_3_.floaty as floaty6_1_,
        top3_4_.dupe as dupe3_1_,
        top3_4_.parent as parent3_1_,
        upper(top3_3_.dupe) as formula91_1_,
        case 
            when top3_4_.sid is not null then 4 
            when top3_1_.tcid is not null then 1 
            when top3_2_.id__ is not null then 2 
            when top3_3_.sid is not null then 3 
            when top3_5_.superid is not null then 5 
            when top3_.id1_ is not null then 0 
        end as clazz_1_,
        lower4_.id__ as id1_7_2_,
        lower4_1_.count_ as count2_7_2_,
        lower4_1_.name as name7_2_,
        lower4_1_.address as address7_2_,
        lower4_1_.date_ as date5_7_2_,
        lower4_1_.top_ as top6_7_2_,
        lower4_.intprop as intprop2_2_,
        lower4_.other1 as other3_2_2_,
        lower4_.other3 as other4_2_2_,
        lower4_.foo as foo2_2_,
        top5_.id1_ as id1_7_3_,
        top5_.count_ as count2_7_3_,
        top5_.name as name7_3_,
        top5_.address as address7_3_,
        top5_.date_ as date5_7_3_,
        top5_.top_ as top6_7_3_,
        top5_2_.intprop as intprop2_3_,
        top5_2_.other1 as other3_2_3_,
        top5_2_.other3 as other4_2_3_,
        top5_2_.foo as foo2_3_,
        top5_3_.dupe as dupe6_3_,
        top5_3_.other2 as other3_6_3_,
        top5_3_.po as po6_3_,
        top5_3_.cal as cal6_3_,
        top5_3_.floaty as floaty6_3_,
        top5_4_.dupe as dupe3_3_,
        top5_4_.parent as parent3_3_,
        upper(top5_3_.dupe) as formula91_3_,
        case 
            when top5_4_.sid is not null then 4 
            when top5_1_.tcid is not null then 1 
            when top5_2_.id__ is not null then 2 
            when top5_3_.sid is not null then 3 
            when top5_5_.superid is not null then 5 
            when top5_.id1_ is not null then 0 
        end as clazz_3_,
        lower6_.id__ as id1_7_4_,
        lower6_1_.count_ as count2_7_4_,
        lower6_1_.name as name7_4_,
        lower6_1_.address as address7_4_,
        lower6_1_.date_ as date5_7_4_,
        lower6_1_.top_ as top6_7_4_,
        lower6_.intprop as intprop2_4_,
        lower6_.other1 as other3_2_4_,
        lower6_.other3 as other4_2_4_,
        lower6_.foo as foo2_4_,
        multi7_.sid as id1_7_5_,
        multi7_1_.count_ as count2_7_5_,
        multi7_1_.name as name7_5_,
        multi7_1_.address as address7_5_,
        multi7_1_.date_ as date5_7_5_,
        multi7_1_.top_ as top6_7_5_,
        multi7_.dupe as dupe6_5_,
        multi7_.other2 as other3_6_5_,
        multi7_.po as po6_5_,
        multi7_.cal as cal6_5_,
        multi7_.floaty as floaty6_5_,
        multi7_2_.dupe as dupe3_5_,
        multi7_2_.parent as parent3_5_,
        upper(multi7_.dupe) as formula91_5_,
        case 
            when multi7_2_.sid is not null then 4 
            when multi7_.sid is not null then 3 
        end as clazz_5_,
        po8_.id_ as id1_0_6_,
        po8_.value_ as value2_0_6_,
        po8_.tl as tl0_6_,
        submulti9_.sid as id1_7_7_,
        submulti9_2_.count_ as count2_7_7_,
        submulti9_2_.name as name7_7_,
        submulti9_2_.address as address7_7_,
        submulti9_2_.date_ as date5_7_7_,
        submulti9_2_.top_ as top6_7_7_,
        submulti9_1_.dupe as dupe6_7_,
        submulti9_1_.other2 as other3_6_7_,
        submulti9_1_.po as po6_7_,
        submulti9_1_.cal as cal6_7_,
        submulti9_1_.floaty as floaty6_7_,
        submulti9_.dupe as dupe3_7_,
        submulti9_.parent as parent3_7_,
        upper(submulti9_1_.dupe) as formula91_7_,
        top10_.id1_ as id1_7_8_,
        top10_.count_ as count2_7_8_,
        top10_.name as name7_8_,
        top10_.address as address7_8_,
        top10_.date_ as date5_7_8_,
        top10_.top_ as top6_7_8_,
        top10_2_.intprop as intprop2_8_,
        top10_2_.other1 as other3_2_8_,
        top10_2_.other3 as other4_2_8_,
        top10_2_.foo as foo2_8_,
        top10_3_.dupe as dupe6_8_,
        top10_3_.other2 as other3_6_8_,
        top10_3_.po as po6_8_,
        top10_3_.cal as cal6_8_,
        top10_3_.floaty as floaty6_8_,
        top10_4_.dupe as dupe3_8_,
        top10_4_.parent as parent3_8_,
        upper(top10_3_.dupe) as formula91_8_,
        case 
            when top10_4_.sid is not null then 4 
            when top10_1_.tcid is not null then 1 
            when top10_2_.id__ is not null then 2 
            when top10_3_.sid is not null then 3 
            when top10_5_.superid is not null then 5 
            when top10_.id1_ is not null then 0 
        end as clazz_8_ 
    from
        Po this_ 
    left outer join
        leafsubsubclass list2_ 
            on this_.id_=list2_.list_po 
    left outer join
        nonleafsubclass list2_1_ 
            on list2_.sid=list2_1_.sid 
    left outer join
        rootclass list2_2_ 
            on list2_.sid=list2_2_.id1_ 
    left outer join
        rootclass top3_ 
            on list2_2_.top_=top3_.id1_ 
    left outer join
        TrivialClass top3_1_ 
            on top3_.id1_=top3_1_.tcid 
    left outer join
        leafsubclass top3_2_ 
            on top3_.id1_=top3_2_.id__ 
    left outer join
        nonleafsubclass top3_3_ 
            on top3_.id1_=top3_3_.sid 
    left outer join
        leafsubsubclass top3_4_ 
            on top3_.id1_=top3_4_.sid 
    left outer join
        mono top3_5_ 
            on top3_.id1_=top3_5_.superid 
    left outer join
        leafsubclass lower4_ 
            on top3_.id1_=lower4_.id__ 
    left outer join
        rootclass lower4_1_ 
            on lower4_.id__=lower4_1_.id1_ 
    left outer join
        rootclass top5_ 
            on lower4_.other1=top5_.id1_ 
    left outer join
        TrivialClass top5_1_ 
            on top5_.id1_=top5_1_.tcid 
    left outer join
        leafsubclass top5_2_ 
            on top5_.id1_=top5_2_.id__ 
    left outer join
        nonleafsubclass top5_3_ 
            on top5_.id1_=top5_3_.sid 
    left outer join
        leafsubsubclass top5_4_ 
            on top5_.id1_=top5_4_.sid 
    left outer join
        mono top5_5_ 
            on top5_.id1_=top5_5_.superid 
    left outer join
        leafsubclass lower6_ 
            on top5_2_.other3=lower6_.id__ 
    left outer join
        rootclass lower6_1_ 
            on lower6_.id__=lower6_1_.id1_ 
    left outer join
        nonleafsubclass multi7_ 
            on top5_3_.other2=multi7_.sid 
    left outer join
        rootclass multi7_1_ 
            on multi7_.sid=multi7_1_.id1_ 
    left outer join
        leafsubsubclass multi7_2_ 
            on multi7_.sid=multi7_2_.sid 
    left outer join
        Po po8_ 
            on top5_3_.po=po8_.id_ 
    left outer join
        leafsubsubclass submulti9_ 
            on top5_4_.parent=submulti9_.sid 
    left outer join
        nonleafsubclass submulti9_1_ 
            on submulti9_.sid=submulti9_1_.sid 
    left outer join
        rootclass submulti9_2_ 
            on submulti9_.sid=submulti9_2_.id1_ 
    left outer join
        rootclass top10_ 
            on this_.tl=top10_.id1_ 
    left outer join
        TrivialClass top10_1_ 
            on top10_.id1_=top10_1_.tcid 
    left outer join
        leafsubclass top10_2_ 
            on top10_.id1_=top10_2_.id__ 
    left outer join
        nonleafsubclass top10_3_ 
            on top10_.id1_=top10_3_.sid 
    left outer join
        leafsubsubclass top10_4_ 
            on top10_.id1_=top10_4_.sid 
    left outer join
        mono top10_5_ 
            on top10_.id1_=top10_5_.superid
14:16:31,810 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_,
        top0_.count_ as count2_7_,
        top0_.name as name7_,
        top0_.address as address7_,
        top0_.date_ as date5_7_,
        top0_.top_ as top6_7_,
        top0_2_.intprop as intprop2_,
        top0_2_.other1 as other3_2_,
        top0_2_.other3 as other4_2_,
        top0_2_.foo as foo2_,
        top0_3_.dupe as dupe6_,
        top0_3_.other2 as other3_6_,
        top0_3_.po as po6_,
        top0_3_.cal as cal6_,
        top0_3_.floaty as floaty6_,
        top0_4_.dupe as dupe3_,
        top0_4_.parent as parent3_,
        upper(top0_3_.dupe) as formula91_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    where
        (
            top0_.id1_ is not null
        )
14:16:31,833 DEBUG SQL:104 - 
    select
        po0_.id_ as id1_0_,
        po0_.value_ as value2_0_,
        po0_.tl as tl0_ 
    from
        Po po0_
14:16:31,834  INFO CustomRunner:139 - Test: testJoins
14:16:31,837 DEBUG SQL:104 - 
    select
        lower0_.id__ as id1_7_0_,
        lower1_.id__ as id1_7_1_,
        lower0_1_.count_ as count2_7_0_,
        lower0_1_.name as name7_0_,
        lower0_1_.address as address7_0_,
        lower0_1_.date_ as date5_7_0_,
        lower0_1_.top_ as top6_7_0_,
        lower0_.intprop as intprop2_0_,
        lower0_.other1 as other3_2_0_,
        lower0_.other3 as other4_2_0_,
        lower0_.foo as foo2_0_,
        lower1_1_.count_ as count2_7_1_,
        lower1_1_.name as name7_1_,
        lower1_1_.address as address7_1_,
        lower1_1_.date_ as date5_7_1_,
        lower1_1_.top_ as top6_7_1_,
        lower1_.intprop as intprop2_1_,
        lower1_.other1 as other3_2_1_,
        lower1_.other3 as other4_2_1_,
        lower1_.foo as foo2_1_ 
    from
        leafsubclass lower0_ 
    inner join
        rootclass lower0_1_ 
            on lower0_.id__=lower0_1_.id1_ 
    inner join
        leafsubclass lower1_ 
            on lower0_.other3=lower1_.id__ 
    inner join
        rootclass lower1_1_ 
            on lower1_.id__=lower1_1_.id1_ 
    where
        (
            lower0_1_.id1_ is not null
        ) 
        and (
            (
                lower(lower1_1_.name)>'a' 
            )
        )
14:16:31,863 DEBUG SQL:104 - 
    select
        lower0_.id__ as id1_7_,
        lower0_1_.count_ as count2_7_,
        lower0_1_.name as name7_,
        lower0_1_.address as address7_,
        lower0_1_.date_ as date5_7_,
        lower0_1_.top_ as top6_7_,
        lower0_.intprop as intprop2_,
        lower0_.other1 as other3_2_,
        lower0_.other3 as other4_2_,
        lower0_.foo as foo2_ 
    from
        leafsubclass lower0_ 
    inner join
        rootclass lower0_1_ 
            on lower0_.id__=lower0_1_.id1_,
        leafsubclass lower1_ 
    inner join
        rootclass lower1_1_ 
            on lower1_.id__=lower1_1_.id1_,
        rootclass top2_ 
    where
        (
            lower0_1_.id1_ is not null
        ) 
        and (
            (
                lower(top2_.name)>'a'  
                and lower0_.other3=lower1_.id__ 
                and lower1_1_.top_=top2_.id1_
            )
        )
14:16:31,873 DEBUG SQL:104 - 
    select
        submulti0_.sid as id1_7_0_,
        children1_.sid as id1_7_1_,
        submulti0_2_.count_ as count2_7_0_,
        submulti0_2_.name as name7_0_,
        submulti0_2_.address as address7_0_,
        submulti0_2_.date_ as date5_7_0_,
        submulti0_2_.top_ as top6_7_0_,
        submulti0_1_.dupe as dupe6_0_,
        submulti0_1_.other2 as other3_6_0_,
        submulti0_1_.po as po6_0_,
        submulti0_1_.cal as cal6_0_,
        submulti0_1_.floaty as floaty6_0_,
        submulti0_.dupe as dupe3_0_,
        submulti0_.parent as parent3_0_,
        upper(submulti0_1_.dupe) as formula91_0_,
        children1_2_.count_ as count2_7_1_,
        children1_2_.name as name7_1_,
        children1_2_.address as address7_1_,
        children1_2_.date_ as date5_7_1_,
        children1_2_.top_ as top6_7_1_,
        children1_1_.dupe as dupe6_1_,
        children1_1_.other2 as other3_6_1_,
        children1_1_.po as po6_1_,
        children1_1_.cal as cal6_1_,
        children1_1_.floaty as floaty6_1_,
        children1_.dupe as dupe3_1_,
        children1_.parent as parent3_1_,
        upper(children1_1_.dupe) as formula91_1_ 
    from
        leafsubsubclass submulti0_ 
    inner join
        nonleafsubclass submulti0_1_ 
            on submulti0_.sid=submulti0_1_.sid 
    inner join
        rootclass submulti0_2_ 
            on submulti0_.sid=submulti0_2_.id1_ 
    inner join
        leafsubsubclass children1_ 
            on submulti0_.sid=children1_.parent 
    inner join
        nonleafsubclass children1_1_ 
            on children1_.sid=children1_1_.sid 
    inner join
        rootclass children1_2_ 
            on children1_.sid=children1_2_.id1_ 
    where
        (
            submulti0_2_.id1_ is not null
        ) 
        and (
            (
                children1_2_.name>'a' 
            )
        )
14:16:31,896 DEBUG SQL:104 - 
    select
        lower0_.id__ as id1_7_0_,
        lower1_.id__ as id1_7_1_,
        lower0_1_.count_ as count2_7_0_,
        lower0_1_.name as name7_0_,
        lower0_1_.address as address7_0_,
        lower0_1_.date_ as date5_7_0_,
        lower0_1_.top_ as top6_7_0_,
        lower0_.intprop as intprop2_0_,
        lower0_.other1 as other3_2_0_,
        lower0_.other3 as other4_2_0_,
        lower0_.foo as foo2_0_,
        lower1_1_.count_ as count2_7_1_,
        lower1_1_.name as name7_1_,
        lower1_1_.address as address7_1_,
        lower1_1_.date_ as date5_7_1_,
        lower1_1_.top_ as top6_7_1_,
        lower1_.intprop as intprop2_1_,
        lower1_.other1 as other3_2_1_,
        lower1_.other3 as other4_2_1_,
        lower1_.foo as foo2_1_ 
    from
        leafsubclass lower0_ 
    inner join
        rootclass lower0_1_ 
            on lower0_.id__=lower0_1_.id1_ 
    inner join
        leafsubclass lower1_ 
            on lower0_.other3=lower1_.id__ 
    inner join
        rootclass lower1_1_ 
            on lower1_.id__=lower1_1_.id1_ 
    where
        (
            lower0_1_.id1_ is not null
        )
14:16:31,904 DEBUG SQL:104 - 
    select
        lower0_.id__ as id1_7_0_,
        top2_.id1_ as id1_7_1_,
        lower0_1_.count_ as count2_7_0_,
        lower0_1_.name as name7_0_,
        lower0_1_.address as address7_0_,
        lower0_1_.date_ as date5_7_0_,
        lower0_1_.top_ as top6_7_0_,
        lower0_.intprop as intprop2_0_,
        lower0_.other1 as other3_2_0_,
        lower0_.other3 as other4_2_0_,
        lower0_.foo as foo2_0_,
        top2_.count_ as count2_7_1_,
        top2_.name as name7_1_,
        top2_.address as address7_1_,
        top2_.date_ as date5_7_1_,
        top2_.top_ as top6_7_1_,
        top2_2_.intprop as intprop2_1_,
        top2_2_.other1 as other3_2_1_,
        top2_2_.other3 as other4_2_1_,
        top2_2_.foo as foo2_1_,
        top2_3_.dupe as dupe6_1_,
        top2_3_.other2 as other3_6_1_,
        top2_3_.po as po6_1_,
        top2_3_.cal as cal6_1_,
        top2_3_.floaty as floaty6_1_,
        top2_4_.dupe as dupe3_1_,
        top2_4_.parent as parent3_1_,
        upper(top2_3_.dupe) as formula91_1_,
        case 
            when top2_4_.sid is not null then 4 
            when top2_1_.tcid is not null then 1 
            when top2_2_.id__ is not null then 2 
            when top2_3_.sid is not null then 3 
            when top2_5_.superid is not null then 5 
            when top2_.id1_ is not null then 0 
        end as clazz_1_ 
    from
        leafsubclass lower0_ 
    inner join
        rootclass lower0_1_ 
            on lower0_.id__=lower0_1_.id1_ 
    inner join
        simple_simple bag1_ 
            on lower0_.id__=bag1_.simple1 
    inner join
        rootclass top2_ 
            on bag1_.simple2=top2_.id1_ 
    left outer join
        TrivialClass top2_1_ 
            on top2_.id1_=top2_1_.tcid 
    left outer join
        leafsubclass top2_2_ 
            on top2_.id1_=top2_2_.id__ 
    left outer join
        nonleafsubclass top2_3_ 
            on top2_.id1_=top2_3_.sid 
    left outer join
        leafsubsubclass top2_4_ 
            on top2_.id1_=top2_4_.sid 
    left outer join
        mono top2_5_ 
            on top2_.id1_=top2_5_.superid 
    where
        (
            lower0_1_.id1_ is not null
        )
14:16:31,926 DEBUG SQL:104 - 
    select
        lower0_.id__ as id1_7_0_,
        top2_.id1_ as id1_7_1_,
        lower0_1_.count_ as count2_7_0_,
        lower0_1_.name as name7_0_,
        lower0_1_.address as address7_0_,
        lower0_1_.date_ as date5_7_0_,
        lower0_1_.top_ as top6_7_0_,
        lower0_.intprop as intprop2_0_,
        lower0_.other1 as other3_2_0_,
        lower0_.other3 as other4_2_0_,
        lower0_.foo as foo2_0_,
        top2_.count_ as count2_7_1_,
        top2_.name as name7_1_,
        top2_.address as address7_1_,
        top2_.date_ as date5_7_1_,
        top2_.top_ as top6_7_1_,
        top2_2_.intprop as intprop2_1_,
        top2_2_.other1 as other3_2_1_,
        top2_2_.other3 as other4_2_1_,
        top2_2_.foo as foo2_1_,
        top2_3_.dupe as dupe6_1_,
        top2_3_.other2 as other3_6_1_,
        top2_3_.po as po6_1_,
        top2_3_.cal as cal6_1_,
        top2_3_.floaty as floaty6_1_,
        top2_4_.dupe as dupe3_1_,
        top2_4_.parent as parent3_1_,
        upper(top2_3_.dupe) as formula91_1_,
        case 
            when top2_4_.sid is not null then 4 
            when top2_1_.tcid is not null then 1 
            when top2_2_.id__ is not null then 2 
            when top2_3_.sid is not null then 3 
            when top2_5_.superid is not null then 5 
            when top2_.id1_ is not null then 0 
        end as clazz_1_ 
    from
        leafsubclass lower0_ 
    inner join
        rootclass lower0_1_ 
            on lower0_.id__=lower0_1_.id1_ 
    left outer join
        simple_simple bag1_ 
            on lower0_.id__=bag1_.simple1 
    left outer join
        rootclass top2_ 
            on bag1_.simple2=top2_.id1_ 
    left outer join
        TrivialClass top2_1_ 
            on top2_.id1_=top2_1_.tcid 
    left outer join
        leafsubclass top2_2_ 
            on top2_.id1_=top2_2_.id__ 
    left outer join
        nonleafsubclass top2_3_ 
            on top2_.id1_=top2_3_.sid 
    left outer join
        leafsubsubclass top2_4_ 
            on top2_.id1_=top2_4_.sid 
    left outer join
        mono top2_5_ 
            on top2_.id1_=top2_5_.superid 
    where
        (
            lower0_1_.id1_ is not null
        )
14:16:31,957 DEBUG SQL:104 - 
    select
        lower0_.id__ as id1_7_0_,
        top1_.id1_ as id1_7_1_,
        lower0_1_.count_ as count2_7_0_,
        lower0_1_.name as name7_0_,
        lower0_1_.address as address7_0_,
        lower0_1_.date_ as date5_7_0_,
        lower0_1_.top_ as top6_7_0_,
        lower0_.intprop as intprop2_0_,
        lower0_.other1 as other3_2_0_,
        lower0_.other3 as other4_2_0_,
        lower0_.foo as foo2_0_,
        top1_.count_ as count2_7_1_,
        top1_.name as name7_1_,
        top1_.address as address7_1_,
        top1_.date_ as date5_7_1_,
        top1_.top_ as top6_7_1_,
        top1_2_.intprop as intprop2_1_,
        top1_2_.other1 as other3_2_1_,
        top1_2_.other3 as other4_2_1_,
        top1_2_.foo as foo2_1_,
        top1_3_.dupe as dupe6_1_,
        top1_3_.other2 as other3_6_1_,
        top1_3_.po as po6_1_,
        top1_3_.cal as cal6_1_,
        top1_3_.floaty as floaty6_1_,
        top1_4_.dupe as dupe3_1_,
        top1_4_.parent as parent3_1_,
        upper(top1_3_.dupe) as formula91_1_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_1_ 
    from
        leafsubclass lower0_ 
    inner join
        rootclass lower0_1_ 
            on lower0_.id__=lower0_1_.id1_ 
    inner join
        rootclass top1_ 
            on lower0_.other1=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    where
        (
            lower0_1_.id1_ is not null
        )
14:16:31,964 DEBUG SQL:104 - 
    select
        lower0_.id__ as id1_7_0_,
        top1_.id1_ as id1_7_1_,
        lower0_1_.count_ as count2_7_0_,
        lower0_1_.name as name7_0_,
        lower0_1_.address as address7_0_,
        lower0_1_.date_ as date5_7_0_,
        lower0_1_.top_ as top6_7_0_,
        lower0_.intprop as intprop2_0_,
        lower0_.other1 as other3_2_0_,
        lower0_.other3 as other4_2_0_,
        lower0_.foo as foo2_0_,
        top1_.count_ as count2_7_1_,
        top1_.name as name7_1_,
        top1_.address as address7_1_,
        top1_.date_ as date5_7_1_,
        top1_.top_ as top6_7_1_,
        top1_2_.intprop as intprop2_1_,
        top1_2_.other1 as other3_2_1_,
        top1_2_.other3 as other4_2_1_,
        top1_2_.foo as foo2_1_,
        top1_3_.dupe as dupe6_1_,
        top1_3_.other2 as other3_6_1_,
        top1_3_.po as po6_1_,
        top1_3_.cal as cal6_1_,
        top1_3_.floaty as floaty6_1_,
        top1_4_.dupe as dupe3_1_,
        top1_4_.parent as parent3_1_,
        upper(top1_3_.dupe) as formula91_1_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_1_ 
    from
        leafsubclass lower0_ 
    inner join
        rootclass lower0_1_ 
            on lower0_.id__=lower0_1_.id1_ 
    left outer join
        rootclass top1_ 
            on lower0_.other1=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    where
        (
            lower0_1_.id1_ is not null
        )
14:16:31,995 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_0_,
        lower1_.id__ as id1_7_1_,
        top0_.count_ as count2_7_0_,
        top0_.name as name7_0_,
        top0_.address as address7_0_,
        top0_.date_ as date5_7_0_,
        top0_.top_ as top6_7_0_,
        top0_2_.intprop as intprop2_0_,
        top0_2_.other1 as other3_2_0_,
        top0_2_.other3 as other4_2_0_,
        top0_2_.foo as foo2_0_,
        top0_3_.dupe as dupe6_0_,
        top0_3_.other2 as other3_6_0_,
        top0_3_.po as po6_0_,
        top0_3_.cal as cal6_0_,
        top0_3_.floaty as floaty6_0_,
        top0_4_.dupe as dupe3_0_,
        top0_4_.parent as parent3_0_,
        upper(top0_3_.dupe) as formula91_0_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_0_,
        lower1_1_.count_ as count2_7_1_,
        lower1_1_.name as name7_1_,
        lower1_1_.address as address7_1_,
        lower1_1_.date_ as date5_7_1_,
        lower1_1_.top_ as top6_7_1_,
        lower1_.intprop as intprop2_1_,
        lower1_.other1 as other3_2_1_,
        lower1_.other3 as other4_2_1_,
        lower1_.foo as foo2_1_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid,
        leafsubclass lower1_ 
    inner join
        rootclass lower1_1_ 
            on lower1_.id__=lower1_1_.id1_ 
    where
        (
            top0_.id1_ is not null
        )  
        and (
            lower1_1_.id1_ is not null
        )
14:16:32,028 DEBUG SQL:104 - 
    select
        lower0_.id__ as id1_7_0_,
        set1_.id1_ as id1_7_1_,
        lower0_1_.count_ as count2_7_0_,
        lower0_1_.name as name7_0_,
        lower0_1_.address as address7_0_,
        lower0_1_.date_ as date5_7_0_,
        lower0_1_.top_ as top6_7_0_,
        lower0_.intprop as intprop2_0_,
        lower0_.other1 as other3_2_0_,
        lower0_.other3 as other4_2_0_,
        lower0_.foo as foo2_0_,
        set1_.count_ as count2_7_1_,
        set1_.name as name7_1_,
        set1_.address as address7_1_,
        set1_.date_ as date5_7_1_,
        set1_.top_ as top6_7_1_,
        set1_2_.intprop as intprop2_1_,
        set1_2_.other1 as other3_2_1_,
        set1_2_.other3 as other4_2_1_,
        set1_2_.foo as foo2_1_,
        set1_3_.dupe as dupe6_1_,
        set1_3_.other2 as other3_6_1_,
        set1_3_.po as po6_1_,
        set1_3_.cal as cal6_1_,
        set1_3_.floaty as floaty6_1_,
        set1_4_.dupe as dupe3_1_,
        set1_4_.parent as parent3_1_,
        upper(set1_3_.dupe) as formula91_1_,
        case 
            when set1_4_.sid is not null then 4 
            when set1_1_.tcid is not null then 1 
            when set1_2_.id__ is not null then 2 
            when set1_3_.sid is not null then 3 
            when set1_5_.superid is not null then 5 
            when set1_.id1_ is not null then 0 
        end as clazz_1_ 
    from
        leafsubclass lower0_ 
    inner join
        rootclass lower0_1_ 
            on lower0_.id__=lower0_1_.id1_ 
    inner join
        rootclass set1_ 
            on lower0_.id__=set1_.parent 
    left outer join
        TrivialClass set1_1_ 
            on set1_.id1_=set1_1_.tcid 
    left outer join
        leafsubclass set1_2_ 
            on set1_.id1_=set1_2_.id__ 
    left outer join
        nonleafsubclass set1_3_ 
            on set1_.id1_=set1_3_.sid 
    left outer join
        leafsubsubclass set1_4_ 
            on set1_.id1_=set1_4_.sid 
    left outer join
        mono set1_5_ 
            on set1_.id1_=set1_5_.superid 
    where
        (
            lower0_1_.id1_ is not null
        ) 
        and (
            (
                set1_.name>'a' 
            )
        )
14:16:32,047 DEBUG SQL:104 - 
    select
        po0_.id_ as id1_0_0_,
        list1_.sid as id1_7_1_,
        po0_.value_ as value2_0_0_,
        po0_.tl as tl0_0_,
        list1_2_.count_ as count2_7_1_,
        list1_2_.name as name7_1_,
        list1_2_.address as address7_1_,
        list1_2_.date_ as date5_7_1_,
        list1_2_.top_ as top6_7_1_,
        list1_1_.dupe as dupe6_1_,
        list1_1_.other2 as other3_6_1_,
        list1_1_.po as po6_1_,
        list1_1_.cal as cal6_1_,
        list1_1_.floaty as floaty6_1_,
        list1_.dupe as dupe3_1_,
        list1_.parent as parent3_1_,
        upper(list1_1_.dupe) as formula91_1_ 
    from
        Po po0_ 
    inner join
        leafsubsubclass list1_ 
            on po0_.id_=list1_.list_po 
    inner join
        nonleafsubclass list1_1_ 
            on list1_.sid=list1_1_.sid 
    inner join
        rootclass list1_2_ 
            on list1_.sid=list1_2_.id1_ 
    where
        (
            list1_2_.name>'a' 
        )
14:16:32,057 DEBUG SQL:104 - 
    select
        lower0_.id__ as id1_7_0_,
        top1_.id1_ as id1_7_1_,
        lower0_1_.count_ as count2_7_0_,
        lower0_1_.name as name7_0_,
        lower0_1_.address as address7_0_,
        lower0_1_.date_ as date5_7_0_,
        lower0_1_.top_ as top6_7_0_,
        lower0_.intprop as intprop2_0_,
        lower0_.other1 as other3_2_0_,
        lower0_.other3 as other4_2_0_,
        lower0_.foo as foo2_0_,
        top1_.count_ as count2_7_1_,
        top1_.name as name7_1_,
        top1_.address as address7_1_,
        top1_.date_ as date5_7_1_,
        top1_.top_ as top6_7_1_,
        top1_2_.intprop as intprop2_1_,
        top1_2_.other1 as other3_2_1_,
        top1_2_.other3 as other4_2_1_,
        top1_2_.foo as foo2_1_,
        top1_3_.dupe as dupe6_1_,
        top1_3_.other2 as other3_6_1_,
        top1_3_.po as po6_1_,
        top1_3_.cal as cal6_1_,
        top1_3_.floaty as floaty6_1_,
        top1_4_.dupe as dupe3_1_,
        top1_4_.parent as parent3_1_,
        upper(top1_3_.dupe) as formula91_1_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_1_ 
    from
        leafsubclass lower0_ 
    inner join
        rootclass lower0_1_ 
            on lower0_.id__=lower0_1_.id1_ 
    inner join
        rootclass top1_ 
            on lower0_.other1=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    where
        (
            lower0_1_.id1_ is not null
        ) 
        and (
            (
                top1_.name is not null 
            )
        )
14:16:32,067 DEBUG SQL:104 - 
    select
        lower0_.id__ as id1_7_,
        lower0_1_.count_ as count2_7_,
        lower0_1_.name as name7_,
        lower0_1_.address as address7_,
        lower0_1_.date_ as date5_7_,
        lower0_1_.top_ as top6_7_,
        lower0_.intprop as intprop2_,
        lower0_.other1 as other3_2_,
        lower0_.other3 as other4_2_,
        lower0_.foo as foo2_ 
    from
        leafsubclass lower0_ 
    inner join
        rootclass lower0_1_ 
            on lower0_.id__=lower0_1_.id1_,
        leafsubclass lower1_ 
    inner join
        rootclass lower1_1_ 
            on lower1_.id__=lower1_1_.id1_,
        rootclass top2_ 
    where
        (
            lower0_1_.id1_ is not null
        ) 
        and (
            (
                top2_.name is not null  
                and lower0_.id__=lower1_.id__ 
                and lower1_.other1=top2_.id1_
            )
        )
14:16:32,081 DEBUG SQL:104 - 
    select
        multi0_.sid as id1_7_,
        multi0_1_.count_ as count2_7_,
        multi0_1_.name as name7_,
        multi0_1_.address as address7_,
        multi0_1_.date_ as date5_7_,
        multi0_1_.top_ as top6_7_,
        multi0_.dupe as dupe6_,
        multi0_.other2 as other3_6_,
        multi0_.po as po6_,
        multi0_.cal as cal6_,
        multi0_.floaty as floaty6_,
        multi0_2_.dupe as dupe3_,
        multi0_2_.parent as parent3_,
        upper(multi0_.dupe) as formula91_,
        case 
            when multi0_2_.sid is not null then 4 
            when multi0_.sid is not null then 3 
        end as clazz_ 
    from
        nonleafsubclass multi0_ 
    inner join
        rootclass multi0_1_ 
            on multi0_.sid=multi0_1_.id1_ 
    left outer join
        leafsubsubclass multi0_2_ 
            on multi0_.sid=multi0_2_.sid 
    where
        (
            multi0_1_.id1_ is not null
        ) 
        and (
            (
                upper(multi0_.dupe) like 'F%' 
            )
        )
14:16:32,091 DEBUG SQL:104 - 
    select
        submulti0_.sid as id1_7_,
        submulti0_2_.count_ as count2_7_,
        submulti0_2_.name as name7_,
        submulti0_2_.address as address7_,
        submulti0_2_.date_ as date5_7_,
        submulti0_2_.top_ as top6_7_,
        submulti0_1_.dupe as dupe6_,
        submulti0_1_.other2 as other3_6_,
        submulti0_1_.po as po6_,
        submulti0_1_.cal as cal6_,
        submulti0_1_.floaty as floaty6_,
        submulti0_.dupe as dupe3_,
        submulti0_.parent as parent3_,
        upper(submulti0_1_.dupe) as formula91_ 
    from
        leafsubsubclass submulti0_ 
    inner join
        nonleafsubclass submulti0_1_ 
            on submulti0_.sid=submulti0_1_.sid 
    inner join
        rootclass submulti0_2_ 
            on submulti0_.sid=submulti0_2_.id1_ 
    where
        (
            submulti0_2_.id1_ is not null
        ) 
        and (
            (
                upper(submulti0_1_.dupe) like 'F%' 
            )
        )
14:16:32,113 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_,
        top0_.count_ as count2_7_,
        top0_.name as name7_,
        top0_.address as address7_,
        top0_.date_ as date5_7_,
        top0_.top_ as top6_7_,
        top0_2_.intprop as intprop2_,
        top0_2_.other1 as other3_2_,
        top0_2_.other3 as other4_2_,
        top0_2_.foo as foo2_,
        top0_3_.dupe as dupe6_,
        top0_3_.other2 as other3_6_,
        top0_3_.po as po6_,
        top0_3_.cal as cal6_,
        top0_3_.floaty as floaty6_,
        top0_4_.dupe as dupe3_,
        top0_4_.parent as parent3_,
        upper(top0_3_.dupe) as formula91_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    where
        (
            top0_.id1_ is not null
        )
14:16:32,135 DEBUG SQL:104 - 
    select
        po0_.id_ as id1_0_,
        po0_.value_ as value2_0_,
        po0_.tl as tl0_ 
    from
        Po po0_
14:16:32,135  INFO CustomRunner:139 - Test: testMultiTable
14:16:32,136 DEBUG SQL:104 - 
    insert 
    into
        rootclass
        (id1_, count_, name, address, date_, top_) 
    values
        (null, ?, ?, ?, ?, ?)
14:16:32,137 DEBUG SQL:104 - 
    insert 
    into
        nonleafsubclass
        (dupe, other2, po, cal, floaty, sid) 
    values
        (?, ?, ?, ?, ?, ?)
14:16:32,144 DEBUG SQL:104 - 
    insert 
    into
        rootclass
        (count_, name, date_, id1_) 
    values
        (?, ?, ?, null)
14:16:32,146 DEBUG SQL:104 - 
    insert 
    into
        rootclass
        (id1_, count_, name, address, date_, top_) 
    values
        (null, ?, ?, ?, ?, ?)
14:16:32,146 DEBUG SQL:104 - 
    insert 
    into
        nonleafsubclass
        (dupe, other2, po, cal, floaty, sid) 
    values
        (?, ?, ?, ?, ?, ?)
14:16:32,146 DEBUG SQL:104 - 
    insert 
    into
        leafsubsubclass
        (dupe, parent, sid) 
    values
        (?, ?, ?)
14:16:32,156 DEBUG SQL:104 - 
    select
        top_.id1_,
        top_.count_ as count2_7_,
        top_.name as name7_,
        top_.address as address7_,
        top_.date_ as date5_7_,
        top_.top_ as top6_7_ 
    from
        rootclass top_ 
    where
        top_.id1_=?
14:16:32,157 DEBUG SQL:104 - 
    update
        rootclass 
    set
        count_=?,
        name=?,
        address=?,
        date_=?,
        top_=? 
    where
        id1_=? 
        and count_=?
14:16:32,157 DEBUG SQL:104 - 
    update
        nonleafsubclass 
    set
        dupe=?,
        other2=?,
        po=?,
        cal=?,
        floaty=? 
    where
        sid=?
14:16:32,166 DEBUG SQL:104 - 
    update
        rootclass 
    set
        count_=?,
        name=? 
    where
        id1_=? 
        and count_=?
14:16:32,167 DEBUG SQL:104 - 
    update
        rootclass 
    set
        count_=?,
        name=?,
        address=?,
        date_=?,
        top_=? 
    where
        id1_=? 
        and count_=?
14:16:32,167 DEBUG SQL:104 - 
    update
        nonleafsubclass 
    set
        dupe=?,
        other2=?,
        po=?,
        cal=?,
        floaty=? 
    where
        sid=?
14:16:32,177 DEBUG SQL:104 - 
    update
        leafsubsubclass 
    set
        dupe=?,
        parent=? 
    where
        sid=?
14:16:32,177 DEBUG SQL:104 - 
    update
        leafsubsubclass 
    set
        another_parent=null,
        list_ind=null 
    where
        another_parent=?
14:16:32,178 DEBUG SQL:104 - 
    select
        multi0_.sid as id1_7_8_,
        multi0_1_.count_ as count2_7_8_,
        multi0_1_.name as name7_8_,
        multi0_1_.address as address7_8_,
        multi0_1_.date_ as date5_7_8_,
        multi0_1_.top_ as top6_7_8_,
        multi0_.dupe as dupe6_8_,
        multi0_.other2 as other3_6_8_,
        multi0_.po as po6_8_,
        multi0_.cal as cal6_8_,
        multi0_.floaty as floaty6_8_,
        multi0_2_.dupe as dupe3_8_,
        multi0_2_.parent as parent3_8_,
        upper(multi0_.dupe) as formula91_8_,
        case 
            when multi0_2_.sid is not null then 4 
            when multi0_.sid is not null then 3 
        end as clazz_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        lower2_.id__ as id1_7_1_,
        lower2_1_.count_ as count2_7_1_,
        lower2_1_.name as name7_1_,
        lower2_1_.address as address7_1_,
        lower2_1_.date_ as date5_7_1_,
        lower2_1_.top_ as top6_7_1_,
        lower2_.intprop as intprop2_1_,
        lower2_.other1 as other3_2_1_,
        lower2_.other3 as other4_2_1_,
        lower2_.foo as foo2_1_,
        top3_.id1_ as id1_7_2_,
        top3_.count_ as count2_7_2_,
        top3_.name as name7_2_,
        top3_.address as address7_2_,
        top3_.date_ as date5_7_2_,
        top3_.top_ as top6_7_2_,
        top3_2_.intprop as intprop2_2_,
        top3_2_.other1 as other3_2_2_,
        top3_2_.other3 as other4_2_2_,
        top3_2_.foo as foo2_2_,
        top3_3_.dupe as dupe6_2_,
        top3_3_.other2 as other3_6_2_,
        top3_3_.po as po6_2_,
        top3_3_.cal as cal6_2_,
        top3_3_.floaty as floaty6_2_,
        top3_4_.dupe as dupe3_2_,
        top3_4_.parent as parent3_2_,
        upper(top3_3_.dupe) as formula91_2_,
        case 
            when top3_4_.sid is not null then 4 
            when top3_1_.tcid is not null then 1 
            when top3_2_.id__ is not null then 2 
            when top3_3_.sid is not null then 3 
            when top3_5_.superid is not null then 5 
            when top3_.id1_ is not null then 0 
        end as clazz_2_,
        lower4_.id__ as id1_7_3_,
        lower4_1_.count_ as count2_7_3_,
        lower4_1_.name as name7_3_,
        lower4_1_.address as address7_3_,
        lower4_1_.date_ as date5_7_3_,
        lower4_1_.top_ as top6_7_3_,
        lower4_.intprop as intprop2_3_,
        lower4_.other1 as other3_2_3_,
        lower4_.other3 as other4_2_3_,
        lower4_.foo as foo2_3_,
        po5_.id_ as id1_0_4_,
        po5_.value_ as value2_0_4_,
        po5_.tl as tl0_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        nonleafsubclass multi0_ 
    inner join
        rootclass multi0_1_ 
            on multi0_.sid=multi0_1_.id1_ 
    left outer join
        leafsubsubclass multi0_2_ 
            on multi0_.sid=multi0_2_.sid 
    left outer join
        rootclass top1_ 
            on multi0_1_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        leafsubclass lower2_ 
            on top1_.id1_=lower2_.id__ 
    left outer join
        rootclass lower2_1_ 
            on lower2_.id__=lower2_1_.id1_ 
    left outer join
        rootclass top3_ 
            on lower2_.other1=top3_.id1_ 
    left outer join
        TrivialClass top3_1_ 
            on top3_.id1_=top3_1_.tcid 
    left outer join
        leafsubclass top3_2_ 
            on top3_.id1_=top3_2_.id__ 
    left outer join
        nonleafsubclass top3_3_ 
            on top3_.id1_=top3_3_.sid 
    left outer join
        leafsubsubclass top3_4_ 
            on top3_.id1_=top3_4_.sid 
    left outer join
        mono top3_5_ 
            on top3_.id1_=top3_5_.superid 
    left outer join
        leafsubclass lower4_ 
            on top3_2_.other3=lower4_.id__ 
    left outer join
        rootclass lower4_1_ 
            on lower4_.id__=lower4_1_.id1_ 
    left outer join
        Po po5_ 
            on lower4_.id__=po5_.id_ 
    left outer join
        nonleafsubclass multi6_ 
            on top3_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on multi6_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on multi6_2_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        multi0_.sid=? 
        and (
            multi0_1_.id1_ is not null
        ) 
14:16:32,258 DEBUG SQL:104 - 
    select
        submulti0_.sid as id1_7_8_,
        submulti0_2_.count_ as count2_7_8_,
        submulti0_2_.name as name7_8_,
        submulti0_2_.address as address7_8_,
        submulti0_2_.date_ as date5_7_8_,
        submulti0_2_.top_ as top6_7_8_,
        submulti0_1_.dupe as dupe6_8_,
        submulti0_1_.other2 as other3_6_8_,
        submulti0_1_.po as po6_8_,
        submulti0_1_.cal as cal6_8_,
        submulti0_1_.floaty as floaty6_8_,
        submulti0_.dupe as dupe3_8_,
        submulti0_.parent as parent3_8_,
        upper(submulti0_1_.dupe) as formula91_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        lower2_.id__ as id1_7_1_,
        lower2_1_.count_ as count2_7_1_,
        lower2_1_.name as name7_1_,
        lower2_1_.address as address7_1_,
        lower2_1_.date_ as date5_7_1_,
        lower2_1_.top_ as top6_7_1_,
        lower2_.intprop as intprop2_1_,
        lower2_.other1 as other3_2_1_,
        lower2_.other3 as other4_2_1_,
        lower2_.foo as foo2_1_,
        top3_.id1_ as id1_7_2_,
        top3_.count_ as count2_7_2_,
        top3_.name as name7_2_,
        top3_.address as address7_2_,
        top3_.date_ as date5_7_2_,
        top3_.top_ as top6_7_2_,
        top3_2_.intprop as intprop2_2_,
        top3_2_.other1 as other3_2_2_,
        top3_2_.other3 as other4_2_2_,
        top3_2_.foo as foo2_2_,
        top3_3_.dupe as dupe6_2_,
        top3_3_.other2 as other3_6_2_,
        top3_3_.po as po6_2_,
        top3_3_.cal as cal6_2_,
        top3_3_.floaty as floaty6_2_,
        top3_4_.dupe as dupe3_2_,
        top3_4_.parent as parent3_2_,
        upper(top3_3_.dupe) as formula91_2_,
        case 
            when top3_4_.sid is not null then 4 
            when top3_1_.tcid is not null then 1 
            when top3_2_.id__ is not null then 2 
            when top3_3_.sid is not null then 3 
            when top3_5_.superid is not null then 5 
            when top3_.id1_ is not null then 0 
        end as clazz_2_,
        lower4_.id__ as id1_7_3_,
        lower4_1_.count_ as count2_7_3_,
        lower4_1_.name as name7_3_,
        lower4_1_.address as address7_3_,
        lower4_1_.date_ as date5_7_3_,
        lower4_1_.top_ as top6_7_3_,
        lower4_.intprop as intprop2_3_,
        lower4_.other1 as other3_2_3_,
        lower4_.other3 as other4_2_3_,
        lower4_.foo as foo2_3_,
        po5_.id_ as id1_0_4_,
        po5_.value_ as value2_0_4_,
        po5_.tl as tl0_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        leafsubsubclass submulti0_ 
    inner join
        nonleafsubclass submulti0_1_ 
            on submulti0_.sid=submulti0_1_.sid 
    inner join
        rootclass submulti0_2_ 
            on submulti0_.sid=submulti0_2_.id1_ 
    left outer join
        rootclass top1_ 
            on submulti0_2_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        leafsubclass lower2_ 
            on top1_.id1_=lower2_.id__ 
    left outer join
        rootclass lower2_1_ 
            on lower2_.id__=lower2_1_.id1_ 
    left outer join
        rootclass top3_ 
            on lower2_.other1=top3_.id1_ 
    left outer join
        TrivialClass top3_1_ 
            on top3_.id1_=top3_1_.tcid 
    left outer join
        leafsubclass top3_2_ 
            on top3_.id1_=top3_2_.id__ 
    left outer join
        nonleafsubclass top3_3_ 
            on top3_.id1_=top3_3_.sid 
    left outer join
        leafsubsubclass top3_4_ 
            on top3_.id1_=top3_4_.sid 
    left outer join
        mono top3_5_ 
            on top3_.id1_=top3_5_.superid 
    left outer join
        leafsubclass lower4_ 
            on top3_2_.other3=lower4_.id__ 
    left outer join
        rootclass lower4_1_ 
            on lower4_.id__=lower4_1_.id1_ 
    left outer join
        Po po5_ 
            on lower4_.id__=po5_.id_ 
    left outer join
        nonleafsubclass multi6_ 
            on top3_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on multi6_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on multi6_2_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        submulti0_.sid=? 
        and (
            submulti0_2_.id1_ is not null
        ) 
14:16:32,322 DEBUG SQL:104 - 
    update
        rootclass 
    set
        count_=?,
        name=?,
        address=?,
        date_=?,
        top_=? 
    where
        id1_=? 
        and count_=?
14:16:32,323 DEBUG SQL:104 - 
    update
        nonleafsubclass 
    set
        dupe=?,
        other2=?,
        po=?,
        cal=?,
        floaty=? 
    where
        sid=?
14:16:32,333 DEBUG SQL:104 - 
    update
        rootclass 
    set
        count_=?,
        name=?,
        address=?,
        date_=?,
        top_=? 
    where
        id1_=? 
        and count_=?
14:16:32,333 DEBUG SQL:104 - 
    update
        leafsubsubclass 
    set
        dupe=?,
        parent=? 
    where
        sid=?
14:16:32,334 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_8_,
        top0_.count_ as count2_7_8_,
        top0_.name as name7_8_,
        top0_.address as address7_8_,
        top0_.date_ as date5_7_8_,
        top0_.top_ as top6_7_8_,
        top0_2_.intprop as intprop2_8_,
        top0_2_.other1 as other3_2_8_,
        top0_2_.other3 as other4_2_8_,
        top0_2_.foo as foo2_8_,
        top0_3_.dupe as dupe6_8_,
        top0_3_.other2 as other3_6_8_,
        top0_3_.po as po6_8_,
        top0_3_.cal as cal6_8_,
        top0_3_.floaty as floaty6_8_,
        top0_4_.dupe as dupe3_8_,
        top0_4_.parent as parent3_8_,
        upper(top0_3_.dupe) as formula91_8_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        lower2_.id__ as id1_7_1_,
        lower2_1_.count_ as count2_7_1_,
        lower2_1_.name as name7_1_,
        lower2_1_.address as address7_1_,
        lower2_1_.date_ as date5_7_1_,
        lower2_1_.top_ as top6_7_1_,
        lower2_.intprop as intprop2_1_,
        lower2_.other1 as other3_2_1_,
        lower2_.other3 as other4_2_1_,
        lower2_.foo as foo2_1_,
        top3_.id1_ as id1_7_2_,
        top3_.count_ as count2_7_2_,
        top3_.name as name7_2_,
        top3_.address as address7_2_,
        top3_.date_ as date5_7_2_,
        top3_.top_ as top6_7_2_,
        top3_2_.intprop as intprop2_2_,
        top3_2_.other1 as other3_2_2_,
        top3_2_.other3 as other4_2_2_,
        top3_2_.foo as foo2_2_,
        top3_3_.dupe as dupe6_2_,
        top3_3_.other2 as other3_6_2_,
        top3_3_.po as po6_2_,
        top3_3_.cal as cal6_2_,
        top3_3_.floaty as floaty6_2_,
        top3_4_.dupe as dupe3_2_,
        top3_4_.parent as parent3_2_,
        upper(top3_3_.dupe) as formula91_2_,
        case 
            when top3_4_.sid is not null then 4 
            when top3_1_.tcid is not null then 1 
            when top3_2_.id__ is not null then 2 
            when top3_3_.sid is not null then 3 
            when top3_5_.superid is not null then 5 
            when top3_.id1_ is not null then 0 
        end as clazz_2_,
        lower4_.id__ as id1_7_3_,
        lower4_1_.count_ as count2_7_3_,
        lower4_1_.name as name7_3_,
        lower4_1_.address as address7_3_,
        lower4_1_.date_ as date5_7_3_,
        lower4_1_.top_ as top6_7_3_,
        lower4_.intprop as intprop2_3_,
        lower4_.other1 as other3_2_3_,
        lower4_.other3 as other4_2_3_,
        lower4_.foo as foo2_3_,
        po5_.id_ as id1_0_4_,
        po5_.value_ as value2_0_4_,
        po5_.tl as tl0_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    left outer join
        rootclass top1_ 
            on top0_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        leafsubclass lower2_ 
            on top1_.id1_=lower2_.id__ 
    left outer join
        rootclass lower2_1_ 
            on lower2_.id__=lower2_1_.id1_ 
    left outer join
        rootclass top3_ 
            on lower2_.other1=top3_.id1_ 
    left outer join
        TrivialClass top3_1_ 
            on top3_.id1_=top3_1_.tcid 
    left outer join
        leafsubclass top3_2_ 
            on top3_.id1_=top3_2_.id__ 
    left outer join
        nonleafsubclass top3_3_ 
            on top3_.id1_=top3_3_.sid 
    left outer join
        leafsubsubclass top3_4_ 
            on top3_.id1_=top3_4_.sid 
    left outer join
        mono top3_5_ 
            on top3_.id1_=top3_5_.superid 
    left outer join
        leafsubclass lower4_ 
            on top3_2_.other3=lower4_.id__ 
    left outer join
        rootclass lower4_1_ 
            on lower4_.id__=lower4_1_.id1_ 
    left outer join
        Po po5_ 
            on lower4_.id__=po5_.id_ 
    left outer join
        nonleafsubclass multi6_ 
            on top3_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on multi6_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on multi6_2_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        top0_.id1_=? 
        and (
            top0_.id1_ is not null
        ) 
14:16:32,423 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_8_,
        top0_.count_ as count2_7_8_,
        top0_.name as name7_8_,
        top0_.address as address7_8_,
        top0_.date_ as date5_7_8_,
        top0_.top_ as top6_7_8_,
        top0_2_.intprop as intprop2_8_,
        top0_2_.other1 as other3_2_8_,
        top0_2_.other3 as other4_2_8_,
        top0_2_.foo as foo2_8_,
        top0_3_.dupe as dupe6_8_,
        top0_3_.other2 as other3_6_8_,
        top0_3_.po as po6_8_,
        top0_3_.cal as cal6_8_,
        top0_3_.floaty as floaty6_8_,
        top0_4_.dupe as dupe3_8_,
        top0_4_.parent as parent3_8_,
        upper(top0_3_.dupe) as formula91_8_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        lower2_.id__ as id1_7_1_,
        lower2_1_.count_ as count2_7_1_,
        lower2_1_.name as name7_1_,
        lower2_1_.address as address7_1_,
        lower2_1_.date_ as date5_7_1_,
        lower2_1_.top_ as top6_7_1_,
        lower2_.intprop as intprop2_1_,
        lower2_.other1 as other3_2_1_,
        lower2_.other3 as other4_2_1_,
        lower2_.foo as foo2_1_,
        top3_.id1_ as id1_7_2_,
        top3_.count_ as count2_7_2_,
        top3_.name as name7_2_,
        top3_.address as address7_2_,
        top3_.date_ as date5_7_2_,
        top3_.top_ as top6_7_2_,
        top3_2_.intprop as intprop2_2_,
        top3_2_.other1 as other3_2_2_,
        top3_2_.other3 as other4_2_2_,
        top3_2_.foo as foo2_2_,
        top3_3_.dupe as dupe6_2_,
        top3_3_.other2 as other3_6_2_,
        top3_3_.po as po6_2_,
        top3_3_.cal as cal6_2_,
        top3_3_.floaty as floaty6_2_,
        top3_4_.dupe as dupe3_2_,
        top3_4_.parent as parent3_2_,
        upper(top3_3_.dupe) as formula91_2_,
        case 
            when top3_4_.sid is not null then 4 
            when top3_1_.tcid is not null then 1 
            when top3_2_.id__ is not null then 2 
            when top3_3_.sid is not null then 3 
            when top3_5_.superid is not null then 5 
            when top3_.id1_ is not null then 0 
        end as clazz_2_,
        lower4_.id__ as id1_7_3_,
        lower4_1_.count_ as count2_7_3_,
        lower4_1_.name as name7_3_,
        lower4_1_.address as address7_3_,
        lower4_1_.date_ as date5_7_3_,
        lower4_1_.top_ as top6_7_3_,
        lower4_.intprop as intprop2_3_,
        lower4_.other1 as other3_2_3_,
        lower4_.other3 as other4_2_3_,
        lower4_.foo as foo2_3_,
        po5_.id_ as id1_0_4_,
        po5_.value_ as value2_0_4_,
        po5_.tl as tl0_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    left outer join
        rootclass top1_ 
            on top0_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        leafsubclass lower2_ 
            on top1_.id1_=lower2_.id__ 
    left outer join
        rootclass lower2_1_ 
            on lower2_.id__=lower2_1_.id1_ 
    left outer join
        rootclass top3_ 
            on lower2_.other1=top3_.id1_ 
    left outer join
        TrivialClass top3_1_ 
            on top3_.id1_=top3_1_.tcid 
    left outer join
        leafsubclass top3_2_ 
            on top3_.id1_=top3_2_.id__ 
    left outer join
        nonleafsubclass top3_3_ 
            on top3_.id1_=top3_3_.sid 
    left outer join
        leafsubsubclass top3_4_ 
            on top3_.id1_=top3_4_.sid 
    left outer join
        mono top3_5_ 
            on top3_.id1_=top3_5_.superid 
    left outer join
        leafsubclass lower4_ 
            on top3_2_.other3=lower4_.id__ 
    left outer join
        rootclass lower4_1_ 
            on lower4_.id__=lower4_1_.id1_ 
    left outer join
        Po po5_ 
            on lower4_.id__=po5_.id_ 
    left outer join
        nonleafsubclass multi6_ 
            on top3_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on multi6_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on multi6_2_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        top0_.id1_=? 
        and (
            top0_.id1_ is not null
        ) 
14:16:32,503 DEBUG SQL:104 - 
    select
        top0_.id1_ as col_0_0_ 
    from
        rootclass top0_ 
    where
        (
            top0_.id1_ is not null
        ) 
        and (
            (
                top0_.count_>0 
            )
        )
14:16:32,517 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_8_,
        top0_.count_ as count2_7_8_,
        top0_.name as name7_8_,
        top0_.address as address7_8_,
        top0_.date_ as date5_7_8_,
        top0_.top_ as top6_7_8_,
        top0_2_.intprop as intprop2_8_,
        top0_2_.other1 as other3_2_8_,
        top0_2_.other3 as other4_2_8_,
        top0_2_.foo as foo2_8_,
        top0_3_.dupe as dupe6_8_,
        top0_3_.other2 as other3_6_8_,
        top0_3_.po as po6_8_,
        top0_3_.cal as cal6_8_,
        top0_3_.floaty as floaty6_8_,
        top0_4_.dupe as dupe3_8_,
        top0_4_.parent as parent3_8_,
        upper(top0_3_.dupe) as formula91_8_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        lower2_.id__ as id1_7_1_,
        lower2_1_.count_ as count2_7_1_,
        lower2_1_.name as name7_1_,
        lower2_1_.address as address7_1_,
        lower2_1_.date_ as date5_7_1_,
        lower2_1_.top_ as top6_7_1_,
        lower2_.intprop as intprop2_1_,
        lower2_.other1 as other3_2_1_,
        lower2_.other3 as other4_2_1_,
        lower2_.foo as foo2_1_,
        top3_.id1_ as id1_7_2_,
        top3_.count_ as count2_7_2_,
        top3_.name as name7_2_,
        top3_.address as address7_2_,
        top3_.date_ as date5_7_2_,
        top3_.top_ as top6_7_2_,
        top3_2_.intprop as intprop2_2_,
        top3_2_.other1 as other3_2_2_,
        top3_2_.other3 as other4_2_2_,
        top3_2_.foo as foo2_2_,
        top3_3_.dupe as dupe6_2_,
        top3_3_.other2 as other3_6_2_,
        top3_3_.po as po6_2_,
        top3_3_.cal as cal6_2_,
        top3_3_.floaty as floaty6_2_,
        top3_4_.dupe as dupe3_2_,
        top3_4_.parent as parent3_2_,
        upper(top3_3_.dupe) as formula91_2_,
        case 
            when top3_4_.sid is not null then 4 
            when top3_1_.tcid is not null then 1 
            when top3_2_.id__ is not null then 2 
            when top3_3_.sid is not null then 3 
            when top3_5_.superid is not null then 5 
            when top3_.id1_ is not null then 0 
        end as clazz_2_,
        lower4_.id__ as id1_7_3_,
        lower4_1_.count_ as count2_7_3_,
        lower4_1_.name as name7_3_,
        lower4_1_.address as address7_3_,
        lower4_1_.date_ as date5_7_3_,
        lower4_1_.top_ as top6_7_3_,
        lower4_.intprop as intprop2_3_,
        lower4_.other1 as other3_2_3_,
        lower4_.other3 as other4_2_3_,
        lower4_.foo as foo2_3_,
        po5_.id_ as id1_0_4_,
        po5_.value_ as value2_0_4_,
        po5_.tl as tl0_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    left outer join
        rootclass top1_ 
            on top0_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        leafsubclass lower2_ 
            on top1_.id1_=lower2_.id__ 
    left outer join
        rootclass lower2_1_ 
            on lower2_.id__=lower2_1_.id1_ 
    left outer join
        rootclass top3_ 
            on lower2_.other1=top3_.id1_ 
    left outer join
        TrivialClass top3_1_ 
            on top3_.id1_=top3_1_.tcid 
    left outer join
        leafsubclass top3_2_ 
            on top3_.id1_=top3_2_.id__ 
    left outer join
        nonleafsubclass top3_3_ 
            on top3_.id1_=top3_3_.sid 
    left outer join
        leafsubsubclass top3_4_ 
            on top3_.id1_=top3_4_.sid 
    left outer join
        mono top3_5_ 
            on top3_.id1_=top3_5_.superid 
    left outer join
        leafsubclass lower4_ 
            on top3_2_.other3=lower4_.id__ 
    left outer join
        rootclass lower4_1_ 
            on lower4_.id__=lower4_1_.id1_ 
    left outer join
        Po po5_ 
            on lower4_.id__=po5_.id_ 
    left outer join
        nonleafsubclass multi6_ 
            on top3_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on multi6_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on multi6_2_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        top0_.id1_=? 
        and (
            top0_.id1_ is not null
        ) 
14:16:32,575 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_8_,
        top0_.count_ as count2_7_8_,
        top0_.name as name7_8_,
        top0_.address as address7_8_,
        top0_.date_ as date5_7_8_,
        top0_.top_ as top6_7_8_,
        top0_2_.intprop as intprop2_8_,
        top0_2_.other1 as other3_2_8_,
        top0_2_.other3 as other4_2_8_,
        top0_2_.foo as foo2_8_,
        top0_3_.dupe as dupe6_8_,
        top0_3_.other2 as other3_6_8_,
        top0_3_.po as po6_8_,
        top0_3_.cal as cal6_8_,
        top0_3_.floaty as floaty6_8_,
        top0_4_.dupe as dupe3_8_,
        top0_4_.parent as parent3_8_,
        upper(top0_3_.dupe) as formula91_8_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        lower2_.id__ as id1_7_1_,
        lower2_1_.count_ as count2_7_1_,
        lower2_1_.name as name7_1_,
        lower2_1_.address as address7_1_,
        lower2_1_.date_ as date5_7_1_,
        lower2_1_.top_ as top6_7_1_,
        lower2_.intprop as intprop2_1_,
        lower2_.other1 as other3_2_1_,
        lower2_.other3 as other4_2_1_,
        lower2_.foo as foo2_1_,
        top3_.id1_ as id1_7_2_,
        top3_.count_ as count2_7_2_,
        top3_.name as name7_2_,
        top3_.address as address7_2_,
        top3_.date_ as date5_7_2_,
        top3_.top_ as top6_7_2_,
        top3_2_.intprop as intprop2_2_,
        top3_2_.other1 as other3_2_2_,
        top3_2_.other3 as other4_2_2_,
        top3_2_.foo as foo2_2_,
        top3_3_.dupe as dupe6_2_,
        top3_3_.other2 as other3_6_2_,
        top3_3_.po as po6_2_,
        top3_3_.cal as cal6_2_,
        top3_3_.floaty as floaty6_2_,
        top3_4_.dupe as dupe3_2_,
        top3_4_.parent as parent3_2_,
        upper(top3_3_.dupe) as formula91_2_,
        case 
            when top3_4_.sid is not null then 4 
            when top3_1_.tcid is not null then 1 
            when top3_2_.id__ is not null then 2 
            when top3_3_.sid is not null then 3 
            when top3_5_.superid is not null then 5 
            when top3_.id1_ is not null then 0 
        end as clazz_2_,
        lower4_.id__ as id1_7_3_,
        lower4_1_.count_ as count2_7_3_,
        lower4_1_.name as name7_3_,
        lower4_1_.address as address7_3_,
        lower4_1_.date_ as date5_7_3_,
        lower4_1_.top_ as top6_7_3_,
        lower4_.intprop as intprop2_3_,
        lower4_.other1 as other3_2_3_,
        lower4_.other3 as other4_2_3_,
        lower4_.foo as foo2_3_,
        po5_.id_ as id1_0_4_,
        po5_.value_ as value2_0_4_,
        po5_.tl as tl0_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    left outer join
        rootclass top1_ 
            on top0_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        leafsubclass lower2_ 
            on top1_.id1_=lower2_.id__ 
    left outer join
        rootclass lower2_1_ 
            on lower2_.id__=lower2_1_.id1_ 
    left outer join
        rootclass top3_ 
            on lower2_.other1=top3_.id1_ 
    left outer join
        TrivialClass top3_1_ 
            on top3_.id1_=top3_1_.tcid 
    left outer join
        leafsubclass top3_2_ 
            on top3_.id1_=top3_2_.id__ 
    left outer join
        nonleafsubclass top3_3_ 
            on top3_.id1_=top3_3_.sid 
    left outer join
        leafsubsubclass top3_4_ 
            on top3_.id1_=top3_4_.sid 
    left outer join
        mono top3_5_ 
            on top3_.id1_=top3_5_.superid 
    left outer join
        leafsubclass lower4_ 
            on top3_2_.other3=lower4_.id__ 
    left outer join
        rootclass lower4_1_ 
            on lower4_.id__=lower4_1_.id1_ 
    left outer join
        Po po5_ 
            on lower4_.id__=po5_.id_ 
    left outer join
        nonleafsubclass multi6_ 
            on top3_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on multi6_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on multi6_2_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        top0_.id1_=? 
        and (
            top0_.id1_ is not null
        ) 
14:16:32,686 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_8_,
        top0_.count_ as count2_7_8_,
        top0_.name as name7_8_,
        top0_.address as address7_8_,
        top0_.date_ as date5_7_8_,
        top0_.top_ as top6_7_8_,
        top0_2_.intprop as intprop2_8_,
        top0_2_.other1 as other3_2_8_,
        top0_2_.other3 as other4_2_8_,
        top0_2_.foo as foo2_8_,
        top0_3_.dupe as dupe6_8_,
        top0_3_.other2 as other3_6_8_,
        top0_3_.po as po6_8_,
        top0_3_.cal as cal6_8_,
        top0_3_.floaty as floaty6_8_,
        top0_4_.dupe as dupe3_8_,
        top0_4_.parent as parent3_8_,
        upper(top0_3_.dupe) as formula91_8_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        lower2_.id__ as id1_7_1_,
        lower2_1_.count_ as count2_7_1_,
        lower2_1_.name as name7_1_,
        lower2_1_.address as address7_1_,
        lower2_1_.date_ as date5_7_1_,
        lower2_1_.top_ as top6_7_1_,
        lower2_.intprop as intprop2_1_,
        lower2_.other1 as other3_2_1_,
        lower2_.other3 as other4_2_1_,
        lower2_.foo as foo2_1_,
        top3_.id1_ as id1_7_2_,
        top3_.count_ as count2_7_2_,
        top3_.name as name7_2_,
        top3_.address as address7_2_,
        top3_.date_ as date5_7_2_,
        top3_.top_ as top6_7_2_,
        top3_2_.intprop as intprop2_2_,
        top3_2_.other1 as other3_2_2_,
        top3_2_.other3 as other4_2_2_,
        top3_2_.foo as foo2_2_,
        top3_3_.dupe as dupe6_2_,
        top3_3_.other2 as other3_6_2_,
        top3_3_.po as po6_2_,
        top3_3_.cal as cal6_2_,
        top3_3_.floaty as floaty6_2_,
        top3_4_.dupe as dupe3_2_,
        top3_4_.parent as parent3_2_,
        upper(top3_3_.dupe) as formula91_2_,
        case 
            when top3_4_.sid is not null then 4 
            when top3_1_.tcid is not null then 1 
            when top3_2_.id__ is not null then 2 
            when top3_3_.sid is not null then 3 
            when top3_5_.superid is not null then 5 
            when top3_.id1_ is not null then 0 
        end as clazz_2_,
        lower4_.id__ as id1_7_3_,
        lower4_1_.count_ as count2_7_3_,
        lower4_1_.name as name7_3_,
        lower4_1_.address as address7_3_,
        lower4_1_.date_ as date5_7_3_,
        lower4_1_.top_ as top6_7_3_,
        lower4_.intprop as intprop2_3_,
        lower4_.other1 as other3_2_3_,
        lower4_.other3 as other4_2_3_,
        lower4_.foo as foo2_3_,
        po5_.id_ as id1_0_4_,
        po5_.value_ as value2_0_4_,
        po5_.tl as tl0_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    left outer join
        rootclass top1_ 
            on top0_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        leafsubclass lower2_ 
            on top1_.id1_=lower2_.id__ 
    left outer join
        rootclass lower2_1_ 
            on lower2_.id__=lower2_1_.id1_ 
    left outer join
        rootclass top3_ 
            on lower2_.other1=top3_.id1_ 
    left outer join
        TrivialClass top3_1_ 
            on top3_.id1_=top3_1_.tcid 
    left outer join
        leafsubclass top3_2_ 
            on top3_.id1_=top3_2_.id__ 
    left outer join
        nonleafsubclass top3_3_ 
            on top3_.id1_=top3_3_.sid 
    left outer join
        leafsubsubclass top3_4_ 
            on top3_.id1_=top3_4_.sid 
    left outer join
        mono top3_5_ 
            on top3_.id1_=top3_5_.superid 
    left outer join
        leafsubclass lower4_ 
            on top3_2_.other3=lower4_.id__ 
    left outer join
        rootclass lower4_1_ 
            on lower4_.id__=lower4_1_.id1_ 
    left outer join
        Po po5_ 
            on lower4_.id__=po5_.id_ 
    left outer join
        nonleafsubclass multi6_ 
            on top3_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on multi6_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on multi6_2_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        top0_.id1_=? 
        and (
            top0_.id1_ is not null
        ) 
14:16:32,750 DEBUG SQL:104 - 
    select
        multi0_.sid as id1_7_,
        multi0_1_.count_ as count2_7_,
        multi0_1_.name as name7_,
        multi0_1_.address as address7_,
        multi0_1_.date_ as date5_7_,
        multi0_1_.top_ as top6_7_,
        multi0_.dupe as dupe6_,
        multi0_.other2 as other3_6_,
        multi0_.po as po6_,
        multi0_.cal as cal6_,
        multi0_.floaty as floaty6_,
        multi0_2_.dupe as dupe3_,
        multi0_2_.parent as parent3_,
        upper(multi0_.dupe) as formula91_,
        case 
            when multi0_2_.sid is not null then 4 
            when multi0_.sid is not null then 3 
        end as clazz_ 
    from
        nonleafsubclass multi0_ 
    inner join
        rootclass multi0_1_ 
            on multi0_.sid=multi0_1_.id1_ 
    left outer join
        leafsubsubclass multi0_2_ 
            on multi0_.sid=multi0_2_.sid 
    where
        (
            multi0_1_.id1_ is not null
        ) 
        and (
            (
                multi0_1_.count_>0 
            )
            and(
                multi0_.dupe is not null 
            )
        )
14:16:32,761 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_,
        top0_.count_ as count2_7_,
        top0_.name as name7_,
        top0_.address as address7_,
        top0_.date_ as date5_7_,
        top0_.top_ as top6_7_,
        top0_2_.intprop as intprop2_,
        top0_2_.other1 as other3_2_,
        top0_2_.other3 as other4_2_,
        top0_2_.foo as foo2_,
        top0_3_.dupe as dupe6_,
        top0_3_.other2 as other3_6_,
        top0_3_.po as po6_,
        top0_3_.cal as cal6_,
        top0_3_.floaty as floaty6_,
        top0_4_.dupe as dupe3_,
        top0_4_.parent as parent3_,
        upper(top0_3_.dupe) as formula91_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    where
        (
            top0_.id1_ is not null
        ) 
        and (
            (
                top0_.count_>0 
            )
            and(
                top0_.name is not null 
            )
        )
14:16:32,782 DEBUG SQL:104 - 
    select
        lower0_.id__ as id1_7_,
        lower0_1_.count_ as count2_7_,
        lower0_1_.name as name7_,
        lower0_1_.address as address7_,
        lower0_1_.date_ as date5_7_,
        lower0_1_.top_ as top6_7_,
        lower0_.intprop as intprop2_,
        lower0_.other1 as other3_2_,
        lower0_.other3 as other4_2_,
        lower0_.foo as foo2_ 
    from
        leafsubclass lower0_ 
    inner join
        rootclass lower0_1_ 
            on lower0_.id__=lower0_1_.id1_ 
    where
        (
            lower0_1_.id1_ is not null
        ) 
        and (
            (
                lower0_.id__ is not null 
            )
        )
14:16:32,793 DEBUG SQL:104 - 
    select
        multi0_.sid as id1_7_,
        multi0_1_.count_ as count2_7_,
        multi0_1_.name as name7_,
        multi0_1_.address as address7_,
        multi0_1_.date_ as date5_7_,
        multi0_1_.top_ as top6_7_,
        multi0_.dupe as dupe6_,
        multi0_.other2 as other3_6_,
        multi0_.po as po6_,
        multi0_.cal as cal6_,
        multi0_.floaty as floaty6_,
        multi0_2_.dupe as dupe3_,
        multi0_2_.parent as parent3_,
        upper(multi0_.dupe) as formula91_,
        case 
            when multi0_2_.sid is not null then 4 
            when multi0_.sid is not null then 3 
        end as clazz_ 
    from
        nonleafsubclass multi0_ 
    inner join
        rootclass multi0_1_ 
            on multi0_.sid=multi0_1_.id1_ 
    left outer join
        leafsubsubclass multi0_2_ 
            on multi0_.sid=multi0_2_.sid 
    where
        (
            multi0_1_.id1_ is not null
        ) 
        and (
            (
                multi0_.other2=1 
            )
        )
14:16:32,804 DEBUG SQL:104 - 
    select
        submulti0_.sid as id1_7_,
        submulti0_2_.count_ as count2_7_,
        submulti0_2_.name as name7_,
        submulti0_2_.address as address7_,
        submulti0_2_.date_ as date5_7_,
        submulti0_2_.top_ as top6_7_,
        submulti0_1_.dupe as dupe6_,
        submulti0_1_.other2 as other3_6_,
        submulti0_1_.po as po6_,
        submulti0_1_.cal as cal6_,
        submulti0_1_.floaty as floaty6_,
        submulti0_.dupe as dupe3_,
        submulti0_.parent as parent3_,
        upper(submulti0_1_.dupe) as formula91_ 
    from
        leafsubsubclass submulti0_ 
    inner join
        nonleafsubclass submulti0_1_ 
            on submulti0_.sid=submulti0_1_.sid 
    inner join
        rootclass submulti0_2_ 
            on submulti0_.sid=submulti0_2_.id1_ 
    where
        (
            submulti0_2_.id1_ is not null
        ) 
        and (
            (
                submulti0_.dupe>0.0 
            )
        )
14:16:32,813 DEBUG SQL:104 - 
    select
        multi0_.sid as id1_7_,
        multi0_1_.count_ as count2_7_,
        multi0_1_.name as name7_,
        multi0_1_.address as address7_,
        multi0_1_.date_ as date5_7_,
        multi0_1_.top_ as top6_7_,
        multi0_.dupe as dupe6_,
        multi0_.other2 as other3_6_,
        multi0_.po as po6_,
        multi0_.cal as cal6_,
        multi0_.floaty as floaty6_,
        multi0_2_.dupe as dupe3_,
        multi0_2_.parent as parent3_,
        upper(multi0_.dupe) as formula91_,
        case 
            when multi0_2_.sid is not null then 4 
            when multi0_.sid is not null then 3 
        end as clazz_ 
    from
        nonleafsubclass multi0_ 
    inner join
        rootclass multi0_1_ 
            on multi0_.sid=multi0_1_.id1_ 
    left outer join
        leafsubsubclass multi0_2_ 
            on multi0_.sid=multi0_2_.sid 
    where
        (
            multi0_1_.id1_ is not null
        )
14:16:32,826 DEBUG SQL:104 - 
    select
        multi0_.sid as id1_7_,
        multi0_1_.count_ as count2_7_,
        multi0_1_.name as name7_,
        multi0_1_.address as address7_,
        multi0_1_.date_ as date5_7_,
        multi0_1_.top_ as top6_7_,
        multi0_.dupe as dupe6_,
        multi0_.other2 as other3_6_,
        multi0_.po as po6_,
        multi0_.cal as cal6_,
        multi0_.floaty as floaty6_,
        multi0_2_.dupe as dupe3_,
        multi0_2_.parent as parent3_,
        upper(multi0_.dupe) as formula91_,
        case 
            when multi0_2_.sid is not null then 4 
            when multi0_.sid is not null then 3 
        end as clazz_ 
    from
        nonleafsubclass multi0_ 
    inner join
        rootclass multi0_1_ 
            on multi0_.sid=multi0_1_.id1_ 
    left outer join
        leafsubsubclass multi0_2_ 
            on multi0_.sid=multi0_2_.sid 
    where
        (
            multi0_1_.id1_ is not null
        ) 
        and (
            (
                case 
                    when multi0_2_.sid is not null then 4 
                    when multi0_.sid is not null then 3 
                end=4 
            )
        )
14:16:32,838 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_,
        top0_.count_ as count2_7_,
        top0_.name as name7_,
        top0_.address as address7_,
        top0_.date_ as date5_7_,
        top0_.top_ as top6_7_,
        top0_2_.intprop as intprop2_,
        top0_2_.other1 as other3_2_,
        top0_2_.other3 as other4_2_,
        top0_2_.foo as foo2_,
        top0_3_.dupe as dupe6_,
        top0_3_.other2 as other3_6_,
        top0_3_.po as po6_,
        top0_3_.cal as cal6_,
        top0_3_.floaty as floaty6_,
        top0_4_.dupe as dupe3_,
        top0_4_.parent as parent3_,
        upper(top0_3_.dupe) as formula91_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    where
        (
            top0_.id1_ is not null
        ) 
        and (
            (
                case 
                    when top0_4_.sid is not null then 4 
                    when top0_1_.tcid is not null then 1 
                    when top0_2_.id__ is not null then 2 
                    when top0_3_.sid is not null then 3 
                    when top0_5_.superid is not null then 5 
                    when top0_.id1_ is not null then 0 
                end=3 
            )
        )
14:16:32,849 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_,
        top0_.count_ as count2_7_,
        top0_.name as name7_,
        top0_.address as address7_,
        top0_.date_ as date5_7_,
        top0_.top_ as top6_7_,
        top0_2_.intprop as intprop2_,
        top0_2_.other1 as other3_2_,
        top0_2_.other3 as other4_2_,
        top0_2_.foo as foo2_,
        top0_3_.dupe as dupe6_,
        top0_3_.other2 as other3_6_,
        top0_3_.po as po6_,
        top0_3_.cal as cal6_,
        top0_3_.floaty as floaty6_,
        top0_4_.dupe as dupe3_,
        top0_4_.parent as parent3_,
        upper(top0_3_.dupe) as formula91_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    where
        (
            top0_.id1_ is not null
        )
14:16:32,883 DEBUG SQL:104 - 
    select
        lower0_.id__ as id1_7_,
        lower0_1_.count_ as count2_7_,
        lower0_1_.name as name7_,
        lower0_1_.address as address7_,
        lower0_1_.date_ as date5_7_,
        lower0_1_.top_ as top6_7_,
        lower0_.intprop as intprop2_,
        lower0_.other1 as other3_2_,
        lower0_.other3 as other4_2_,
        lower0_.foo as foo2_ 
    from
        leafsubclass lower0_ 
    inner join
        rootclass lower0_1_ 
            on lower0_.id__=lower0_1_.id1_ 
    where
        (
            lower0_1_.id1_ is not null
        )
14:16:32,893 DEBUG SQL:104 - 
    select
        submulti0_.sid as id1_7_,
        submulti0_2_.count_ as count2_7_,
        submulti0_2_.name as name7_,
        submulti0_2_.address as address7_,
        submulti0_2_.date_ as date5_7_,
        submulti0_2_.top_ as top6_7_,
        submulti0_1_.dupe as dupe6_,
        submulti0_1_.other2 as other3_6_,
        submulti0_1_.po as po6_,
        submulti0_1_.cal as cal6_,
        submulti0_1_.floaty as floaty6_,
        submulti0_.dupe as dupe3_,
        submulti0_.parent as parent3_,
        upper(submulti0_1_.dupe) as formula91_ 
    from
        leafsubsubclass submulti0_ 
    inner join
        nonleafsubclass submulti0_1_ 
            on submulti0_.sid=submulti0_1_.sid 
    inner join
        rootclass submulti0_2_ 
            on submulti0_.sid=submulti0_2_.id1_ 
    where
        (
            submulti0_2_.id1_ is not null
        )
14:16:32,895 DEBUG SQL:104 - 
    select
        lower0_.id__ as id1_7_0_,
        top2_.id1_ as id1_7_1_,
        lower0_1_.count_ as count2_7_0_,
        lower0_1_.name as name7_0_,
        lower0_1_.address as address7_0_,
        lower0_1_.date_ as date5_7_0_,
        lower0_1_.top_ as top6_7_0_,
        lower0_.intprop as intprop2_0_,
        lower0_.other1 as other3_2_0_,
        lower0_.other3 as other4_2_0_,
        lower0_.foo as foo2_0_,
        top2_.count_ as count2_7_1_,
        top2_.name as name7_1_,
        top2_.address as address7_1_,
        top2_.date_ as date5_7_1_,
        top2_.top_ as top6_7_1_,
        top2_2_.intprop as intprop2_1_,
        top2_2_.other1 as other3_2_1_,
        top2_2_.other3 as other4_2_1_,
        top2_2_.foo as foo2_1_,
        top2_3_.dupe as dupe6_1_,
        top2_3_.other2 as other3_6_1_,
        top2_3_.po as po6_1_,
        top2_3_.cal as cal6_1_,
        top2_3_.floaty as floaty6_1_,
        top2_4_.dupe as dupe3_1_,
        top2_4_.parent as parent3_1_,
        upper(top2_3_.dupe) as formula91_1_,
        case 
            when top2_4_.sid is not null then 4 
            when top2_1_.tcid is not null then 1 
            when top2_2_.id__ is not null then 2 
            when top2_3_.sid is not null then 3 
            when top2_5_.superid is not null then 5 
            when top2_.id1_ is not null then 0 
        end as clazz_1_ 
    from
        leafsubclass lower0_ 
    inner join
        rootclass lower0_1_ 
            on lower0_.id__=lower0_1_.id1_ 
    inner join
        simple_simple bag1_ 
            on lower0_.id__=bag1_.simple1 
    inner join
        rootclass top2_ 
            on bag1_.simple2=top2_.id1_ 
    left outer join
        TrivialClass top2_1_ 
            on top2_.id1_=top2_1_.tcid 
    left outer join
        leafsubclass top2_2_ 
            on top2_.id1_=top2_2_.id__ 
    left outer join
        nonleafsubclass top2_3_ 
            on top2_.id1_=top2_3_.sid 
    left outer join
        leafsubsubclass top2_4_ 
            on top2_.id1_=top2_4_.sid 
    left outer join
        mono top2_5_ 
            on top2_.id1_=top2_5_.superid 
    where
        (
            lower0_1_.id1_ is not null
        ) 
        and (
            (
                top2_.id1_ is not null 
            )
        )
14:16:32,929 DEBUG SQL:104 - 
    select
        lower0_.id__ as id1_7_0_,
        set1_.id1_ as id1_7_1_,
        lower0_1_.count_ as count2_7_0_,
        lower0_1_.name as name7_0_,
        lower0_1_.address as address7_0_,
        lower0_1_.date_ as date5_7_0_,
        lower0_1_.top_ as top6_7_0_,
        lower0_.intprop as intprop2_0_,
        lower0_.other1 as other3_2_0_,
        lower0_.other3 as other4_2_0_,
        lower0_.foo as foo2_0_,
        set1_.count_ as count2_7_1_,
        set1_.name as name7_1_,
        set1_.address as address7_1_,
        set1_.date_ as date5_7_1_,
        set1_.top_ as top6_7_1_,
        set1_2_.intprop as intprop2_1_,
        set1_2_.other1 as other3_2_1_,
        set1_2_.other3 as other4_2_1_,
        set1_2_.foo as foo2_1_,
        set1_3_.dupe as dupe6_1_,
        set1_3_.other2 as other3_6_1_,
        set1_3_.po as po6_1_,
        set1_3_.cal as cal6_1_,
        set1_3_.floaty as floaty6_1_,
        set1_4_.dupe as dupe3_1_,
        set1_4_.parent as parent3_1_,
        upper(set1_3_.dupe) as formula91_1_,
        case 
            when set1_4_.sid is not null then 4 
            when set1_1_.tcid is not null then 1 
            when set1_2_.id__ is not null then 2 
            when set1_3_.sid is not null then 3 
            when set1_5_.superid is not null then 5 
            when set1_.id1_ is not null then 0 
        end as clazz_1_ 
    from
        leafsubclass lower0_ 
    inner join
        rootclass lower0_1_ 
            on lower0_.id__=lower0_1_.id1_ 
    inner join
        rootclass set1_ 
            on lower0_.id__=set1_.parent 
    left outer join
        TrivialClass set1_1_ 
            on set1_.id1_=set1_1_.tcid 
    left outer join
        leafsubclass set1_2_ 
            on set1_.id1_=set1_2_.id__ 
    left outer join
        nonleafsubclass set1_3_ 
            on set1_.id1_=set1_3_.sid 
    left outer join
        leafsubsubclass set1_4_ 
            on set1_.id1_=set1_4_.sid 
    left outer join
        mono set1_5_ 
            on set1_.id1_=set1_5_.superid 
    where
        (
            lower0_1_.id1_ is not null
        ) 
        and (
            (
                set1_.id1_ is not null 
            )
        )
14:16:32,950 DEBUG SQL:104 - 
    select
        submulti0_.sid as id1_7_,
        submulti0_2_.count_ as count2_7_,
        submulti0_2_.name as name7_,
        submulti0_2_.address as address7_,
        submulti0_2_.date_ as date5_7_,
        submulti0_2_.top_ as top6_7_,
        submulti0_1_.dupe as dupe6_,
        submulti0_1_.other2 as other3_6_,
        submulti0_1_.po as po6_,
        submulti0_1_.cal as cal6_,
        submulti0_1_.floaty as floaty6_,
        submulti0_.dupe as dupe3_,
        submulti0_.parent as parent3_,
        upper(submulti0_1_.dupe) as formula91_ 
    from
        leafsubsubclass submulti0_ 
    inner join
        nonleafsubclass submulti0_1_ 
            on submulti0_.sid=submulti0_1_.sid 
    inner join
        rootclass submulti0_2_ 
            on submulti0_.sid=submulti0_2_.id1_ 
    where
        (
            submulti0_2_.id1_ is not null
        ) 
        and (
            (
                exists(
                    select
                        children1_.sid 
                    from
                        leafsubsubclass children1_ 
                    inner join
                        nonleafsubclass children1_1_ 
                            on children1_.sid=children1_1_.sid 
                    inner join
                        rootclass children1_2_ 
                            on children1_.sid=children1_2_.id1_ 
                    where
                        submulti0_.sid=children1_.parent
                )
            )
        )
14:16:32,963 DEBUG SQL:104 - 
    select
        this_.id1_ as id1_7_8_,
        this_.count_ as count2_7_8_,
        this_.name as name7_8_,
        this_.address as address7_8_,
        this_.date_ as date5_7_8_,
        this_.top_ as top6_7_8_,
        this_2_.intprop as intprop2_8_,
        this_2_.other1 as other3_2_8_,
        this_2_.other3 as other4_2_8_,
        this_2_.foo as foo2_8_,
        this_3_.dupe as dupe6_8_,
        this_3_.other2 as other3_6_8_,
        this_3_.po as po6_8_,
        this_3_.cal as cal6_8_,
        this_3_.floaty as floaty6_8_,
        this_4_.dupe as dupe3_8_,
        this_4_.parent as parent3_8_,
        upper(this_3_.dupe) as formula91_8_,
        case 
            when this_4_.sid is not null then 4 
            when this_1_.tcid is not null then 1 
            when this_2_.id__ is not null then 2 
            when this_3_.sid is not null then 3 
            when this_5_.superid is not null then 5 
            when this_.id1_ is not null then 0 
        end as clazz_8_,
        top2_.id1_ as id1_7_0_,
        top2_.count_ as count2_7_0_,
        top2_.name as name7_0_,
        top2_.address as address7_0_,
        top2_.date_ as date5_7_0_,
        top2_.top_ as top6_7_0_,
        top2_2_.intprop as intprop2_0_,
        top2_2_.other1 as other3_2_0_,
        top2_2_.other3 as other4_2_0_,
        top2_2_.foo as foo2_0_,
        top2_3_.dupe as dupe6_0_,
        top2_3_.other2 as other3_6_0_,
        top2_3_.po as po6_0_,
        top2_3_.cal as cal6_0_,
        top2_3_.floaty as floaty6_0_,
        top2_4_.dupe as dupe3_0_,
        top2_4_.parent as parent3_0_,
        upper(top2_3_.dupe) as formula91_0_,
        case 
            when top2_4_.sid is not null then 4 
            when top2_1_.tcid is not null then 1 
            when top2_2_.id__ is not null then 2 
            when top2_3_.sid is not null then 3 
            when top2_5_.superid is not null then 5 
            when top2_.id1_ is not null then 0 
        end as clazz_0_,
        lower3_.id__ as id1_7_1_,
        lower3_1_.count_ as count2_7_1_,
        lower3_1_.name as name7_1_,
        lower3_1_.address as address7_1_,
        lower3_1_.date_ as date5_7_1_,
        lower3_1_.top_ as top6_7_1_,
        lower3_.intprop as intprop2_1_,
        lower3_.other1 as other3_2_1_,
        lower3_.other3 as other4_2_1_,
        lower3_.foo as foo2_1_,
        top4_.id1_ as id1_7_2_,
        top4_.count_ as count2_7_2_,
        top4_.name as name7_2_,
        top4_.address as address7_2_,
        top4_.date_ as date5_7_2_,
        top4_.top_ as top6_7_2_,
        top4_2_.intprop as intprop2_2_,
        top4_2_.other1 as other3_2_2_,
        top4_2_.other3 as other4_2_2_,
        top4_2_.foo as foo2_2_,
        top4_3_.dupe as dupe6_2_,
        top4_3_.other2 as other3_6_2_,
        top4_3_.po as po6_2_,
        top4_3_.cal as cal6_2_,
        top4_3_.floaty as floaty6_2_,
        top4_4_.dupe as dupe3_2_,
        top4_4_.parent as parent3_2_,
        upper(top4_3_.dupe) as formula91_2_,
        case 
            when top4_4_.sid is not null then 4 
            when top4_1_.tcid is not null then 1 
            when top4_2_.id__ is not null then 2 
            when top4_3_.sid is not null then 3 
            when top4_5_.superid is not null then 5 
            when top4_.id1_ is not null then 0 
        end as clazz_2_,
        lower5_.id__ as id1_7_3_,
        lower5_1_.count_ as count2_7_3_,
        lower5_1_.name as name7_3_,
        lower5_1_.address as address7_3_,
        lower5_1_.date_ as date5_7_3_,
        lower5_1_.top_ as top6_7_3_,
        lower5_.intprop as intprop2_3_,
        lower5_.other1 as other3_2_3_,
        lower5_.other3 as other4_2_3_,
        lower5_.foo as foo2_3_,
        po6_.id_ as id1_0_4_,
        po6_.value_ as value2_0_4_,
        po6_.tl as tl0_4_,
        multi7_.sid as id1_7_5_,
        multi7_1_.count_ as count2_7_5_,
        multi7_1_.name as name7_5_,
        multi7_1_.address as address7_5_,
        multi7_1_.date_ as date5_7_5_,
        multi7_1_.top_ as top6_7_5_,
        multi7_.dupe as dupe6_5_,
        multi7_.other2 as other3_6_5_,
        multi7_.po as po6_5_,
        multi7_.cal as cal6_5_,
        multi7_.floaty as floaty6_5_,
        multi7_2_.dupe as dupe3_5_,
        multi7_2_.parent as parent3_5_,
        upper(multi7_.dupe) as formula91_5_,
        case 
            when multi7_2_.sid is not null then 4 
            when multi7_.sid is not null then 3 
        end as clazz_5_,
        po8_.id_ as id1_0_6_,
        po8_.value_ as value2_0_6_,
        po8_.tl as tl0_6_,
        submulti9_.sid as id1_7_7_,
        submulti9_2_.count_ as count2_7_7_,
        submulti9_2_.name as name7_7_,
        submulti9_2_.address as address7_7_,
        submulti9_2_.date_ as date5_7_7_,
        submulti9_2_.top_ as top6_7_7_,
        submulti9_1_.dupe as dupe6_7_,
        submulti9_1_.other2 as other3_6_7_,
        submulti9_1_.po as po6_7_,
        submulti9_1_.cal as cal6_7_,
        submulti9_1_.floaty as floaty6_7_,
        submulti9_.dupe as dupe3_7_,
        submulti9_.parent as parent3_7_,
        upper(submulti9_1_.dupe) as formula91_7_ 
    from
        rootclass this_ 
    left outer join
        TrivialClass this_1_ 
            on this_.id1_=this_1_.tcid 
    left outer join
        leafsubclass this_2_ 
            on this_.id1_=this_2_.id__ 
    left outer join
        nonleafsubclass this_3_ 
            on this_.id1_=this_3_.sid 
    left outer join
        leafsubsubclass this_4_ 
            on this_.id1_=this_4_.sid 
    left outer join
        mono this_5_ 
            on this_.id1_=this_5_.superid 
    left outer join
        rootclass top2_ 
            on this_.top_=top2_.id1_ 
    left outer join
        TrivialClass top2_1_ 
            on top2_.id1_=top2_1_.tcid 
    left outer join
        leafsubclass top2_2_ 
            on top2_.id1_=top2_2_.id__ 
    left outer join
        nonleafsubclass top2_3_ 
            on top2_.id1_=top2_3_.sid 
    left outer join
        leafsubsubclass top2_4_ 
            on top2_.id1_=top2_4_.sid 
    left outer join
        mono top2_5_ 
            on top2_.id1_=top2_5_.superid 
    left outer join
        leafsubclass lower3_ 
            on top2_.id1_=lower3_.id__ 
    left outer join
        rootclass lower3_1_ 
            on lower3_.id__=lower3_1_.id1_ 
    left outer join
        rootclass top4_ 
            on lower3_.other1=top4_.id1_ 
    left outer join
        TrivialClass top4_1_ 
            on top4_.id1_=top4_1_.tcid 
    left outer join
        leafsubclass top4_2_ 
            on top4_.id1_=top4_2_.id__ 
    left outer join
        nonleafsubclass top4_3_ 
            on top4_.id1_=top4_3_.sid 
    left outer join
        leafsubsubclass top4_4_ 
            on top4_.id1_=top4_4_.sid 
    left outer join
        mono top4_5_ 
            on top4_.id1_=top4_5_.superid 
    left outer join
        leafsubclass lower5_ 
            on top4_2_.other3=lower5_.id__ 
    left outer join
        rootclass lower5_1_ 
            on lower5_.id__=lower5_1_.id1_ 
    left outer join
        Po po6_ 
            on lower5_.id__=po6_.id_ 
    left outer join
        nonleafsubclass multi7_ 
            on top4_3_.other2=multi7_.sid 
    left outer join
        rootclass multi7_1_ 
            on multi7_.sid=multi7_1_.id1_ 
    left outer join
        leafsubsubclass multi7_2_ 
            on multi7_.sid=multi7_2_.sid 
    left outer join
        Po po8_ 
            on multi7_.po=po8_.id_ 
    left outer join
        leafsubsubclass submulti9_ 
            on multi7_2_.parent=submulti9_.sid 
    left outer join
        nonleafsubclass submulti9_1_ 
            on submulti9_.sid=submulti9_1_.sid 
    left outer join
        rootclass submulti9_2_ 
            on submulti9_.sid=submulti9_2_.id1_ 
    where
        (
            this_.id1_ is not null
        )
14:16:33,047 DEBUG SQL:104 - 
    select
        this_.sid as id1_7_8_,
        this_2_.count_ as count2_7_8_,
        this_2_.name as name7_8_,
        this_2_.address as address7_8_,
        this_2_.date_ as date5_7_8_,
        this_2_.top_ as top6_7_8_,
        this_1_.dupe as dupe6_8_,
        this_1_.other2 as other3_6_8_,
        this_1_.po as po6_8_,
        this_1_.cal as cal6_8_,
        this_1_.floaty as floaty6_8_,
        this_.dupe as dupe3_8_,
        this_.parent as parent3_8_,
        upper(this_1_.dupe) as formula91_8_,
        top2_.id1_ as id1_7_0_,
        top2_.count_ as count2_7_0_,
        top2_.name as name7_0_,
        top2_.address as address7_0_,
        top2_.date_ as date5_7_0_,
        top2_.top_ as top6_7_0_,
        top2_2_.intprop as intprop2_0_,
        top2_2_.other1 as other3_2_0_,
        top2_2_.other3 as other4_2_0_,
        top2_2_.foo as foo2_0_,
        top2_3_.dupe as dupe6_0_,
        top2_3_.other2 as other3_6_0_,
        top2_3_.po as po6_0_,
        top2_3_.cal as cal6_0_,
        top2_3_.floaty as floaty6_0_,
        top2_4_.dupe as dupe3_0_,
        top2_4_.parent as parent3_0_,
        upper(top2_3_.dupe) as formula91_0_,
        case 
            when top2_4_.sid is not null then 4 
            when top2_1_.tcid is not null then 1 
            when top2_2_.id__ is not null then 2 
            when top2_3_.sid is not null then 3 
            when top2_5_.superid is not null then 5 
            when top2_.id1_ is not null then 0 
        end as clazz_0_,
        lower3_.id__ as id1_7_1_,
        lower3_1_.count_ as count2_7_1_,
        lower3_1_.name as name7_1_,
        lower3_1_.address as address7_1_,
        lower3_1_.date_ as date5_7_1_,
        lower3_1_.top_ as top6_7_1_,
        lower3_.intprop as intprop2_1_,
        lower3_.other1 as other3_2_1_,
        lower3_.other3 as other4_2_1_,
        lower3_.foo as foo2_1_,
        top4_.id1_ as id1_7_2_,
        top4_.count_ as count2_7_2_,
        top4_.name as name7_2_,
        top4_.address as address7_2_,
        top4_.date_ as date5_7_2_,
        top4_.top_ as top6_7_2_,
        top4_2_.intprop as intprop2_2_,
        top4_2_.other1 as other3_2_2_,
        top4_2_.other3 as other4_2_2_,
        top4_2_.foo as foo2_2_,
        top4_3_.dupe as dupe6_2_,
        top4_3_.other2 as other3_6_2_,
        top4_3_.po as po6_2_,
        top4_3_.cal as cal6_2_,
        top4_3_.floaty as floaty6_2_,
        top4_4_.dupe as dupe3_2_,
        top4_4_.parent as parent3_2_,
        upper(top4_3_.dupe) as formula91_2_,
        case 
            when top4_4_.sid is not null then 4 
            when top4_1_.tcid is not null then 1 
            when top4_2_.id__ is not null then 2 
            when top4_3_.sid is not null then 3 
            when top4_5_.superid is not null then 5 
            when top4_.id1_ is not null then 0 
        end as clazz_2_,
        lower5_.id__ as id1_7_3_,
        lower5_1_.count_ as count2_7_3_,
        lower5_1_.name as name7_3_,
        lower5_1_.address as address7_3_,
        lower5_1_.date_ as date5_7_3_,
        lower5_1_.top_ as top6_7_3_,
        lower5_.intprop as intprop2_3_,
        lower5_.other1 as other3_2_3_,
        lower5_.other3 as other4_2_3_,
        lower5_.foo as foo2_3_,
        po6_.id_ as id1_0_4_,
        po6_.value_ as value2_0_4_,
        po6_.tl as tl0_4_,
        multi7_.sid as id1_7_5_,
        multi7_1_.count_ as count2_7_5_,
        multi7_1_.name as name7_5_,
        multi7_1_.address as address7_5_,
        multi7_1_.date_ as date5_7_5_,
        multi7_1_.top_ as top6_7_5_,
        multi7_.dupe as dupe6_5_,
        multi7_.other2 as other3_6_5_,
        multi7_.po as po6_5_,
        multi7_.cal as cal6_5_,
        multi7_.floaty as floaty6_5_,
        multi7_2_.dupe as dupe3_5_,
        multi7_2_.parent as parent3_5_,
        upper(multi7_.dupe) as formula91_5_,
        case 
            when multi7_2_.sid is not null then 4 
            when multi7_.sid is not null then 3 
        end as clazz_5_,
        po8_.id_ as id1_0_6_,
        po8_.value_ as value2_0_6_,
        po8_.tl as tl0_6_,
        submulti9_.sid as id1_7_7_,
        submulti9_2_.count_ as count2_7_7_,
        submulti9_2_.name as name7_7_,
        submulti9_2_.address as address7_7_,
        submulti9_2_.date_ as date5_7_7_,
        submulti9_2_.top_ as top6_7_7_,
        submulti9_1_.dupe as dupe6_7_,
        submulti9_1_.other2 as other3_6_7_,
        submulti9_1_.po as po6_7_,
        submulti9_1_.cal as cal6_7_,
        submulti9_1_.floaty as floaty6_7_,
        submulti9_.dupe as dupe3_7_,
        submulti9_.parent as parent3_7_,
        upper(submulti9_1_.dupe) as formula91_7_ 
    from
        leafsubsubclass this_ 
    inner join
        nonleafsubclass this_1_ 
            on this_.sid=this_1_.sid 
    inner join
        rootclass this_2_ 
            on this_.sid=this_2_.id1_ 
    left outer join
        rootclass top2_ 
            on this_2_.top_=top2_.id1_ 
    left outer join
        TrivialClass top2_1_ 
            on top2_.id1_=top2_1_.tcid 
    left outer join
        leafsubclass top2_2_ 
            on top2_.id1_=top2_2_.id__ 
    left outer join
        nonleafsubclass top2_3_ 
            on top2_.id1_=top2_3_.sid 
    left outer join
        leafsubsubclass top2_4_ 
            on top2_.id1_=top2_4_.sid 
    left outer join
        mono top2_5_ 
            on top2_.id1_=top2_5_.superid 
    left outer join
        leafsubclass lower3_ 
            on top2_.id1_=lower3_.id__ 
    left outer join
        rootclass lower3_1_ 
            on lower3_.id__=lower3_1_.id1_ 
    left outer join
        rootclass top4_ 
            on lower3_.other1=top4_.id1_ 
    left outer join
        TrivialClass top4_1_ 
            on top4_.id1_=top4_1_.tcid 
    left outer join
        leafsubclass top4_2_ 
            on top4_.id1_=top4_2_.id__ 
    left outer join
        nonleafsubclass top4_3_ 
            on top4_.id1_=top4_3_.sid 
    left outer join
        leafsubsubclass top4_4_ 
            on top4_.id1_=top4_4_.sid 
    left outer join
        mono top4_5_ 
            on top4_.id1_=top4_5_.superid 
    left outer join
        leafsubclass lower5_ 
            on top4_2_.other3=lower5_.id__ 
    left outer join
        rootclass lower5_1_ 
            on lower5_.id__=lower5_1_.id1_ 
    left outer join
        Po po6_ 
            on lower5_.id__=po6_.id_ 
    left outer join
        nonleafsubclass multi7_ 
            on top4_3_.other2=multi7_.sid 
    left outer join
        rootclass multi7_1_ 
            on multi7_.sid=multi7_1_.id1_ 
    left outer join
        leafsubsubclass multi7_2_ 
            on multi7_.sid=multi7_2_.sid 
    left outer join
        Po po8_ 
            on multi7_.po=po8_.id_ 
    left outer join
        leafsubsubclass submulti9_ 
            on multi7_2_.parent=submulti9_.sid 
    left outer join
        nonleafsubclass submulti9_1_ 
            on submulti9_.sid=submulti9_1_.sid 
    left outer join
        rootclass submulti9_2_ 
            on submulti9_.sid=submulti9_2_.id1_ 
    where
        (
            this_2_.id1_ is not null
        )
14:16:33,107 DEBUG SQL:104 - 
    select
        this_.sid as id1_7_8_,
        this_2_.count_ as count2_7_8_,
        this_2_.name as name7_8_,
        this_2_.address as address7_8_,
        this_2_.date_ as date5_7_8_,
        this_2_.top_ as top6_7_8_,
        this_1_.dupe as dupe6_8_,
        this_1_.other2 as other3_6_8_,
        this_1_.po as po6_8_,
        this_1_.cal as cal6_8_,
        this_1_.floaty as floaty6_8_,
        this_.dupe as dupe3_8_,
        this_.parent as parent3_8_,
        upper(this_1_.dupe) as formula91_8_,
        top2_.id1_ as id1_7_0_,
        top2_.count_ as count2_7_0_,
        top2_.name as name7_0_,
        top2_.address as address7_0_,
        top2_.date_ as date5_7_0_,
        top2_.top_ as top6_7_0_,
        top2_2_.intprop as intprop2_0_,
        top2_2_.other1 as other3_2_0_,
        top2_2_.other3 as other4_2_0_,
        top2_2_.foo as foo2_0_,
        top2_3_.dupe as dupe6_0_,
        top2_3_.other2 as other3_6_0_,
        top2_3_.po as po6_0_,
        top2_3_.cal as cal6_0_,
        top2_3_.floaty as floaty6_0_,
        top2_4_.dupe as dupe3_0_,
        top2_4_.parent as parent3_0_,
        upper(top2_3_.dupe) as formula91_0_,
        case 
            when top2_4_.sid is not null then 4 
            when top2_1_.tcid is not null then 1 
            when top2_2_.id__ is not null then 2 
            when top2_3_.sid is not null then 3 
            when top2_5_.superid is not null then 5 
            when top2_.id1_ is not null then 0 
        end as clazz_0_,
        lower3_.id__ as id1_7_1_,
        lower3_1_.count_ as count2_7_1_,
        lower3_1_.name as name7_1_,
        lower3_1_.address as address7_1_,
        lower3_1_.date_ as date5_7_1_,
        lower3_1_.top_ as top6_7_1_,
        lower3_.intprop as intprop2_1_,
        lower3_.other1 as other3_2_1_,
        lower3_.other3 as other4_2_1_,
        lower3_.foo as foo2_1_,
        top4_.id1_ as id1_7_2_,
        top4_.count_ as count2_7_2_,
        top4_.name as name7_2_,
        top4_.address as address7_2_,
        top4_.date_ as date5_7_2_,
        top4_.top_ as top6_7_2_,
        top4_2_.intprop as intprop2_2_,
        top4_2_.other1 as other3_2_2_,
        top4_2_.other3 as other4_2_2_,
        top4_2_.foo as foo2_2_,
        top4_3_.dupe as dupe6_2_,
        top4_3_.other2 as other3_6_2_,
        top4_3_.po as po6_2_,
        top4_3_.cal as cal6_2_,
        top4_3_.floaty as floaty6_2_,
        top4_4_.dupe as dupe3_2_,
        top4_4_.parent as parent3_2_,
        upper(top4_3_.dupe) as formula91_2_,
        case 
            when top4_4_.sid is not null then 4 
            when top4_1_.tcid is not null then 1 
            when top4_2_.id__ is not null then 2 
            when top4_3_.sid is not null then 3 
            when top4_5_.superid is not null then 5 
            when top4_.id1_ is not null then 0 
        end as clazz_2_,
        lower5_.id__ as id1_7_3_,
        lower5_1_.count_ as count2_7_3_,
        lower5_1_.name as name7_3_,
        lower5_1_.address as address7_3_,
        lower5_1_.date_ as date5_7_3_,
        lower5_1_.top_ as top6_7_3_,
        lower5_.intprop as intprop2_3_,
        lower5_.other1 as other3_2_3_,
        lower5_.other3 as other4_2_3_,
        lower5_.foo as foo2_3_,
        po6_.id_ as id1_0_4_,
        po6_.value_ as value2_0_4_,
        po6_.tl as tl0_4_,
        multi7_.sid as id1_7_5_,
        multi7_1_.count_ as count2_7_5_,
        multi7_1_.name as name7_5_,
        multi7_1_.address as address7_5_,
        multi7_1_.date_ as date5_7_5_,
        multi7_1_.top_ as top6_7_5_,
        multi7_.dupe as dupe6_5_,
        multi7_.other2 as other3_6_5_,
        multi7_.po as po6_5_,
        multi7_.cal as cal6_5_,
        multi7_.floaty as floaty6_5_,
        multi7_2_.dupe as dupe3_5_,
        multi7_2_.parent as parent3_5_,
        upper(multi7_.dupe) as formula91_5_,
        case 
            when multi7_2_.sid is not null then 4 
            when multi7_.sid is not null then 3 
        end as clazz_5_,
        po8_.id_ as id1_0_6_,
        po8_.value_ as value2_0_6_,
        po8_.tl as tl0_6_,
        submulti9_.sid as id1_7_7_,
        submulti9_2_.count_ as count2_7_7_,
        submulti9_2_.name as name7_7_,
        submulti9_2_.address as address7_7_,
        submulti9_2_.date_ as date5_7_7_,
        submulti9_2_.top_ as top6_7_7_,
        submulti9_1_.dupe as dupe6_7_,
        submulti9_1_.other2 as other3_6_7_,
        submulti9_1_.po as po6_7_,
        submulti9_1_.cal as cal6_7_,
        submulti9_1_.floaty as floaty6_7_,
        submulti9_.dupe as dupe3_7_,
        submulti9_.parent as parent3_7_,
        upper(submulti9_1_.dupe) as formula91_7_ 
    from
        leafsubsubclass this_ 
    inner join
        nonleafsubclass this_1_ 
            on this_.sid=this_1_.sid 
    inner join
        rootclass this_2_ 
            on this_.sid=this_2_.id1_ 
    left outer join
        rootclass top2_ 
            on this_2_.top_=top2_.id1_ 
    left outer join
        TrivialClass top2_1_ 
            on top2_.id1_=top2_1_.tcid 
    left outer join
        leafsubclass top2_2_ 
            on top2_.id1_=top2_2_.id__ 
    left outer join
        nonleafsubclass top2_3_ 
            on top2_.id1_=top2_3_.sid 
    left outer join
        leafsubsubclass top2_4_ 
            on top2_.id1_=top2_4_.sid 
    left outer join
        mono top2_5_ 
            on top2_.id1_=top2_5_.superid 
    left outer join
        leafsubclass lower3_ 
            on top2_.id1_=lower3_.id__ 
    left outer join
        rootclass lower3_1_ 
            on lower3_.id__=lower3_1_.id1_ 
    left outer join
        rootclass top4_ 
            on lower3_.other1=top4_.id1_ 
    left outer join
        TrivialClass top4_1_ 
            on top4_.id1_=top4_1_.tcid 
    left outer join
        leafsubclass top4_2_ 
            on top4_.id1_=top4_2_.id__ 
    left outer join
        nonleafsubclass top4_3_ 
            on top4_.id1_=top4_3_.sid 
    left outer join
        leafsubsubclass top4_4_ 
            on top4_.id1_=top4_4_.sid 
    left outer join
        mono top4_5_ 
            on top4_.id1_=top4_5_.superid 
    left outer join
        leafsubclass lower5_ 
            on top4_2_.other3=lower5_.id__ 
    left outer join
        rootclass lower5_1_ 
            on lower5_.id__=lower5_1_.id1_ 
    left outer join
        Po po6_ 
            on lower5_.id__=po6_.id_ 
    left outer join
        nonleafsubclass multi7_ 
            on top4_3_.other2=multi7_.sid 
    left outer join
        rootclass multi7_1_ 
            on multi7_.sid=multi7_1_.id1_ 
    left outer join
        leafsubsubclass multi7_2_ 
            on multi7_.sid=multi7_2_.sid 
    left outer join
        Po po8_ 
            on multi7_.po=po8_.id_ 
    left outer join
        leafsubsubclass submulti9_ 
            on multi7_2_.parent=submulti9_.sid 
    left outer join
        nonleafsubclass submulti9_1_ 
            on submulti9_.sid=submulti9_1_.sid 
    left outer join
        rootclass submulti9_2_ 
            on submulti9_.sid=submulti9_2_.id1_ 
    where
        (
            this_2_.id1_ is not null
        ) 
        and this_.dupe<?
14:16:33,200 DEBUG SQL:104 - 
    select
        this_.sid as id1_7_8_,
        this_2_.count_ as count2_7_8_,
        this_2_.name as name7_8_,
        this_2_.address as address7_8_,
        this_2_.date_ as date5_7_8_,
        this_2_.top_ as top6_7_8_,
        this_1_.dupe as dupe6_8_,
        this_1_.other2 as other3_6_8_,
        this_1_.po as po6_8_,
        this_1_.cal as cal6_8_,
        this_1_.floaty as floaty6_8_,
        this_.dupe as dupe3_8_,
        this_.parent as parent3_8_,
        upper(this_1_.dupe) as formula91_8_,
        top2_.id1_ as id1_7_0_,
        top2_.count_ as count2_7_0_,
        top2_.name as name7_0_,
        top2_.address as address7_0_,
        top2_.date_ as date5_7_0_,
        top2_.top_ as top6_7_0_,
        top2_2_.intprop as intprop2_0_,
        top2_2_.other1 as other3_2_0_,
        top2_2_.other3 as other4_2_0_,
        top2_2_.foo as foo2_0_,
        top2_3_.dupe as dupe6_0_,
        top2_3_.other2 as other3_6_0_,
        top2_3_.po as po6_0_,
        top2_3_.cal as cal6_0_,
        top2_3_.floaty as floaty6_0_,
        top2_4_.dupe as dupe3_0_,
        top2_4_.parent as parent3_0_,
        upper(top2_3_.dupe) as formula91_0_,
        case 
            when top2_4_.sid is not null then 4 
            when top2_1_.tcid is not null then 1 
            when top2_2_.id__ is not null then 2 
            when top2_3_.sid is not null then 3 
            when top2_5_.superid is not null then 5 
            when top2_.id1_ is not null then 0 
        end as clazz_0_,
        lower3_.id__ as id1_7_1_,
        lower3_1_.count_ as count2_7_1_,
        lower3_1_.name as name7_1_,
        lower3_1_.address as address7_1_,
        lower3_1_.date_ as date5_7_1_,
        lower3_1_.top_ as top6_7_1_,
        lower3_.intprop as intprop2_1_,
        lower3_.other1 as other3_2_1_,
        lower3_.other3 as other4_2_1_,
        lower3_.foo as foo2_1_,
        top4_.id1_ as id1_7_2_,
        top4_.count_ as count2_7_2_,
        top4_.name as name7_2_,
        top4_.address as address7_2_,
        top4_.date_ as date5_7_2_,
        top4_.top_ as top6_7_2_,
        top4_2_.intprop as intprop2_2_,
        top4_2_.other1 as other3_2_2_,
        top4_2_.other3 as other4_2_2_,
        top4_2_.foo as foo2_2_,
        top4_3_.dupe as dupe6_2_,
        top4_3_.other2 as other3_6_2_,
        top4_3_.po as po6_2_,
        top4_3_.cal as cal6_2_,
        top4_3_.floaty as floaty6_2_,
        top4_4_.dupe as dupe3_2_,
        top4_4_.parent as parent3_2_,
        upper(top4_3_.dupe) as formula91_2_,
        case 
            when top4_4_.sid is not null then 4 
            when top4_1_.tcid is not null then 1 
            when top4_2_.id__ is not null then 2 
            when top4_3_.sid is not null then 3 
            when top4_5_.superid is not null then 5 
            when top4_.id1_ is not null then 0 
        end as clazz_2_,
        lower5_.id__ as id1_7_3_,
        lower5_1_.count_ as count2_7_3_,
        lower5_1_.name as name7_3_,
        lower5_1_.address as address7_3_,
        lower5_1_.date_ as date5_7_3_,
        lower5_1_.top_ as top6_7_3_,
        lower5_.intprop as intprop2_3_,
        lower5_.other1 as other3_2_3_,
        lower5_.other3 as other4_2_3_,
        lower5_.foo as foo2_3_,
        po6_.id_ as id1_0_4_,
        po6_.value_ as value2_0_4_,
        po6_.tl as tl0_4_,
        multi7_.sid as id1_7_5_,
        multi7_1_.count_ as count2_7_5_,
        multi7_1_.name as name7_5_,
        multi7_1_.address as address7_5_,
        multi7_1_.date_ as date5_7_5_,
        multi7_1_.top_ as top6_7_5_,
        multi7_.dupe as dupe6_5_,
        multi7_.other2 as other3_6_5_,
        multi7_.po as po6_5_,
        multi7_.cal as cal6_5_,
        multi7_.floaty as floaty6_5_,
        multi7_2_.dupe as dupe3_5_,
        multi7_2_.parent as parent3_5_,
        upper(multi7_.dupe) as formula91_5_,
        case 
            when multi7_2_.sid is not null then 4 
            when multi7_.sid is not null then 3 
        end as clazz_5_,
        po8_.id_ as id1_0_6_,
        po8_.value_ as value2_0_6_,
        po8_.tl as tl0_6_,
        submulti9_.sid as id1_7_7_,
        submulti9_2_.count_ as count2_7_7_,
        submulti9_2_.name as name7_7_,
        submulti9_2_.address as address7_7_,
        submulti9_2_.date_ as date5_7_7_,
        submulti9_2_.top_ as top6_7_7_,
        submulti9_1_.dupe as dupe6_7_,
        submulti9_1_.other2 as other3_6_7_,
        submulti9_1_.po as po6_7_,
        submulti9_1_.cal as cal6_7_,
        submulti9_1_.floaty as floaty6_7_,
        submulti9_.dupe as dupe3_7_,
        submulti9_.parent as parent3_7_,
        upper(submulti9_1_.dupe) as formula91_7_ 
    from
        leafsubsubclass this_ 
    inner join
        nonleafsubclass this_1_ 
            on this_.sid=this_1_.sid 
    inner join
        rootclass this_2_ 
            on this_.sid=this_2_.id1_ 
    left outer join
        rootclass top2_ 
            on this_2_.top_=top2_.id1_ 
    left outer join
        TrivialClass top2_1_ 
            on top2_.id1_=top2_1_.tcid 
    left outer join
        leafsubclass top2_2_ 
            on top2_.id1_=top2_2_.id__ 
    left outer join
        nonleafsubclass top2_3_ 
            on top2_.id1_=top2_3_.sid 
    left outer join
        leafsubsubclass top2_4_ 
            on top2_.id1_=top2_4_.sid 
    left outer join
        mono top2_5_ 
            on top2_.id1_=top2_5_.superid 
    left outer join
        leafsubclass lower3_ 
            on top2_.id1_=lower3_.id__ 
    left outer join
        rootclass lower3_1_ 
            on lower3_.id__=lower3_1_.id1_ 
    left outer join
        rootclass top4_ 
            on lower3_.other1=top4_.id1_ 
    left outer join
        TrivialClass top4_1_ 
            on top4_.id1_=top4_1_.tcid 
    left outer join
        leafsubclass top4_2_ 
            on top4_.id1_=top4_2_.id__ 
    left outer join
        nonleafsubclass top4_3_ 
            on top4_.id1_=top4_3_.sid 
    left outer join
        leafsubsubclass top4_4_ 
            on top4_.id1_=top4_4_.sid 
    left outer join
        mono top4_5_ 
            on top4_.id1_=top4_5_.superid 
    left outer join
        leafsubclass lower5_ 
            on top4_2_.other3=lower5_.id__ 
    left outer join
        rootclass lower5_1_ 
            on lower5_.id__=lower5_1_.id1_ 
    left outer join
        Po po6_ 
            on lower5_.id__=po6_.id_ 
    left outer join
        nonleafsubclass multi7_ 
            on top4_3_.other2=multi7_.sid 
    left outer join
        rootclass multi7_1_ 
            on multi7_.sid=multi7_1_.id1_ 
    left outer join
        leafsubsubclass multi7_2_ 
            on multi7_.sid=multi7_2_.sid 
    left outer join
        Po po8_ 
            on multi7_.po=po8_.id_ 
    left outer join
        leafsubsubclass submulti9_ 
            on multi7_2_.parent=submulti9_.sid 
    left outer join
        nonleafsubclass submulti9_1_ 
            on submulti9_.sid=submulti9_1_.sid 
    left outer join
        rootclass submulti9_2_ 
            on submulti9_.sid=submulti9_2_.id1_ 
    where
        (
            this_2_.id1_ is not null
        ) 
        and this_.dupe>=?
14:16:33,257 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_0_,
        top0_.count_ as count2_7_0_,
        top0_.name as name7_0_,
        top0_.address as address7_0_,
        top0_.date_ as date5_7_0_,
        top0_.top_ as top6_7_0_,
        top0_2_.intprop as intprop2_0_,
        top0_2_.other1 as other3_2_0_,
        top0_2_.other3 as other4_2_0_,
        top0_2_.foo as foo2_0_,
        top0_3_.dupe as dupe6_0_,
        top0_3_.other2 as other3_6_0_,
        top0_3_.po as po6_0_,
        top0_3_.cal as cal6_0_,
        top0_3_.floaty as floaty6_0_,
        top0_4_.dupe as dupe3_0_,
        top0_4_.parent as parent3_0_,
        upper(top0_3_.dupe) as formula91_0_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_0_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    where
        top0_.id1_=? 
        and (
            top0_.id1_ is not null
        )  for update
            
14:16:33,277 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_8_,
        top0_.count_ as count2_7_8_,
        top0_.name as name7_8_,
        top0_.address as address7_8_,
        top0_.date_ as date5_7_8_,
        top0_.top_ as top6_7_8_,
        top0_2_.intprop as intprop2_8_,
        top0_2_.other1 as other3_2_8_,
        top0_2_.other3 as other4_2_8_,
        top0_2_.foo as foo2_8_,
        top0_3_.dupe as dupe6_8_,
        top0_3_.other2 as other3_6_8_,
        top0_3_.po as po6_8_,
        top0_3_.cal as cal6_8_,
        top0_3_.floaty as floaty6_8_,
        top0_4_.dupe as dupe3_8_,
        top0_4_.parent as parent3_8_,
        upper(top0_3_.dupe) as formula91_8_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        lower2_.id__ as id1_7_1_,
        lower2_1_.count_ as count2_7_1_,
        lower2_1_.name as name7_1_,
        lower2_1_.address as address7_1_,
        lower2_1_.date_ as date5_7_1_,
        lower2_1_.top_ as top6_7_1_,
        lower2_.intprop as intprop2_1_,
        lower2_.other1 as other3_2_1_,
        lower2_.other3 as other4_2_1_,
        lower2_.foo as foo2_1_,
        top3_.id1_ as id1_7_2_,
        top3_.count_ as count2_7_2_,
        top3_.name as name7_2_,
        top3_.address as address7_2_,
        top3_.date_ as date5_7_2_,
        top3_.top_ as top6_7_2_,
        top3_2_.intprop as intprop2_2_,
        top3_2_.other1 as other3_2_2_,
        top3_2_.other3 as other4_2_2_,
        top3_2_.foo as foo2_2_,
        top3_3_.dupe as dupe6_2_,
        top3_3_.other2 as other3_6_2_,
        top3_3_.po as po6_2_,
        top3_3_.cal as cal6_2_,
        top3_3_.floaty as floaty6_2_,
        top3_4_.dupe as dupe3_2_,
        top3_4_.parent as parent3_2_,
        upper(top3_3_.dupe) as formula91_2_,
        case 
            when top3_4_.sid is not null then 4 
            when top3_1_.tcid is not null then 1 
            when top3_2_.id__ is not null then 2 
            when top3_3_.sid is not null then 3 
            when top3_5_.superid is not null then 5 
            when top3_.id1_ is not null then 0 
        end as clazz_2_,
        lower4_.id__ as id1_7_3_,
        lower4_1_.count_ as count2_7_3_,
        lower4_1_.name as name7_3_,
        lower4_1_.address as address7_3_,
        lower4_1_.date_ as date5_7_3_,
        lower4_1_.top_ as top6_7_3_,
        lower4_.intprop as intprop2_3_,
        lower4_.other1 as other3_2_3_,
        lower4_.other3 as other4_2_3_,
        lower4_.foo as foo2_3_,
        po5_.id_ as id1_0_4_,
        po5_.value_ as value2_0_4_,
        po5_.tl as tl0_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    left outer join
        rootclass top1_ 
            on top0_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        leafsubclass lower2_ 
            on top1_.id1_=lower2_.id__ 
    left outer join
        rootclass lower2_1_ 
            on lower2_.id__=lower2_1_.id1_ 
    left outer join
        rootclass top3_ 
            on lower2_.other1=top3_.id1_ 
    left outer join
        TrivialClass top3_1_ 
            on top3_.id1_=top3_1_.tcid 
    left outer join
        leafsubclass top3_2_ 
            on top3_.id1_=top3_2_.id__ 
    left outer join
        nonleafsubclass top3_3_ 
            on top3_.id1_=top3_3_.sid 
    left outer join
        leafsubsubclass top3_4_ 
            on top3_.id1_=top3_4_.sid 
    left outer join
        mono top3_5_ 
            on top3_.id1_=top3_5_.superid 
    left outer join
        leafsubclass lower4_ 
            on top3_2_.other3=lower4_.id__ 
    left outer join
        rootclass lower4_1_ 
            on lower4_.id__=lower4_1_.id1_ 
    left outer join
        Po po5_ 
            on lower4_.id__=po5_.id_ 
    left outer join
        nonleafsubclass multi6_ 
            on top3_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on multi6_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on multi6_2_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        top0_.id1_=? 
        and (
            top0_.id1_ is not null
        ) 
14:16:33,344 DEBUG SQL:104 - 
    select
        id1_ 
    from
        rootclass 
    where
        id1_ =? 
        and count_ =? for update
            
14:16:33,365 DEBUG SQL:104 - 
    update
        rootclass 
    set
        count_=?,
        name=?,
        address=?,
        date_=?,
        top_=? 
    where
        id1_=? 
        and count_=?
14:16:33,366 DEBUG SQL:104 - 
    update
        nonleafsubclass 
    set
        dupe=?,
        other2=?,
        po=?,
        cal=?,
        floaty=? 
    where
        sid=?
14:16:33,366 DEBUG SQL:104 - 
    delete 
    from
        rootclass 
    where
        id1_=? 
        and count_=?
14:16:33,376 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_,
        top0_.count_ as count2_7_,
        top0_.name as name7_,
        top0_.address as address7_,
        top0_.date_ as date5_7_,
        top0_.top_ as top6_7_,
        top0_2_.intprop as intprop2_,
        top0_2_.other1 as other3_2_,
        top0_2_.other3 as other4_2_,
        top0_2_.foo as foo2_,
        top0_3_.dupe as dupe6_,
        top0_3_.other2 as other3_6_,
        top0_3_.po as po6_,
        top0_3_.cal as cal6_,
        top0_3_.floaty as floaty6_,
        top0_4_.dupe as dupe3_,
        top0_4_.parent as parent3_,
        upper(top0_3_.dupe) as formula91_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    where
        (
            top0_.id1_ is not null
        )
14:16:33,387 DEBUG SQL:104 - 
    update
        leafsubsubclass 
    set
        another_parent=null,
        list_ind=null 
    where
        another_parent=?
14:16:33,387 DEBUG SQL:104 - 
    delete 
    from
        leafsubsubclass 
    where
        sid=?
14:16:33,397 DEBUG SQL:104 - 
    delete 
    from
        rootclass 
    where
        id1_=? 
        and count_=?
14:16:33,397 DEBUG SQL:104 - 
    delete 
    from
        rootclass 
    where
        id1_=? 
        and count_=?
14:16:33,398 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_,
        top0_.count_ as count2_7_,
        top0_.name as name7_,
        top0_.address as address7_,
        top0_.date_ as date5_7_,
        top0_.top_ as top6_7_,
        top0_2_.intprop as intprop2_,
        top0_2_.other1 as other3_2_,
        top0_2_.other3 as other4_2_,
        top0_2_.foo as foo2_,
        top0_3_.dupe as dupe6_,
        top0_3_.other2 as other3_6_,
        top0_3_.po as po6_,
        top0_3_.cal as cal6_,
        top0_3_.floaty as floaty6_,
        top0_4_.dupe as dupe3_,
        top0_4_.parent as parent3_,
        upper(top0_3_.dupe) as formula91_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    where
        (
            top0_.id1_ is not null
        )
14:16:33,416 DEBUG SQL:104 - 
    select
        po0_.id_ as id1_0_,
        po0_.value_ as value2_0_,
        po0_.tl as tl0_ 
    from
        Po po0_
14:16:33,417  INFO CustomRunner:139 - Test: testMultiTableCollections
14:16:33,418 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_,
        top0_.count_ as count2_7_,
        top0_.name as name7_,
        top0_.address as address7_,
        top0_.date_ as date5_7_,
        top0_.top_ as top6_7_,
        top0_2_.intprop as intprop2_,
        top0_2_.other1 as other3_2_,
        top0_2_.other3 as other4_2_,
        top0_2_.foo as foo2_,
        top0_3_.dupe as dupe6_,
        top0_3_.other2 as other3_6_,
        top0_3_.po as po6_,
        top0_3_.cal as cal6_,
        top0_3_.floaty as floaty6_,
        top0_4_.dupe as dupe3_,
        top0_4_.parent as parent3_,
        upper(top0_3_.dupe) as formula91_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    where
        (
            top0_.id1_ is not null
        )
14:16:33,437 DEBUG SQL:104 - 
    insert 
    into
        rootclass
        (id1_, count_, name, address, date_, top_) 
    values
        (null, ?, ?, ?, ?, ?)
14:16:33,438 DEBUG SQL:104 - 
    insert 
    into
        nonleafsubclass
        (dupe, other2, po, cal, floaty, sid) 
    values
        (?, ?, ?, ?, ?, ?)
14:16:33,438 DEBUG SQL:104 - 
    insert 
    into
        rootclass
        (count_, name, date_, id1_) 
    values
        (?, ?, ?, null)
14:16:33,438 DEBUG SQL:104 - 
    insert 
    into
        rootclass
        (count_, name, id1_) 
    values
        (?, ?, null)
14:16:33,448 DEBUG SQL:104 - 
    insert 
    into
        leafsubclass
        (intprop, id__) 
    values
        (?, ?)
14:16:33,448 DEBUG SQL:104 - 
    update
        rootclass 
    set
        count_=? 
    where
        id1_=? 
        and count_=?
14:16:33,449 DEBUG SQL:104 - 
    update
        leafsubclass 
    set
        other1=?,
        other3=? 
    where
        id__=?
14:16:33,449 DEBUG SQL:104 - 
    update
        rootclass 
    set
        parent=? 
    where
        id1_=?
14:16:33,449 DEBUG SQL:104 - 
    update
        rootclass 
    set
        parent=? 
    where
        id1_=?
14:16:33,450 DEBUG SQL:104 - 
    select
        lower0_.id__ as id1_7_8_,
        lower0_1_.count_ as count2_7_8_,
        lower0_1_.name as name7_8_,
        lower0_1_.address as address7_8_,
        lower0_1_.date_ as date5_7_8_,
        lower0_1_.top_ as top6_7_8_,
        lower0_.intprop as intprop2_8_,
        lower0_.other1 as other3_2_8_,
        lower0_.other3 as other4_2_8_,
        lower0_.foo as foo2_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        top2_.id1_ as id1_7_1_,
        top2_.count_ as count2_7_1_,
        top2_.name as name7_1_,
        top2_.address as address7_1_,
        top2_.date_ as date5_7_1_,
        top2_.top_ as top6_7_1_,
        top2_2_.intprop as intprop2_1_,
        top2_2_.other1 as other3_2_1_,
        top2_2_.other3 as other4_2_1_,
        top2_2_.foo as foo2_1_,
        top2_3_.dupe as dupe6_1_,
        top2_3_.other2 as other3_6_1_,
        top2_3_.po as po6_1_,
        top2_3_.cal as cal6_1_,
        top2_3_.floaty as floaty6_1_,
        top2_4_.dupe as dupe3_1_,
        top2_4_.parent as parent3_1_,
        upper(top2_3_.dupe) as formula91_1_,
        case 
            when top2_4_.sid is not null then 4 
            when top2_1_.tcid is not null then 1 
            when top2_2_.id__ is not null then 2 
            when top2_3_.sid is not null then 3 
            when top2_5_.superid is not null then 5 
            when top2_.id1_ is not null then 0 
        end as clazz_1_,
        lower3_.id__ as id1_7_2_,
        lower3_1_.count_ as count2_7_2_,
        lower3_1_.name as name7_2_,
        lower3_1_.address as address7_2_,
        lower3_1_.date_ as date5_7_2_,
        lower3_1_.top_ as top6_7_2_,
        lower3_.intprop as intprop2_2_,
        lower3_.other1 as other3_2_2_,
        lower3_.other3 as other4_2_2_,
        lower3_.foo as foo2_2_,
        po4_.id_ as id1_0_3_,
        po4_.value_ as value2_0_3_,
        po4_.tl as tl0_3_,
        top5_.id1_ as id1_7_4_,
        top5_.count_ as count2_7_4_,
        top5_.name as name7_4_,
        top5_.address as address7_4_,
        top5_.date_ as date5_7_4_,
        top5_.top_ as top6_7_4_,
        top5_2_.intprop as intprop2_4_,
        top5_2_.other1 as other3_2_4_,
        top5_2_.other3 as other4_2_4_,
        top5_2_.foo as foo2_4_,
        top5_3_.dupe as dupe6_4_,
        top5_3_.other2 as other3_6_4_,
        top5_3_.po as po6_4_,
        top5_3_.cal as cal6_4_,
        top5_3_.floaty as floaty6_4_,
        top5_4_.dupe as dupe3_4_,
        top5_4_.parent as parent3_4_,
        upper(top5_3_.dupe) as formula91_4_,
        case 
            when top5_4_.sid is not null then 4 
            when top5_1_.tcid is not null then 1 
            when top5_2_.id__ is not null then 2 
            when top5_3_.sid is not null then 3 
            when top5_5_.superid is not null then 5 
            when top5_.id1_ is not null then 0 
        end as clazz_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        leafsubclass lower0_ 
    inner join
        rootclass lower0_1_ 
            on lower0_.id__=lower0_1_.id1_ 
    left outer join
        rootclass top1_ 
            on lower0_1_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        rootclass top2_ 
            on top1_2_.other1=top2_.id1_ 
    left outer join
        TrivialClass top2_1_ 
            on top2_.id1_=top2_1_.tcid 
    left outer join
        leafsubclass top2_2_ 
            on top2_.id1_=top2_2_.id__ 
    left outer join
        nonleafsubclass top2_3_ 
            on top2_.id1_=top2_3_.sid 
    left outer join
        leafsubsubclass top2_4_ 
            on top2_.id1_=top2_4_.sid 
    left outer join
        mono top2_5_ 
            on top2_.id1_=top2_5_.superid 
    left outer join
        leafsubclass lower3_ 
            on top2_2_.other3=lower3_.id__ 
    left outer join
        rootclass lower3_1_ 
            on lower3_.id__=lower3_1_.id1_ 
    left outer join
        Po po4_ 
            on lower3_.id__=po4_.id_ 
    left outer join
        rootclass top5_ 
            on po4_.tl=top5_.id1_ 
    left outer join
        TrivialClass top5_1_ 
            on top5_.id1_=top5_1_.tcid 
    left outer join
        leafsubclass top5_2_ 
            on top5_.id1_=top5_2_.id__ 
    left outer join
        nonleafsubclass top5_3_ 
            on top5_.id1_=top5_3_.sid 
    left outer join
        leafsubsubclass top5_4_ 
            on top5_.id1_=top5_4_.sid 
    left outer join
        mono top5_5_ 
            on top5_.id1_=top5_5_.superid 
    left outer join
        nonleafsubclass multi6_ 
            on top2_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on multi6_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on multi6_2_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        lower0_.id__=? 
        and (
            lower0_1_.id1_ is not null
        ) 
14:16:33,538 DEBUG SQL:104 - 
    select
        po0_.id_ as id1_0_8_,
        po0_.value_ as value2_0_8_,
        po0_.tl as tl0_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        top2_.id1_ as id1_7_1_,
        top2_.count_ as count2_7_1_,
        top2_.name as name7_1_,
        top2_.address as address7_1_,
        top2_.date_ as date5_7_1_,
        top2_.top_ as top6_7_1_,
        top2_2_.intprop as intprop2_1_,
        top2_2_.other1 as other3_2_1_,
        top2_2_.other3 as other4_2_1_,
        top2_2_.foo as foo2_1_,
        top2_3_.dupe as dupe6_1_,
        top2_3_.other2 as other3_6_1_,
        top2_3_.po as po6_1_,
        top2_3_.cal as cal6_1_,
        top2_3_.floaty as floaty6_1_,
        top2_4_.dupe as dupe3_1_,
        top2_4_.parent as parent3_1_,
        upper(top2_3_.dupe) as formula91_1_,
        case 
            when top2_4_.sid is not null then 4 
            when top2_1_.tcid is not null then 1 
            when top2_2_.id__ is not null then 2 
            when top2_3_.sid is not null then 3 
            when top2_5_.superid is not null then 5 
            when top2_.id1_ is not null then 0 
        end as clazz_1_,
        lower3_.id__ as id1_7_2_,
        lower3_1_.count_ as count2_7_2_,
        lower3_1_.name as name7_2_,
        lower3_1_.address as address7_2_,
        lower3_1_.date_ as date5_7_2_,
        lower3_1_.top_ as top6_7_2_,
        lower3_.intprop as intprop2_2_,
        lower3_.other1 as other3_2_2_,
        lower3_.other3 as other4_2_2_,
        lower3_.foo as foo2_2_,
        top4_.id1_ as id1_7_3_,
        top4_.count_ as count2_7_3_,
        top4_.name as name7_3_,
        top4_.address as address7_3_,
        top4_.date_ as date5_7_3_,
        top4_.top_ as top6_7_3_,
        top4_2_.intprop as intprop2_3_,
        top4_2_.other1 as other3_2_3_,
        top4_2_.other3 as other4_2_3_,
        top4_2_.foo as foo2_3_,
        top4_3_.dupe as dupe6_3_,
        top4_3_.other2 as other3_6_3_,
        top4_3_.po as po6_3_,
        top4_3_.cal as cal6_3_,
        top4_3_.floaty as floaty6_3_,
        top4_4_.dupe as dupe3_3_,
        top4_4_.parent as parent3_3_,
        upper(top4_3_.dupe) as formula91_3_,
        case 
            when top4_4_.sid is not null then 4 
            when top4_1_.tcid is not null then 1 
            when top4_2_.id__ is not null then 2 
            when top4_3_.sid is not null then 3 
            when top4_5_.superid is not null then 5 
            when top4_.id1_ is not null then 0 
        end as clazz_3_,
        lower5_.id__ as id1_7_4_,
        lower5_1_.count_ as count2_7_4_,
        lower5_1_.name as name7_4_,
        lower5_1_.address as address7_4_,
        lower5_1_.date_ as date5_7_4_,
        lower5_1_.top_ as top6_7_4_,
        lower5_.intprop as intprop2_4_,
        lower5_.other1 as other3_2_4_,
        lower5_.other3 as other4_2_4_,
        lower5_.foo as foo2_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        Po po0_ 
    left outer join
        rootclass top1_ 
            on po0_.tl=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        rootclass top2_ 
            on top1_.top_=top2_.id1_ 
    left outer join
        TrivialClass top2_1_ 
            on top2_.id1_=top2_1_.tcid 
    left outer join
        leafsubclass top2_2_ 
            on top2_.id1_=top2_2_.id__ 
    left outer join
        nonleafsubclass top2_3_ 
            on top2_.id1_=top2_3_.sid 
    left outer join
        leafsubsubclass top2_4_ 
            on top2_.id1_=top2_4_.sid 
    left outer join
        mono top2_5_ 
            on top2_.id1_=top2_5_.superid 
    left outer join
        leafsubclass lower3_ 
            on top2_.id1_=lower3_.id__ 
    left outer join
        rootclass lower3_1_ 
            on lower3_.id__=lower3_1_.id1_ 
    left outer join
        rootclass top4_ 
            on lower3_.other1=top4_.id1_ 
    left outer join
        TrivialClass top4_1_ 
            on top4_.id1_=top4_1_.tcid 
    left outer join
        leafsubclass top4_2_ 
            on top4_.id1_=top4_2_.id__ 
    left outer join
        nonleafsubclass top4_3_ 
            on top4_.id1_=top4_3_.sid 
    left outer join
        leafsubsubclass top4_4_ 
            on top4_.id1_=top4_4_.sid 
    left outer join
        mono top4_5_ 
            on top4_.id1_=top4_5_.superid 
    left outer join
        leafsubclass lower5_ 
            on top4_2_.other3=lower5_.id__ 
    left outer join
        rootclass lower5_1_ 
            on lower5_.id__=lower5_1_.id1_ 
    left outer join
        nonleafsubclass multi6_ 
            on top4_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on top4_3_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on top4_4_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        po0_.id_=?
14:16:33,603 DEBUG SQL:104 - 
    select
        set0_.parent as parent7_9_,
        set0_.id1_ as id1_7_9_,
        set0_.id1_ as id1_7_8_,
        set0_.count_ as count2_7_8_,
        set0_.name as name7_8_,
        set0_.address as address7_8_,
        set0_.date_ as date5_7_8_,
        set0_.top_ as top6_7_8_,
        set0_2_.intprop as intprop2_8_,
        set0_2_.other1 as other3_2_8_,
        set0_2_.other3 as other4_2_8_,
        set0_2_.foo as foo2_8_,
        set0_3_.dupe as dupe6_8_,
        set0_3_.other2 as other3_6_8_,
        set0_3_.po as po6_8_,
        set0_3_.cal as cal6_8_,
        set0_3_.floaty as floaty6_8_,
        set0_4_.dupe as dupe3_8_,
        set0_4_.parent as parent3_8_,
        upper(set0_3_.dupe) as formula91_8_,
        case 
            when set0_4_.sid is not null then 4 
            when set0_1_.tcid is not null then 1 
            when set0_2_.id__ is not null then 2 
            when set0_3_.sid is not null then 3 
            when set0_5_.superid is not null then 5 
            when set0_.id1_ is not null then 0 
        end as clazz_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        lower2_.id__ as id1_7_1_,
        lower2_1_.count_ as count2_7_1_,
        lower2_1_.name as name7_1_,
        lower2_1_.address as address7_1_,
        lower2_1_.date_ as date5_7_1_,
        lower2_1_.top_ as top6_7_1_,
        lower2_.intprop as intprop2_1_,
        lower2_.other1 as other3_2_1_,
        lower2_.other3 as other4_2_1_,
        lower2_.foo as foo2_1_,
        top3_.id1_ as id1_7_2_,
        top3_.count_ as count2_7_2_,
        top3_.name as name7_2_,
        top3_.address as address7_2_,
        top3_.date_ as date5_7_2_,
        top3_.top_ as top6_7_2_,
        top3_2_.intprop as intprop2_2_,
        top3_2_.other1 as other3_2_2_,
        top3_2_.other3 as other4_2_2_,
        top3_2_.foo as foo2_2_,
        top3_3_.dupe as dupe6_2_,
        top3_3_.other2 as other3_6_2_,
        top3_3_.po as po6_2_,
        top3_3_.cal as cal6_2_,
        top3_3_.floaty as floaty6_2_,
        top3_4_.dupe as dupe3_2_,
        top3_4_.parent as parent3_2_,
        upper(top3_3_.dupe) as formula91_2_,
        case 
            when top3_4_.sid is not null then 4 
            when top3_1_.tcid is not null then 1 
            when top3_2_.id__ is not null then 2 
            when top3_3_.sid is not null then 3 
            when top3_5_.superid is not null then 5 
            when top3_.id1_ is not null then 0 
        end as clazz_2_,
        lower4_.id__ as id1_7_3_,
        lower4_1_.count_ as count2_7_3_,
        lower4_1_.name as name7_3_,
        lower4_1_.address as address7_3_,
        lower4_1_.date_ as date5_7_3_,
        lower4_1_.top_ as top6_7_3_,
        lower4_.intprop as intprop2_3_,
        lower4_.other1 as other3_2_3_,
        lower4_.other3 as other4_2_3_,
        lower4_.foo as foo2_3_,
        po5_.id_ as id1_0_4_,
        po5_.value_ as value2_0_4_,
        po5_.tl as tl0_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        rootclass set0_ 
    left outer join
        TrivialClass set0_1_ 
            on set0_.id1_=set0_1_.tcid 
    left outer join
        leafsubclass set0_2_ 
            on set0_.id1_=set0_2_.id__ 
    left outer join
        nonleafsubclass set0_3_ 
            on set0_.id1_=set0_3_.sid 
    left outer join
        leafsubsubclass set0_4_ 
            on set0_.id1_=set0_4_.sid 
    left outer join
        mono set0_5_ 
            on set0_.id1_=set0_5_.superid 
    left outer join
        rootclass top1_ 
            on set0_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        leafsubclass lower2_ 
            on top1_.id1_=lower2_.id__ 
    left outer join
        rootclass lower2_1_ 
            on lower2_.id__=lower2_1_.id1_ 
    left outer join
        rootclass top3_ 
            on lower2_.other1=top3_.id1_ 
    left outer join
        TrivialClass top3_1_ 
            on top3_.id1_=top3_1_.tcid 
    left outer join
        leafsubclass top3_2_ 
            on top3_.id1_=top3_2_.id__ 
    left outer join
        nonleafsubclass top3_3_ 
            on top3_.id1_=top3_3_.sid 
    left outer join
        leafsubsubclass top3_4_ 
            on top3_.id1_=top3_4_.sid 
    left outer join
        mono top3_5_ 
            on top3_.id1_=top3_5_.superid 
    left outer join
        leafsubclass lower4_ 
            on top3_2_.other3=lower4_.id__ 
    left outer join
        rootclass lower4_1_ 
            on lower4_.id__=lower4_1_.id1_ 
    left outer join
        Po po5_ 
            on lower4_.id__=po5_.id_ 
    left outer join
        nonleafsubclass multi6_ 
            on top3_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on multi6_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on multi6_2_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        set0_.parent=?
14:16:33,693 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_,
        top0_.count_ as count2_7_,
        top0_.name as name7_,
        top0_.address as address7_,
        top0_.date_ as date5_7_,
        top0_.top_ as top6_7_,
        top0_2_.intprop as intprop2_,
        top0_2_.other1 as other3_2_,
        top0_2_.other3 as other4_2_,
        top0_2_.foo as foo2_,
        top0_3_.dupe as dupe6_,
        top0_3_.other2 as other3_6_,
        top0_3_.po as po6_,
        top0_3_.cal as cal6_,
        top0_3_.floaty as floaty6_,
        top0_4_.dupe as dupe3_,
        top0_4_.parent as parent3_,
        upper(top0_3_.dupe) as formula91_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    where
        (
            top0_.id1_ is not null
        )
14:16:33,704 DEBUG SQL:104 - 
    update
        rootclass 
    set
        parent=null 
    where
        parent=?
14:16:33,704 DEBUG SQL:104 - 
    delete 
    from
        simple_simple 
    where
        simple1=?
14:16:33,704 DEBUG SQL:104 - 
    delete 
    from
        rootclass 
    where
        id1_=? 
        and count_=?
14:16:33,716 DEBUG SQL:104 - 
    delete 
    from
        rootclass 
    where
        id1_=? 
        and count_=?
14:16:33,716 DEBUG SQL:104 - 
    delete 
    from
        leafsubclass 
    where
        id__=?
14:16:33,717 DEBUG SQL:104 - 
    delete 
    from
        rootclass 
    where
        id1_=? 
        and count_=?
14:16:33,717 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_,
        top0_.count_ as count2_7_,
        top0_.name as name7_,
        top0_.address as address7_,
        top0_.date_ as date5_7_,
        top0_.top_ as top6_7_,
        top0_2_.intprop as intprop2_,
        top0_2_.other1 as other3_2_,
        top0_2_.other3 as other4_2_,
        top0_2_.foo as foo2_,
        top0_3_.dupe as dupe6_,
        top0_3_.other2 as other3_6_,
        top0_3_.po as po6_,
        top0_3_.cal as cal6_,
        top0_3_.floaty as floaty6_,
        top0_4_.dupe as dupe3_,
        top0_4_.parent as parent3_,
        upper(top0_3_.dupe) as formula91_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    where
        (
            top0_.id1_ is not null
        )
14:16:33,727 DEBUG SQL:104 - 
    select
        po0_.id_ as id1_0_,
        po0_.value_ as value2_0_,
        po0_.tl as tl0_ 
    from
        Po po0_
14:16:33,749  INFO CustomRunner:139 - Test: testMultiTableGeneratedId
14:16:33,750 DEBUG SQL:104 - 
    insert 
    into
        rootclass
        (id1_, count_, name, address, date_, top_) 
    values
        (null, ?, ?, ?, ?, ?)
14:16:33,751 DEBUG SQL:104 - 
    insert 
    into
        nonleafsubclass
        (dupe, other2, po, cal, floaty, sid) 
    values
        (?, ?, ?, ?, ?, ?)
14:16:33,751 DEBUG SQL:104 - 
    insert 
    into
        rootclass
        (count_, name, date_, id1_) 
    values
        (?, ?, ?, null)
14:16:33,751 DEBUG SQL:104 - 
    insert 
    into
        rootclass
        (id1_, count_, name, address, date_, top_) 
    values
        (null, ?, ?, ?, ?, ?)
14:16:33,760 DEBUG SQL:104 - 
    insert 
    into
        nonleafsubclass
        (dupe, other2, po, cal, floaty, sid) 
    values
        (?, ?, ?, ?, ?, ?)
14:16:33,760 DEBUG SQL:104 - 
    insert 
    into
        leafsubsubclass
        (dupe, parent, sid) 
    values
        (?, ?, ?)
14:16:33,761 DEBUG SQL:104 - 
    select
        top_.id1_,
        top_.count_ as count2_7_,
        top_.name as name7_,
        top_.address as address7_,
        top_.date_ as date5_7_,
        top_.top_ as top6_7_ 
    from
        rootclass top_ 
    where
        top_.id1_=?
14:16:33,761 DEBUG SQL:104 - 
    update
        rootclass 
    set
        count_=?,
        name=?,
        address=?,
        date_=?,
        top_=? 
    where
        id1_=? 
        and count_=?
14:16:33,771 DEBUG SQL:104 - 
    update
        nonleafsubclass 
    set
        dupe=?,
        other2=?,
        po=?,
        cal=?,
        floaty=? 
    where
        sid=?
14:16:33,771 DEBUG SQL:104 - 
    update
        rootclass 
    set
        count_=?,
        name=? 
    where
        id1_=? 
        and count_=?
14:16:33,781 DEBUG SQL:104 - 
    update
        rootclass 
    set
        count_=?,
        name=?,
        address=?,
        date_=?,
        top_=? 
    where
        id1_=? 
        and count_=?
14:16:33,782 DEBUG SQL:104 - 
    update
        nonleafsubclass 
    set
        dupe=?,
        other2=?,
        po=?,
        cal=?,
        floaty=? 
    where
        sid=?
14:16:33,782 DEBUG SQL:104 - 
    update
        leafsubsubclass 
    set
        dupe=?,
        parent=? 
    where
        sid=?
14:16:33,793 DEBUG SQL:104 - 
    update
        leafsubsubclass 
    set
        another_parent=null,
        list_ind=null 
    where
        another_parent=?
14:16:33,794 DEBUG SQL:104 - 
    select
        multi0_.sid as id1_7_8_,
        multi0_1_.count_ as count2_7_8_,
        multi0_1_.name as name7_8_,
        multi0_1_.address as address7_8_,
        multi0_1_.date_ as date5_7_8_,
        multi0_1_.top_ as top6_7_8_,
        multi0_.dupe as dupe6_8_,
        multi0_.other2 as other3_6_8_,
        multi0_.po as po6_8_,
        multi0_.cal as cal6_8_,
        multi0_.floaty as floaty6_8_,
        multi0_2_.dupe as dupe3_8_,
        multi0_2_.parent as parent3_8_,
        upper(multi0_.dupe) as formula91_8_,
        case 
            when multi0_2_.sid is not null then 4 
            when multi0_.sid is not null then 3 
        end as clazz_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        lower2_.id__ as id1_7_1_,
        lower2_1_.count_ as count2_7_1_,
        lower2_1_.name as name7_1_,
        lower2_1_.address as address7_1_,
        lower2_1_.date_ as date5_7_1_,
        lower2_1_.top_ as top6_7_1_,
        lower2_.intprop as intprop2_1_,
        lower2_.other1 as other3_2_1_,
        lower2_.other3 as other4_2_1_,
        lower2_.foo as foo2_1_,
        top3_.id1_ as id1_7_2_,
        top3_.count_ as count2_7_2_,
        top3_.name as name7_2_,
        top3_.address as address7_2_,
        top3_.date_ as date5_7_2_,
        top3_.top_ as top6_7_2_,
        top3_2_.intprop as intprop2_2_,
        top3_2_.other1 as other3_2_2_,
        top3_2_.other3 as other4_2_2_,
        top3_2_.foo as foo2_2_,
        top3_3_.dupe as dupe6_2_,
        top3_3_.other2 as other3_6_2_,
        top3_3_.po as po6_2_,
        top3_3_.cal as cal6_2_,
        top3_3_.floaty as floaty6_2_,
        top3_4_.dupe as dupe3_2_,
        top3_4_.parent as parent3_2_,
        upper(top3_3_.dupe) as formula91_2_,
        case 
            when top3_4_.sid is not null then 4 
            when top3_1_.tcid is not null then 1 
            when top3_2_.id__ is not null then 2 
            when top3_3_.sid is not null then 3 
            when top3_5_.superid is not null then 5 
            when top3_.id1_ is not null then 0 
        end as clazz_2_,
        lower4_.id__ as id1_7_3_,
        lower4_1_.count_ as count2_7_3_,
        lower4_1_.name as name7_3_,
        lower4_1_.address as address7_3_,
        lower4_1_.date_ as date5_7_3_,
        lower4_1_.top_ as top6_7_3_,
        lower4_.intprop as intprop2_3_,
        lower4_.other1 as other3_2_3_,
        lower4_.other3 as other4_2_3_,
        lower4_.foo as foo2_3_,
        po5_.id_ as id1_0_4_,
        po5_.value_ as value2_0_4_,
        po5_.tl as tl0_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        nonleafsubclass multi0_ 
    inner join
        rootclass multi0_1_ 
            on multi0_.sid=multi0_1_.id1_ 
    left outer join
        leafsubsubclass multi0_2_ 
            on multi0_.sid=multi0_2_.sid 
    left outer join
        rootclass top1_ 
            on multi0_1_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        leafsubclass lower2_ 
            on top1_.id1_=lower2_.id__ 
    left outer join
        rootclass lower2_1_ 
            on lower2_.id__=lower2_1_.id1_ 
    left outer join
        rootclass top3_ 
            on lower2_.other1=top3_.id1_ 
    left outer join
        TrivialClass top3_1_ 
            on top3_.id1_=top3_1_.tcid 
    left outer join
        leafsubclass top3_2_ 
            on top3_.id1_=top3_2_.id__ 
    left outer join
        nonleafsubclass top3_3_ 
            on top3_.id1_=top3_3_.sid 
    left outer join
        leafsubsubclass top3_4_ 
            on top3_.id1_=top3_4_.sid 
    left outer join
        mono top3_5_ 
            on top3_.id1_=top3_5_.superid 
    left outer join
        leafsubclass lower4_ 
            on top3_2_.other3=lower4_.id__ 
    left outer join
        rootclass lower4_1_ 
            on lower4_.id__=lower4_1_.id1_ 
    left outer join
        Po po5_ 
            on lower4_.id__=po5_.id_ 
    left outer join
        nonleafsubclass multi6_ 
            on top3_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on multi6_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on multi6_2_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        multi0_.sid=? 
        and (
            multi0_1_.id1_ is not null
        ) 
14:16:33,857 DEBUG SQL:104 - 
    select
        submulti0_.sid as id1_7_8_,
        submulti0_2_.count_ as count2_7_8_,
        submulti0_2_.name as name7_8_,
        submulti0_2_.address as address7_8_,
        submulti0_2_.date_ as date5_7_8_,
        submulti0_2_.top_ as top6_7_8_,
        submulti0_1_.dupe as dupe6_8_,
        submulti0_1_.other2 as other3_6_8_,
        submulti0_1_.po as po6_8_,
        submulti0_1_.cal as cal6_8_,
        submulti0_1_.floaty as floaty6_8_,
        submulti0_.dupe as dupe3_8_,
        submulti0_.parent as parent3_8_,
        upper(submulti0_1_.dupe) as formula91_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        lower2_.id__ as id1_7_1_,
        lower2_1_.count_ as count2_7_1_,
        lower2_1_.name as name7_1_,
        lower2_1_.address as address7_1_,
        lower2_1_.date_ as date5_7_1_,
        lower2_1_.top_ as top6_7_1_,
        lower2_.intprop as intprop2_1_,
        lower2_.other1 as other3_2_1_,
        lower2_.other3 as other4_2_1_,
        lower2_.foo as foo2_1_,
        top3_.id1_ as id1_7_2_,
        top3_.count_ as count2_7_2_,
        top3_.name as name7_2_,
        top3_.address as address7_2_,
        top3_.date_ as date5_7_2_,
        top3_.top_ as top6_7_2_,
        top3_2_.intprop as intprop2_2_,
        top3_2_.other1 as other3_2_2_,
        top3_2_.other3 as other4_2_2_,
        top3_2_.foo as foo2_2_,
        top3_3_.dupe as dupe6_2_,
        top3_3_.other2 as other3_6_2_,
        top3_3_.po as po6_2_,
        top3_3_.cal as cal6_2_,
        top3_3_.floaty as floaty6_2_,
        top3_4_.dupe as dupe3_2_,
        top3_4_.parent as parent3_2_,
        upper(top3_3_.dupe) as formula91_2_,
        case 
            when top3_4_.sid is not null then 4 
            when top3_1_.tcid is not null then 1 
            when top3_2_.id__ is not null then 2 
            when top3_3_.sid is not null then 3 
            when top3_5_.superid is not null then 5 
            when top3_.id1_ is not null then 0 
        end as clazz_2_,
        lower4_.id__ as id1_7_3_,
        lower4_1_.count_ as count2_7_3_,
        lower4_1_.name as name7_3_,
        lower4_1_.address as address7_3_,
        lower4_1_.date_ as date5_7_3_,
        lower4_1_.top_ as top6_7_3_,
        lower4_.intprop as intprop2_3_,
        lower4_.other1 as other3_2_3_,
        lower4_.other3 as other4_2_3_,
        lower4_.foo as foo2_3_,
        po5_.id_ as id1_0_4_,
        po5_.value_ as value2_0_4_,
        po5_.tl as tl0_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        leafsubsubclass submulti0_ 
    inner join
        nonleafsubclass submulti0_1_ 
            on submulti0_.sid=submulti0_1_.sid 
    inner join
        rootclass submulti0_2_ 
            on submulti0_.sid=submulti0_2_.id1_ 
    left outer join
        rootclass top1_ 
            on submulti0_2_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        leafsubclass lower2_ 
            on top1_.id1_=lower2_.id__ 
    left outer join
        rootclass lower2_1_ 
            on lower2_.id__=lower2_1_.id1_ 
    left outer join
        rootclass top3_ 
            on lower2_.other1=top3_.id1_ 
    left outer join
        TrivialClass top3_1_ 
            on top3_.id1_=top3_1_.tcid 
    left outer join
        leafsubclass top3_2_ 
            on top3_.id1_=top3_2_.id__ 
    left outer join
        nonleafsubclass top3_3_ 
            on top3_.id1_=top3_3_.sid 
    left outer join
        leafsubsubclass top3_4_ 
            on top3_.id1_=top3_4_.sid 
    left outer join
        mono top3_5_ 
            on top3_.id1_=top3_5_.superid 
    left outer join
        leafsubclass lower4_ 
            on top3_2_.other3=lower4_.id__ 
    left outer join
        rootclass lower4_1_ 
            on lower4_.id__=lower4_1_.id1_ 
    left outer join
        Po po5_ 
            on lower4_.id__=po5_.id_ 
    left outer join
        nonleafsubclass multi6_ 
            on top3_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on multi6_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on multi6_2_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        submulti0_.sid=? 
        and (
            submulti0_2_.id1_ is not null
        ) 
14:16:33,930 DEBUG SQL:104 - 
    update
        rootclass 
    set
        count_=?,
        name=?,
        address=?,
        date_=?,
        top_=? 
    where
        id1_=? 
        and count_=?
14:16:33,939 DEBUG SQL:104 - 
    update
        nonleafsubclass 
    set
        dupe=?,
        other2=?,
        po=?,
        cal=?,
        floaty=? 
    where
        sid=?
14:16:33,939 DEBUG SQL:104 - 
    update
        rootclass 
    set
        count_=?,
        name=?,
        address=?,
        date_=?,
        top_=? 
    where
        id1_=? 
        and count_=?
14:16:33,948 DEBUG SQL:104 - 
    update
        leafsubsubclass 
    set
        dupe=?,
        parent=? 
    where
        sid=?
14:16:33,949 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_8_,
        top0_.count_ as count2_7_8_,
        top0_.name as name7_8_,
        top0_.address as address7_8_,
        top0_.date_ as date5_7_8_,
        top0_.top_ as top6_7_8_,
        top0_2_.intprop as intprop2_8_,
        top0_2_.other1 as other3_2_8_,
        top0_2_.other3 as other4_2_8_,
        top0_2_.foo as foo2_8_,
        top0_3_.dupe as dupe6_8_,
        top0_3_.other2 as other3_6_8_,
        top0_3_.po as po6_8_,
        top0_3_.cal as cal6_8_,
        top0_3_.floaty as floaty6_8_,
        top0_4_.dupe as dupe3_8_,
        top0_4_.parent as parent3_8_,
        upper(top0_3_.dupe) as formula91_8_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        lower2_.id__ as id1_7_1_,
        lower2_1_.count_ as count2_7_1_,
        lower2_1_.name as name7_1_,
        lower2_1_.address as address7_1_,
        lower2_1_.date_ as date5_7_1_,
        lower2_1_.top_ as top6_7_1_,
        lower2_.intprop as intprop2_1_,
        lower2_.other1 as other3_2_1_,
        lower2_.other3 as other4_2_1_,
        lower2_.foo as foo2_1_,
        top3_.id1_ as id1_7_2_,
        top3_.count_ as count2_7_2_,
        top3_.name as name7_2_,
        top3_.address as address7_2_,
        top3_.date_ as date5_7_2_,
        top3_.top_ as top6_7_2_,
        top3_2_.intprop as intprop2_2_,
        top3_2_.other1 as other3_2_2_,
        top3_2_.other3 as other4_2_2_,
        top3_2_.foo as foo2_2_,
        top3_3_.dupe as dupe6_2_,
        top3_3_.other2 as other3_6_2_,
        top3_3_.po as po6_2_,
        top3_3_.cal as cal6_2_,
        top3_3_.floaty as floaty6_2_,
        top3_4_.dupe as dupe3_2_,
        top3_4_.parent as parent3_2_,
        upper(top3_3_.dupe) as formula91_2_,
        case 
            when top3_4_.sid is not null then 4 
            when top3_1_.tcid is not null then 1 
            when top3_2_.id__ is not null then 2 
            when top3_3_.sid is not null then 3 
            when top3_5_.superid is not null then 5 
            when top3_.id1_ is not null then 0 
        end as clazz_2_,
        lower4_.id__ as id1_7_3_,
        lower4_1_.count_ as count2_7_3_,
        lower4_1_.name as name7_3_,
        lower4_1_.address as address7_3_,
        lower4_1_.date_ as date5_7_3_,
        lower4_1_.top_ as top6_7_3_,
        lower4_.intprop as intprop2_3_,
        lower4_.other1 as other3_2_3_,
        lower4_.other3 as other4_2_3_,
        lower4_.foo as foo2_3_,
        po5_.id_ as id1_0_4_,
        po5_.value_ as value2_0_4_,
        po5_.tl as tl0_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    left outer join
        rootclass top1_ 
            on top0_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        leafsubclass lower2_ 
            on top1_.id1_=lower2_.id__ 
    left outer join
        rootclass lower2_1_ 
            on lower2_.id__=lower2_1_.id1_ 
    left outer join
        rootclass top3_ 
            on lower2_.other1=top3_.id1_ 
    left outer join
        TrivialClass top3_1_ 
            on top3_.id1_=top3_1_.tcid 
    left outer join
        leafsubclass top3_2_ 
            on top3_.id1_=top3_2_.id__ 
    left outer join
        nonleafsubclass top3_3_ 
            on top3_.id1_=top3_3_.sid 
    left outer join
        leafsubsubclass top3_4_ 
            on top3_.id1_=top3_4_.sid 
    left outer join
        mono top3_5_ 
            on top3_.id1_=top3_5_.superid 
    left outer join
        leafsubclass lower4_ 
            on top3_2_.other3=lower4_.id__ 
    left outer join
        rootclass lower4_1_ 
            on lower4_.id__=lower4_1_.id1_ 
    left outer join
        Po po5_ 
            on lower4_.id__=po5_.id_ 
    left outer join
        nonleafsubclass multi6_ 
            on top3_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on multi6_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on multi6_2_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        top0_.id1_=? 
        and (
            top0_.id1_ is not null
        ) 
14:16:34,014 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_8_,
        top0_.count_ as count2_7_8_,
        top0_.name as name7_8_,
        top0_.address as address7_8_,
        top0_.date_ as date5_7_8_,
        top0_.top_ as top6_7_8_,
        top0_2_.intprop as intprop2_8_,
        top0_2_.other1 as other3_2_8_,
        top0_2_.other3 as other4_2_8_,
        top0_2_.foo as foo2_8_,
        top0_3_.dupe as dupe6_8_,
        top0_3_.other2 as other3_6_8_,
        top0_3_.po as po6_8_,
        top0_3_.cal as cal6_8_,
        top0_3_.floaty as floaty6_8_,
        top0_4_.dupe as dupe3_8_,
        top0_4_.parent as parent3_8_,
        upper(top0_3_.dupe) as formula91_8_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        lower2_.id__ as id1_7_1_,
        lower2_1_.count_ as count2_7_1_,
        lower2_1_.name as name7_1_,
        lower2_1_.address as address7_1_,
        lower2_1_.date_ as date5_7_1_,
        lower2_1_.top_ as top6_7_1_,
        lower2_.intprop as intprop2_1_,
        lower2_.other1 as other3_2_1_,
        lower2_.other3 as other4_2_1_,
        lower2_.foo as foo2_1_,
        top3_.id1_ as id1_7_2_,
        top3_.count_ as count2_7_2_,
        top3_.name as name7_2_,
        top3_.address as address7_2_,
        top3_.date_ as date5_7_2_,
        top3_.top_ as top6_7_2_,
        top3_2_.intprop as intprop2_2_,
        top3_2_.other1 as other3_2_2_,
        top3_2_.other3 as other4_2_2_,
        top3_2_.foo as foo2_2_,
        top3_3_.dupe as dupe6_2_,
        top3_3_.other2 as other3_6_2_,
        top3_3_.po as po6_2_,
        top3_3_.cal as cal6_2_,
        top3_3_.floaty as floaty6_2_,
        top3_4_.dupe as dupe3_2_,
        top3_4_.parent as parent3_2_,
        upper(top3_3_.dupe) as formula91_2_,
        case 
            when top3_4_.sid is not null then 4 
            when top3_1_.tcid is not null then 1 
            when top3_2_.id__ is not null then 2 
            when top3_3_.sid is not null then 3 
            when top3_5_.superid is not null then 5 
            when top3_.id1_ is not null then 0 
        end as clazz_2_,
        lower4_.id__ as id1_7_3_,
        lower4_1_.count_ as count2_7_3_,
        lower4_1_.name as name7_3_,
        lower4_1_.address as address7_3_,
        lower4_1_.date_ as date5_7_3_,
        lower4_1_.top_ as top6_7_3_,
        lower4_.intprop as intprop2_3_,
        lower4_.other1 as other3_2_3_,
        lower4_.other3 as other4_2_3_,
        lower4_.foo as foo2_3_,
        po5_.id_ as id1_0_4_,
        po5_.value_ as value2_0_4_,
        po5_.tl as tl0_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    left outer join
        rootclass top1_ 
            on top0_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        leafsubclass lower2_ 
            on top1_.id1_=lower2_.id__ 
    left outer join
        rootclass lower2_1_ 
            on lower2_.id__=lower2_1_.id1_ 
    left outer join
        rootclass top3_ 
            on lower2_.other1=top3_.id1_ 
    left outer join
        TrivialClass top3_1_ 
            on top3_.id1_=top3_1_.tcid 
    left outer join
        leafsubclass top3_2_ 
            on top3_.id1_=top3_2_.id__ 
    left outer join
        nonleafsubclass top3_3_ 
            on top3_.id1_=top3_3_.sid 
    left outer join
        leafsubsubclass top3_4_ 
            on top3_.id1_=top3_4_.sid 
    left outer join
        mono top3_5_ 
            on top3_.id1_=top3_5_.superid 
    left outer join
        leafsubclass lower4_ 
            on top3_2_.other3=lower4_.id__ 
    left outer join
        rootclass lower4_1_ 
            on lower4_.id__=lower4_1_.id1_ 
    left outer join
        Po po5_ 
            on lower4_.id__=po5_.id_ 
    left outer join
        nonleafsubclass multi6_ 
            on top3_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on multi6_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on multi6_2_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        top0_.id1_=? 
        and (
            top0_.id1_ is not null
        ) 
14:16:34,092 DEBUG SQL:104 - 
    select
        top0_.id1_ as col_0_0_ 
    from
        rootclass top0_ 
    where
        (
            top0_.id1_ is not null
        ) 
        and (
            (
                top0_.count_>0 
            )
        )
14:16:34,099 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_8_,
        top0_.count_ as count2_7_8_,
        top0_.name as name7_8_,
        top0_.address as address7_8_,
        top0_.date_ as date5_7_8_,
        top0_.top_ as top6_7_8_,
        top0_2_.intprop as intprop2_8_,
        top0_2_.other1 as other3_2_8_,
        top0_2_.other3 as other4_2_8_,
        top0_2_.foo as foo2_8_,
        top0_3_.dupe as dupe6_8_,
        top0_3_.other2 as other3_6_8_,
        top0_3_.po as po6_8_,
        top0_3_.cal as cal6_8_,
        top0_3_.floaty as floaty6_8_,
        top0_4_.dupe as dupe3_8_,
        top0_4_.parent as parent3_8_,
        upper(top0_3_.dupe) as formula91_8_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        lower2_.id__ as id1_7_1_,
        lower2_1_.count_ as count2_7_1_,
        lower2_1_.name as name7_1_,
        lower2_1_.address as address7_1_,
        lower2_1_.date_ as date5_7_1_,
        lower2_1_.top_ as top6_7_1_,
        lower2_.intprop as intprop2_1_,
        lower2_.other1 as other3_2_1_,
        lower2_.other3 as other4_2_1_,
        lower2_.foo as foo2_1_,
        top3_.id1_ as id1_7_2_,
        top3_.count_ as count2_7_2_,
        top3_.name as name7_2_,
        top3_.address as address7_2_,
        top3_.date_ as date5_7_2_,
        top3_.top_ as top6_7_2_,
        top3_2_.intprop as intprop2_2_,
        top3_2_.other1 as other3_2_2_,
        top3_2_.other3 as other4_2_2_,
        top3_2_.foo as foo2_2_,
        top3_3_.dupe as dupe6_2_,
        top3_3_.other2 as other3_6_2_,
        top3_3_.po as po6_2_,
        top3_3_.cal as cal6_2_,
        top3_3_.floaty as floaty6_2_,
        top3_4_.dupe as dupe3_2_,
        top3_4_.parent as parent3_2_,
        upper(top3_3_.dupe) as formula91_2_,
        case 
            when top3_4_.sid is not null then 4 
            when top3_1_.tcid is not null then 1 
            when top3_2_.id__ is not null then 2 
            when top3_3_.sid is not null then 3 
            when top3_5_.superid is not null then 5 
            when top3_.id1_ is not null then 0 
        end as clazz_2_,
        lower4_.id__ as id1_7_3_,
        lower4_1_.count_ as count2_7_3_,
        lower4_1_.name as name7_3_,
        lower4_1_.address as address7_3_,
        lower4_1_.date_ as date5_7_3_,
        lower4_1_.top_ as top6_7_3_,
        lower4_.intprop as intprop2_3_,
        lower4_.other1 as other3_2_3_,
        lower4_.other3 as other4_2_3_,
        lower4_.foo as foo2_3_,
        po5_.id_ as id1_0_4_,
        po5_.value_ as value2_0_4_,
        po5_.tl as tl0_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    left outer join
        rootclass top1_ 
            on top0_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        leafsubclass lower2_ 
            on top1_.id1_=lower2_.id__ 
    left outer join
        rootclass lower2_1_ 
            on lower2_.id__=lower2_1_.id1_ 
    left outer join
        rootclass top3_ 
            on lower2_.other1=top3_.id1_ 
    left outer join
        TrivialClass top3_1_ 
            on top3_.id1_=top3_1_.tcid 
    left outer join
        leafsubclass top3_2_ 
            on top3_.id1_=top3_2_.id__ 
    left outer join
        nonleafsubclass top3_3_ 
            on top3_.id1_=top3_3_.sid 
    left outer join
        leafsubsubclass top3_4_ 
            on top3_.id1_=top3_4_.sid 
    left outer join
        mono top3_5_ 
            on top3_.id1_=top3_5_.superid 
    left outer join
        leafsubclass lower4_ 
            on top3_2_.other3=lower4_.id__ 
    left outer join
        rootclass lower4_1_ 
            on lower4_.id__=lower4_1_.id1_ 
    left outer join
        Po po5_ 
            on lower4_.id__=po5_.id_ 
    left outer join
        nonleafsubclass multi6_ 
            on top3_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on multi6_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on multi6_2_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        top0_.id1_=? 
        and (
            top0_.id1_ is not null
        ) 
14:16:34,176 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_8_,
        top0_.count_ as count2_7_8_,
        top0_.name as name7_8_,
        top0_.address as address7_8_,
        top0_.date_ as date5_7_8_,
        top0_.top_ as top6_7_8_,
        top0_2_.intprop as intprop2_8_,
        top0_2_.other1 as other3_2_8_,
        top0_2_.other3 as other4_2_8_,
        top0_2_.foo as foo2_8_,
        top0_3_.dupe as dupe6_8_,
        top0_3_.other2 as other3_6_8_,
        top0_3_.po as po6_8_,
        top0_3_.cal as cal6_8_,
        top0_3_.floaty as floaty6_8_,
        top0_4_.dupe as dupe3_8_,
        top0_4_.parent as parent3_8_,
        upper(top0_3_.dupe) as formula91_8_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        lower2_.id__ as id1_7_1_,
        lower2_1_.count_ as count2_7_1_,
        lower2_1_.name as name7_1_,
        lower2_1_.address as address7_1_,
        lower2_1_.date_ as date5_7_1_,
        lower2_1_.top_ as top6_7_1_,
        lower2_.intprop as intprop2_1_,
        lower2_.other1 as other3_2_1_,
        lower2_.other3 as other4_2_1_,
        lower2_.foo as foo2_1_,
        top3_.id1_ as id1_7_2_,
        top3_.count_ as count2_7_2_,
        top3_.name as name7_2_,
        top3_.address as address7_2_,
        top3_.date_ as date5_7_2_,
        top3_.top_ as top6_7_2_,
        top3_2_.intprop as intprop2_2_,
        top3_2_.other1 as other3_2_2_,
        top3_2_.other3 as other4_2_2_,
        top3_2_.foo as foo2_2_,
        top3_3_.dupe as dupe6_2_,
        top3_3_.other2 as other3_6_2_,
        top3_3_.po as po6_2_,
        top3_3_.cal as cal6_2_,
        top3_3_.floaty as floaty6_2_,
        top3_4_.dupe as dupe3_2_,
        top3_4_.parent as parent3_2_,
        upper(top3_3_.dupe) as formula91_2_,
        case 
            when top3_4_.sid is not null then 4 
            when top3_1_.tcid is not null then 1 
            when top3_2_.id__ is not null then 2 
            when top3_3_.sid is not null then 3 
            when top3_5_.superid is not null then 5 
            when top3_.id1_ is not null then 0 
        end as clazz_2_,
        lower4_.id__ as id1_7_3_,
        lower4_1_.count_ as count2_7_3_,
        lower4_1_.name as name7_3_,
        lower4_1_.address as address7_3_,
        lower4_1_.date_ as date5_7_3_,
        lower4_1_.top_ as top6_7_3_,
        lower4_.intprop as intprop2_3_,
        lower4_.other1 as other3_2_3_,
        lower4_.other3 as other4_2_3_,
        lower4_.foo as foo2_3_,
        po5_.id_ as id1_0_4_,
        po5_.value_ as value2_0_4_,
        po5_.tl as tl0_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    left outer join
        rootclass top1_ 
            on top0_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        leafsubclass lower2_ 
            on top1_.id1_=lower2_.id__ 
    left outer join
        rootclass lower2_1_ 
            on lower2_.id__=lower2_1_.id1_ 
    left outer join
        rootclass top3_ 
            on lower2_.other1=top3_.id1_ 
    left outer join
        TrivialClass top3_1_ 
            on top3_.id1_=top3_1_.tcid 
    left outer join
        leafsubclass top3_2_ 
            on top3_.id1_=top3_2_.id__ 
    left outer join
        nonleafsubclass top3_3_ 
            on top3_.id1_=top3_3_.sid 
    left outer join
        leafsubsubclass top3_4_ 
            on top3_.id1_=top3_4_.sid 
    left outer join
        mono top3_5_ 
            on top3_.id1_=top3_5_.superid 
    left outer join
        leafsubclass lower4_ 
            on top3_2_.other3=lower4_.id__ 
    left outer join
        rootclass lower4_1_ 
            on lower4_.id__=lower4_1_.id1_ 
    left outer join
        Po po5_ 
            on lower4_.id__=po5_.id_ 
    left outer join
        nonleafsubclass multi6_ 
            on top3_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on multi6_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on multi6_2_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        top0_.id1_=? 
        and (
            top0_.id1_ is not null
        ) 
14:16:34,256 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_8_,
        top0_.count_ as count2_7_8_,
        top0_.name as name7_8_,
        top0_.address as address7_8_,
        top0_.date_ as date5_7_8_,
        top0_.top_ as top6_7_8_,
        top0_2_.intprop as intprop2_8_,
        top0_2_.other1 as other3_2_8_,
        top0_2_.other3 as other4_2_8_,
        top0_2_.foo as foo2_8_,
        top0_3_.dupe as dupe6_8_,
        top0_3_.other2 as other3_6_8_,
        top0_3_.po as po6_8_,
        top0_3_.cal as cal6_8_,
        top0_3_.floaty as floaty6_8_,
        top0_4_.dupe as dupe3_8_,
        top0_4_.parent as parent3_8_,
        upper(top0_3_.dupe) as formula91_8_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        lower2_.id__ as id1_7_1_,
        lower2_1_.count_ as count2_7_1_,
        lower2_1_.name as name7_1_,
        lower2_1_.address as address7_1_,
        lower2_1_.date_ as date5_7_1_,
        lower2_1_.top_ as top6_7_1_,
        lower2_.intprop as intprop2_1_,
        lower2_.other1 as other3_2_1_,
        lower2_.other3 as other4_2_1_,
        lower2_.foo as foo2_1_,
        top3_.id1_ as id1_7_2_,
        top3_.count_ as count2_7_2_,
        top3_.name as name7_2_,
        top3_.address as address7_2_,
        top3_.date_ as date5_7_2_,
        top3_.top_ as top6_7_2_,
        top3_2_.intprop as intprop2_2_,
        top3_2_.other1 as other3_2_2_,
        top3_2_.other3 as other4_2_2_,
        top3_2_.foo as foo2_2_,
        top3_3_.dupe as dupe6_2_,
        top3_3_.other2 as other3_6_2_,
        top3_3_.po as po6_2_,
        top3_3_.cal as cal6_2_,
        top3_3_.floaty as floaty6_2_,
        top3_4_.dupe as dupe3_2_,
        top3_4_.parent as parent3_2_,
        upper(top3_3_.dupe) as formula91_2_,
        case 
            when top3_4_.sid is not null then 4 
            when top3_1_.tcid is not null then 1 
            when top3_2_.id__ is not null then 2 
            when top3_3_.sid is not null then 3 
            when top3_5_.superid is not null then 5 
            when top3_.id1_ is not null then 0 
        end as clazz_2_,
        lower4_.id__ as id1_7_3_,
        lower4_1_.count_ as count2_7_3_,
        lower4_1_.name as name7_3_,
        lower4_1_.address as address7_3_,
        lower4_1_.date_ as date5_7_3_,
        lower4_1_.top_ as top6_7_3_,
        lower4_.intprop as intprop2_3_,
        lower4_.other1 as other3_2_3_,
        lower4_.other3 as other4_2_3_,
        lower4_.foo as foo2_3_,
        po5_.id_ as id1_0_4_,
        po5_.value_ as value2_0_4_,
        po5_.tl as tl0_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    left outer join
        rootclass top1_ 
            on top0_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        leafsubclass lower2_ 
            on top1_.id1_=lower2_.id__ 
    left outer join
        rootclass lower2_1_ 
            on lower2_.id__=lower2_1_.id1_ 
    left outer join
        rootclass top3_ 
            on lower2_.other1=top3_.id1_ 
    left outer join
        TrivialClass top3_1_ 
            on top3_.id1_=top3_1_.tcid 
    left outer join
        leafsubclass top3_2_ 
            on top3_.id1_=top3_2_.id__ 
    left outer join
        nonleafsubclass top3_3_ 
            on top3_.id1_=top3_3_.sid 
    left outer join
        leafsubsubclass top3_4_ 
            on top3_.id1_=top3_4_.sid 
    left outer join
        mono top3_5_ 
            on top3_.id1_=top3_5_.superid 
    left outer join
        leafsubclass lower4_ 
            on top3_2_.other3=lower4_.id__ 
    left outer join
        rootclass lower4_1_ 
            on lower4_.id__=lower4_1_.id1_ 
    left outer join
        Po po5_ 
            on lower4_.id__=po5_.id_ 
    left outer join
        nonleafsubclass multi6_ 
            on top3_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on multi6_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on multi6_2_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        top0_.id1_=? 
        and (
            top0_.id1_ is not null
        ) 
14:16:34,331 DEBUG SQL:104 - 
    select
        multi0_.sid as id1_7_,
        multi0_1_.count_ as count2_7_,
        multi0_1_.name as name7_,
        multi0_1_.address as address7_,
        multi0_1_.date_ as date5_7_,
        multi0_1_.top_ as top6_7_,
        multi0_.dupe as dupe6_,
        multi0_.other2 as other3_6_,
        multi0_.po as po6_,
        multi0_.cal as cal6_,
        multi0_.floaty as floaty6_,
        multi0_2_.dupe as dupe3_,
        multi0_2_.parent as parent3_,
        upper(multi0_.dupe) as formula91_,
        case 
            when multi0_2_.sid is not null then 4 
            when multi0_.sid is not null then 3 
        end as clazz_ 
    from
        nonleafsubclass multi0_ 
    inner join
        rootclass multi0_1_ 
            on multi0_.sid=multi0_1_.id1_ 
    left outer join
        leafsubsubclass multi0_2_ 
            on multi0_.sid=multi0_2_.sid 
    where
        (
            multi0_1_.id1_ is not null
        ) 
        and (
            (
                multi0_1_.count_>0 
            )
            and(
                multi0_.dupe is not null 
            )
        )
14:16:34,332 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_,
        top0_.count_ as count2_7_,
        top0_.name as name7_,
        top0_.address as address7_,
        top0_.date_ as date5_7_,
        top0_.top_ as top6_7_,
        top0_2_.intprop as intprop2_,
        top0_2_.other1 as other3_2_,
        top0_2_.other3 as other4_2_,
        top0_2_.foo as foo2_,
        top0_3_.dupe as dupe6_,
        top0_3_.other2 as other3_6_,
        top0_3_.po as po6_,
        top0_3_.cal as cal6_,
        top0_3_.floaty as floaty6_,
        top0_4_.dupe as dupe3_,
        top0_4_.parent as parent3_,
        upper(top0_3_.dupe) as formula91_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    where
        (
            top0_.id1_ is not null
        ) 
        and (
            (
                top0_.count_>0 
            )
            and(
                top0_.name is not null 
            )
        )
14:16:34,355 DEBUG SQL:104 - 
    select
        lower0_.id__ as id1_7_,
        lower0_1_.count_ as count2_7_,
        lower0_1_.name as name7_,
        lower0_1_.address as address7_,
        lower0_1_.date_ as date5_7_,
        lower0_1_.top_ as top6_7_,
        lower0_.intprop as intprop2_,
        lower0_.other1 as other3_2_,
        lower0_.other3 as other4_2_,
        lower0_.foo as foo2_ 
    from
        leafsubclass lower0_ 
    inner join
        rootclass lower0_1_ 
            on lower0_.id__=lower0_1_.id1_ 
    where
        (
            lower0_1_.id1_ is not null
        ) 
        and (
            (
                lower0_.id__ is not null 
            )
        )
14:16:34,376 DEBUG SQL:104 - 
    select
        multi0_.sid as id1_7_,
        multi0_1_.count_ as count2_7_,
        multi0_1_.name as name7_,
        multi0_1_.address as address7_,
        multi0_1_.date_ as date5_7_,
        multi0_1_.top_ as top6_7_,
        multi0_.dupe as dupe6_,
        multi0_.other2 as other3_6_,
        multi0_.po as po6_,
        multi0_.cal as cal6_,
        multi0_.floaty as floaty6_,
        multi0_2_.dupe as dupe3_,
        multi0_2_.parent as parent3_,
        upper(multi0_.dupe) as formula91_,
        case 
            when multi0_2_.sid is not null then 4 
            when multi0_.sid is not null then 3 
        end as clazz_ 
    from
        nonleafsubclass multi0_ 
    inner join
        rootclass multi0_1_ 
            on multi0_.sid=multi0_1_.id1_ 
    left outer join
        leafsubsubclass multi0_2_ 
            on multi0_.sid=multi0_2_.sid 
    where
        (
            multi0_1_.id1_ is not null
        ) 
        and (
            (
                multi0_.other2=1 
            )
        )
14:16:34,388 DEBUG SQL:104 - 
    select
        submulti0_.sid as id1_7_,
        submulti0_2_.count_ as count2_7_,
        submulti0_2_.name as name7_,
        submulti0_2_.address as address7_,
        submulti0_2_.date_ as date5_7_,
        submulti0_2_.top_ as top6_7_,
        submulti0_1_.dupe as dupe6_,
        submulti0_1_.other2 as other3_6_,
        submulti0_1_.po as po6_,
        submulti0_1_.cal as cal6_,
        submulti0_1_.floaty as floaty6_,
        submulti0_.dupe as dupe3_,
        submulti0_.parent as parent3_,
        upper(submulti0_1_.dupe) as formula91_ 
    from
        leafsubsubclass submulti0_ 
    inner join
        nonleafsubclass submulti0_1_ 
            on submulti0_.sid=submulti0_1_.sid 
    inner join
        rootclass submulti0_2_ 
            on submulti0_.sid=submulti0_2_.id1_ 
    where
        (
            submulti0_2_.id1_ is not null
        ) 
        and (
            (
                submulti0_.dupe>0.0 
            )
        )
14:16:34,398 DEBUG SQL:104 - 
    select
        multi0_.sid as id1_7_,
        multi0_1_.count_ as count2_7_,
        multi0_1_.name as name7_,
        multi0_1_.address as address7_,
        multi0_1_.date_ as date5_7_,
        multi0_1_.top_ as top6_7_,
        multi0_.dupe as dupe6_,
        multi0_.other2 as other3_6_,
        multi0_.po as po6_,
        multi0_.cal as cal6_,
        multi0_.floaty as floaty6_,
        multi0_2_.dupe as dupe3_,
        multi0_2_.parent as parent3_,
        upper(multi0_.dupe) as formula91_,
        case 
            when multi0_2_.sid is not null then 4 
            when multi0_.sid is not null then 3 
        end as clazz_ 
    from
        nonleafsubclass multi0_ 
    inner join
        rootclass multi0_1_ 
            on multi0_.sid=multi0_1_.id1_ 
    left outer join
        leafsubsubclass multi0_2_ 
            on multi0_.sid=multi0_2_.sid 
    where
        (
            multi0_1_.id1_ is not null
        )
14:16:34,409 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_,
        top0_.count_ as count2_7_,
        top0_.name as name7_,
        top0_.address as address7_,
        top0_.date_ as date5_7_,
        top0_.top_ as top6_7_,
        top0_2_.intprop as intprop2_,
        top0_2_.other1 as other3_2_,
        top0_2_.other3 as other4_2_,
        top0_2_.foo as foo2_,
        top0_3_.dupe as dupe6_,
        top0_3_.other2 as other3_6_,
        top0_3_.po as po6_,
        top0_3_.cal as cal6_,
        top0_3_.floaty as floaty6_,
        top0_4_.dupe as dupe3_,
        top0_4_.parent as parent3_,
        upper(top0_3_.dupe) as formula91_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    where
        (
            top0_.id1_ is not null
        )
14:16:34,429 DEBUG SQL:104 - 
    select
        lower0_.id__ as id1_7_,
        lower0_1_.count_ as count2_7_,
        lower0_1_.name as name7_,
        lower0_1_.address as address7_,
        lower0_1_.date_ as date5_7_,
        lower0_1_.top_ as top6_7_,
        lower0_.intprop as intprop2_,
        lower0_.other1 as other3_2_,
        lower0_.other3 as other4_2_,
        lower0_.foo as foo2_ 
    from
        leafsubclass lower0_ 
    inner join
        rootclass lower0_1_ 
            on lower0_.id__=lower0_1_.id1_ 
    where
        (
            lower0_1_.id1_ is not null
        )
14:16:34,429 DEBUG SQL:104 - 
    select
        submulti0_.sid as id1_7_,
        submulti0_2_.count_ as count2_7_,
        submulti0_2_.name as name7_,
        submulti0_2_.address as address7_,
        submulti0_2_.date_ as date5_7_,
        submulti0_2_.top_ as top6_7_,
        submulti0_1_.dupe as dupe6_,
        submulti0_1_.other2 as other3_6_,
        submulti0_1_.po as po6_,
        submulti0_1_.cal as cal6_,
        submulti0_1_.floaty as floaty6_,
        submulti0_.dupe as dupe3_,
        submulti0_.parent as parent3_,
        upper(submulti0_1_.dupe) as formula91_ 
    from
        leafsubsubclass submulti0_ 
    inner join
        nonleafsubclass submulti0_1_ 
            on submulti0_.sid=submulti0_1_.sid 
    inner join
        rootclass submulti0_2_ 
            on submulti0_.sid=submulti0_2_.id1_ 
    where
        (
            submulti0_2_.id1_ is not null
        )
14:16:34,439 DEBUG SQL:104 - 
    select
        lower0_.id__ as id1_7_0_,
        top2_.id1_ as id1_7_1_,
        lower0_1_.count_ as count2_7_0_,
        lower0_1_.name as name7_0_,
        lower0_1_.address as address7_0_,
        lower0_1_.date_ as date5_7_0_,
        lower0_1_.top_ as top6_7_0_,
        lower0_.intprop as intprop2_0_,
        lower0_.other1 as other3_2_0_,
        lower0_.other3 as other4_2_0_,
        lower0_.foo as foo2_0_,
        top2_.count_ as count2_7_1_,
        top2_.name as name7_1_,
        top2_.address as address7_1_,
        top2_.date_ as date5_7_1_,
        top2_.top_ as top6_7_1_,
        top2_2_.intprop as intprop2_1_,
        top2_2_.other1 as other3_2_1_,
        top2_2_.other3 as other4_2_1_,
        top2_2_.foo as foo2_1_,
        top2_3_.dupe as dupe6_1_,
        top2_3_.other2 as other3_6_1_,
        top2_3_.po as po6_1_,
        top2_3_.cal as cal6_1_,
        top2_3_.floaty as floaty6_1_,
        top2_4_.dupe as dupe3_1_,
        top2_4_.parent as parent3_1_,
        upper(top2_3_.dupe) as formula91_1_,
        case 
            when top2_4_.sid is not null then 4 
            when top2_1_.tcid is not null then 1 
            when top2_2_.id__ is not null then 2 
            when top2_3_.sid is not null then 3 
            when top2_5_.superid is not null then 5 
            when top2_.id1_ is not null then 0 
        end as clazz_1_ 
    from
        leafsubclass lower0_ 
    inner join
        rootclass lower0_1_ 
            on lower0_.id__=lower0_1_.id1_ 
    inner join
        simple_simple bag1_ 
            on lower0_.id__=bag1_.simple1 
    inner join
        rootclass top2_ 
            on bag1_.simple2=top2_.id1_ 
    left outer join
        TrivialClass top2_1_ 
            on top2_.id1_=top2_1_.tcid 
    left outer join
        leafsubclass top2_2_ 
            on top2_.id1_=top2_2_.id__ 
    left outer join
        nonleafsubclass top2_3_ 
            on top2_.id1_=top2_3_.sid 
    left outer join
        leafsubsubclass top2_4_ 
            on top2_.id1_=top2_4_.sid 
    left outer join
        mono top2_5_ 
            on top2_.id1_=top2_5_.superid 
    where
        (
            lower0_1_.id1_ is not null
        ) 
        and (
            (
                top2_.id1_ is not null 
            )
        )
14:16:34,460 DEBUG SQL:104 - 
    select
        submulti0_.sid as id1_7_,
        submulti0_2_.count_ as count2_7_,
        submulti0_2_.name as name7_,
        submulti0_2_.address as address7_,
        submulti0_2_.date_ as date5_7_,
        submulti0_2_.top_ as top6_7_,
        submulti0_1_.dupe as dupe6_,
        submulti0_1_.other2 as other3_6_,
        submulti0_1_.po as po6_,
        submulti0_1_.cal as cal6_,
        submulti0_1_.floaty as floaty6_,
        submulti0_.dupe as dupe3_,
        submulti0_.parent as parent3_,
        upper(submulti0_1_.dupe) as formula91_ 
    from
        leafsubsubclass submulti0_ 
    inner join
        nonleafsubclass submulti0_1_ 
            on submulti0_.sid=submulti0_1_.sid 
    inner join
        rootclass submulti0_2_ 
            on submulti0_.sid=submulti0_2_.id1_ 
    where
        (
            submulti0_2_.id1_ is not null
        ) 
        and (
            (
                exists(
                    select
                        children1_.sid 
                    from
                        leafsubsubclass children1_ 
                    inner join
                        nonleafsubclass children1_1_ 
                            on children1_.sid=children1_1_.sid 
                    inner join
                        rootclass children1_2_ 
                            on children1_.sid=children1_2_.id1_ 
                    where
                        submulti0_.sid=children1_.parent
                )
            )
        )
14:16:34,473 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_0_,
        top0_.count_ as count2_7_0_,
        top0_.name as name7_0_,
        top0_.address as address7_0_,
        top0_.date_ as date5_7_0_,
        top0_.top_ as top6_7_0_,
        top0_2_.intprop as intprop2_0_,
        top0_2_.other1 as other3_2_0_,
        top0_2_.other3 as other4_2_0_,
        top0_2_.foo as foo2_0_,
        top0_3_.dupe as dupe6_0_,
        top0_3_.other2 as other3_6_0_,
        top0_3_.po as po6_0_,
        top0_3_.cal as cal6_0_,
        top0_3_.floaty as floaty6_0_,
        top0_4_.dupe as dupe3_0_,
        top0_4_.parent as parent3_0_,
        upper(top0_3_.dupe) as formula91_0_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_0_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    where
        top0_.id1_=? 
        and (
            top0_.id1_ is not null
        )  for update
            
14:16:34,483 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_8_,
        top0_.count_ as count2_7_8_,
        top0_.name as name7_8_,
        top0_.address as address7_8_,
        top0_.date_ as date5_7_8_,
        top0_.top_ as top6_7_8_,
        top0_2_.intprop as intprop2_8_,
        top0_2_.other1 as other3_2_8_,
        top0_2_.other3 as other4_2_8_,
        top0_2_.foo as foo2_8_,
        top0_3_.dupe as dupe6_8_,
        top0_3_.other2 as other3_6_8_,
        top0_3_.po as po6_8_,
        top0_3_.cal as cal6_8_,
        top0_3_.floaty as floaty6_8_,
        top0_4_.dupe as dupe3_8_,
        top0_4_.parent as parent3_8_,
        upper(top0_3_.dupe) as formula91_8_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        lower2_.id__ as id1_7_1_,
        lower2_1_.count_ as count2_7_1_,
        lower2_1_.name as name7_1_,
        lower2_1_.address as address7_1_,
        lower2_1_.date_ as date5_7_1_,
        lower2_1_.top_ as top6_7_1_,
        lower2_.intprop as intprop2_1_,
        lower2_.other1 as other3_2_1_,
        lower2_.other3 as other4_2_1_,
        lower2_.foo as foo2_1_,
        top3_.id1_ as id1_7_2_,
        top3_.count_ as count2_7_2_,
        top3_.name as name7_2_,
        top3_.address as address7_2_,
        top3_.date_ as date5_7_2_,
        top3_.top_ as top6_7_2_,
        top3_2_.intprop as intprop2_2_,
        top3_2_.other1 as other3_2_2_,
        top3_2_.other3 as other4_2_2_,
        top3_2_.foo as foo2_2_,
        top3_3_.dupe as dupe6_2_,
        top3_3_.other2 as other3_6_2_,
        top3_3_.po as po6_2_,
        top3_3_.cal as cal6_2_,
        top3_3_.floaty as floaty6_2_,
        top3_4_.dupe as dupe3_2_,
        top3_4_.parent as parent3_2_,
        upper(top3_3_.dupe) as formula91_2_,
        case 
            when top3_4_.sid is not null then 4 
            when top3_1_.tcid is not null then 1 
            when top3_2_.id__ is not null then 2 
            when top3_3_.sid is not null then 3 
            when top3_5_.superid is not null then 5 
            when top3_.id1_ is not null then 0 
        end as clazz_2_,
        lower4_.id__ as id1_7_3_,
        lower4_1_.count_ as count2_7_3_,
        lower4_1_.name as name7_3_,
        lower4_1_.address as address7_3_,
        lower4_1_.date_ as date5_7_3_,
        lower4_1_.top_ as top6_7_3_,
        lower4_.intprop as intprop2_3_,
        lower4_.other1 as other3_2_3_,
        lower4_.other3 as other4_2_3_,
        lower4_.foo as foo2_3_,
        po5_.id_ as id1_0_4_,
        po5_.value_ as value2_0_4_,
        po5_.tl as tl0_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    left outer join
        rootclass top1_ 
            on top0_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        leafsubclass lower2_ 
            on top1_.id1_=lower2_.id__ 
    left outer join
        rootclass lower2_1_ 
            on lower2_.id__=lower2_1_.id1_ 
    left outer join
        rootclass top3_ 
            on lower2_.other1=top3_.id1_ 
    left outer join
        TrivialClass top3_1_ 
            on top3_.id1_=top3_1_.tcid 
    left outer join
        leafsubclass top3_2_ 
            on top3_.id1_=top3_2_.id__ 
    left outer join
        nonleafsubclass top3_3_ 
            on top3_.id1_=top3_3_.sid 
    left outer join
        leafsubsubclass top3_4_ 
            on top3_.id1_=top3_4_.sid 
    left outer join
        mono top3_5_ 
            on top3_.id1_=top3_5_.superid 
    left outer join
        leafsubclass lower4_ 
            on top3_2_.other3=lower4_.id__ 
    left outer join
        rootclass lower4_1_ 
            on lower4_.id__=lower4_1_.id1_ 
    left outer join
        Po po5_ 
            on lower4_.id__=po5_.id_ 
    left outer join
        nonleafsubclass multi6_ 
            on top3_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on multi6_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on multi6_2_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        top0_.id1_=? 
        and (
            top0_.id1_ is not null
        ) 
14:16:34,578 DEBUG SQL:104 - 
    select
        id1_ 
    from
        rootclass 
    where
        id1_ =? 
        and count_ =? for update
            
14:16:34,579 DEBUG SQL:104 - 
    update
        rootclass 
    set
        count_=?,
        name=?,
        address=?,
        date_=?,
        top_=? 
    where
        id1_=? 
        and count_=?
14:16:34,588 DEBUG SQL:104 - 
    update
        nonleafsubclass 
    set
        dupe=?,
        other2=?,
        po=?,
        cal=?,
        floaty=? 
    where
        sid=?
14:16:34,588 DEBUG SQL:104 - 
    delete 
    from
        rootclass 
    where
        id1_=? 
        and count_=?
14:16:34,589 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_,
        top0_.count_ as count2_7_,
        top0_.name as name7_,
        top0_.address as address7_,
        top0_.date_ as date5_7_,
        top0_.top_ as top6_7_,
        top0_2_.intprop as intprop2_,
        top0_2_.other1 as other3_2_,
        top0_2_.other3 as other4_2_,
        top0_2_.foo as foo2_,
        top0_3_.dupe as dupe6_,
        top0_3_.other2 as other3_6_,
        top0_3_.po as po6_,
        top0_3_.cal as cal6_,
        top0_3_.floaty as floaty6_,
        top0_4_.dupe as dupe3_,
        top0_4_.parent as parent3_,
        upper(top0_3_.dupe) as formula91_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    where
        (
            top0_.id1_ is not null
        )
14:16:34,601 DEBUG SQL:104 - 
    update
        leafsubsubclass 
    set
        another_parent=null,
        list_ind=null 
    where
        another_parent=?
14:16:34,602 DEBUG SQL:104 - 
    delete 
    from
        rootclass 
    where
        id1_=? 
        and count_=?
14:16:34,602 DEBUG SQL:104 - 
    delete 
    from
        leafsubsubclass 
    where
        sid=?
14:16:34,609 DEBUG SQL:104 - 
    delete 
    from
        rootclass 
    where
        id1_=? 
        and count_=?
14:16:34,610 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_,
        top0_.count_ as count2_7_,
        top0_.name as name7_,
        top0_.address as address7_,
        top0_.date_ as date5_7_,
        top0_.top_ as top6_7_,
        top0_2_.intprop as intprop2_,
        top0_2_.other1 as other3_2_,
        top0_2_.other3 as other4_2_,
        top0_2_.foo as foo2_,
        top0_3_.dupe as dupe6_,
        top0_3_.other2 as other3_6_,
        top0_3_.po as po6_,
        top0_3_.cal as cal6_,
        top0_3_.floaty as floaty6_,
        top0_4_.dupe as dupe3_,
        top0_4_.parent as parent3_,
        upper(top0_3_.dupe) as formula91_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    where
        (
            top0_.id1_ is not null
        )
14:16:34,631 DEBUG SQL:104 - 
    select
        po0_.id_ as id1_0_,
        po0_.value_ as value2_0_,
        po0_.tl as tl0_ 
    from
        Po po0_
14:16:34,632  INFO CustomRunner:139 - Test: testMultiTableManyToOne
14:16:34,633 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_,
        top0_.count_ as count2_7_,
        top0_.name as name7_,
        top0_.address as address7_,
        top0_.date_ as date5_7_,
        top0_.top_ as top6_7_,
        top0_2_.intprop as intprop2_,
        top0_2_.other1 as other3_2_,
        top0_2_.other3 as other4_2_,
        top0_2_.foo as foo2_,
        top0_3_.dupe as dupe6_,
        top0_3_.other2 as other3_6_,
        top0_3_.po as po6_,
        top0_3_.cal as cal6_,
        top0_3_.floaty as floaty6_,
        top0_4_.dupe as dupe3_,
        top0_4_.parent as parent3_,
        upper(top0_3_.dupe) as formula91_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    where
        (
            top0_.id1_ is not null
        )
14:16:34,653 DEBUG SQL:104 - 
    insert 
    into
        rootclass
        (id1_, count_, name, address, date_, top_) 
    values
        (null, ?, ?, ?, ?, ?)
14:16:34,653 DEBUG SQL:104 - 
    insert 
    into
        nonleafsubclass
        (dupe, other2, po, cal, floaty, sid) 
    values
        (?, ?, ?, ?, ?, ?)
14:16:34,654 DEBUG SQL:104 - 
    insert 
    into
        rootclass
        (count_, name, id1_) 
    values
        (?, ?, null)
14:16:34,664 DEBUG SQL:104 - 
    insert 
    into
        leafsubclass
        (intprop, other1, id__) 
    values
        (?, ?, ?)
14:16:34,664 DEBUG SQL:104 - 
    update
        rootclass 
    set
        count_=? 
    where
        id1_=? 
        and count_=?
14:16:34,665 DEBUG SQL:104 - 
    update
        leafsubclass 
    set
        other3=? 
    where
        id__=?
14:16:34,666 DEBUG SQL:104 - 
    select
        lower0_.id__ as id1_7_8_,
        lower0_1_.count_ as count2_7_8_,
        lower0_1_.name as name7_8_,
        lower0_1_.address as address7_8_,
        lower0_1_.date_ as date5_7_8_,
        lower0_1_.top_ as top6_7_8_,
        lower0_.intprop as intprop2_8_,
        lower0_.other1 as other3_2_8_,
        lower0_.other3 as other4_2_8_,
        lower0_.foo as foo2_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        top2_.id1_ as id1_7_1_,
        top2_.count_ as count2_7_1_,
        top2_.name as name7_1_,
        top2_.address as address7_1_,
        top2_.date_ as date5_7_1_,
        top2_.top_ as top6_7_1_,
        top2_2_.intprop as intprop2_1_,
        top2_2_.other1 as other3_2_1_,
        top2_2_.other3 as other4_2_1_,
        top2_2_.foo as foo2_1_,
        top2_3_.dupe as dupe6_1_,
        top2_3_.other2 as other3_6_1_,
        top2_3_.po as po6_1_,
        top2_3_.cal as cal6_1_,
        top2_3_.floaty as floaty6_1_,
        top2_4_.dupe as dupe3_1_,
        top2_4_.parent as parent3_1_,
        upper(top2_3_.dupe) as formula91_1_,
        case 
            when top2_4_.sid is not null then 4 
            when top2_1_.tcid is not null then 1 
            when top2_2_.id__ is not null then 2 
            when top2_3_.sid is not null then 3 
            when top2_5_.superid is not null then 5 
            when top2_.id1_ is not null then 0 
        end as clazz_1_,
        lower3_.id__ as id1_7_2_,
        lower3_1_.count_ as count2_7_2_,
        lower3_1_.name as name7_2_,
        lower3_1_.address as address7_2_,
        lower3_1_.date_ as date5_7_2_,
        lower3_1_.top_ as top6_7_2_,
        lower3_.intprop as intprop2_2_,
        lower3_.other1 as other3_2_2_,
        lower3_.other3 as other4_2_2_,
        lower3_.foo as foo2_2_,
        po4_.id_ as id1_0_3_,
        po4_.value_ as value2_0_3_,
        po4_.tl as tl0_3_,
        top5_.id1_ as id1_7_4_,
        top5_.count_ as count2_7_4_,
        top5_.name as name7_4_,
        top5_.address as address7_4_,
        top5_.date_ as date5_7_4_,
        top5_.top_ as top6_7_4_,
        top5_2_.intprop as intprop2_4_,
        top5_2_.other1 as other3_2_4_,
        top5_2_.other3 as other4_2_4_,
        top5_2_.foo as foo2_4_,
        top5_3_.dupe as dupe6_4_,
        top5_3_.other2 as other3_6_4_,
        top5_3_.po as po6_4_,
        top5_3_.cal as cal6_4_,
        top5_3_.floaty as floaty6_4_,
        top5_4_.dupe as dupe3_4_,
        top5_4_.parent as parent3_4_,
        upper(top5_3_.dupe) as formula91_4_,
        case 
            when top5_4_.sid is not null then 4 
            when top5_1_.tcid is not null then 1 
            when top5_2_.id__ is not null then 2 
            when top5_3_.sid is not null then 3 
            when top5_5_.superid is not null then 5 
            when top5_.id1_ is not null then 0 
        end as clazz_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        leafsubclass lower0_ 
    inner join
        rootclass lower0_1_ 
            on lower0_.id__=lower0_1_.id1_ 
    left outer join
        rootclass top1_ 
            on lower0_1_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        rootclass top2_ 
            on top1_2_.other1=top2_.id1_ 
    left outer join
        TrivialClass top2_1_ 
            on top2_.id1_=top2_1_.tcid 
    left outer join
        leafsubclass top2_2_ 
            on top2_.id1_=top2_2_.id__ 
    left outer join
        nonleafsubclass top2_3_ 
            on top2_.id1_=top2_3_.sid 
    left outer join
        leafsubsubclass top2_4_ 
            on top2_.id1_=top2_4_.sid 
    left outer join
        mono top2_5_ 
            on top2_.id1_=top2_5_.superid 
    left outer join
        leafsubclass lower3_ 
            on top2_2_.other3=lower3_.id__ 
    left outer join
        rootclass lower3_1_ 
            on lower3_.id__=lower3_1_.id1_ 
    left outer join
        Po po4_ 
            on lower3_.id__=po4_.id_ 
    left outer join
        rootclass top5_ 
            on po4_.tl=top5_.id1_ 
    left outer join
        TrivialClass top5_1_ 
            on top5_.id1_=top5_1_.tcid 
    left outer join
        leafsubclass top5_2_ 
            on top5_.id1_=top5_2_.id__ 
    left outer join
        nonleafsubclass top5_3_ 
            on top5_.id1_=top5_3_.sid 
    left outer join
        leafsubsubclass top5_4_ 
            on top5_.id1_=top5_4_.sid 
    left outer join
        mono top5_5_ 
            on top5_.id1_=top5_5_.superid 
    left outer join
        nonleafsubclass multi6_ 
            on top2_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on multi6_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on multi6_2_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        lower0_.id__=? 
        and (
            lower0_1_.id1_ is not null
        ) 
14:16:34,741 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_8_,
        top0_.count_ as count2_7_8_,
        top0_.name as name7_8_,
        top0_.address as address7_8_,
        top0_.date_ as date5_7_8_,
        top0_.top_ as top6_7_8_,
        top0_2_.intprop as intprop2_8_,
        top0_2_.other1 as other3_2_8_,
        top0_2_.other3 as other4_2_8_,
        top0_2_.foo as foo2_8_,
        top0_3_.dupe as dupe6_8_,
        top0_3_.other2 as other3_6_8_,
        top0_3_.po as po6_8_,
        top0_3_.cal as cal6_8_,
        top0_3_.floaty as floaty6_8_,
        top0_4_.dupe as dupe3_8_,
        top0_4_.parent as parent3_8_,
        upper(top0_3_.dupe) as formula91_8_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        lower2_.id__ as id1_7_1_,
        lower2_1_.count_ as count2_7_1_,
        lower2_1_.name as name7_1_,
        lower2_1_.address as address7_1_,
        lower2_1_.date_ as date5_7_1_,
        lower2_1_.top_ as top6_7_1_,
        lower2_.intprop as intprop2_1_,
        lower2_.other1 as other3_2_1_,
        lower2_.other3 as other4_2_1_,
        lower2_.foo as foo2_1_,
        top3_.id1_ as id1_7_2_,
        top3_.count_ as count2_7_2_,
        top3_.name as name7_2_,
        top3_.address as address7_2_,
        top3_.date_ as date5_7_2_,
        top3_.top_ as top6_7_2_,
        top3_2_.intprop as intprop2_2_,
        top3_2_.other1 as other3_2_2_,
        top3_2_.other3 as other4_2_2_,
        top3_2_.foo as foo2_2_,
        top3_3_.dupe as dupe6_2_,
        top3_3_.other2 as other3_6_2_,
        top3_3_.po as po6_2_,
        top3_3_.cal as cal6_2_,
        top3_3_.floaty as floaty6_2_,
        top3_4_.dupe as dupe3_2_,
        top3_4_.parent as parent3_2_,
        upper(top3_3_.dupe) as formula91_2_,
        case 
            when top3_4_.sid is not null then 4 
            when top3_1_.tcid is not null then 1 
            when top3_2_.id__ is not null then 2 
            when top3_3_.sid is not null then 3 
            when top3_5_.superid is not null then 5 
            when top3_.id1_ is not null then 0 
        end as clazz_2_,
        lower4_.id__ as id1_7_3_,
        lower4_1_.count_ as count2_7_3_,
        lower4_1_.name as name7_3_,
        lower4_1_.address as address7_3_,
        lower4_1_.date_ as date5_7_3_,
        lower4_1_.top_ as top6_7_3_,
        lower4_.intprop as intprop2_3_,
        lower4_.other1 as other3_2_3_,
        lower4_.other3 as other4_2_3_,
        lower4_.foo as foo2_3_,
        po5_.id_ as id1_0_4_,
        po5_.value_ as value2_0_4_,
        po5_.tl as tl0_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    left outer join
        rootclass top1_ 
            on top0_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        leafsubclass lower2_ 
            on top1_.id1_=lower2_.id__ 
    left outer join
        rootclass lower2_1_ 
            on lower2_.id__=lower2_1_.id1_ 
    left outer join
        rootclass top3_ 
            on lower2_.other1=top3_.id1_ 
    left outer join
        TrivialClass top3_1_ 
            on top3_.id1_=top3_1_.tcid 
    left outer join
        leafsubclass top3_2_ 
            on top3_.id1_=top3_2_.id__ 
    left outer join
        nonleafsubclass top3_3_ 
            on top3_.id1_=top3_3_.sid 
    left outer join
        leafsubsubclass top3_4_ 
            on top3_.id1_=top3_4_.sid 
    left outer join
        mono top3_5_ 
            on top3_.id1_=top3_5_.superid 
    left outer join
        leafsubclass lower4_ 
            on top3_2_.other3=lower4_.id__ 
    left outer join
        rootclass lower4_1_ 
            on lower4_.id__=lower4_1_.id1_ 
    left outer join
        Po po5_ 
            on lower4_.id__=po5_.id_ 
    left outer join
        nonleafsubclass multi6_ 
            on top3_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on multi6_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on multi6_2_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        top0_.id1_=? 
        and (
            top0_.id1_ is not null
        ) 
14:16:34,827 DEBUG SQL:104 - 
    select
        po0_.id_ as id1_0_8_,
        po0_.value_ as value2_0_8_,
        po0_.tl as tl0_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        top2_.id1_ as id1_7_1_,
        top2_.count_ as count2_7_1_,
        top2_.name as name7_1_,
        top2_.address as address7_1_,
        top2_.date_ as date5_7_1_,
        top2_.top_ as top6_7_1_,
        top2_2_.intprop as intprop2_1_,
        top2_2_.other1 as other3_2_1_,
        top2_2_.other3 as other4_2_1_,
        top2_2_.foo as foo2_1_,
        top2_3_.dupe as dupe6_1_,
        top2_3_.other2 as other3_6_1_,
        top2_3_.po as po6_1_,
        top2_3_.cal as cal6_1_,
        top2_3_.floaty as floaty6_1_,
        top2_4_.dupe as dupe3_1_,
        top2_4_.parent as parent3_1_,
        upper(top2_3_.dupe) as formula91_1_,
        case 
            when top2_4_.sid is not null then 4 
            when top2_1_.tcid is not null then 1 
            when top2_2_.id__ is not null then 2 
            when top2_3_.sid is not null then 3 
            when top2_5_.superid is not null then 5 
            when top2_.id1_ is not null then 0 
        end as clazz_1_,
        lower3_.id__ as id1_7_2_,
        lower3_1_.count_ as count2_7_2_,
        lower3_1_.name as name7_2_,
        lower3_1_.address as address7_2_,
        lower3_1_.date_ as date5_7_2_,
        lower3_1_.top_ as top6_7_2_,
        lower3_.intprop as intprop2_2_,
        lower3_.other1 as other3_2_2_,
        lower3_.other3 as other4_2_2_,
        lower3_.foo as foo2_2_,
        top4_.id1_ as id1_7_3_,
        top4_.count_ as count2_7_3_,
        top4_.name as name7_3_,
        top4_.address as address7_3_,
        top4_.date_ as date5_7_3_,
        top4_.top_ as top6_7_3_,
        top4_2_.intprop as intprop2_3_,
        top4_2_.other1 as other3_2_3_,
        top4_2_.other3 as other4_2_3_,
        top4_2_.foo as foo2_3_,
        top4_3_.dupe as dupe6_3_,
        top4_3_.other2 as other3_6_3_,
        top4_3_.po as po6_3_,
        top4_3_.cal as cal6_3_,
        top4_3_.floaty as floaty6_3_,
        top4_4_.dupe as dupe3_3_,
        top4_4_.parent as parent3_3_,
        upper(top4_3_.dupe) as formula91_3_,
        case 
            when top4_4_.sid is not null then 4 
            when top4_1_.tcid is not null then 1 
            when top4_2_.id__ is not null then 2 
            when top4_3_.sid is not null then 3 
            when top4_5_.superid is not null then 5 
            when top4_.id1_ is not null then 0 
        end as clazz_3_,
        lower5_.id__ as id1_7_4_,
        lower5_1_.count_ as count2_7_4_,
        lower5_1_.name as name7_4_,
        lower5_1_.address as address7_4_,
        lower5_1_.date_ as date5_7_4_,
        lower5_1_.top_ as top6_7_4_,
        lower5_.intprop as intprop2_4_,
        lower5_.other1 as other3_2_4_,
        lower5_.other3 as other4_2_4_,
        lower5_.foo as foo2_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        Po po0_ 
    left outer join
        rootclass top1_ 
            on po0_.tl=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        rootclass top2_ 
            on top1_.top_=top2_.id1_ 
    left outer join
        TrivialClass top2_1_ 
            on top2_.id1_=top2_1_.tcid 
    left outer join
        leafsubclass top2_2_ 
            on top2_.id1_=top2_2_.id__ 
    left outer join
        nonleafsubclass top2_3_ 
            on top2_.id1_=top2_3_.sid 
    left outer join
        leafsubsubclass top2_4_ 
            on top2_.id1_=top2_4_.sid 
    left outer join
        mono top2_5_ 
            on top2_.id1_=top2_5_.superid 
    left outer join
        leafsubclass lower3_ 
            on top2_.id1_=lower3_.id__ 
    left outer join
        rootclass lower3_1_ 
            on lower3_.id__=lower3_1_.id1_ 
    left outer join
        rootclass top4_ 
            on lower3_.other1=top4_.id1_ 
    left outer join
        TrivialClass top4_1_ 
            on top4_.id1_=top4_1_.tcid 
    left outer join
        leafsubclass top4_2_ 
            on top4_.id1_=top4_2_.id__ 
    left outer join
        nonleafsubclass top4_3_ 
            on top4_.id1_=top4_3_.sid 
    left outer join
        leafsubsubclass top4_4_ 
            on top4_.id1_=top4_4_.sid 
    left outer join
        mono top4_5_ 
            on top4_.id1_=top4_5_.superid 
    left outer join
        leafsubclass lower5_ 
            on top4_2_.other3=lower5_.id__ 
    left outer join
        rootclass lower5_1_ 
            on lower5_.id__=lower5_1_.id1_ 
    left outer join
        nonleafsubclass multi6_ 
            on top4_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on top4_3_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on top4_4_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        po0_.id_=?
14:16:34,903 DEBUG SQL:104 - 
    select
        set0_.parent as parent7_9_,
        set0_.id1_ as id1_7_9_,
        set0_.id1_ as id1_7_8_,
        set0_.count_ as count2_7_8_,
        set0_.name as name7_8_,
        set0_.address as address7_8_,
        set0_.date_ as date5_7_8_,
        set0_.top_ as top6_7_8_,
        set0_2_.intprop as intprop2_8_,
        set0_2_.other1 as other3_2_8_,
        set0_2_.other3 as other4_2_8_,
        set0_2_.foo as foo2_8_,
        set0_3_.dupe as dupe6_8_,
        set0_3_.other2 as other3_6_8_,
        set0_3_.po as po6_8_,
        set0_3_.cal as cal6_8_,
        set0_3_.floaty as floaty6_8_,
        set0_4_.dupe as dupe3_8_,
        set0_4_.parent as parent3_8_,
        upper(set0_3_.dupe) as formula91_8_,
        case 
            when set0_4_.sid is not null then 4 
            when set0_1_.tcid is not null then 1 
            when set0_2_.id__ is not null then 2 
            when set0_3_.sid is not null then 3 
            when set0_5_.superid is not null then 5 
            when set0_.id1_ is not null then 0 
        end as clazz_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        lower2_.id__ as id1_7_1_,
        lower2_1_.count_ as count2_7_1_,
        lower2_1_.name as name7_1_,
        lower2_1_.address as address7_1_,
        lower2_1_.date_ as date5_7_1_,
        lower2_1_.top_ as top6_7_1_,
        lower2_.intprop as intprop2_1_,
        lower2_.other1 as other3_2_1_,
        lower2_.other3 as other4_2_1_,
        lower2_.foo as foo2_1_,
        top3_.id1_ as id1_7_2_,
        top3_.count_ as count2_7_2_,
        top3_.name as name7_2_,
        top3_.address as address7_2_,
        top3_.date_ as date5_7_2_,
        top3_.top_ as top6_7_2_,
        top3_2_.intprop as intprop2_2_,
        top3_2_.other1 as other3_2_2_,
        top3_2_.other3 as other4_2_2_,
        top3_2_.foo as foo2_2_,
        top3_3_.dupe as dupe6_2_,
        top3_3_.other2 as other3_6_2_,
        top3_3_.po as po6_2_,
        top3_3_.cal as cal6_2_,
        top3_3_.floaty as floaty6_2_,
        top3_4_.dupe as dupe3_2_,
        top3_4_.parent as parent3_2_,
        upper(top3_3_.dupe) as formula91_2_,
        case 
            when top3_4_.sid is not null then 4 
            when top3_1_.tcid is not null then 1 
            when top3_2_.id__ is not null then 2 
            when top3_3_.sid is not null then 3 
            when top3_5_.superid is not null then 5 
            when top3_.id1_ is not null then 0 
        end as clazz_2_,
        lower4_.id__ as id1_7_3_,
        lower4_1_.count_ as count2_7_3_,
        lower4_1_.name as name7_3_,
        lower4_1_.address as address7_3_,
        lower4_1_.date_ as date5_7_3_,
        lower4_1_.top_ as top6_7_3_,
        lower4_.intprop as intprop2_3_,
        lower4_.other1 as other3_2_3_,
        lower4_.other3 as other4_2_3_,
        lower4_.foo as foo2_3_,
        po5_.id_ as id1_0_4_,
        po5_.value_ as value2_0_4_,
        po5_.tl as tl0_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        rootclass set0_ 
    left outer join
        TrivialClass set0_1_ 
            on set0_.id1_=set0_1_.tcid 
    left outer join
        leafsubclass set0_2_ 
            on set0_.id1_=set0_2_.id__ 
    left outer join
        nonleafsubclass set0_3_ 
            on set0_.id1_=set0_3_.sid 
    left outer join
        leafsubsubclass set0_4_ 
            on set0_.id1_=set0_4_.sid 
    left outer join
        mono set0_5_ 
            on set0_.id1_=set0_5_.superid 
    left outer join
        rootclass top1_ 
            on set0_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        leafsubclass lower2_ 
            on top1_.id1_=lower2_.id__ 
    left outer join
        rootclass lower2_1_ 
            on lower2_.id__=lower2_1_.id1_ 
    left outer join
        rootclass top3_ 
            on lower2_.other1=top3_.id1_ 
    left outer join
        TrivialClass top3_1_ 
            on top3_.id1_=top3_1_.tcid 
    left outer join
        leafsubclass top3_2_ 
            on top3_.id1_=top3_2_.id__ 
    left outer join
        nonleafsubclass top3_3_ 
            on top3_.id1_=top3_3_.sid 
    left outer join
        leafsubsubclass top3_4_ 
            on top3_.id1_=top3_4_.sid 
    left outer join
        mono top3_5_ 
            on top3_.id1_=top3_5_.superid 
    left outer join
        leafsubclass lower4_ 
            on top3_2_.other3=lower4_.id__ 
    left outer join
        rootclass lower4_1_ 
            on lower4_.id__=lower4_1_.id1_ 
    left outer join
        Po po5_ 
            on lower4_.id__=po5_.id_ 
    left outer join
        nonleafsubclass multi6_ 
            on top3_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on multi6_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on multi6_2_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        set0_.parent=?
14:16:34,975 DEBUG SQL:104 - 
    delete 
    from
        simple_simple 
    where
        simple1=?
14:16:34,975 DEBUG SQL:104 - 
    delete 
    from
        leafsubclass 
    where
        id__=?
14:16:34,976 DEBUG SQL:104 - 
    delete 
    from
        rootclass 
    where
        id1_=? 
        and count_=?
14:16:34,976 DEBUG SQL:104 - 
    delete 
    from
        rootclass 
    where
        id1_=? 
        and count_=?
14:16:34,976 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_,
        top0_.count_ as count2_7_,
        top0_.name as name7_,
        top0_.address as address7_,
        top0_.date_ as date5_7_,
        top0_.top_ as top6_7_,
        top0_2_.intprop as intprop2_,
        top0_2_.other1 as other3_2_,
        top0_2_.other3 as other4_2_,
        top0_2_.foo as foo2_,
        top0_3_.dupe as dupe6_,
        top0_3_.other2 as other3_6_,
        top0_3_.po as po6_,
        top0_3_.cal as cal6_,
        top0_3_.floaty as floaty6_,
        top0_4_.dupe as dupe3_,
        top0_4_.parent as parent3_,
        upper(top0_3_.dupe) as formula91_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    where
        (
            top0_.id1_ is not null
        )
14:16:34,999 DEBUG SQL:104 - 
    select
        po0_.id_ as id1_0_,
        po0_.value_ as value2_0_,
        po0_.tl as tl0_ 
    from
        Po po0_
14:16:35,000  INFO CustomRunner:139 - Test: testMultiTableNativeId
14:16:35,001 DEBUG SQL:104 - 
    insert 
    into
        rootclass
        (id1_, count_, name, address, date_, top_) 
    values
        (null, ?, ?, ?, ?, ?)
14:16:35,001 DEBUG SQL:104 - 
    insert 
    into
        nonleafsubclass
        (dupe, other2, po, cal, floaty, sid) 
    values
        (?, ?, ?, ?, ?, ?)
14:16:35,002 DEBUG SQL:104 - 
    delete 
    from
        rootclass 
    where
        id1_=? 
        and count_=?
14:16:35,019 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_,
        top0_.count_ as count2_7_,
        top0_.name as name7_,
        top0_.address as address7_,
        top0_.date_ as date5_7_,
        top0_.top_ as top6_7_,
        top0_2_.intprop as intprop2_,
        top0_2_.other1 as other3_2_,
        top0_2_.other3 as other4_2_,
        top0_2_.foo as foo2_,
        top0_3_.dupe as dupe6_,
        top0_3_.other2 as other3_6_,
        top0_3_.po as po6_,
        top0_3_.cal as cal6_,
        top0_3_.floaty as floaty6_,
        top0_4_.dupe as dupe3_,
        top0_4_.parent as parent3_,
        upper(top0_3_.dupe) as formula91_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    where
        (
            top0_.id1_ is not null
        )
14:16:35,028 DEBUG SQL:104 - 
    select
        po0_.id_ as id1_0_,
        po0_.value_ as value2_0_,
        po0_.tl as tl0_ 
    from
        Po po0_
14:16:35,029  INFO CustomRunner:139 - Test: testNarrow
14:16:35,039 DEBUG SQL:104 - 
    select
        po0_.id_ as id1_0_0_,
        lower1_.id__ as id1_7_1_,
        po0_.value_ as value2_0_0_,
        po0_.tl as tl0_0_,
        lower1_1_.count_ as count2_7_1_,
        lower1_1_.name as name7_1_,
        lower1_1_.address as address7_1_,
        lower1_1_.date_ as date5_7_1_,
        lower1_1_.top_ as top6_7_1_,
        lower1_.intprop as intprop2_1_,
        lower1_.other1 as other3_2_1_,
        lower1_.other3 as other4_2_1_,
        lower1_.foo as foo2_1_ 
    from
        Po po0_,
        leafsubclass lower1_ 
    inner join
        rootclass lower1_1_ 
            on lower1_.id__=lower1_1_.id1_ 
    where
        (
            lower1_1_.id1_ is not null
        ) 
        and (
            (
                lower1_.id__=po0_.id_ 
            )
        )
14:16:35,048 DEBUG SQL:104 - 
    select
        po0_.id_ as id1_0_0_,
        set1_.sid as id1_7_1_,
        po0_.value_ as value2_0_0_,
        po0_.tl as tl0_0_,
        set1_1_.count_ as count2_7_1_,
        set1_1_.name as name7_1_,
        set1_1_.address as address7_1_,
        set1_1_.date_ as date5_7_1_,
        set1_1_.top_ as top6_7_1_,
        set1_.dupe as dupe6_1_,
        set1_.other2 as other3_6_1_,
        set1_.po as po6_1_,
        set1_.cal as cal6_1_,
        set1_.floaty as floaty6_1_,
        set1_2_.dupe as dupe3_1_,
        set1_2_.parent as parent3_1_,
        upper(set1_.dupe) as formula91_1_,
        case 
            when set1_2_.sid is not null then 4 
            when set1_.sid is not null then 3 
        end as clazz_1_ 
    from
        Po po0_ 
    inner join
        nonleafsubclass set1_ 
            on po0_.id_=set1_.po 
    inner join
        rootclass set1_1_ 
            on set1_.sid=set1_1_.id1_ 
    left outer join
        leafsubsubclass set1_2_ 
            on set1_.sid=set1_2_.sid 
    where
        (
            set1_2_.dupe>0 
        )
14:16:35,058 DEBUG SQL:104 - 
    select
        po0_.id_ as id1_0_0_,
        top1_.id1_ as id1_7_1_,
        po0_.value_ as value2_0_0_,
        po0_.tl as tl0_0_,
        top1_.count_ as count2_7_1_,
        top1_.name as name7_1_,
        top1_.address as address7_1_,
        top1_.date_ as date5_7_1_,
        top1_.top_ as top6_7_1_,
        top1_2_.intprop as intprop2_1_,
        top1_2_.other1 as other3_2_1_,
        top1_2_.other3 as other4_2_1_,
        top1_2_.foo as foo2_1_,
        top1_3_.dupe as dupe6_1_,
        top1_3_.other2 as other3_6_1_,
        top1_3_.po as po6_1_,
        top1_3_.cal as cal6_1_,
        top1_3_.floaty as floaty6_1_,
        top1_4_.dupe as dupe3_1_,
        top1_4_.parent as parent3_1_,
        upper(top1_3_.dupe) as formula91_1_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_1_ 
    from
        Po po0_ 
    inner join
        rootclass top1_ 
            on po0_.tl=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    where
        (
            top1_2_.foo='po' 
        )
14:16:35,097 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_,
        top0_.count_ as count2_7_,
        top0_.name as name7_,
        top0_.address as address7_,
        top0_.date_ as date5_7_,
        top0_.top_ as top6_7_,
        top0_2_.intprop as intprop2_,
        top0_2_.other1 as other3_2_,
        top0_2_.other3 as other4_2_,
        top0_2_.foo as foo2_,
        top0_3_.dupe as dupe6_,
        top0_3_.other2 as other3_6_,
        top0_3_.po as po6_,
        top0_3_.cal as cal6_,
        top0_3_.floaty as floaty6_,
        top0_4_.dupe as dupe3_,
        top0_4_.parent as parent3_,
        upper(top0_3_.dupe) as formula91_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    where
        (
            top0_.id1_ is not null
        )
14:16:35,097 DEBUG SQL:104 - 
    select
        po0_.id_ as id1_0_,
        po0_.value_ as value2_0_,
        po0_.tl as tl0_ 
    from
        Po po0_
14:16:35,098  INFO CustomRunner:139 - Test: testOneToOne
14:16:35,099 DEBUG SQL:104 - 
    insert 
    into
        rootclass
        (count_, id1_) 
    values
        (?, null)
14:16:35,099 DEBUG SQL:104 - 
    insert 
    into
        leafsubclass
        (intprop, id__) 
    values
        (?, ?)
14:16:35,100 DEBUG SQL:104 - 
    select
        lower0_.id__ as id1_7_8_,
        lower0_1_.count_ as count2_7_8_,
        lower0_1_.name as name7_8_,
        lower0_1_.address as address7_8_,
        lower0_1_.date_ as date5_7_8_,
        lower0_1_.top_ as top6_7_8_,
        lower0_.intprop as intprop2_8_,
        lower0_.other1 as other3_2_8_,
        lower0_.other3 as other4_2_8_,
        lower0_.foo as foo2_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        top2_.id1_ as id1_7_1_,
        top2_.count_ as count2_7_1_,
        top2_.name as name7_1_,
        top2_.address as address7_1_,
        top2_.date_ as date5_7_1_,
        top2_.top_ as top6_7_1_,
        top2_2_.intprop as intprop2_1_,
        top2_2_.other1 as other3_2_1_,
        top2_2_.other3 as other4_2_1_,
        top2_2_.foo as foo2_1_,
        top2_3_.dupe as dupe6_1_,
        top2_3_.other2 as other3_6_1_,
        top2_3_.po as po6_1_,
        top2_3_.cal as cal6_1_,
        top2_3_.floaty as floaty6_1_,
        top2_4_.dupe as dupe3_1_,
        top2_4_.parent as parent3_1_,
        upper(top2_3_.dupe) as formula91_1_,
        case 
            when top2_4_.sid is not null then 4 
            when top2_1_.tcid is not null then 1 
            when top2_2_.id__ is not null then 2 
            when top2_3_.sid is not null then 3 
            when top2_5_.superid is not null then 5 
            when top2_.id1_ is not null then 0 
        end as clazz_1_,
        lower3_.id__ as id1_7_2_,
        lower3_1_.count_ as count2_7_2_,
        lower3_1_.name as name7_2_,
        lower3_1_.address as address7_2_,
        lower3_1_.date_ as date5_7_2_,
        lower3_1_.top_ as top6_7_2_,
        lower3_.intprop as intprop2_2_,
        lower3_.other1 as other3_2_2_,
        lower3_.other3 as other4_2_2_,
        lower3_.foo as foo2_2_,
        po4_.id_ as id1_0_3_,
        po4_.value_ as value2_0_3_,
        po4_.tl as tl0_3_,
        top5_.id1_ as id1_7_4_,
        top5_.count_ as count2_7_4_,
        top5_.name as name7_4_,
        top5_.address as address7_4_,
        top5_.date_ as date5_7_4_,
        top5_.top_ as top6_7_4_,
        top5_2_.intprop as intprop2_4_,
        top5_2_.other1 as other3_2_4_,
        top5_2_.other3 as other4_2_4_,
        top5_2_.foo as foo2_4_,
        top5_3_.dupe as dupe6_4_,
        top5_3_.other2 as other3_6_4_,
        top5_3_.po as po6_4_,
        top5_3_.cal as cal6_4_,
        top5_3_.floaty as floaty6_4_,
        top5_4_.dupe as dupe3_4_,
        top5_4_.parent as parent3_4_,
        upper(top5_3_.dupe) as formula91_4_,
        case 
            when top5_4_.sid is not null then 4 
            when top5_1_.tcid is not null then 1 
            when top5_2_.id__ is not null then 2 
            when top5_3_.sid is not null then 3 
            when top5_5_.superid is not null then 5 
            when top5_.id1_ is not null then 0 
        end as clazz_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        leafsubclass lower0_ 
    inner join
        rootclass lower0_1_ 
            on lower0_.id__=lower0_1_.id1_ 
    left outer join
        rootclass top1_ 
            on lower0_1_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        rootclass top2_ 
            on top1_2_.other1=top2_.id1_ 
    left outer join
        TrivialClass top2_1_ 
            on top2_.id1_=top2_1_.tcid 
    left outer join
        leafsubclass top2_2_ 
            on top2_.id1_=top2_2_.id__ 
    left outer join
        nonleafsubclass top2_3_ 
            on top2_.id1_=top2_3_.sid 
    left outer join
        leafsubsubclass top2_4_ 
            on top2_.id1_=top2_4_.sid 
    left outer join
        mono top2_5_ 
            on top2_.id1_=top2_5_.superid 
    left outer join
        leafsubclass lower3_ 
            on top2_2_.other3=lower3_.id__ 
    left outer join
        rootclass lower3_1_ 
            on lower3_.id__=lower3_1_.id1_ 
    left outer join
        Po po4_ 
            on lower3_.id__=po4_.id_ 
    left outer join
        rootclass top5_ 
            on po4_.tl=top5_.id1_ 
    left outer join
        TrivialClass top5_1_ 
            on top5_.id1_=top5_1_.tcid 
    left outer join
        leafsubclass top5_2_ 
            on top5_.id1_=top5_2_.id__ 
    left outer join
        nonleafsubclass top5_3_ 
            on top5_.id1_=top5_3_.sid 
    left outer join
        leafsubsubclass top5_4_ 
            on top5_.id1_=top5_4_.sid 
    left outer join
        mono top5_5_ 
            on top5_.id1_=top5_5_.superid 
    left outer join
        nonleafsubclass multi6_ 
            on top2_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on multi6_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on multi6_2_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        lower0_.id__=? 
        and (
            lower0_1_.id1_ is not null
        ) 
14:16:35,175 DEBUG SQL:104 - 
    select
        po0_.id_ as id1_0_8_,
        po0_.value_ as value2_0_8_,
        po0_.tl as tl0_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        top2_.id1_ as id1_7_1_,
        top2_.count_ as count2_7_1_,
        top2_.name as name7_1_,
        top2_.address as address7_1_,
        top2_.date_ as date5_7_1_,
        top2_.top_ as top6_7_1_,
        top2_2_.intprop as intprop2_1_,
        top2_2_.other1 as other3_2_1_,
        top2_2_.other3 as other4_2_1_,
        top2_2_.foo as foo2_1_,
        top2_3_.dupe as dupe6_1_,
        top2_3_.other2 as other3_6_1_,
        top2_3_.po as po6_1_,
        top2_3_.cal as cal6_1_,
        top2_3_.floaty as floaty6_1_,
        top2_4_.dupe as dupe3_1_,
        top2_4_.parent as parent3_1_,
        upper(top2_3_.dupe) as formula91_1_,
        case 
            when top2_4_.sid is not null then 4 
            when top2_1_.tcid is not null then 1 
            when top2_2_.id__ is not null then 2 
            when top2_3_.sid is not null then 3 
            when top2_5_.superid is not null then 5 
            when top2_.id1_ is not null then 0 
        end as clazz_1_,
        lower3_.id__ as id1_7_2_,
        lower3_1_.count_ as count2_7_2_,
        lower3_1_.name as name7_2_,
        lower3_1_.address as address7_2_,
        lower3_1_.date_ as date5_7_2_,
        lower3_1_.top_ as top6_7_2_,
        lower3_.intprop as intprop2_2_,
        lower3_.other1 as other3_2_2_,
        lower3_.other3 as other4_2_2_,
        lower3_.foo as foo2_2_,
        top4_.id1_ as id1_7_3_,
        top4_.count_ as count2_7_3_,
        top4_.name as name7_3_,
        top4_.address as address7_3_,
        top4_.date_ as date5_7_3_,
        top4_.top_ as top6_7_3_,
        top4_2_.intprop as intprop2_3_,
        top4_2_.other1 as other3_2_3_,
        top4_2_.other3 as other4_2_3_,
        top4_2_.foo as foo2_3_,
        top4_3_.dupe as dupe6_3_,
        top4_3_.other2 as other3_6_3_,
        top4_3_.po as po6_3_,
        top4_3_.cal as cal6_3_,
        top4_3_.floaty as floaty6_3_,
        top4_4_.dupe as dupe3_3_,
        top4_4_.parent as parent3_3_,
        upper(top4_3_.dupe) as formula91_3_,
        case 
            when top4_4_.sid is not null then 4 
            when top4_1_.tcid is not null then 1 
            when top4_2_.id__ is not null then 2 
            when top4_3_.sid is not null then 3 
            when top4_5_.superid is not null then 5 
            when top4_.id1_ is not null then 0 
        end as clazz_3_,
        lower5_.id__ as id1_7_4_,
        lower5_1_.count_ as count2_7_4_,
        lower5_1_.name as name7_4_,
        lower5_1_.address as address7_4_,
        lower5_1_.date_ as date5_7_4_,
        lower5_1_.top_ as top6_7_4_,
        lower5_.intprop as intprop2_4_,
        lower5_.other1 as other3_2_4_,
        lower5_.other3 as other4_2_4_,
        lower5_.foo as foo2_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        Po po0_ 
    left outer join
        rootclass top1_ 
            on po0_.tl=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        rootclass top2_ 
            on top1_.top_=top2_.id1_ 
    left outer join
        TrivialClass top2_1_ 
            on top2_.id1_=top2_1_.tcid 
    left outer join
        leafsubclass top2_2_ 
            on top2_.id1_=top2_2_.id__ 
    left outer join
        nonleafsubclass top2_3_ 
            on top2_.id1_=top2_3_.sid 
    left outer join
        leafsubsubclass top2_4_ 
            on top2_.id1_=top2_4_.sid 
    left outer join
        mono top2_5_ 
            on top2_.id1_=top2_5_.superid 
    left outer join
        leafsubclass lower3_ 
            on top2_.id1_=lower3_.id__ 
    left outer join
        rootclass lower3_1_ 
            on lower3_.id__=lower3_1_.id1_ 
    left outer join
        rootclass top4_ 
            on lower3_.other1=top4_.id1_ 
    left outer join
        TrivialClass top4_1_ 
            on top4_.id1_=top4_1_.tcid 
    left outer join
        leafsubclass top4_2_ 
            on top4_.id1_=top4_2_.id__ 
    left outer join
        nonleafsubclass top4_3_ 
            on top4_.id1_=top4_3_.sid 
    left outer join
        leafsubsubclass top4_4_ 
            on top4_.id1_=top4_4_.sid 
    left outer join
        mono top4_5_ 
            on top4_.id1_=top4_5_.superid 
    left outer join
        leafsubclass lower5_ 
            on top4_2_.other3=lower5_.id__ 
    left outer join
        rootclass lower5_1_ 
            on lower5_.id__=lower5_1_.id1_ 
    left outer join
        nonleafsubclass multi6_ 
            on top4_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on top4_3_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on top4_4_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        po0_.id_=?
14:16:35,233 DEBUG SQL:104 - 
    select
        set0_.parent as parent7_9_,
        set0_.id1_ as id1_7_9_,
        set0_.id1_ as id1_7_8_,
        set0_.count_ as count2_7_8_,
        set0_.name as name7_8_,
        set0_.address as address7_8_,
        set0_.date_ as date5_7_8_,
        set0_.top_ as top6_7_8_,
        set0_2_.intprop as intprop2_8_,
        set0_2_.other1 as other3_2_8_,
        set0_2_.other3 as other4_2_8_,
        set0_2_.foo as foo2_8_,
        set0_3_.dupe as dupe6_8_,
        set0_3_.other2 as other3_6_8_,
        set0_3_.po as po6_8_,
        set0_3_.cal as cal6_8_,
        set0_3_.floaty as floaty6_8_,
        set0_4_.dupe as dupe3_8_,
        set0_4_.parent as parent3_8_,
        upper(set0_3_.dupe) as formula91_8_,
        case 
            when set0_4_.sid is not null then 4 
            when set0_1_.tcid is not null then 1 
            when set0_2_.id__ is not null then 2 
            when set0_3_.sid is not null then 3 
            when set0_5_.superid is not null then 5 
            when set0_.id1_ is not null then 0 
        end as clazz_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        lower2_.id__ as id1_7_1_,
        lower2_1_.count_ as count2_7_1_,
        lower2_1_.name as name7_1_,
        lower2_1_.address as address7_1_,
        lower2_1_.date_ as date5_7_1_,
        lower2_1_.top_ as top6_7_1_,
        lower2_.intprop as intprop2_1_,
        lower2_.other1 as other3_2_1_,
        lower2_.other3 as other4_2_1_,
        lower2_.foo as foo2_1_,
        top3_.id1_ as id1_7_2_,
        top3_.count_ as count2_7_2_,
        top3_.name as name7_2_,
        top3_.address as address7_2_,
        top3_.date_ as date5_7_2_,
        top3_.top_ as top6_7_2_,
        top3_2_.intprop as intprop2_2_,
        top3_2_.other1 as other3_2_2_,
        top3_2_.other3 as other4_2_2_,
        top3_2_.foo as foo2_2_,
        top3_3_.dupe as dupe6_2_,
        top3_3_.other2 as other3_6_2_,
        top3_3_.po as po6_2_,
        top3_3_.cal as cal6_2_,
        top3_3_.floaty as floaty6_2_,
        top3_4_.dupe as dupe3_2_,
        top3_4_.parent as parent3_2_,
        upper(top3_3_.dupe) as formula91_2_,
        case 
            when top3_4_.sid is not null then 4 
            when top3_1_.tcid is not null then 1 
            when top3_2_.id__ is not null then 2 
            when top3_3_.sid is not null then 3 
            when top3_5_.superid is not null then 5 
            when top3_.id1_ is not null then 0 
        end as clazz_2_,
        lower4_.id__ as id1_7_3_,
        lower4_1_.count_ as count2_7_3_,
        lower4_1_.name as name7_3_,
        lower4_1_.address as address7_3_,
        lower4_1_.date_ as date5_7_3_,
        lower4_1_.top_ as top6_7_3_,
        lower4_.intprop as intprop2_3_,
        lower4_.other1 as other3_2_3_,
        lower4_.other3 as other4_2_3_,
        lower4_.foo as foo2_3_,
        po5_.id_ as id1_0_4_,
        po5_.value_ as value2_0_4_,
        po5_.tl as tl0_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        rootclass set0_ 
    left outer join
        TrivialClass set0_1_ 
            on set0_.id1_=set0_1_.tcid 
    left outer join
        leafsubclass set0_2_ 
            on set0_.id1_=set0_2_.id__ 
    left outer join
        nonleafsubclass set0_3_ 
            on set0_.id1_=set0_3_.sid 
    left outer join
        leafsubsubclass set0_4_ 
            on set0_.id1_=set0_4_.sid 
    left outer join
        mono set0_5_ 
            on set0_.id1_=set0_5_.superid 
    left outer join
        rootclass top1_ 
            on set0_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        leafsubclass lower2_ 
            on top1_.id1_=lower2_.id__ 
    left outer join
        rootclass lower2_1_ 
            on lower2_.id__=lower2_1_.id1_ 
    left outer join
        rootclass top3_ 
            on lower2_.other1=top3_.id1_ 
    left outer join
        TrivialClass top3_1_ 
            on top3_.id1_=top3_1_.tcid 
    left outer join
        leafsubclass top3_2_ 
            on top3_.id1_=top3_2_.id__ 
    left outer join
        nonleafsubclass top3_3_ 
            on top3_.id1_=top3_3_.sid 
    left outer join
        leafsubsubclass top3_4_ 
            on top3_.id1_=top3_4_.sid 
    left outer join
        mono top3_5_ 
            on top3_.id1_=top3_5_.superid 
    left outer join
        leafsubclass lower4_ 
            on top3_2_.other3=lower4_.id__ 
    left outer join
        rootclass lower4_1_ 
            on lower4_.id__=lower4_1_.id1_ 
    left outer join
        Po po5_ 
            on lower4_.id__=po5_.id_ 
    left outer join
        nonleafsubclass multi6_ 
            on top3_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on multi6_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on multi6_2_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        set0_.parent=?
14:16:35,318 DEBUG SQL:104 - 
    select
        lower0_.id__ as id1_7_8_,
        lower0_1_.count_ as count2_7_8_,
        lower0_1_.name as name7_8_,
        lower0_1_.address as address7_8_,
        lower0_1_.date_ as date5_7_8_,
        lower0_1_.top_ as top6_7_8_,
        lower0_.intprop as intprop2_8_,
        lower0_.other1 as other3_2_8_,
        lower0_.other3 as other4_2_8_,
        lower0_.foo as foo2_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        top2_.id1_ as id1_7_1_,
        top2_.count_ as count2_7_1_,
        top2_.name as name7_1_,
        top2_.address as address7_1_,
        top2_.date_ as date5_7_1_,
        top2_.top_ as top6_7_1_,
        top2_2_.intprop as intprop2_1_,
        top2_2_.other1 as other3_2_1_,
        top2_2_.other3 as other4_2_1_,
        top2_2_.foo as foo2_1_,
        top2_3_.dupe as dupe6_1_,
        top2_3_.other2 as other3_6_1_,
        top2_3_.po as po6_1_,
        top2_3_.cal as cal6_1_,
        top2_3_.floaty as floaty6_1_,
        top2_4_.dupe as dupe3_1_,
        top2_4_.parent as parent3_1_,
        upper(top2_3_.dupe) as formula91_1_,
        case 
            when top2_4_.sid is not null then 4 
            when top2_1_.tcid is not null then 1 
            when top2_2_.id__ is not null then 2 
            when top2_3_.sid is not null then 3 
            when top2_5_.superid is not null then 5 
            when top2_.id1_ is not null then 0 
        end as clazz_1_,
        lower3_.id__ as id1_7_2_,
        lower3_1_.count_ as count2_7_2_,
        lower3_1_.name as name7_2_,
        lower3_1_.address as address7_2_,
        lower3_1_.date_ as date5_7_2_,
        lower3_1_.top_ as top6_7_2_,
        lower3_.intprop as intprop2_2_,
        lower3_.other1 as other3_2_2_,
        lower3_.other3 as other4_2_2_,
        lower3_.foo as foo2_2_,
        po4_.id_ as id1_0_3_,
        po4_.value_ as value2_0_3_,
        po4_.tl as tl0_3_,
        top5_.id1_ as id1_7_4_,
        top5_.count_ as count2_7_4_,
        top5_.name as name7_4_,
        top5_.address as address7_4_,
        top5_.date_ as date5_7_4_,
        top5_.top_ as top6_7_4_,
        top5_2_.intprop as intprop2_4_,
        top5_2_.other1 as other3_2_4_,
        top5_2_.other3 as other4_2_4_,
        top5_2_.foo as foo2_4_,
        top5_3_.dupe as dupe6_4_,
        top5_3_.other2 as other3_6_4_,
        top5_3_.po as po6_4_,
        top5_3_.cal as cal6_4_,
        top5_3_.floaty as floaty6_4_,
        top5_4_.dupe as dupe3_4_,
        top5_4_.parent as parent3_4_,
        upper(top5_3_.dupe) as formula91_4_,
        case 
            when top5_4_.sid is not null then 4 
            when top5_1_.tcid is not null then 1 
            when top5_2_.id__ is not null then 2 
            when top5_3_.sid is not null then 3 
            when top5_5_.superid is not null then 5 
            when top5_.id1_ is not null then 0 
        end as clazz_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        leafsubclass lower0_ 
    inner join
        rootclass lower0_1_ 
            on lower0_.id__=lower0_1_.id1_ 
    left outer join
        rootclass top1_ 
            on lower0_1_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        rootclass top2_ 
            on top1_2_.other1=top2_.id1_ 
    left outer join
        TrivialClass top2_1_ 
            on top2_.id1_=top2_1_.tcid 
    left outer join
        leafsubclass top2_2_ 
            on top2_.id1_=top2_2_.id__ 
    left outer join
        nonleafsubclass top2_3_ 
            on top2_.id1_=top2_3_.sid 
    left outer join
        leafsubsubclass top2_4_ 
            on top2_.id1_=top2_4_.sid 
    left outer join
        mono top2_5_ 
            on top2_.id1_=top2_5_.superid 
    left outer join
        leafsubclass lower3_ 
            on top2_2_.other3=lower3_.id__ 
    left outer join
        rootclass lower3_1_ 
            on lower3_.id__=lower3_1_.id1_ 
    left outer join
        Po po4_ 
            on lower3_.id__=po4_.id_ 
    left outer join
        rootclass top5_ 
            on po4_.tl=top5_.id1_ 
    left outer join
        TrivialClass top5_1_ 
            on top5_.id1_=top5_1_.tcid 
    left outer join
        leafsubclass top5_2_ 
            on top5_.id1_=top5_2_.id__ 
    left outer join
        nonleafsubclass top5_3_ 
            on top5_.id1_=top5_3_.sid 
    left outer join
        leafsubsubclass top5_4_ 
            on top5_.id1_=top5_4_.sid 
    left outer join
        mono top5_5_ 
            on top5_.id1_=top5_5_.superid 
    left outer join
        nonleafsubclass multi6_ 
            on top2_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on multi6_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on multi6_2_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        lower0_.id__=? 
        and (
            lower0_1_.id1_ is not null
        ) 
14:16:35,391 DEBUG SQL:104 - 
    select
        po0_.id_ as id1_0_8_,
        po0_.value_ as value2_0_8_,
        po0_.tl as tl0_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        top2_.id1_ as id1_7_1_,
        top2_.count_ as count2_7_1_,
        top2_.name as name7_1_,
        top2_.address as address7_1_,
        top2_.date_ as date5_7_1_,
        top2_.top_ as top6_7_1_,
        top2_2_.intprop as intprop2_1_,
        top2_2_.other1 as other3_2_1_,
        top2_2_.other3 as other4_2_1_,
        top2_2_.foo as foo2_1_,
        top2_3_.dupe as dupe6_1_,
        top2_3_.other2 as other3_6_1_,
        top2_3_.po as po6_1_,
        top2_3_.cal as cal6_1_,
        top2_3_.floaty as floaty6_1_,
        top2_4_.dupe as dupe3_1_,
        top2_4_.parent as parent3_1_,
        upper(top2_3_.dupe) as formula91_1_,
        case 
            when top2_4_.sid is not null then 4 
            when top2_1_.tcid is not null then 1 
            when top2_2_.id__ is not null then 2 
            when top2_3_.sid is not null then 3 
            when top2_5_.superid is not null then 5 
            when top2_.id1_ is not null then 0 
        end as clazz_1_,
        lower3_.id__ as id1_7_2_,
        lower3_1_.count_ as count2_7_2_,
        lower3_1_.name as name7_2_,
        lower3_1_.address as address7_2_,
        lower3_1_.date_ as date5_7_2_,
        lower3_1_.top_ as top6_7_2_,
        lower3_.intprop as intprop2_2_,
        lower3_.other1 as other3_2_2_,
        lower3_.other3 as other4_2_2_,
        lower3_.foo as foo2_2_,
        top4_.id1_ as id1_7_3_,
        top4_.count_ as count2_7_3_,
        top4_.name as name7_3_,
        top4_.address as address7_3_,
        top4_.date_ as date5_7_3_,
        top4_.top_ as top6_7_3_,
        top4_2_.intprop as intprop2_3_,
        top4_2_.other1 as other3_2_3_,
        top4_2_.other3 as other4_2_3_,
        top4_2_.foo as foo2_3_,
        top4_3_.dupe as dupe6_3_,
        top4_3_.other2 as other3_6_3_,
        top4_3_.po as po6_3_,
        top4_3_.cal as cal6_3_,
        top4_3_.floaty as floaty6_3_,
        top4_4_.dupe as dupe3_3_,
        top4_4_.parent as parent3_3_,
        upper(top4_3_.dupe) as formula91_3_,
        case 
            when top4_4_.sid is not null then 4 
            when top4_1_.tcid is not null then 1 
            when top4_2_.id__ is not null then 2 
            when top4_3_.sid is not null then 3 
            when top4_5_.superid is not null then 5 
            when top4_.id1_ is not null then 0 
        end as clazz_3_,
        lower5_.id__ as id1_7_4_,
        lower5_1_.count_ as count2_7_4_,
        lower5_1_.name as name7_4_,
        lower5_1_.address as address7_4_,
        lower5_1_.date_ as date5_7_4_,
        lower5_1_.top_ as top6_7_4_,
        lower5_.intprop as intprop2_4_,
        lower5_.other1 as other3_2_4_,
        lower5_.other3 as other4_2_4_,
        lower5_.foo as foo2_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        Po po0_ 
    left outer join
        rootclass top1_ 
            on po0_.tl=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        rootclass top2_ 
            on top1_.top_=top2_.id1_ 
    left outer join
        TrivialClass top2_1_ 
            on top2_.id1_=top2_1_.tcid 
    left outer join
        leafsubclass top2_2_ 
            on top2_.id1_=top2_2_.id__ 
    left outer join
        nonleafsubclass top2_3_ 
            on top2_.id1_=top2_3_.sid 
    left outer join
        leafsubsubclass top2_4_ 
            on top2_.id1_=top2_4_.sid 
    left outer join
        mono top2_5_ 
            on top2_.id1_=top2_5_.superid 
    left outer join
        leafsubclass lower3_ 
            on top2_.id1_=lower3_.id__ 
    left outer join
        rootclass lower3_1_ 
            on lower3_.id__=lower3_1_.id1_ 
    left outer join
        rootclass top4_ 
            on lower3_.other1=top4_.id1_ 
    left outer join
        TrivialClass top4_1_ 
            on top4_.id1_=top4_1_.tcid 
    left outer join
        leafsubclass top4_2_ 
            on top4_.id1_=top4_2_.id__ 
    left outer join
        nonleafsubclass top4_3_ 
            on top4_.id1_=top4_3_.sid 
    left outer join
        leafsubsubclass top4_4_ 
            on top4_.id1_=top4_4_.sid 
    left outer join
        mono top4_5_ 
            on top4_.id1_=top4_5_.superid 
    left outer join
        leafsubclass lower5_ 
            on top4_2_.other3=lower5_.id__ 
    left outer join
        rootclass lower5_1_ 
            on lower5_.id__=lower5_1_.id1_ 
    left outer join
        nonleafsubclass multi6_ 
            on top4_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on top4_3_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on top4_4_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        po0_.id_=?
14:16:35,468 DEBUG SQL:104 - 
    select
        set0_.parent as parent7_9_,
        set0_.id1_ as id1_7_9_,
        set0_.id1_ as id1_7_8_,
        set0_.count_ as count2_7_8_,
        set0_.name as name7_8_,
        set0_.address as address7_8_,
        set0_.date_ as date5_7_8_,
        set0_.top_ as top6_7_8_,
        set0_2_.intprop as intprop2_8_,
        set0_2_.other1 as other3_2_8_,
        set0_2_.other3 as other4_2_8_,
        set0_2_.foo as foo2_8_,
        set0_3_.dupe as dupe6_8_,
        set0_3_.other2 as other3_6_8_,
        set0_3_.po as po6_8_,
        set0_3_.cal as cal6_8_,
        set0_3_.floaty as floaty6_8_,
        set0_4_.dupe as dupe3_8_,
        set0_4_.parent as parent3_8_,
        upper(set0_3_.dupe) as formula91_8_,
        case 
            when set0_4_.sid is not null then 4 
            when set0_1_.tcid is not null then 1 
            when set0_2_.id__ is not null then 2 
            when set0_3_.sid is not null then 3 
            when set0_5_.superid is not null then 5 
            when set0_.id1_ is not null then 0 
        end as clazz_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        lower2_.id__ as id1_7_1_,
        lower2_1_.count_ as count2_7_1_,
        lower2_1_.name as name7_1_,
        lower2_1_.address as address7_1_,
        lower2_1_.date_ as date5_7_1_,
        lower2_1_.top_ as top6_7_1_,
        lower2_.intprop as intprop2_1_,
        lower2_.other1 as other3_2_1_,
        lower2_.other3 as other4_2_1_,
        lower2_.foo as foo2_1_,
        top3_.id1_ as id1_7_2_,
        top3_.count_ as count2_7_2_,
        top3_.name as name7_2_,
        top3_.address as address7_2_,
        top3_.date_ as date5_7_2_,
        top3_.top_ as top6_7_2_,
        top3_2_.intprop as intprop2_2_,
        top3_2_.other1 as other3_2_2_,
        top3_2_.other3 as other4_2_2_,
        top3_2_.foo as foo2_2_,
        top3_3_.dupe as dupe6_2_,
        top3_3_.other2 as other3_6_2_,
        top3_3_.po as po6_2_,
        top3_3_.cal as cal6_2_,
        top3_3_.floaty as floaty6_2_,
        top3_4_.dupe as dupe3_2_,
        top3_4_.parent as parent3_2_,
        upper(top3_3_.dupe) as formula91_2_,
        case 
            when top3_4_.sid is not null then 4 
            when top3_1_.tcid is not null then 1 
            when top3_2_.id__ is not null then 2 
            when top3_3_.sid is not null then 3 
            when top3_5_.superid is not null then 5 
            when top3_.id1_ is not null then 0 
        end as clazz_2_,
        lower4_.id__ as id1_7_3_,
        lower4_1_.count_ as count2_7_3_,
        lower4_1_.name as name7_3_,
        lower4_1_.address as address7_3_,
        lower4_1_.date_ as date5_7_3_,
        lower4_1_.top_ as top6_7_3_,
        lower4_.intprop as intprop2_3_,
        lower4_.other1 as other3_2_3_,
        lower4_.other3 as other4_2_3_,
        lower4_.foo as foo2_3_,
        po5_.id_ as id1_0_4_,
        po5_.value_ as value2_0_4_,
        po5_.tl as tl0_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        rootclass set0_ 
    left outer join
        TrivialClass set0_1_ 
            on set0_.id1_=set0_1_.tcid 
    left outer join
        leafsubclass set0_2_ 
            on set0_.id1_=set0_2_.id__ 
    left outer join
        nonleafsubclass set0_3_ 
            on set0_.id1_=set0_3_.sid 
    left outer join
        leafsubsubclass set0_4_ 
            on set0_.id1_=set0_4_.sid 
    left outer join
        mono set0_5_ 
            on set0_.id1_=set0_5_.superid 
    left outer join
        rootclass top1_ 
            on set0_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        leafsubclass lower2_ 
            on top1_.id1_=lower2_.id__ 
    left outer join
        rootclass lower2_1_ 
            on lower2_.id__=lower2_1_.id1_ 
    left outer join
        rootclass top3_ 
            on lower2_.other1=top3_.id1_ 
    left outer join
        TrivialClass top3_1_ 
            on top3_.id1_=top3_1_.tcid 
    left outer join
        leafsubclass top3_2_ 
            on top3_.id1_=top3_2_.id__ 
    left outer join
        nonleafsubclass top3_3_ 
            on top3_.id1_=top3_3_.sid 
    left outer join
        leafsubsubclass top3_4_ 
            on top3_.id1_=top3_4_.sid 
    left outer join
        mono top3_5_ 
            on top3_.id1_=top3_5_.superid 
    left outer join
        leafsubclass lower4_ 
            on top3_2_.other3=lower4_.id__ 
    left outer join
        rootclass lower4_1_ 
            on lower4_.id__=lower4_1_.id1_ 
    left outer join
        Po po5_ 
            on lower4_.id__=po5_.id_ 
    left outer join
        nonleafsubclass multi6_ 
            on top3_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on multi6_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on multi6_2_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        set0_.parent=?
14:16:35,550 DEBUG SQL:104 - 
    delete 
    from
        simple_simple 
    where
        simple1=?
14:16:35,551 DEBUG SQL:104 - 
    delete 
    from
        leafsubclass 
    where
        id__=?
14:16:35,551 DEBUG SQL:104 - 
    delete 
    from
        rootclass 
    where
        id1_=? 
        and count_=?
14:16:35,561 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_,
        top0_.count_ as count2_7_,
        top0_.name as name7_,
        top0_.address as address7_,
        top0_.date_ as date5_7_,
        top0_.top_ as top6_7_,
        top0_2_.intprop as intprop2_,
        top0_2_.other1 as other3_2_,
        top0_2_.other3 as other4_2_,
        top0_2_.foo as foo2_,
        top0_3_.dupe as dupe6_,
        top0_3_.other2 as other3_6_,
        top0_3_.po as po6_,
        top0_3_.cal as cal6_,
        top0_3_.floaty as floaty6_,
        top0_4_.dupe as dupe3_,
        top0_4_.parent as parent3_,
        upper(top0_3_.dupe) as formula91_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    where
        (
            top0_.id1_ is not null
        )
14:16:35,571 DEBUG SQL:104 - 
    select
        po0_.id_ as id1_0_,
        po0_.value_ as value2_0_,
        po0_.tl as tl0_ 
    from
        Po po0_
14:16:35,572  INFO CustomRunner:139 - Test: testQueries
14:16:35,573 DEBUG SQL:104 - 
    insert 
    into
        rootclass
        (id1_, count_, name, address, date_, top_) 
    values
        (null, ?, ?, ?, ?, ?)
14:16:35,573 DEBUG SQL:104 - 
    insert 
    into
        TrivialClass
        (tcid) 
    values
        (?)
14:16:35,574 DEBUG SQL:104 - 
    select
        trivialcla0_.tcid as id1_7_8_,
        trivialcla0_1_.count_ as count2_7_8_,
        trivialcla0_1_.name as name7_8_,
        trivialcla0_1_.address as address7_8_,
        trivialcla0_1_.date_ as date5_7_8_,
        trivialcla0_1_.top_ as top6_7_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        lower2_.id__ as id1_7_1_,
        lower2_1_.count_ as count2_7_1_,
        lower2_1_.name as name7_1_,
        lower2_1_.address as address7_1_,
        lower2_1_.date_ as date5_7_1_,
        lower2_1_.top_ as top6_7_1_,
        lower2_.intprop as intprop2_1_,
        lower2_.other1 as other3_2_1_,
        lower2_.other3 as other4_2_1_,
        lower2_.foo as foo2_1_,
        top3_.id1_ as id1_7_2_,
        top3_.count_ as count2_7_2_,
        top3_.name as name7_2_,
        top3_.address as address7_2_,
        top3_.date_ as date5_7_2_,
        top3_.top_ as top6_7_2_,
        top3_2_.intprop as intprop2_2_,
        top3_2_.other1 as other3_2_2_,
        top3_2_.other3 as other4_2_2_,
        top3_2_.foo as foo2_2_,
        top3_3_.dupe as dupe6_2_,
        top3_3_.other2 as other3_6_2_,
        top3_3_.po as po6_2_,
        top3_3_.cal as cal6_2_,
        top3_3_.floaty as floaty6_2_,
        top3_4_.dupe as dupe3_2_,
        top3_4_.parent as parent3_2_,
        upper(top3_3_.dupe) as formula91_2_,
        case 
            when top3_4_.sid is not null then 4 
            when top3_1_.tcid is not null then 1 
            when top3_2_.id__ is not null then 2 
            when top3_3_.sid is not null then 3 
            when top3_5_.superid is not null then 5 
            when top3_.id1_ is not null then 0 
        end as clazz_2_,
        lower4_.id__ as id1_7_3_,
        lower4_1_.count_ as count2_7_3_,
        lower4_1_.name as name7_3_,
        lower4_1_.address as address7_3_,
        lower4_1_.date_ as date5_7_3_,
        lower4_1_.top_ as top6_7_3_,
        lower4_.intprop as intprop2_3_,
        lower4_.other1 as other3_2_3_,
        lower4_.other3 as other4_2_3_,
        lower4_.foo as foo2_3_,
        po5_.id_ as id1_0_4_,
        po5_.value_ as value2_0_4_,
        po5_.tl as tl0_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        TrivialClass trivialcla0_ 
    inner join
        rootclass trivialcla0_1_ 
            on trivialcla0_.tcid=trivialcla0_1_.id1_ 
    left outer join
        rootclass top1_ 
            on trivialcla0_1_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        leafsubclass lower2_ 
            on top1_.id1_=lower2_.id__ 
    left outer join
        rootclass lower2_1_ 
            on lower2_.id__=lower2_1_.id1_ 
    left outer join
        rootclass top3_ 
            on lower2_.other1=top3_.id1_ 
    left outer join
        TrivialClass top3_1_ 
            on top3_.id1_=top3_1_.tcid 
    left outer join
        leafsubclass top3_2_ 
            on top3_.id1_=top3_2_.id__ 
    left outer join
        nonleafsubclass top3_3_ 
            on top3_.id1_=top3_3_.sid 
    left outer join
        leafsubsubclass top3_4_ 
            on top3_.id1_=top3_4_.sid 
    left outer join
        mono top3_5_ 
            on top3_.id1_=top3_5_.superid 
    left outer join
        leafsubclass lower4_ 
            on top3_2_.other3=lower4_.id__ 
    left outer join
        rootclass lower4_1_ 
            on lower4_.id__=lower4_1_.id1_ 
    left outer join
        Po po5_ 
            on lower4_.id__=po5_.id_ 
    left outer join
        nonleafsubclass multi6_ 
            on top3_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on multi6_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on multi6_2_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        trivialcla0_.tcid=? 
        and (
            trivialcla0_1_.id1_ is not null
        ) 
14:16:35,649 DEBUG SQL:104 - 
    select
        trivialcla0_.tcid as id1_7_,
        trivialcla0_1_.count_ as count2_7_,
        trivialcla0_1_.name as name7_,
        trivialcla0_1_.address as address7_,
        trivialcla0_1_.date_ as date5_7_,
        trivialcla0_1_.top_ as top6_7_ 
    from
        TrivialClass trivialcla0_ 
    inner join
        rootclass trivialcla0_1_ 
            on trivialcla0_.tcid=trivialcla0_1_.id1_ 
    where
        (
            trivialcla0_1_.id1_ is not null
        ) 
        and (
            (
                trivialcla0_.tcid=2 
            )
        )
14:16:35,650 DEBUG SQL:104 - 
    select
        top0_.count_ as col_0_0_ 
    from
        rootclass top0_ 
    where
        (
            top0_.id1_ is not null
        )
14:16:35,659 DEBUG SQL:104 - 
    select
        lower0_.id__ as id1_7_,
        lower0_1_.count_ as count2_7_,
        lower0_1_.name as name7_,
        lower0_1_.address as address7_,
        lower0_1_.date_ as date5_7_,
        lower0_1_.top_ as top6_7_,
        lower0_.intprop as intprop2_,
        lower0_.other1 as other3_2_,
        lower0_.other3 as other4_2_,
        lower0_.foo as foo2_ 
    from
        leafsubclass lower0_ 
    inner join
        rootclass lower0_1_ 
            on lower0_.id__=lower0_1_.id1_,
        rootclass top1_ 
    where
        (
            lower0_1_.id1_ is not null
        ) 
        and (
            (
                top1_.name='name'  
                and lower0_.other1=top1_.id1_
            )
        )
14:16:35,669 DEBUG SQL:104 - 
    select
        lower0_.id__ as id1_7_,
        lower0_1_.count_ as count2_7_,
        lower0_1_.name as name7_,
        lower0_1_.address as address7_,
        lower0_1_.date_ as date5_7_,
        lower0_1_.top_ as top6_7_,
        lower0_.intprop as intprop2_,
        lower0_.other1 as other3_2_,
        lower0_.other3 as other4_2_,
        lower0_.foo as foo2_ 
    from
        leafsubclass lower0_ 
    inner join
        rootclass lower0_1_ 
            on lower0_.id__=lower0_1_.id1_,
        leafsubclass lower1_ 
    inner join
        rootclass lower1_1_ 
            on lower1_.id__=lower1_1_.id1_ 
    where
        (
            lower0_1_.id1_ is not null
        ) 
        and (
            (
                lower1_1_.name='name'  
                and lower0_.other3=lower1_.id__
            )
        )
14:16:35,681 DEBUG SQL:104 - 
    select
        lower0_.id__ as id1_7_,
        lower0_1_.count_ as count2_7_,
        lower0_1_.name as name7_,
        lower0_1_.address as address7_,
        lower0_1_.date_ as date5_7_,
        lower0_1_.top_ as top6_7_,
        lower0_.intprop as intprop2_,
        lower0_.other1 as other3_2_,
        lower0_.other3 as other4_2_,
        lower0_.foo as foo2_ 
    from
        leafsubclass lower0_ 
    inner join
        rootclass lower0_1_ 
            on lower0_.id__=lower0_1_.id1_,
        leafsubclass lower1_ 
    inner join
        rootclass lower1_1_ 
            on lower1_.id__=lower1_1_.id1_ 
    where
        (
            lower0_1_.id1_ is not null
        ) 
        and (
            (
                lower1_1_.name='name'  
                and lower0_.other3=lower1_.id__
            )
            and(
                lower1_.foo is null  
                and lower0_.other3=lower1_.id__
            )
        )
14:16:35,691 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_,
        top0_.count_ as count2_7_,
        top0_.name as name7_,
        top0_.address as address7_,
        top0_.date_ as date5_7_,
        top0_.top_ as top6_7_,
        top0_2_.intprop as intprop2_,
        top0_2_.other1 as other3_2_,
        top0_2_.other3 as other4_2_,
        top0_2_.foo as foo2_,
        top0_3_.dupe as dupe6_,
        top0_3_.other2 as other3_6_,
        top0_3_.po as po6_,
        top0_3_.cal as cal6_,
        top0_3_.floaty as floaty6_,
        top0_4_.dupe as dupe3_,
        top0_4_.parent as parent3_,
        upper(top0_3_.dupe) as formula91_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    where
        (
            top0_.id1_ is not null
        ) 
        and (
            (
                top0_.count_=1 
            )
        )
14:16:35,710 DEBUG SQL:104 - 
    select
        top0_.count_ as col_0_0_ 
    from
        rootclass top0_,
        leafsubclass lower1_ 
    inner join
        rootclass lower1_1_ 
            on lower1_.id__=lower1_1_.id1_ 
    where
        (
            top0_.id1_ is not null
        )  
        and (
            lower1_1_.id1_ is not null
        ) 
        and (
            (
                lower1_.other1=top0_.id1_ 
            )
        )
14:16:35,711 DEBUG SQL:104 - 
    select
        bag1_.simple2 as col_0_0_,
        set2_.id1_ as col_1_0_ 
    from
        leafsubclass lower0_ 
    inner join
        rootclass lower0_1_ 
            on lower0_.id__=lower0_1_.id1_,
        simple_simple bag1_,
        rootclass set2_ 
    where
        (
            lower0_1_.id1_ is not null
        )  
        and lower0_.id__=bag1_.simple1 
        and lower0_.id__=set2_.parent
14:16:35,712 DEBUG SQL:104 - 
    select
        lower0_.id__ as col_0_0_ 
    from
        leafsubclass lower0_ 
    inner join
        rootclass lower0_1_ 
            on lower0_.id__=lower0_1_.id1_ 
    where
        (
            lower0_1_.id1_ is not null
        )
14:16:35,712 DEBUG SQL:104 - 
    select
        top0_.id1_ as col_0_0_ 
    from
        rootclass top0_ 
    where
        (
            top0_.id1_ is not null
        )
14:16:35,723 DEBUG SQL:104 - 
    delete 
    from
        TrivialClass 
    where
        tcid=?
14:16:35,724 DEBUG SQL:104 - 
    delete 
    from
        rootclass 
    where
        id1_=? 
        and count_=?
14:16:35,724 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_,
        top0_.count_ as count2_7_,
        top0_.name as name7_,
        top0_.address as address7_,
        top0_.date_ as date5_7_,
        top0_.top_ as top6_7_,
        top0_2_.intprop as intprop2_,
        top0_2_.other1 as other3_2_,
        top0_2_.other3 as other4_2_,
        top0_2_.foo as foo2_,
        top0_3_.dupe as dupe6_,
        top0_3_.other2 as other3_6_,
        top0_3_.po as po6_,
        top0_3_.cal as cal6_,
        top0_3_.floaty as floaty6_,
        top0_4_.dupe as dupe3_,
        top0_4_.parent as parent3_,
        upper(top0_3_.dupe) as formula91_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    where
        (
            top0_.id1_ is not null
        )
14:16:35,734 DEBUG SQL:104 - 
    select
        po0_.id_ as id1_0_,
        po0_.value_ as value2_0_,
        po0_.tl as tl0_ 
    from
        Po po0_
14:16:35,734  INFO CustomRunner:139 - Test: testSubclassCollection
14:16:35,735 DEBUG SQL:104 - 
    insert 
    into
        rootclass
        (id1_, count_, name, address, date_, top_) 
    values
        (null, ?, ?, ?, ?, ?)
14:16:35,756 DEBUG SQL:104 - 
    insert 
    into
        nonleafsubclass
        (dupe, other2, po, cal, floaty, sid) 
    values
        (?, ?, ?, ?, ?, ?)
14:16:35,756 DEBUG SQL:104 - 
    insert 
    into
        leafsubsubclass
        (dupe, parent, sid) 
    values
        (?, ?, ?)
14:16:35,756 DEBUG SQL:104 - 
    insert 
    into
        rootclass
        (id1_, count_, name, address, date_, top_) 
    values
        (null, ?, ?, ?, ?, ?)
14:16:35,757 DEBUG SQL:104 - 
    insert 
    into
        nonleafsubclass
        (dupe, other2, po, cal, floaty, sid) 
    values
        (?, ?, ?, ?, ?, ?)
14:16:35,767 DEBUG SQL:104 - 
    insert 
    into
        leafsubsubclass
        (dupe, parent, sid) 
    values
        (?, ?, ?)
14:16:35,767 DEBUG SQL:104 - 
    insert 
    into
        rootclass
        (id1_, count_, name, address, date_, top_) 
    values
        (null, ?, ?, ?, ?, ?)
14:16:35,768 DEBUG SQL:104 - 
    insert 
    into
        nonleafsubclass
        (dupe, other2, po, cal, floaty, sid) 
    values
        (?, ?, ?, ?, ?, ?)
14:16:35,768 DEBUG SQL:104 - 
    insert 
    into
        leafsubsubclass
        (dupe, parent, sid) 
    values
        (?, ?, ?)
14:16:35,777 DEBUG SQL:104 - 
    update
        leafsubsubclass 
    set
        another_parent=?,
        list_ind=? 
    where
        sid=?
14:16:35,777 DEBUG SQL:104 - 
    update
        leafsubsubclass 
    set
        another_parent=?,
        list_ind=? 
    where
        sid=?
14:16:35,779 DEBUG SQL:104 - 
    select
        * 
    from
        leafsubsubclass sm,
        nonleafsubclass m,
        rootclass s 
    where
        sm.sid=m.sid 
        and sm.sid=s.id1_ 
        and sm.sid=1
14:16:35,781 DEBUG SQL:104 - 
    select
        children1_.sid as id1_7_,
        children1_2_.count_ as count2_7_,
        children1_2_.name as name7_,
        children1_2_.address as address7_,
        children1_2_.date_ as date5_7_,
        children1_2_.top_ as top6_7_,
        children1_1_.dupe as dupe6_,
        children1_1_.other2 as other3_6_,
        children1_1_.po as po6_,
        children1_1_.cal as cal6_,
        children1_1_.floaty as floaty6_,
        children1_.dupe as dupe3_,
        children1_.parent as parent3_,
        upper(children1_1_.dupe) as formula91_ 
    from
        leafsubsubclass submulti0_ 
    inner join
        nonleafsubclass submulti0_1_ 
            on submulti0_.sid=submulti0_1_.sid 
    inner join
        rootclass submulti0_2_ 
            on submulti0_.sid=submulti0_2_.id1_ 
    inner join
        leafsubsubclass children1_ 
            on submulti0_.sid=children1_.parent 
    inner join
        nonleafsubclass children1_1_ 
            on children1_.sid=children1_1_.sid 
    inner join
        rootclass children1_2_ 
            on children1_.sid=children1_2_.id1_ 
    where
        (
            submulti0_2_.id1_ is not null
        ) 
        and (
            (
                children1_.dupe>-1 
            )
            and(
                children1_2_.name is null 
            )
        )
14:16:35,802 DEBUG SQL:104 - 
    select
        submulti0_.sid as id1_7_8_,
        submulti0_2_.count_ as count2_7_8_,
        submulti0_2_.name as name7_8_,
        submulti0_2_.address as address7_8_,
        submulti0_2_.date_ as date5_7_8_,
        submulti0_2_.top_ as top6_7_8_,
        submulti0_1_.dupe as dupe6_8_,
        submulti0_1_.other2 as other3_6_8_,
        submulti0_1_.po as po6_8_,
        submulti0_1_.cal as cal6_8_,
        submulti0_1_.floaty as floaty6_8_,
        submulti0_.dupe as dupe3_8_,
        submulti0_.parent as parent3_8_,
        upper(submulti0_1_.dupe) as formula91_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        lower2_.id__ as id1_7_1_,
        lower2_1_.count_ as count2_7_1_,
        lower2_1_.name as name7_1_,
        lower2_1_.address as address7_1_,
        lower2_1_.date_ as date5_7_1_,
        lower2_1_.top_ as top6_7_1_,
        lower2_.intprop as intprop2_1_,
        lower2_.other1 as other3_2_1_,
        lower2_.other3 as other4_2_1_,
        lower2_.foo as foo2_1_,
        top3_.id1_ as id1_7_2_,
        top3_.count_ as count2_7_2_,
        top3_.name as name7_2_,
        top3_.address as address7_2_,
        top3_.date_ as date5_7_2_,
        top3_.top_ as top6_7_2_,
        top3_2_.intprop as intprop2_2_,
        top3_2_.other1 as other3_2_2_,
        top3_2_.other3 as other4_2_2_,
        top3_2_.foo as foo2_2_,
        top3_3_.dupe as dupe6_2_,
        top3_3_.other2 as other3_6_2_,
        top3_3_.po as po6_2_,
        top3_3_.cal as cal6_2_,
        top3_3_.floaty as floaty6_2_,
        top3_4_.dupe as dupe3_2_,
        top3_4_.parent as parent3_2_,
        upper(top3_3_.dupe) as formula91_2_,
        case 
            when top3_4_.sid is not null then 4 
            when top3_1_.tcid is not null then 1 
            when top3_2_.id__ is not null then 2 
            when top3_3_.sid is not null then 3 
            when top3_5_.superid is not null then 5 
            when top3_.id1_ is not null then 0 
        end as clazz_2_,
        lower4_.id__ as id1_7_3_,
        lower4_1_.count_ as count2_7_3_,
        lower4_1_.name as name7_3_,
        lower4_1_.address as address7_3_,
        lower4_1_.date_ as date5_7_3_,
        lower4_1_.top_ as top6_7_3_,
        lower4_.intprop as intprop2_3_,
        lower4_.other1 as other3_2_3_,
        lower4_.other3 as other4_2_3_,
        lower4_.foo as foo2_3_,
        po5_.id_ as id1_0_4_,
        po5_.value_ as value2_0_4_,
        po5_.tl as tl0_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        leafsubsubclass submulti0_ 
    inner join
        nonleafsubclass submulti0_1_ 
            on submulti0_.sid=submulti0_1_.sid 
    inner join
        rootclass submulti0_2_ 
            on submulti0_.sid=submulti0_2_.id1_ 
    left outer join
        rootclass top1_ 
            on submulti0_2_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        leafsubclass lower2_ 
            on top1_.id1_=lower2_.id__ 
    left outer join
        rootclass lower2_1_ 
            on lower2_.id__=lower2_1_.id1_ 
    left outer join
        rootclass top3_ 
            on lower2_.other1=top3_.id1_ 
    left outer join
        TrivialClass top3_1_ 
            on top3_.id1_=top3_1_.tcid 
    left outer join
        leafsubclass top3_2_ 
            on top3_.id1_=top3_2_.id__ 
    left outer join
        nonleafsubclass top3_3_ 
            on top3_.id1_=top3_3_.sid 
    left outer join
        leafsubsubclass top3_4_ 
            on top3_.id1_=top3_4_.sid 
    left outer join
        mono top3_5_ 
            on top3_.id1_=top3_5_.superid 
    left outer join
        leafsubclass lower4_ 
            on top3_2_.other3=lower4_.id__ 
    left outer join
        rootclass lower4_1_ 
            on lower4_.id__=lower4_1_.id1_ 
    left outer join
        Po po5_ 
            on lower4_.id__=po5_.id_ 
    left outer join
        nonleafsubclass multi6_ 
            on top3_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on multi6_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on multi6_2_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        submulti0_.sid=? 
        and (
            submulti0_2_.id1_ is not null
        ) 
14:16:35,870 DEBUG SQL:104 - 
    select
        children1_.sid as id1_7_,
        children1_2_.count_ as count2_7_,
        children1_2_.name as name7_,
        children1_2_.address as address7_,
        children1_2_.date_ as date5_7_,
        children1_2_.top_ as top6_7_,
        children1_1_.dupe as dupe6_,
        children1_1_.other2 as other3_6_,
        children1_1_.po as po6_,
        children1_1_.cal as cal6_,
        children1_1_.floaty as floaty6_,
        children1_.dupe as dupe3_,
        children1_.parent as parent3_,
        upper(children1_1_.dupe) as formula91_ 
    from
        leafsubsubclass submulti0_ 
    inner join
        nonleafsubclass submulti0_1_ 
            on submulti0_.sid=submulti0_1_.sid 
    inner join
        rootclass submulti0_2_ 
            on submulti0_.sid=submulti0_2_.id1_ 
    inner join
        leafsubsubclass children1_ 
            on submulti0_.sid=children1_.parent 
    inner join
        nonleafsubclass children1_1_ 
            on children1_.sid=children1_1_.sid 
    inner join
        rootclass children1_2_ 
            on children1_.sid=children1_2_.id1_ 
    where
        (
            submulti0_2_.id1_ is not null
        )
14:16:35,896 DEBUG SQL:104 - 
    select
        children1_.sid as col_0_0_ 
    from
        leafsubsubclass submulti0_ 
    inner join
        nonleafsubclass submulti0_1_ 
            on submulti0_.sid=submulti0_1_.sid 
    inner join
        rootclass submulti0_2_ 
            on submulti0_.sid=submulti0_2_.id1_,
        leafsubsubclass children1_ 
    inner join
        nonleafsubclass children1_1_ 
            on children1_.sid=children1_1_.sid 
    inner join
        rootclass children1_2_ 
            on children1_.sid=children1_2_.id1_ 
    where
        (
            submulti0_2_.id1_ is not null
        )  
        and submulti0_.sid=children1_.parent
14:16:35,902 DEBUG SQL:104 - 
    select
        distinct submulti0_.sid as id1_7_,
        submulti0_2_.count_ as count2_7_,
        submulti0_2_.name as name7_,
        submulti0_2_.address as address7_,
        submulti0_2_.date_ as date5_7_,
        submulti0_2_.top_ as top6_7_,
        submulti0_1_.dupe as dupe6_,
        submulti0_1_.other2 as other3_6_,
        submulti0_1_.po as po6_,
        submulti0_1_.cal as cal6_,
        submulti0_1_.floaty as floaty6_,
        submulti0_.dupe as dupe3_,
        submulti0_.parent as parent3_,
        upper(submulti0_1_.dupe) as formula91_ 
    from
        leafsubsubclass submulti0_ 
    inner join
        nonleafsubclass submulti0_1_ 
            on submulti0_.sid=submulti0_1_.sid 
    inner join
        rootclass submulti0_2_ 
            on submulti0_.sid=submulti0_2_.id1_ 
    inner join
        leafsubsubclass children1_ 
            on submulti0_.sid=children1_.parent 
    inner join
        nonleafsubclass children1_1_ 
            on children1_.sid=children1_1_.sid 
    inner join
        rootclass children1_2_ 
            on children1_.sid=children1_2_.id1_ 
    where
        (
            submulti0_2_.id1_ is not null
        ) 
        and (
            (
                children1_.dupe>-1 
            )
            and(
                children1_2_.name is null 
            )
        )
14:16:35,918 DEBUG SQL:104 - 
    select
        children0_.parent as parent7_8_,
        children0_.sid as sid3_8_,
        children0_.sid as id1_7_7_,
        children0_2_.count_ as count2_7_7_,
        children0_2_.name as name7_7_,
        children0_2_.address as address7_7_,
        children0_2_.date_ as date5_7_7_,
        children0_2_.top_ as top6_7_7_,
        children0_1_.dupe as dupe6_7_,
        children0_1_.other2 as other3_6_7_,
        children0_1_.po as po6_7_,
        children0_1_.cal as cal6_7_,
        children0_1_.floaty as floaty6_7_,
        children0_.dupe as dupe3_7_,
        children0_.parent as parent3_7_,
        upper(children0_1_.dupe) as formula91_7_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        lower2_.id__ as id1_7_1_,
        lower2_1_.count_ as count2_7_1_,
        lower2_1_.name as name7_1_,
        lower2_1_.address as address7_1_,
        lower2_1_.date_ as date5_7_1_,
        lower2_1_.top_ as top6_7_1_,
        lower2_.intprop as intprop2_1_,
        lower2_.other1 as other3_2_1_,
        lower2_.other3 as other4_2_1_,
        lower2_.foo as foo2_1_,
        top3_.id1_ as id1_7_2_,
        top3_.count_ as count2_7_2_,
        top3_.name as name7_2_,
        top3_.address as address7_2_,
        top3_.date_ as date5_7_2_,
        top3_.top_ as top6_7_2_,
        top3_2_.intprop as intprop2_2_,
        top3_2_.other1 as other3_2_2_,
        top3_2_.other3 as other4_2_2_,
        top3_2_.foo as foo2_2_,
        top3_3_.dupe as dupe6_2_,
        top3_3_.other2 as other3_6_2_,
        top3_3_.po as po6_2_,
        top3_3_.cal as cal6_2_,
        top3_3_.floaty as floaty6_2_,
        top3_4_.dupe as dupe3_2_,
        top3_4_.parent as parent3_2_,
        upper(top3_3_.dupe) as formula91_2_,
        case 
            when top3_4_.sid is not null then 4 
            when top3_1_.tcid is not null then 1 
            when top3_2_.id__ is not null then 2 
            when top3_3_.sid is not null then 3 
            when top3_5_.superid is not null then 5 
            when top3_.id1_ is not null then 0 
        end as clazz_2_,
        lower4_.id__ as id1_7_3_,
        lower4_1_.count_ as count2_7_3_,
        lower4_1_.name as name7_3_,
        lower4_1_.address as address7_3_,
        lower4_1_.date_ as date5_7_3_,
        lower4_1_.top_ as top6_7_3_,
        lower4_.intprop as intprop2_3_,
        lower4_.other1 as other3_2_3_,
        lower4_.other3 as other4_2_3_,
        lower4_.foo as foo2_3_,
        po5_.id_ as id1_0_4_,
        po5_.value_ as value2_0_4_,
        po5_.tl as tl0_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_ 
    from
        leafsubsubclass children0_ 
    inner join
        nonleafsubclass children0_1_ 
            on children0_.sid=children0_1_.sid 
    inner join
        rootclass children0_2_ 
            on children0_.sid=children0_2_.id1_ 
    left outer join
        rootclass top1_ 
            on children0_2_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        leafsubclass lower2_ 
            on top1_.id1_=lower2_.id__ 
    left outer join
        rootclass lower2_1_ 
            on lower2_.id__=lower2_1_.id1_ 
    left outer join
        rootclass top3_ 
            on lower2_.other1=top3_.id1_ 
    left outer join
        TrivialClass top3_1_ 
            on top3_.id1_=top3_1_.tcid 
    left outer join
        leafsubclass top3_2_ 
            on top3_.id1_=top3_2_.id__ 
    left outer join
        nonleafsubclass top3_3_ 
            on top3_.id1_=top3_3_.sid 
    left outer join
        leafsubsubclass top3_4_ 
            on top3_.id1_=top3_4_.sid 
    left outer join
        mono top3_5_ 
            on top3_.id1_=top3_5_.superid 
    left outer join
        leafsubclass lower4_ 
            on top3_2_.other3=lower4_.id__ 
    left outer join
        rootclass lower4_1_ 
            on lower4_.id__=lower4_1_.id1_ 
    left outer join
        Po po5_ 
            on lower4_.id__=po5_.id_ 
    left outer join
        nonleafsubclass multi6_ 
            on top3_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on multi6_.po=po7_.id_ 
    where
        children0_.parent=?
14:16:35,972 DEBUG SQL:104 - 
    select
        count(*) as col_0_0_ 
    from
        leafsubsubclass this 
    inner join
        nonleafsubclass this_1_ 
            on this.sid=this_1_.sid 
    inner join
        rootclass this_2_ 
            on this.sid=this_2_.id1_ 
    where
        this.another_parent = ? 
        and (
            (
                this.dupe>-1 
            )
            and(
                this_2_.name is null 
            )
        )
14:16:35,984 DEBUG SQL:104 - 
    select
        distinct submulti0_.sid as col_0_0_ 
    from
        leafsubsubclass submulti0_ 
    inner join
        nonleafsubclass submulti0_1_ 
            on submulti0_.sid=submulti0_1_.sid 
    inner join
        rootclass submulti0_2_ 
            on submulti0_.sid=submulti0_2_.id1_,
        leafsubsubclass morechildr1_ 
    inner join
        nonleafsubclass morechildr1_1_ 
            on morechildr1_.sid=morechildr1_1_.sid 
    inner join
        rootclass morechildr1_2_ 
            on morechildr1_.sid=morechildr1_2_.id1_ 
    where
        (
            submulti0_2_.id1_ is not null
        ) 
        and (
            (
                morechildr1_.dupe<1.0  
                and submulti0_.sid=morechildr1_.another_parent 
                and morechildr1_.list_ind = 1
            )
        )
14:16:35,995 DEBUG SQL:104 - 
    select
        morechildr0_.another_parent as another4_7_9_,
        morechildr0_.sid as sid3_9_,
        morechildr0_.list_ind as list5_9_,
        morechildr0_.sid as id1_7_8_,
        morechildr0_2_.count_ as count2_7_8_,
        morechildr0_2_.name as name7_8_,
        morechildr0_2_.address as address7_8_,
        morechildr0_2_.date_ as date5_7_8_,
        morechildr0_2_.top_ as top6_7_8_,
        morechildr0_1_.dupe as dupe6_8_,
        morechildr0_1_.other2 as other3_6_8_,
        morechildr0_1_.po as po6_8_,
        morechildr0_1_.cal as cal6_8_,
        morechildr0_1_.floaty as floaty6_8_,
        morechildr0_.dupe as dupe3_8_,
        morechildr0_.parent as parent3_8_,
        upper(morechildr0_1_.dupe) as formula91_8_,
        top1_.id1_ as id1_7_0_,
        top1_.count_ as count2_7_0_,
        top1_.name as name7_0_,
        top1_.address as address7_0_,
        top1_.date_ as date5_7_0_,
        top1_.top_ as top6_7_0_,
        top1_2_.intprop as intprop2_0_,
        top1_2_.other1 as other3_2_0_,
        top1_2_.other3 as other4_2_0_,
        top1_2_.foo as foo2_0_,
        top1_3_.dupe as dupe6_0_,
        top1_3_.other2 as other3_6_0_,
        top1_3_.po as po6_0_,
        top1_3_.cal as cal6_0_,
        top1_3_.floaty as floaty6_0_,
        top1_4_.dupe as dupe3_0_,
        top1_4_.parent as parent3_0_,
        upper(top1_3_.dupe) as formula91_0_,
        case 
            when top1_4_.sid is not null then 4 
            when top1_1_.tcid is not null then 1 
            when top1_2_.id__ is not null then 2 
            when top1_3_.sid is not null then 3 
            when top1_5_.superid is not null then 5 
            when top1_.id1_ is not null then 0 
        end as clazz_0_,
        lower2_.id__ as id1_7_1_,
        lower2_1_.count_ as count2_7_1_,
        lower2_1_.name as name7_1_,
        lower2_1_.address as address7_1_,
        lower2_1_.date_ as date5_7_1_,
        lower2_1_.top_ as top6_7_1_,
        lower2_.intprop as intprop2_1_,
        lower2_.other1 as other3_2_1_,
        lower2_.other3 as other4_2_1_,
        lower2_.foo as foo2_1_,
        top3_.id1_ as id1_7_2_,
        top3_.count_ as count2_7_2_,
        top3_.name as name7_2_,
        top3_.address as address7_2_,
        top3_.date_ as date5_7_2_,
        top3_.top_ as top6_7_2_,
        top3_2_.intprop as intprop2_2_,
        top3_2_.other1 as other3_2_2_,
        top3_2_.other3 as other4_2_2_,
        top3_2_.foo as foo2_2_,
        top3_3_.dupe as dupe6_2_,
        top3_3_.other2 as other3_6_2_,
        top3_3_.po as po6_2_,
        top3_3_.cal as cal6_2_,
        top3_3_.floaty as floaty6_2_,
        top3_4_.dupe as dupe3_2_,
        top3_4_.parent as parent3_2_,
        upper(top3_3_.dupe) as formula91_2_,
        case 
            when top3_4_.sid is not null then 4 
            when top3_1_.tcid is not null then 1 
            when top3_2_.id__ is not null then 2 
            when top3_3_.sid is not null then 3 
            when top3_5_.superid is not null then 5 
            when top3_.id1_ is not null then 0 
        end as clazz_2_,
        lower4_.id__ as id1_7_3_,
        lower4_1_.count_ as count2_7_3_,
        lower4_1_.name as name7_3_,
        lower4_1_.address as address7_3_,
        lower4_1_.date_ as date5_7_3_,
        lower4_1_.top_ as top6_7_3_,
        lower4_.intprop as intprop2_3_,
        lower4_.other1 as other3_2_3_,
        lower4_.other3 as other4_2_3_,
        lower4_.foo as foo2_3_,
        po5_.id_ as id1_0_4_,
        po5_.value_ as value2_0_4_,
        po5_.tl as tl0_4_,
        multi6_.sid as id1_7_5_,
        multi6_1_.count_ as count2_7_5_,
        multi6_1_.name as name7_5_,
        multi6_1_.address as address7_5_,
        multi6_1_.date_ as date5_7_5_,
        multi6_1_.top_ as top6_7_5_,
        multi6_.dupe as dupe6_5_,
        multi6_.other2 as other3_6_5_,
        multi6_.po as po6_5_,
        multi6_.cal as cal6_5_,
        multi6_.floaty as floaty6_5_,
        multi6_2_.dupe as dupe3_5_,
        multi6_2_.parent as parent3_5_,
        upper(multi6_.dupe) as formula91_5_,
        case 
            when multi6_2_.sid is not null then 4 
            when multi6_.sid is not null then 3 
        end as clazz_5_,
        po7_.id_ as id1_0_6_,
        po7_.value_ as value2_0_6_,
        po7_.tl as tl0_6_,
        submulti8_.sid as id1_7_7_,
        submulti8_2_.count_ as count2_7_7_,
        submulti8_2_.name as name7_7_,
        submulti8_2_.address as address7_7_,
        submulti8_2_.date_ as date5_7_7_,
        submulti8_2_.top_ as top6_7_7_,
        submulti8_1_.dupe as dupe6_7_,
        submulti8_1_.other2 as other3_6_7_,
        submulti8_1_.po as po6_7_,
        submulti8_1_.cal as cal6_7_,
        submulti8_1_.floaty as floaty6_7_,
        submulti8_.dupe as dupe3_7_,
        submulti8_.parent as parent3_7_,
        upper(submulti8_1_.dupe) as formula91_7_ 
    from
        leafsubsubclass morechildr0_ 
    inner join
        nonleafsubclass morechildr0_1_ 
            on morechildr0_.sid=morechildr0_1_.sid 
    inner join
        rootclass morechildr0_2_ 
            on morechildr0_.sid=morechildr0_2_.id1_ 
    left outer join
        rootclass top1_ 
            on morechildr0_2_.top_=top1_.id1_ 
    left outer join
        TrivialClass top1_1_ 
            on top1_.id1_=top1_1_.tcid 
    left outer join
        leafsubclass top1_2_ 
            on top1_.id1_=top1_2_.id__ 
    left outer join
        nonleafsubclass top1_3_ 
            on top1_.id1_=top1_3_.sid 
    left outer join
        leafsubsubclass top1_4_ 
            on top1_.id1_=top1_4_.sid 
    left outer join
        mono top1_5_ 
            on top1_.id1_=top1_5_.superid 
    left outer join
        leafsubclass lower2_ 
            on top1_.id1_=lower2_.id__ 
    left outer join
        rootclass lower2_1_ 
            on lower2_.id__=lower2_1_.id1_ 
    left outer join
        rootclass top3_ 
            on lower2_.other1=top3_.id1_ 
    left outer join
        TrivialClass top3_1_ 
            on top3_.id1_=top3_1_.tcid 
    left outer join
        leafsubclass top3_2_ 
            on top3_.id1_=top3_2_.id__ 
    left outer join
        nonleafsubclass top3_3_ 
            on top3_.id1_=top3_3_.sid 
    left outer join
        leafsubsubclass top3_4_ 
            on top3_.id1_=top3_4_.sid 
    left outer join
        mono top3_5_ 
            on top3_.id1_=top3_5_.superid 
    left outer join
        leafsubclass lower4_ 
            on top3_2_.other3=lower4_.id__ 
    left outer join
        rootclass lower4_1_ 
            on lower4_.id__=lower4_1_.id1_ 
    left outer join
        Po po5_ 
            on lower4_.id__=po5_.id_ 
    left outer join
        nonleafsubclass multi6_ 
            on top3_3_.other2=multi6_.sid 
    left outer join
        rootclass multi6_1_ 
            on multi6_.sid=multi6_1_.id1_ 
    left outer join
        leafsubsubclass multi6_2_ 
            on multi6_.sid=multi6_2_.sid 
    left outer join
        Po po7_ 
            on multi6_.po=po7_.id_ 
    left outer join
        leafsubsubclass submulti8_ 
            on multi6_2_.parent=submulti8_.sid 
    left outer join
        nonleafsubclass submulti8_1_ 
            on submulti8_.sid=submulti8_1_.sid 
    left outer join
        rootclass submulti8_2_ 
            on submulti8_.sid=submulti8_2_.id1_ 
    where
        morechildr0_.another_parent=?
14:16:36,070 DEBUG SQL:104 - 
    update
        rootclass 
    set
        count_=?,
        name=?,
        address=?,
        date_=?,
        top_=? 
    where
        id1_=? 
        and count_=?
14:16:36,071 DEBUG SQL:104 - 
    update
        leafsubsubclass 
    set
        dupe=?,
        parent=? 
    where
        sid=?
14:16:36,071 DEBUG SQL:104 - 
    update
        rootclass 
    set
        count_=?,
        name=?,
        address=?,
        date_=?,
        top_=? 
    where
        id1_=? 
        and count_=?
14:16:36,079 DEBUG SQL:104 - 
    update
        leafsubsubclass 
    set
        dupe=?,
        parent=? 
    where
        sid=?
14:16:36,080 DEBUG SQL:104 - 
    update
        leafsubsubclass 
    set
        another_parent=null,
        list_ind=null 
    where
        another_parent=?
14:16:36,080 DEBUG SQL:104 - 
    update
        leafsubsubclass 
    set
        another_parent=null,
        list_ind=null 
    where
        another_parent=?
14:16:36,090 DEBUG SQL:104 - 
    update
        leafsubsubclass 
    set
        another_parent=null,
        list_ind=null 
    where
        another_parent=?
14:16:36,090 DEBUG SQL:104 - 
    delete 
    from
        leafsubsubclass 
    where
        sid=?
14:16:36,091 DEBUG SQL:104 - 
    delete 
    from
        rootclass 
    where
        id1_=? 
        and count_=?
14:16:36,091 DEBUG SQL:104 - 
    delete 
    from
        leafsubsubclass 
    where
        sid=?
14:16:36,091 DEBUG SQL:104 - 
    delete 
    from
        rootclass 
    where
        id1_=? 
        and count_=?
14:16:36,091 DEBUG SQL:104 - 
    delete 
    from
        leafsubsubclass 
    where
        sid=?
14:16:36,091 DEBUG SQL:104 - 
    delete 
    from
        rootclass 
    where
        id1_=? 
        and count_=?
14:16:36,092 DEBUG SQL:104 - 
    select
        top0_.id1_ as id1_7_,
        top0_.count_ as count2_7_,
        top0_.name as name7_,
        top0_.address as address7_,
        top0_.date_ as date5_7_,
        top0_.top_ as top6_7_,
        top0_2_.intprop as intprop2_,
        top0_2_.other1 as other3_2_,
        top0_2_.other3 as other4_2_,
        top0_2_.foo as foo2_,
        top0_3_.dupe as dupe6_,
        top0_3_.other2 as other3_6_,
        top0_3_.po as po6_,
        top0_3_.cal as cal6_,
        top0_3_.floaty as floaty6_,
        top0_4_.dupe as dupe3_,
        top0_4_.parent as parent3_,
        upper(top0_3_.dupe) as formula91_,
        case 
            when top0_4_.sid is not null then 4 
            when top0_1_.tcid is not null then 1 
            when top0_2_.id__ is not null then 2 
            when top0_3_.sid is not null then 3 
            when top0_5_.superid is not null then 5 
            when top0_.id1_ is not null then 0 
        end as clazz_ 
    from
        rootclass top0_ 
    left outer join
        TrivialClass top0_1_ 
            on top0_.id1_=top0_1_.tcid 
    left outer join
        leafsubclass top0_2_ 
            on top0_.id1_=top0_2_.id__ 
    left outer join
        nonleafsubclass top0_3_ 
            on top0_.id1_=top0_3_.sid 
    left outer join
        leafsubsubclass top0_4_ 
            on top0_.id1_=top0_4_.sid 
    left outer join
        mono top0_5_ 
            on top0_.id1_=top0_5_.superid 
    where
        (
            top0_.id1_ is not null
        )
14:16:36,113 DEBUG SQL:104 - 
    select
        po0_.id_ as id1_0_,
        po0_.value_ as value2_0_,
        po0_.tl as tl0_ 
    from
        Po po0_
14:16:36,114  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:16:36,115 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:16:36,115 DEBUG SQL:104 - 
    alter table Po 
        drop constraint FKA1FDED16EBE
14:16:36,115 DEBUG SQL:104 - 
    alter table Po 
        drop constraint FKA1F6F89E02A
14:16:36,116 DEBUG SQL:104 - 
    alter table TrivialClass 
        drop constraint FKC09264CFDF079C10
14:16:36,116 DEBUG SQL:104 - 
    alter table leafsubclass 
        drop constraint FK24853496DF029E81
14:16:36,116 DEBUG SQL:104 - 
    alter table leafsubclass 
        drop constraint FK24853496A2CEC367
14:16:36,116 DEBUG SQL:104 - 
    alter table leafsubclass 
        drop constraint FK24853496338734D5
14:16:36,116 DEBUG SQL:104 - 
    alter table leafsubsubclass 
        drop constraint FK443F0B5A6F9C38B8
14:16:36,116 DEBUG SQL:104 - 
    alter table leafsubsubclass 
        drop constraint FK443F0B5A8B3D2732
14:16:36,117 DEBUG SQL:104 - 
    alter table leafsubsubclass 
        drop constraint FK443F0B5AAC6C3EE
14:16:36,137 DEBUG SQL:104 - 
    alter table leafsubsubclass 
        drop constraint FK443F0B5A3310E22E
14:16:36,137 DEBUG SQL:104 - 
    alter table mono 
        drop constraint FK333AE3703EEA1C
14:16:36,137 DEBUG SQL:104 - 
    alter table monostrings 
        drop constraint FKA118F23F450AC6F3
14:16:36,138 DEBUG SQL:104 - 
    alter table nonleafsubclass 
        drop constraint FK2C4413E3DED31D14
14:16:36,138 DEBUG SQL:104 - 
    alter table nonleafsubclass 
        drop constraint FK2C4413E33397DF0C
14:16:36,138 DEBUG SQL:104 - 
    alter table nonleafsubclass 
        drop constraint FK2C4413E328385AED
14:16:36,138 DEBUG SQL:104 - 
    alter table rootclass 
        drop constraint FKCC8765D6DF07C9F0
14:16:36,139 DEBUG SQL:104 - 
    alter table rootclass 
        drop constraint FKCC8765D63434DA5C
14:16:36,139 DEBUG SQL:104 - 
    alter table simple_simple 
        drop constraint FK869810DF5B9F6506
14:16:36,139 DEBUG SQL:104 - 
    alter table simple_simple 
        drop constraint FK869810DFEC57D671
14:16:36,147 DEBUG SQL:104 - 
    drop table Po if exists
14:16:36,147 DEBUG SQL:104 - 
    drop table TrivialClass if exists
14:16:36,147 DEBUG SQL:104 - 
    drop table leafsubclass if exists
14:16:36,147 DEBUG SQL:104 - 
    drop table leafsubsubclass if exists
14:16:36,148 DEBUG SQL:104 - 
    drop table mono if exists
14:16:36,148 DEBUG SQL:104 - 
    drop table monostrings if exists
14:16:36,148 DEBUG SQL:104 - 
    drop table nonleafsubclass if exists
14:16:36,148 DEBUG SQL:104 - 
    drop table rootclass if exists
14:16:36,148 DEBUG SQL:104 - 
    drop table simple_simple if exists
14:16:36,148  INFO SchemaExport:405 - HHH000230: Schema export complete
14:16:36,149  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
