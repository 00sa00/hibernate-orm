<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" hostname="dhcp-10.15.208.168.stl.redhat.com" name="org.hibernate.test.hql.BulkManipulationTest" tests="41" time="9.193" timestamp="2013-02-28T20:13:08">
  <properties />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testBooleanHandling" time="0.327" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testDeleteNonExistentEntity" time="0.002" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testDeleteOnDiscriminatorSubclass" time="0.212" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testDeleteOnJoinedSubclass" time="0.331" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testDeleteOnMappedJoin" time="0.231" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testDeleteRestrictedOnManyToOne" time="0.247" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testDeleteSyntaxWithCompositeId" time="0.076" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testDeleteUnionSubclassAbstractRoot" time="0.331" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testDeleteUnionSubclassConcreteSubclass" time="0.312" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testDeleteUnionSubclassLeafSubclass" time="0.284" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testDeleteWithMetadataWhereFragments" time="0.072" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testDeleteWithSubquery" time="0.084" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testIncorrectSyntax" time="0.013" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testIncrementCounterVersion" time="0.318" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testIncrementTimestampVersion" time="1.542" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testInsertAcrossMappedJoinFails" time="0.097" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testInsertIntoSuperclassPropertiesFails" time="0.206" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testInsertWithAssignedCompositeId" time="0.03" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testInsertWithGeneratedId" time="0.048" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testInsertWithGeneratedTimestampVersion" time="0.083" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testInsertWithGeneratedVersionAndId" time="0.074" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testInsertWithManyToOne" time="0.249" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testInsertWithMismatchedTypes" time="0.238" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testInsertWithSelectListUsingJoins" time="0.127" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testManyToManyBulkDelete" time="0.043" />
  <ignored-testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testSimpleDeleteOnAnimal" time="0.01" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testSimpleInsert" time="0.253" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testSimpleNativeSQLInsert" time="0.296" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testTempTableGenerationIsolation" time="0.067" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testUpdateNonExistentEntity" time="0.002" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testUpdateOnAnimal" time="0.306" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testUpdateOnComponent" time="0.097" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testUpdateOnDiscriminatorSubclass" time="0.288" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testUpdateOnImplicitJoinFails" time="0.096" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testUpdateOnMammal" time="0.279" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testUpdateOnManyToOne" time="0.084" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testUpdateSetNullOnDiscriminatorSubclass" time="0.255" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testUpdateSetNullOnJoinedSubclass" time="0.273" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testUpdateSetNullUnionSubclass" time="0.344" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testUpdateWithSubquery" time="0.081" />
  <testcase classname="org.hibernate.test.hql.BulkManipulationTest" name="testUpdateWithWhereExistsSubquery" time="0.198" />
  <system-out><![CDATA[14:13:08,338  INFO CustomRunner:132 - BeforeClass: org.hibernate.test.hql.BulkManipulationTest
14:13:08,340  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/hql/Animal.hbm.xml
14:13:08,368  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/hql/Vehicle.hbm.xml
14:13:08,372  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/hql/KeyManyToOneEntity.hbm.xml
14:13:08,377  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/hql/Versions.hbm.xml
14:13:08,381  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/hql/FooBarCopy.hbm.xml
14:13:08,386  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/legacy/Multi.hbm.xml
14:13:08,405  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/hql/EntityWithCrazyCompositeKey.hbm.xml
14:13:08,411  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/hql/SimpleEntityWithAssociation.hbm.xml
14:13:08,416  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/hql/BooleanLiteralEntity.hbm.xml
14:13:08,420  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/hql/CompositeIdEntity.hbm.xml
14:13:08,485  INFO PojoInstantiator:69 - HHH000182: No default (no-argument) constructor for class: org.hibernate.test.hql.KeyManyToOneEntity$Id (class must be instantiated by Interceptor)
14:13:08,486  WARN RootClass:288 - HHH000038: Composite-id class does not override equals(): org.hibernate.test.hql.KeyManyToOneEntity$Id
14:13:08,486  WARN RootClass:289 - HHH000039: Composite-id class does not override hashCode(): org.hibernate.test.hql.KeyManyToOneEntity$Id
14:13:08,487  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:13:08,488  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:13:08,488  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:13:08,488  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:13:08,488  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:13:08,490  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:13:08,490  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:13:08,491  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:13:08,491  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:13:08,491  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:13:08,506  INFO PojoInstantiator:85 - HHH000182: No default (no-argument) constructor for class: org.hibernate.test.hql.KeyManyToOneKeyEntity (class must be instantiated by Interceptor)
14:13:08,562  INFO PojoInstantiator:69 - HHH000182: No default (no-argument) constructor for class: org.hibernate.test.hql.KeyManyToOneEntity$Id (class must be instantiated by Interceptor)
14:13:08,562  INFO PojoInstantiator:85 - HHH000182: No default (no-argument) constructor for class: org.hibernate.test.hql.KeyManyToOneEntity (class must be instantiated by Interceptor)
14:13:08,680  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:13:08,681 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:13:08,681 DEBUG SQL:104 - 
    alter table Animal 
        drop constraint FK752A7A1C1F3964B4
14:13:08,681 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Animal drop constraint FK752A7A1C1F3964B4
14:13:08,681 ERROR SchemaExport:426 - Table "ANIMAL" not found; SQL statement:

    alter table Animal 
        drop constraint FK752A7A1C1F3964B4 [42102-145]
14:13:08,682 DEBUG SQL:104 - 
    alter table Animal 
        drop constraint FK752A7A1C6309E77B
14:13:08,682 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Animal drop constraint FK752A7A1C6309E77B
14:13:08,682 ERROR SchemaExport:426 - Table "ANIMAL" not found; SQL statement:

    alter table Animal 
        drop constraint FK752A7A1C6309E77B [42102-145]
14:13:08,682 DEBUG SQL:104 - 
    alter table Animal 
        drop constraint FK752A7A1C4B485C79
14:13:08,683 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Animal drop constraint FK752A7A1C4B485C79
14:13:08,683 ERROR SchemaExport:426 - Table "ANIMAL" not found; SQL statement:

    alter table Animal 
        drop constraint FK752A7A1C4B485C79 [42102-145]
14:13:08,683 DEBUG SQL:104 - 
    alter table Cat 
        drop constraint FK107B66D384BBA
14:13:08,683 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Cat drop constraint FK107B66D384BBA
14:13:08,684 ERROR SchemaExport:426 - Table "CAT" not found; SQL statement:

    alter table Cat 
        drop constraint FK107B66D384BBA [42102-145]
14:13:08,684 DEBUG SQL:104 - 
    alter table Dog 
        drop constraint FK10D1C6D384BBA
14:13:08,684 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Dog drop constraint FK10D1C6D384BBA
14:13:08,684 ERROR SchemaExport:426 - Table "DOG" not found; SQL statement:

    alter table Dog 
        drop constraint FK10D1C6D384BBA [42102-145]
14:13:08,685 DEBUG SQL:104 - 
    alter table DomesticAnimal 
        drop constraint FKE02638DA1733655F
14:13:08,685 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table DomesticAnimal drop constraint FKE02638DA1733655F
14:13:08,685 ERROR SchemaExport:426 - Table "DOMESTICANIMAL" not found; SQL statement:

    alter table DomesticAnimal 
        drop constraint FKE02638DA1733655F [42102-145]
14:13:08,686 DEBUG SQL:104 - 
    alter table DomesticAnimal 
        drop constraint FKE02638DA6C03411F
14:13:08,686 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table DomesticAnimal drop constraint FKE02638DA6C03411F
14:13:08,686 ERROR SchemaExport:426 - Table "DOMESTICANIMAL" not found; SQL statement:

    alter table DomesticAnimal 
        drop constraint FKE02638DA6C03411F [42102-145]
14:13:08,686 DEBUG SQL:104 - 
    alter table Human 
        drop constraint FK42D710D1733655F
14:13:08,687 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Human drop constraint FK42D710D1733655F
14:13:08,687 ERROR SchemaExport:426 - Table "HUMAN" not found; SQL statement:

    alter table Human 
        drop constraint FK42D710D1733655F [42102-145]
14:13:08,687 DEBUG SQL:104 - 
    alter table Human_family 
        drop constraint FK5F790ED61DCB1311
14:13:08,687 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Human_family drop constraint FK5F790ED61DCB1311
14:13:08,687 ERROR SchemaExport:426 - Table "HUMAN_FAMILY" not found; SQL statement:

    alter table Human_family 
        drop constraint FK5F790ED61DCB1311 [42102-145]
14:13:08,688 DEBUG SQL:104 - 
    alter table Human_family 
        drop constraint FK5F790ED61DCB1310
14:13:08,688 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Human_family drop constraint FK5F790ED61DCB1310
14:13:08,688 ERROR SchemaExport:426 - Table "HUMAN_FAMILY" not found; SQL statement:

    alter table Human_family 
        drop constraint FK5F790ED61DCB1310 [42102-145]
14:13:08,688 DEBUG SQL:104 - 
    alter table Human_friends 
        drop constraint FKAC7104631DCB1311
14:13:08,689 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Human_friends drop constraint FKAC7104631DCB1311
14:13:08,689 ERROR SchemaExport:426 - Table "HUMAN_FRIENDS" not found; SQL statement:

    alter table Human_friends 
        drop constraint FKAC7104631DCB1311 [42102-145]
14:13:08,689 DEBUG SQL:104 - 
    alter table Human_friends 
        drop constraint FKAC7104631DCB1310
14:13:08,689 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Human_friends drop constraint FKAC7104631DCB1310
14:13:08,689 ERROR SchemaExport:426 - Table "HUMAN_FRIENDS" not found; SQL statement:

    alter table Human_friends 
        drop constraint FKAC7104631DCB1310 [42102-145]
14:13:08,690 DEBUG SQL:104 - 
    alter table JOINED 
        drop constraint FK82C23B49534E0F13
14:13:08,690 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table JOINED drop constraint FK82C23B49534E0F13
14:13:08,690 ERROR SchemaExport:426 - Table "JOINED" not found; SQL statement:

    alter table JOINED 
        drop constraint FK82C23B49534E0F13 [42102-145]
14:13:08,690 DEBUG SQL:104 - 
    alter table KeyManyToOneEntity 
        drop constraint FK489A71905D944F66
14:13:08,691 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table KeyManyToOneEntity drop constraint FK489A71905D944F66
14:13:08,691 ERROR SchemaExport:426 - Table "KEYMANYTOONEENTITY" not found; SQL statement:

    alter table KeyManyToOneEntity 
        drop constraint FK489A71905D944F66 [42102-145]
14:13:08,691 DEBUG SQL:104 - 
    alter table Lizard 
        drop constraint FK87B0E2B6EE398315
14:13:08,691 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Lizard drop constraint FK87B0E2B6EE398315
14:13:08,691 ERROR SchemaExport:426 - Table "LIZARD" not found; SQL statement:

    alter table Lizard 
        drop constraint FK87B0E2B6EE398315 [42102-145]
14:13:08,692 DEBUG SQL:104 - 
    alter table MANY_TO_MANY 
        drop constraint FK8CF3D7C3E0DF2A91
14:13:08,692 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table MANY_TO_MANY drop constraint FK8CF3D7C3E0DF2A91
14:13:08,693 ERROR SchemaExport:426 - Table "MANY_TO_MANY" not found; SQL statement:

    alter table MANY_TO_MANY 
        drop constraint FK8CF3D7C3E0DF2A91 [42102-145]
14:13:08,693 DEBUG SQL:104 - 
    alter table MANY_TO_MANY 
        drop constraint FK8CF3D7C322C9695A
14:13:08,694 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table MANY_TO_MANY drop constraint FK8CF3D7C322C9695A
14:13:08,694 ERROR SchemaExport:426 - Table "MANY_TO_MANY" not found; SQL statement:

    alter table MANY_TO_MANY 
        drop constraint FK8CF3D7C322C9695A [42102-145]
14:13:08,694 DEBUG SQL:104 - 
    alter table Mammal 
        drop constraint FK88EF417FEFA9D699
14:13:08,695 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Mammal drop constraint FK88EF417FEFA9D699
14:13:08,695 ERROR SchemaExport:426 - Table "MAMMAL" not found; SQL statement:

    alter table Mammal 
        drop constraint FK88EF417FEFA9D699 [42102-145]
14:13:08,695 DEBUG SQL:104 - 
    alter table Mammal 
        drop constraint FK88EF417FCE6EEE98
14:13:08,695 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Mammal drop constraint FK88EF417FCE6EEE98
14:13:08,695 ERROR SchemaExport:426 - Table "MAMMAL" not found; SQL statement:

    alter table Mammal 
        drop constraint FK88EF417FCE6EEE98 [42102-145]
14:13:08,696 DEBUG SQL:104 - 
    alter table Po 
        drop constraint FKA1FDED16EBE
14:13:08,696 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Po drop constraint FKA1FDED16EBE
14:13:08,696 ERROR SchemaExport:426 - Table "PO" not found; SQL statement:

    alter table Po 
        drop constraint FKA1FDED16EBE [42102-145]
14:13:08,696 DEBUG SQL:104 - 
    alter table Po 
        drop constraint FKA1F6F89E02A
14:13:08,696 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Po drop constraint FKA1F6F89E02A
14:13:08,697 ERROR SchemaExport:426 - Table "PO" not found; SQL statement:

    alter table Po 
        drop constraint FKA1F6F89E02A [42102-145]
14:13:08,697 DEBUG SQL:104 - 
    alter table Reptile 
        drop constraint FKA4790CABEFA9D699
14:13:08,697 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Reptile drop constraint FKA4790CABEFA9D699
14:13:08,697 ERROR SchemaExport:426 - Table "REPTILE" not found; SQL statement:

    alter table Reptile 
        drop constraint FKA4790CABEFA9D699 [42102-145]
14:13:08,697 DEBUG SQL:104 - 
    alter table SIMPLE_2 
        drop constraint FK4B988CE5C81DD13B
14:13:08,698 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table SIMPLE_2 drop constraint FK4B988CE5C81DD13B
14:13:08,698 ERROR SchemaExport:426 - Table "SIMPLE_2" not found; SQL statement:

    alter table SIMPLE_2 
        drop constraint FK4B988CE5C81DD13B [42102-145]
14:13:08,698 DEBUG SQL:104 - 
    alter table TrivialClass 
        drop constraint FKC09264CFDF079C10
14:13:08,698 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table TrivialClass drop constraint FKC09264CFDF079C10
14:13:08,699 ERROR SchemaExport:426 - Table "TRIVIALCLASS" not found; SQL statement:

    alter table TrivialClass 
        drop constraint FKC09264CFDF079C10 [42102-145]
14:13:08,699 DEBUG SQL:104 - 
    alter table Zoo 
        drop constraint FK15FBA55106523
14:13:08,699 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Zoo drop constraint FK15FBA55106523
14:13:08,699 ERROR SchemaExport:426 - Table "ZOO" not found; SQL statement:

    alter table Zoo 
        drop constraint FK15FBA55106523 [42102-145]
14:13:08,699 DEBUG SQL:104 - 
    alter table Zoo_directors 
        drop constraint FK2D21982265B0D719
14:13:08,700 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Zoo_directors drop constraint FK2D21982265B0D719
14:13:08,700 ERROR SchemaExport:426 - Table "ZOO_DIRECTORS" not found; SQL statement:

    alter table Zoo_directors 
        drop constraint FK2D21982265B0D719 [42102-145]
14:13:08,700 DEBUG SQL:104 - 
    alter table Zoo_directors 
        drop constraint FK2D219822C590D705
14:13:08,700 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Zoo_directors drop constraint FK2D219822C590D705
14:13:08,700 ERROR SchemaExport:426 - Table "ZOO_DIRECTORS" not found; SQL statement:

    alter table Zoo_directors 
        drop constraint FK2D219822C590D705 [42102-145]
14:13:08,701 DEBUG SQL:104 - 
    alter table "User_permissions" 
        drop constraint FKB4582A30F2810CD2
14:13:08,701 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table "User_permissions" drop constraint FKB4582A30F2810CD2
14:13:08,701 ERROR SchemaExport:426 - Table "User_permissions" not found; SQL statement:

    alter table "User_permissions" 
        drop constraint FKB4582A30F2810CD2 [42102-145]
14:13:08,701 DEBUG SQL:104 - 
    alter table "User" 
        drop constraint FK285FEB65AF5B87
14:13:08,702 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table "User" drop constraint FK285FEB65AF5B87
14:13:08,702 ERROR SchemaExport:426 - Table "User" not found; SQL statement:

    alter table "User" 
        drop constraint FK285FEB65AF5B87 [42102-145]
14:13:08,702 DEBUG SQL:104 - 
    alter table "foos" 
        drop constraint FK300C6DDED2B87D
14:13:08,702 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table "foos" drop constraint FK300C6DDED2B87D
14:13:08,702 ERROR SchemaExport:426 - Table "foos" not found; SQL statement:

    alter table "foos" 
        drop constraint FK300C6DDED2B87D [42102-145]
14:13:08,703 DEBUG SQL:104 - 
    alter table "foos" 
        drop constraint FK300C6D800DF629
14:13:08,703 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table "foos" drop constraint FK300C6D800DF629
14:13:08,703 ERROR SchemaExport:426 - Table "foos" not found; SQL statement:

    alter table "foos" 
        drop constraint FK300C6D800DF629 [42102-145]
14:13:08,703 DEBUG SQL:104 - 
    alter table addresses 
        drop constraint FK34207BA255106523
14:13:08,703 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table addresses drop constraint FK34207BA255106523
14:13:08,704 ERROR SchemaExport:426 - Table "ADDRESSES" not found; SQL statement:

    alter table addresses 
        drop constraint FK34207BA255106523 [42102-145]
14:13:08,704 DEBUG SQL:104 - 
    alter table addresses 
        drop constraint FK34207BA26B9FAF99
14:13:08,704 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table addresses drop constraint FK34207BA26B9FAF99
14:13:08,704 ERROR SchemaExport:426 - Table "ADDRESSES" not found; SQL statement:

    alter table addresses 
        drop constraint FK34207BA26B9FAF99 [42102-145]
14:13:08,704 DEBUG SQL:104 - 
    alter table bar_join_table 
        drop constraint FKF39114258B9833CB
14:13:08,705 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table bar_join_table drop constraint FKF39114258B9833CB
14:13:08,705 ERROR SchemaExport:426 - Table "BAR_JOIN_TABLE" not found; SQL statement:

    alter table bar_join_table 
        drop constraint FKF39114258B9833CB [42102-145]
14:13:08,705 DEBUG SQL:104 - 
    alter table foobytes 
        drop constraint FK16933F65DED138D2
14:13:08,705 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table foobytes drop constraint FK16933F65DED138D2
14:13:08,705 ERROR SchemaExport:426 - Table "FOOBYTES" not found; SQL statement:

    alter table foobytes 
        drop constraint FK16933F65DED138D2 [42102-145]
14:13:08,706 DEBUG SQL:104 - 
    alter table human_nick_names 
        drop constraint FK8718E1BE6B9FAF99
14:13:08,706 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table human_nick_names drop constraint FK8718E1BE6B9FAF99
14:13:08,706 ERROR SchemaExport:426 - Table "HUMAN_NICK_NAMES" not found; SQL statement:

    alter table human_nick_names 
        drop constraint FK8718E1BE6B9FAF99 [42102-145]
14:13:08,706 DEBUG SQL:104 - 
    alter table jointable 
        drop constraint FKE3AC08E4E4A2AC18
14:13:08,707 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table jointable drop constraint FKE3AC08E4E4A2AC18
14:13:08,707 ERROR SchemaExport:426 - Table "JOINTABLE" not found; SQL statement:

    alter table jointable 
        drop constraint FKE3AC08E4E4A2AC18 [42102-145]
14:13:08,707 DEBUG SQL:104 - 
    alter table leafsubclass 
        drop constraint FK24853496DF029E81
14:13:08,707 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table leafsubclass drop constraint FK24853496DF029E81
14:13:08,707 ERROR SchemaExport:426 - Table "LEAFSUBCLASS" not found; SQL statement:

    alter table leafsubclass 
        drop constraint FK24853496DF029E81 [42102-145]
14:13:08,707 DEBUG SQL:104 - 
    alter table leafsubclass 
        drop constraint FK24853496A2CEC367
14:13:08,708 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table leafsubclass drop constraint FK24853496A2CEC367
14:13:08,708 ERROR SchemaExport:426 - Table "LEAFSUBCLASS" not found; SQL statement:

    alter table leafsubclass 
        drop constraint FK24853496A2CEC367 [42102-145]
14:13:08,708 DEBUG SQL:104 - 
    alter table leafsubclass 
        drop constraint FK24853496338734D5
14:13:08,708 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table leafsubclass drop constraint FK24853496338734D5
14:13:08,709 ERROR SchemaExport:426 - Table "LEAFSUBCLASS" not found; SQL statement:

    alter table leafsubclass 
        drop constraint FK24853496338734D5 [42102-145]
14:13:08,709 DEBUG SQL:104 - 
    alter table leafsubsubclass 
        drop constraint FK443F0B5A6F9C38B8
14:13:08,709 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table leafsubsubclass drop constraint FK443F0B5A6F9C38B8
14:13:08,709 ERROR SchemaExport:426 - Table "LEAFSUBSUBCLASS" not found; SQL statement:

    alter table leafsubsubclass 
        drop constraint FK443F0B5A6F9C38B8 [42102-145]
14:13:08,709 DEBUG SQL:104 - 
    alter table leafsubsubclass 
        drop constraint FK443F0B5A8B3D2732
14:13:08,710 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table leafsubsubclass drop constraint FK443F0B5A8B3D2732
14:13:08,710 ERROR SchemaExport:426 - Table "LEAFSUBSUBCLASS" not found; SQL statement:

    alter table leafsubsubclass 
        drop constraint FK443F0B5A8B3D2732 [42102-145]
14:13:08,710 DEBUG SQL:104 - 
    alter table leafsubsubclass 
        drop constraint FK443F0B5AAC6C3EE
14:13:08,710 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table leafsubsubclass drop constraint FK443F0B5AAC6C3EE
14:13:08,710 ERROR SchemaExport:426 - Table "LEAFSUBSUBCLASS" not found; SQL statement:

    alter table leafsubsubclass 
        drop constraint FK443F0B5AAC6C3EE [42102-145]
14:13:08,711 DEBUG SQL:104 - 
    alter table leafsubsubclass 
        drop constraint FK443F0B5A3310E22E
14:13:08,711 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table leafsubsubclass drop constraint FK443F0B5A3310E22E
14:13:08,711 ERROR SchemaExport:426 - Table "LEAFSUBSUBCLASS" not found; SQL statement:

    alter table leafsubsubclass 
        drop constraint FK443F0B5A3310E22E [42102-145]
14:13:08,711 DEBUG SQL:104 - 
    alter table nonleafsubclass 
        drop constraint FK2C4413E3DED31D14
14:13:08,712 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table nonleafsubclass drop constraint FK2C4413E3DED31D14
14:13:08,712 ERROR SchemaExport:426 - Table "NONLEAFSUBCLASS" not found; SQL statement:

    alter table nonleafsubclass 
        drop constraint FK2C4413E3DED31D14 [42102-145]
14:13:08,712 DEBUG SQL:104 - 
    alter table nonleafsubclass 
        drop constraint FK2C4413E33397DF0C
14:13:08,712 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table nonleafsubclass drop constraint FK2C4413E33397DF0C
14:13:08,712 ERROR SchemaExport:426 - Table "NONLEAFSUBCLASS" not found; SQL statement:

    alter table nonleafsubclass 
        drop constraint FK2C4413E33397DF0C [42102-145]
14:13:08,713 DEBUG SQL:104 - 
    alter table nonleafsubclass 
        drop constraint FK2C4413E328385AED
14:13:08,713 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table nonleafsubclass drop constraint FK2C4413E328385AED
14:13:08,713 ERROR SchemaExport:426 - Table "NONLEAFSUBCLASS" not found; SQL statement:

    alter table nonleafsubclass 
        drop constraint FK2C4413E328385AED [42102-145]
14:13:08,713 DEBUG SQL:104 - 
    alter table rootclass 
        drop constraint FKCC8765D6DF07C9F0
14:13:08,713 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table rootclass drop constraint FKCC8765D6DF07C9F0
14:13:08,714 ERROR SchemaExport:426 - Table "ROOTCLASS" not found; SQL statement:

    alter table rootclass 
        drop constraint FKCC8765D6DF07C9F0 [42102-145]
14:13:08,714 DEBUG SQL:104 - 
    alter table rootclass 
        drop constraint FKCC8765D63434DA5C
14:13:08,714 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table rootclass drop constraint FKCC8765D63434DA5C
14:13:08,714 ERROR SchemaExport:426 - Table "ROOTCLASS" not found; SQL statement:

    alter table rootclass 
        drop constraint FKCC8765D63434DA5C [42102-145]
14:13:08,714 DEBUG SQL:104 - 
    alter table simple_simple 
        drop constraint FK869810DF5B9F6506
14:13:08,715 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table simple_simple drop constraint FK869810DF5B9F6506
14:13:08,715 ERROR SchemaExport:426 - Table "SIMPLE_SIMPLE" not found; SQL statement:

    alter table simple_simple 
        drop constraint FK869810DF5B9F6506 [42102-145]
14:13:08,715 DEBUG SQL:104 - 
    alter table simple_simple 
        drop constraint FK869810DFEC57D671
14:13:08,715 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table simple_simple drop constraint FK869810DFEC57D671
14:13:08,715 ERROR SchemaExport:426 - Table "SIMPLE_SIMPLE" not found; SQL statement:

    alter table simple_simple 
        drop constraint FK869810DFEC57D671 [42102-145]
14:13:08,716 DEBUG SQL:104 - 
    drop table Animal if exists
14:13:08,716 DEBUG SQL:104 - 
    drop table BooleanLiteralEntity if exists
14:13:08,716 DEBUG SQL:104 - 
    drop table Car if exists
14:13:08,716 DEBUG SQL:104 - 
    drop table Cat if exists
14:13:08,716 DEBUG SQL:104 - 
    drop table CompositeIdEntity if exists
14:13:08,716 DEBUG SQL:104 - 
    drop table Dog if exists
14:13:08,717 DEBUG SQL:104 - 
    drop table DomesticAnimal if exists
14:13:08,717 DEBUG SQL:104 - 
    drop table EntityWithCrazyCompositeKey if exists
14:13:08,717 DEBUG SQL:104 - 
    drop table Human if exists
14:13:08,717 DEBUG SQL:104 - 
    drop table Human_family if exists
14:13:08,717 DEBUG SQL:104 - 
    drop table Human_friends if exists
14:13:08,717 DEBUG SQL:104 - 
    drop table IntegerVersioned if exists
14:13:08,718 DEBUG SQL:104 - 
    drop table JOINED if exists
14:13:08,718 DEBUG SQL:104 - 
    drop table Joiner if exists
14:13:08,718 DEBUG SQL:104 - 
    drop table KeyManyToOneEntity if exists
14:13:08,718 DEBUG SQL:104 - 
    drop table KeyManyToOneKeyEntity if exists
14:13:08,718 DEBUG SQL:104 - 
    drop table Lizard if exists
14:13:08,719 DEBUG SQL:104 - 
    drop table MANY_TO_MANY if exists
14:13:08,719 DEBUG SQL:104 - 
    drop table Mammal if exists
14:13:08,719 DEBUG SQL:104 - 
    drop table Pickup if exists
14:13:08,719 DEBUG SQL:104 - 
    drop table Po if exists
14:13:08,719 DEBUG SQL:104 - 
    drop table Reptile if exists
14:13:08,720 DEBUG SQL:104 - 
    drop table SIMPLE_1 if exists
14:13:08,720 DEBUG SQL:104 - 
    drop table SIMPLE_2 if exists
14:13:08,720 DEBUG SQL:104 - 
    drop table SUV if exists
14:13:08,720 DEBUG SQL:104 - 
    drop table StateProvince if exists
14:13:08,720 DEBUG SQL:104 - 
    drop table TimestampVersioned if exists
14:13:08,720 DEBUG SQL:104 - 
    drop table TrivialClass if exists
14:13:08,721 DEBUG SQL:104 - 
    drop table Truck if exists
14:13:08,721 DEBUG SQL:104 - 
    drop table Zoo if exists
14:13:08,721 DEBUG SQL:104 - 
    drop table Zoo_directors if exists
14:13:08,721 DEBUG SQL:104 - 
    drop table "User_permissions" if exists
14:13:08,721 DEBUG SQL:104 - 
    drop table "User" if exists
14:13:08,721 DEBUG SQL:104 - 
    drop table "foos" if exists
14:13:08,722 DEBUG SQL:104 - 
    drop table addresses if exists
14:13:08,723 DEBUG SQL:104 - 
    drop table bar_join_table if exists
14:13:08,723 DEBUG SQL:104 - 
    drop table foobytes if exists
14:13:08,723 DEBUG SQL:104 - 
    drop table human_nick_names if exists
14:13:08,723 DEBUG SQL:104 - 
    drop table jointable if exists
14:13:08,723 DEBUG SQL:104 - 
    drop table leafsubclass if exists
14:13:08,724 DEBUG SQL:104 - 
    drop table leafsubsubclass if exists
14:13:08,724 DEBUG SQL:104 - 
    drop table many if exists
14:13:08,724 DEBUG SQL:104 - 
    drop table nonleafsubclass if exists
14:13:08,724 DEBUG SQL:104 - 
    drop table one if exists
14:13:08,724 DEBUG SQL:104 - 
    drop table rootclass if exists
14:13:08,724 DEBUG SQL:104 - 
    drop table simple_simple if exists
14:13:08,725 DEBUG SQL:104 - 
    create table Animal (
        id bigint generated by default as identity,
        description varchar(255),
        body_weight float,
        mother_id bigint,
        father_id bigint,
        zoo_id bigint,
        serialNumber varchar(255),
        primary key (id)
    )
14:13:08,725 DEBUG SQL:104 - 
    create table BooleanLiteralEntity (
        id bigint generated by default as identity,
        Y_N_BOOL char(255),
        T_F_BOOL char(255),
        NUM_BOOL boolean,
        primary key (id)
    )
14:13:08,726 DEBUG SQL:104 - 
    create table Car (
        id bigint not null,
        vin varchar(255),
        owner varchar(255),
        primary key (id)
    )
14:13:08,726 DEBUG SQL:104 - 
    create table Cat (
        mammal bigint not null,
        primary key (mammal)
    )
14:13:08,726 DEBUG SQL:104 - 
    create table CompositeIdEntity (
        key1 bigint not null,
        key2 varchar(255) not null,
        someProperty varchar(255),
        primary key (key1, key2)
    )
14:13:08,726 DEBUG SQL:104 - 
    create table Dog (
        mammal bigint not null,
        primary key (mammal)
    )
14:13:08,726 DEBUG SQL:104 - 
    create table DomesticAnimal (
        mammal bigint not null,
        owner bigint,
        primary key (mammal)
    )
14:13:08,727 DEBUG SQL:104 - 
    create table EntityWithCrazyCompositeKey (
        id bigint not null,
        other_id bigint not null,
        name varchar(255),
        primary key (id, other_id)
    )
14:13:08,727 DEBUG SQL:104 - 
    create table Human (
        mammal bigint not null,
        name_first varchar(255),
        name_initial char(255),
        name_last varchar(255),
        nickName varchar(255),
        height_centimeters double not null,
        intValue integer,
        floatValue float,
        bigDecimalValue decimal(19,2),
        bigIntegerValue decimal(19,2),
        primary key (mammal)
    )
14:13:08,727 DEBUG SQL:104 - 
    create table Human_family (
        human1 bigint not null,
        human2 bigint not null,
        relationship varchar(255) not null,
        primary key (human1, relationship)
    )
14:13:08,728 DEBUG SQL:104 - 
    create table Human_friends (
        human1 bigint not null,
        human2 bigint not null
    )
14:13:08,728 DEBUG SQL:104 - 
    create table IntegerVersioned (
        id bigint generated by default as identity,
        vers integer not null,
        name varchar(255),
        primary key (id)
    )
14:13:08,728 DEBUG SQL:104 - 
    create table JOINED (
        ID bigint not null,
        joinedName varchar(255),
        primary key (ID)
    )
14:13:08,728 DEBUG SQL:104 - 
    create table Joiner (
        id bigint generated by default as identity,
        name varchar(255),
        primary key (id)
    )
14:13:08,729 DEBUG SQL:104 - 
    create table KeyManyToOneEntity (
        key1 bigint not null,
        key2 varchar(255) not null,
        name varchar(255),
        primary key (key1, key2)
    )
14:13:08,729 DEBUG SQL:104 - 
    create table KeyManyToOneKeyEntity (
        id bigint generated by default as identity,
        name varchar(255),
        primary key (id)
    )
14:13:08,729 DEBUG SQL:104 - 
    create table Lizard (
        reptile bigint not null,
        primary key (reptile)
    )
14:13:08,729 DEBUG SQL:104 - 
    create table MANY_TO_MANY (
        IN_ID bigint not null,
        OUT_ID bigint not null,
        primary key (IN_ID, OUT_ID)
    )
14:13:08,730 DEBUG SQL:104 - 
    create table Mammal (
        animal bigint not null,
        pregnant boolean,
        birthdate date,
        mammalZoo_id bigint,
        name varchar(255),
        primary key (animal)
    )
14:13:08,730 DEBUG SQL:104 - 
    create table Pickup (
        id bigint not null,
        vin varchar(255),
        owner varchar(255),
        primary key (id)
    )
14:13:08,730 DEBUG SQL:104 - 
    create table Po (
        id_ bigint generated by default as identity,
        value_ varchar(255),
        tl bigint,
        primary key (id_)
    )
14:13:08,731 DEBUG SQL:104 - 
    create table Reptile (
        animal bigint not null,
        bodyTemperature float,
        primary key (animal)
    )
14:13:08,731 DEBUG SQL:104 - 
    create table SIMPLE_1 (
        ID bigint generated by default as identity,
        NAME varchar(255),
        negated_num integer,
        primary key (ID)
    )
14:13:08,731 DEBUG SQL:104 - 
    create table SIMPLE_2 (
        ID bigint generated by default as identity,
        NAME varchar(255),
        SIMPLE_1_ID bigint,
        primary key (ID)
    )
14:13:08,731 DEBUG SQL:104 - 
    create table SUV (
        id bigint not null,
        vin varchar(255),
        owner varchar(255),
        primary key (id)
    )
14:13:08,732 DEBUG SQL:104 - 
    create table StateProvince (
        id bigint generated by default as identity,
        name varchar(255),
        isoCode varchar(255),
        primary key (id)
    )
14:13:08,732 DEBUG SQL:104 - 
    create table TimestampVersioned (
        id bigint generated by default as identity,
        vers timestamp not null,
        name varchar(255),
        primary key (id)
    )
14:13:08,732 DEBUG SQL:104 - 
    create table TrivialClass (
        tcid bigint not null,
        primary key (tcid)
    )
14:13:08,737 DEBUG SQL:104 - 
    create table Truck (
        id bigint not null,
        vin varchar(255),
        owner varchar(255),
        primary key (id)
    )
14:13:08,738 DEBUG SQL:104 - 
    create table Zoo (
        id bigint generated by default as identity,
        zooType char(255) not null,
        name varchar(255),
        classification tinyint,
        street varchar(255),
        city varchar(255),
        postalCode varchar(255),
        country varchar(255),
        state_prov_id bigint,
        primary key (id)
    )
14:13:08,738 DEBUG SQL:104 - 
    create table Zoo_directors (
        directorZoo_id bigint not null,
        elt bigint not null,
        title varchar(255) not null,
        primary key (directorZoo_id, title)
    )
14:13:08,739 DEBUG SQL:104 - 
    create table "User_permissions" (
        userId bigint not null,
        permissionName varchar(255),
        permissionId integer not null,
        primary key (userId, permissionId)
    )
14:13:08,739 DEBUG SQL:104 - 
    create table "User" (
        id bigint not null,
        userName varchar(255),
        primary key (id)
    )
14:13:08,740 DEBUG SQL:104 - 
    create table "foos" (
        "foo_idcolumnname123" varchar(36) not null,
        "foo_subclass_1234" char(255) not null,
        version integer not null,
        foo varchar(36),
        long_ bigint not null,
        "integer__" integer not null,
        float_ float not null check (float_ > 0.0),
        x integer,
        double_ double,
        date_ date,
        timestamp_ timestamp,
        boolean_ boolean,
        bool_ boolean,
        null_ integer,
        short_ smallint,
        char_ char(255),
        zero_ float,
        int_ integer,
        string_ varchar(48),
        byte_ tinyint,
        yesno char(255),
        blobb_ binary(255),
        nullBlob binary(255),
        bin_ binary(255),
        "localeayzabc123" varchar(255),
        first_name varchar(66),
        surname varchar(66),
        null_cmpnt_ varchar(255),
        the_time time,
        bar_string varchar(24),
        clazz char(100),
        gen_id bigint,
        abstract_id varchar(36),
        primary key ("foo_idcolumnname123")
    )
14:13:08,743 DEBUG SQL:104 - 
    create table addresses (
        human bigint not null,
        street varchar(255),
        city varchar(255),
        postalCode varchar(255),
        country varchar(255),
        state_prov_id bigint,
        "type" varchar(255) not null,
        primary key (human, "type")
    )
14:13:08,744 DEBUG SQL:104 - 
    create table bar_join_table (
        bar_id varchar(36) not null,
        name_name varchar(255),
        primary key (bar_id)
    )
14:13:08,744 DEBUG SQL:104 - 
    create table foobytes (
        id varchar(36) not null,
        byte_ tinyint,
        i integer not null,
        primary key (id, i)
    )
14:13:08,744 DEBUG SQL:104 - 
    create table human_nick_names (
        human bigint not null,
        nick_name varchar(255) not null,
        primary key (human, nick_name)
    )
14:13:08,745 DEBUG SQL:104 - 
    create table jointable (
        fooid varchar(36) not null,
        joinedProp varchar(255),
        primary key (fooid)
    )
14:13:08,745 DEBUG SQL:104 - 
    create table leafsubclass (
        id__ bigint not null,
        intprop integer not null,
        other1 bigint,
        other3 bigint,
        foo varchar(255),
        primary key (id__)
    )
14:13:08,746 DEBUG SQL:104 - 
    create table leafsubsubclass (
        sid bigint not null,
        dupe float,
        parent bigint,
        another_parent bigint,
        list_ind integer,
        list_po bigint,
        i integer,
        primary key (sid)
    )
14:13:08,747 DEBUG SQL:104 - 
    create table many (
        many_key bigint generated by default as identity,
        x integer,
        primary key (many_key)
    )
14:13:08,747 DEBUG SQL:104 - 
    create table nonleafsubclass (
        sid bigint not null,
        dupe varchar(255),
        other2 bigint,
        po bigint,
        cal timestamp,
        floaty float,
        primary key (sid)
    )
14:13:08,748 DEBUG SQL:104 - 
    create table one (
        one_key bigint generated by default as identity,
        x integer,
        one_value varchar(255),
        primary key (one_key)
    )
14:13:08,748 DEBUG SQL:104 - 
    create table rootclass (
        id1_ bigint generated by default as identity,
        count_ integer not null,
        name varchar(255),
        address varchar(255),
        date_ timestamp,
        top_ bigint,
        parent bigint,
        primary key (id1_)
    )
14:13:08,748 DEBUG SQL:104 - 
    create table simple_simple (
        simple1 bigint not null,
        simple2 bigint not null
    )
14:13:08,749 DEBUG SQL:104 - 
    alter table Animal 
        add constraint FK752A7A1C1F3964B4 
        foreign key (mother_id) 
        references Animal
14:13:08,749 DEBUG SQL:104 - 
    alter table Animal 
        add constraint FK752A7A1C6309E77B 
        foreign key (father_id) 
        references Animal
14:13:08,750 DEBUG SQL:104 - 
    alter table Animal 
        add constraint FK752A7A1C4B485C79 
        foreign key (zoo_id) 
        references Zoo
14:13:08,750 DEBUG SQL:104 - 
    alter table Cat 
        add constraint FK107B66D384BBA 
        foreign key (mammal) 
        references DomesticAnimal
14:13:08,751 DEBUG SQL:104 - 
    alter table Dog 
        add constraint FK10D1C6D384BBA 
        foreign key (mammal) 
        references DomesticAnimal
14:13:08,751 DEBUG SQL:104 - 
    alter table DomesticAnimal 
        add constraint FKE02638DA1733655F 
        foreign key (mammal) 
        references Mammal
14:13:08,751 DEBUG SQL:104 - 
    alter table DomesticAnimal 
        add constraint FKE02638DA6C03411F 
        foreign key (owner) 
        references Human
14:13:08,752 DEBUG SQL:104 - 
    alter table Human 
        add constraint FK42D710D1733655F 
        foreign key (mammal) 
        references Mammal
14:13:08,752 DEBUG SQL:104 - 
    alter table Human_family 
        add constraint FK5F790ED61DCB1311 
        foreign key (human2) 
        references Human
14:13:08,753 DEBUG SQL:104 - 
    alter table Human_family 
        add constraint FK5F790ED61DCB1310 
        foreign key (human1) 
        references Human
14:13:08,754 DEBUG SQL:104 - 
    alter table Human_friends 
        add constraint FKAC7104631DCB1311 
        foreign key (human2) 
        references Human
14:13:08,754 DEBUG SQL:104 - 
    alter table Human_friends 
        add constraint FKAC7104631DCB1310 
        foreign key (human1) 
        references Human
14:13:08,755 DEBUG SQL:104 - 
    alter table JOINED 
        add constraint FK82C23B49534E0F13 
        foreign key (ID) 
        references Joiner
14:13:08,755 DEBUG SQL:104 - 
    alter table KeyManyToOneEntity 
        add constraint FK489A71905D944F66 
        foreign key (key1) 
        references KeyManyToOneKeyEntity
14:13:08,756 DEBUG SQL:104 - 
    alter table Lizard 
        add constraint FK87B0E2B6EE398315 
        foreign key (reptile) 
        references Reptile
14:13:08,757 DEBUG SQL:104 - 
    alter table MANY_TO_MANY 
        add constraint FK8CF3D7C3E0DF2A91 
        foreign key (OUT_ID) 
        references SIMPLE_1
14:13:08,757 DEBUG SQL:104 - 
    alter table MANY_TO_MANY 
        add constraint FK8CF3D7C322C9695A 
        foreign key (IN_ID) 
        references SIMPLE_1
14:13:08,758 DEBUG SQL:104 - 
    alter table Mammal 
        add constraint FK88EF417FEFA9D699 
        foreign key (animal) 
        references Animal
14:13:08,758 DEBUG SQL:104 - 
    alter table Mammal 
        add constraint FK88EF417FCE6EEE98 
        foreign key (mammalZoo_id) 
        references Zoo
14:13:08,759 DEBUG SQL:104 - 
    alter table Po 
        add constraint FKA1FDED16EBE 
        foreign key (tl) 
        references rootclass
14:13:08,759 DEBUG SQL:104 - 
    alter table Po 
        add constraint FKA1F6F89E02A 
        foreign key (tl) 
        references leafsubclass
14:13:08,760 DEBUG SQL:104 - 
    alter table Reptile 
        add constraint FKA4790CABEFA9D699 
        foreign key (animal) 
        references Animal
14:13:08,760 DEBUG SQL:104 - 
    alter table SIMPLE_2 
        add constraint FK4B988CE5C81DD13B 
        foreign key (SIMPLE_1_ID) 
        references SIMPLE_1
14:13:08,761 DEBUG SQL:104 - 
    alter table TrivialClass 
        add constraint FKC09264CFDF079C10 
        foreign key (tcid) 
        references rootclass
14:13:08,761 DEBUG SQL:104 - 
    alter table Zoo 
        add constraint FK15FBA55106523 
        foreign key (state_prov_id) 
        references StateProvince
14:13:08,762 DEBUG SQL:104 - 
    alter table Zoo_directors 
        add constraint FK2D21982265B0D719 
        foreign key (elt) 
        references Human
14:13:08,762 DEBUG SQL:104 - 
    alter table Zoo_directors 
        add constraint FK2D219822C590D705 
        foreign key (directorZoo_id) 
        references Zoo
14:13:08,763 DEBUG SQL:104 - 
    alter table "User_permissions" 
        add constraint FKB4582A30F2810CD2 
        foreign key (userId) 
        references "User"
14:13:08,763 DEBUG SQL:104 - 
    alter table "User" 
        add constraint FK285FEB65AF5B87 
        foreign key (id) 
        references Human
14:13:08,764 DEBUG SQL:104 - 
    alter table "foos" 
        add constraint abc unique (long_, "integer__", float_)
14:13:08,764 DEBUG SQL:104 - 
    create index fbmtoidx on "foos" (foo, long_)
14:13:08,764 DEBUG SQL:104 - 
    create index fbstridx on "foos" (string_)
14:13:08,764 DEBUG SQL:104 - 
    alter table "foos" 
        add constraint FK300C6DDED2B87D 
        foreign key (foo) 
        references "foos"
14:13:08,765 DEBUG SQL:104 - 
    alter table "foos" 
        add constraint FK300C6D800DF629 
        foreign key (abstract_id) 
        references "foos"
14:13:08,765 DEBUG SQL:104 - 
    alter table addresses 
        add constraint FK34207BA255106523 
        foreign key (state_prov_id) 
        references StateProvince
14:13:08,766 DEBUG SQL:104 - 
    alter table addresses 
        add constraint FK34207BA26B9FAF99 
        foreign key (human) 
        references Human
14:13:08,766 DEBUG SQL:104 - 
    alter table bar_join_table 
        add constraint FKF39114258B9833CB 
        foreign key (bar_id) 
        references "foos"
14:13:08,767 DEBUG SQL:104 - 
    alter table foobytes 
        add constraint FK16933F65DED138D2 
        foreign key (id) 
        references "foos"
14:13:08,768 DEBUG SQL:104 - 
    alter table human_nick_names 
        add constraint FK8718E1BE6B9FAF99 
        foreign key (human) 
        references Human
14:13:08,768 DEBUG SQL:104 - 
    alter table jointable 
        add constraint FKE3AC08E4E4A2AC18 
        foreign key (fooid) 
        references "foos" 
        on delete cascade
14:13:08,769 DEBUG SQL:104 - 
    alter table leafsubclass 
        add constraint FK24853496DF029E81 
        foreign key (id__) 
        references rootclass
14:13:08,769 DEBUG SQL:104 - 
    alter table leafsubclass 
        add constraint FK24853496A2CEC367 
        foreign key (other1) 
        references rootclass
14:13:08,770 DEBUG SQL:104 - 
    alter table leafsubclass 
        add constraint FK24853496338734D5 
        foreign key (other3) 
        references leafsubclass
14:13:08,770 DEBUG SQL:104 - 
    alter table leafsubsubclass 
        add constraint FK443F0B5A6F9C38B8 
        foreign key (sid) 
        references nonleafsubclass
14:13:08,771 DEBUG SQL:104 - 
    alter table leafsubsubclass 
        add constraint FK443F0B5A8B3D2732 
        foreign key (parent) 
        references leafsubsubclass
14:13:08,771 DEBUG SQL:104 - 
    alter table leafsubsubclass 
        add constraint FK443F0B5AAC6C3EE 
        foreign key (another_parent) 
        references leafsubsubclass
14:13:08,772 DEBUG SQL:104 - 
    alter table leafsubsubclass 
        add constraint FK443F0B5A3310E22E 
        foreign key (list_po) 
        references Po
14:13:08,772 DEBUG SQL:104 - 
    alter table nonleafsubclass 
        add constraint FK2C4413E3DED31D14 
        foreign key (sid) 
        references rootclass 
        on delete cascade
14:13:08,773 DEBUG SQL:104 - 
    alter table nonleafsubclass 
        add constraint FK2C4413E33397DF0C 
        foreign key (other2) 
        references nonleafsubclass
14:13:08,773 DEBUG SQL:104 - 
    alter table nonleafsubclass 
        add constraint FK2C4413E328385AED 
        foreign key (po) 
        references Po
14:13:08,774 DEBUG SQL:104 - 
    alter table rootclass 
        add constraint FKCC8765D6DF07C9F0 
        foreign key (top_) 
        references rootclass
14:13:08,774 DEBUG SQL:104 - 
    alter table rootclass 
        add constraint FKCC8765D63434DA5C 
        foreign key (parent) 
        references leafsubclass
14:13:08,775 DEBUG SQL:104 - 
    alter table simple_simple 
        add constraint FK869810DF5B9F6506 
        foreign key (simple2) 
        references rootclass
14:13:08,775 DEBUG SQL:104 - 
    alter table simple_simple 
        add constraint FK869810DFEC57D671 
        foreign key (simple1) 
        references leafsubclass
14:13:08,779  INFO SchemaExport:405 - HHH000230: Schema export complete
14:13:08,782  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:13:08,783  INFO CustomRunner:139 - Test: testBooleanHandling
14:13:09,057 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:09,058 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:09,058 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:09,059 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:09,059 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:09,060 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:09,060 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:09,060 DEBUG SQL:104 - 
    insert 
    into
        Dog
        (mammal) 
    values
        (?)
14:13:09,060 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:09,061 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:09,061 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:09,061 DEBUG SQL:104 - 
    insert 
    into
        Cat
        (mammal) 
    values
        (?)
14:13:09,061 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:13:09,062 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'P')
14:13:09,062 DEBUG SQL:104 - 
    insert 
    into
        Joiner
        (id, name) 
    values
        (null, ?)
14:13:09,063 DEBUG SQL:104 - 
    insert 
    into
        JOINED
        (joinedName, ID) 
    values
        (?, ?)
14:13:09,063 DEBUG SQL:104 - 
    select
        max(ids_.mx) 
    from
        ( select
            max(id) as mx 
        from
            Car 
        union
        select
            max(id) as mx 
        from
            Truck 
        union
        select
            max(id) as mx 
        from
            SUV 
        union
        select
            max(id) as mx 
        from
            Pickup 
    ) ids_
14:13:09,065 DEBUG SQL:104 - 
    insert 
    into
        Car
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:09,066 DEBUG SQL:104 - 
    insert 
    into
        Truck
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:09,067 DEBUG SQL:104 - 
    insert 
    into
        SUV
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:09,068 DEBUG SQL:104 - 
    insert 
    into
        Pickup
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:09,068 DEBUG SQL:104 - 
    insert 
    into
        BooleanLiteralEntity
        (id, Y_N_BOOL, T_F_BOOL, NUM_BOOL) 
    values
        (null, ?, ?, ?)
14:13:09,069 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:09,070 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:09,071 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:09,071 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:09,072 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update org.hibernate.test.hql.BooleanLiteralEntity set yesNoBoolean = :b1, trueFalseBoolean = :b2, zeroOneBoolean = :b3
14:13:09,073 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'BooleanLiteralEntity'
    \-[SET] Node: 'set'
       +-[EQ] Node: '='
       |  +-[IDENT] Node: 'yesNoBoolean'
       |  \-[COLON] Node: ':'
       |     \-[IDENT] Node: 'b1'
       +-[EQ] Node: '='
       |  +-[IDENT] Node: 'trueFalseBoolean'
       |  \-[COLON] Node: ':'
       |     \-[IDENT] Node: 'b2'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'zeroOneBoolean'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'b3'

14:13:09,074 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,074 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.BooleanLiteralEntity (<no alias>) -> booleanlit0_
14:13:09,074 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:09,074 DEBUG DotNode:599 - getDataType() : yesNoBoolean -> org.hibernate.type.YesNoType@5e561fb6
14:13:09,075 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.yesNoBoolean -> Y_N_BOOL
14:13:09,075 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:09,075 DEBUG DotNode:599 - getDataType() : trueFalseBoolean -> org.hibernate.type.TrueFalseType@57e16e6
14:13:09,075 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.trueFalseBoolean -> T_F_BOOL
14:13:09,075 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:09,075 DEBUG DotNode:599 - getDataType() : zeroOneBoolean -> org.hibernate.type.BooleanType@c60b7e2
14:13:09,075 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.zeroOneBoolean -> NUM_BOOL
14:13:09,076 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (BooleanLiteralEntity)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[booleanlit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'BooleanLiteralEntity' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=BooleanLiteralEntity,tableAlias=booleanlit0_,origin=null,columns={,className=org.hibernate.test.hql.BooleanLiteralEntity}}
    \-[SET] SqlNode: 'set'
       +-[EQ] BinaryLogicOperatorNode: '='
       |  +-[DOT] DotNode: 'Y_N_BOOL' {propertyName=yesNoBoolean,dereferenceType=ALL,propertyPath=yesNoBoolean,path={synthetic-alias}.yesNoBoolean,tableAlias=booleanlit0_,className=org.hibernate.test.hql.BooleanLiteralEntity,classAlias=null}
       |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  |  \-[IDENT] IdentNode: 'yesNoBoolean' {originalText=yesNoBoolean}
       |  \-[NAMED_PARAM] ParameterNode: '?' {name=b1, expectedType=org.hibernate.type.YesNoType@5e561fb6}
       +-[EQ] BinaryLogicOperatorNode: '='
       |  +-[DOT] DotNode: 'T_F_BOOL' {propertyName=trueFalseBoolean,dereferenceType=ALL,propertyPath=trueFalseBoolean,path={synthetic-alias}.trueFalseBoolean,tableAlias=booleanlit0_,className=org.hibernate.test.hql.BooleanLiteralEntity,classAlias=null}
       |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  |  \-[IDENT] IdentNode: 'trueFalseBoolean' {originalText=trueFalseBoolean}
       |  \-[NAMED_PARAM] ParameterNode: '?' {name=b2, expectedType=org.hibernate.type.TrueFalseType@57e16e6}
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'NUM_BOOL' {propertyName=zeroOneBoolean,dereferenceType=ALL,propertyPath=zeroOneBoolean,path={synthetic-alias}.zeroOneBoolean,tableAlias=booleanlit0_,className=org.hibernate.test.hql.BooleanLiteralEntity,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'zeroOneBoolean' {originalText=zeroOneBoolean}
          \-[NAMED_PARAM] ParameterNode: '?' {name=b3, expectedType=org.hibernate.type.BooleanType@c60b7e2}

14:13:09,076 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,076 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,077 DEBUG SQL:104 - 
    update
        BooleanLiteralEntity 
    set
        Y_N_BOOL=?,
        T_F_BOOL=?,
        NUM_BOOL=?
14:13:09,077 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.hql.BooleanLiteralEntity
14:13:09,078 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'hql'
                \-[IDENT] Node: 'BooleanLiteralEntity'

14:13:09,078 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,078 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.BooleanLiteralEntity (<no alias>) -> booleanlit0_
14:13:09,078 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} BooleanLiteralEntity booleanlit0_ ) )
14:13:09,079 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:13:09,079 DEBUG JoinProcessor:175 - Using FROM fragment [BooleanLiteralEntity booleanlit0_]
14:13:09,079 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (BooleanLiteralEntity)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'booleanlit0_.id as id1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=BooleanLiteralEntity,tableAlias=booleanlit0_,origin=null,columns={,className=org.hibernate.test.hql.BooleanLiteralEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'booleanlit0_.Y_N_BOOL as Y2_1_, booleanlit0_.T_F_BOOL as T3_1_, booleanlit0_.NUM_BOOL as NUM4_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[booleanlit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'BooleanLiteralEntity booleanlit0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=BooleanLiteralEntity,tableAlias=booleanlit0_,origin=null,columns={,className=org.hibernate.test.hql.BooleanLiteralEntity}}

14:13:09,079 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,080 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.hql.BooleanLiteralEntity
14:13:09,080 DEBUG QueryTranslatorImpl:236 - SQL: select booleanlit0_.id as id1_, booleanlit0_.Y_N_BOOL as Y2_1_, booleanlit0_.T_F_BOOL as T3_1_, booleanlit0_.NUM_BOOL as NUM4_1_ from BooleanLiteralEntity booleanlit0_
14:13:09,080 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,080 DEBUG SQL:104 - 
    select
        booleanlit0_.id as id1_,
        booleanlit0_.Y_N_BOOL as Y2_1_,
        booleanlit0_.T_F_BOOL as T3_1_,
        booleanlit0_.NUM_BOOL as NUM4_1_ 
    from
        BooleanLiteralEntity booleanlit0_
14:13:09,081 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update org.hibernate.test.hql.BooleanLiteralEntity set yesNoBoolean = true, trueFalseBoolean = true, zeroOneBoolean = true
14:13:09,082 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'BooleanLiteralEntity'
    \-[SET] Node: 'set'
       +-[EQ] Node: '='
       |  +-[IDENT] Node: 'yesNoBoolean'
       |  \-[TRUE] Node: 'true'
       +-[EQ] Node: '='
       |  +-[IDENT] Node: 'trueFalseBoolean'
       |  \-[TRUE] Node: 'true'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'zeroOneBoolean'
          \-[TRUE] Node: 'true'

14:13:09,082 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,083 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.BooleanLiteralEntity (<no alias>) -> booleanlit0_
14:13:09,083 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:09,083 DEBUG DotNode:599 - getDataType() : yesNoBoolean -> org.hibernate.type.YesNoType@5e561fb6
14:13:09,083 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.yesNoBoolean -> Y_N_BOOL
14:13:09,083 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:09,083 DEBUG DotNode:599 - getDataType() : trueFalseBoolean -> org.hibernate.type.TrueFalseType@57e16e6
14:13:09,083 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.trueFalseBoolean -> T_F_BOOL
14:13:09,084 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:09,084 DEBUG DotNode:599 - getDataType() : zeroOneBoolean -> org.hibernate.type.BooleanType@c60b7e2
14:13:09,084 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.zeroOneBoolean -> NUM_BOOL
14:13:09,084 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (BooleanLiteralEntity)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[booleanlit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'BooleanLiteralEntity' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=BooleanLiteralEntity,tableAlias=booleanlit0_,origin=null,columns={,className=org.hibernate.test.hql.BooleanLiteralEntity}}
    \-[SET] SqlNode: 'set'
       +-[EQ] BinaryLogicOperatorNode: '='
       |  +-[DOT] DotNode: 'Y_N_BOOL' {propertyName=yesNoBoolean,dereferenceType=ALL,propertyPath=yesNoBoolean,path={synthetic-alias}.yesNoBoolean,tableAlias=booleanlit0_,className=org.hibernate.test.hql.BooleanLiteralEntity,classAlias=null}
       |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  |  \-[IDENT] IdentNode: 'yesNoBoolean' {originalText=yesNoBoolean}
       |  \-[TRUE] BooleanLiteralNode: '1'
       +-[EQ] BinaryLogicOperatorNode: '='
       |  +-[DOT] DotNode: 'T_F_BOOL' {propertyName=trueFalseBoolean,dereferenceType=ALL,propertyPath=trueFalseBoolean,path={synthetic-alias}.trueFalseBoolean,tableAlias=booleanlit0_,className=org.hibernate.test.hql.BooleanLiteralEntity,classAlias=null}
       |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  |  \-[IDENT] IdentNode: 'trueFalseBoolean' {originalText=trueFalseBoolean}
       |  \-[TRUE] BooleanLiteralNode: '1'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'NUM_BOOL' {propertyName=zeroOneBoolean,dereferenceType=ALL,propertyPath=zeroOneBoolean,path={synthetic-alias}.zeroOneBoolean,tableAlias=booleanlit0_,className=org.hibernate.test.hql.BooleanLiteralEntity,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'zeroOneBoolean' {originalText=zeroOneBoolean}
          \-[TRUE] BooleanLiteralNode: '1'

14:13:09,085 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,085 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,085 DEBUG SQL:104 - 
    update
        BooleanLiteralEntity 
    set
        Y_N_BOOL='Y',
        T_F_BOOL='T',
        NUM_BOOL=1
14:13:09,085 DEBUG SQL:104 - 
    select
        booleanlit0_.id as id1_,
        booleanlit0_.Y_N_BOOL as Y2_1_,
        booleanlit0_.T_F_BOOL as T3_1_,
        booleanlit0_.NUM_BOOL as NUM4_1_ 
    from
        BooleanLiteralEntity booleanlit0_
14:13:09,087 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete from org.hibernate.test.hql.Animal where mother is not null or father is not null
14:13:09,087 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'Animal'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[IS_NOT_NULL] Node: 'is not null'
          |  \-[IDENT] Node: 'mother'
          \-[IS_NOT_NULL] Node: 'is not null'
             \-[IDENT] Node: 'father'

14:13:09,088 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,088 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Animal (<no alias>) -> animal0_
14:13:09,088 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:09,088 DEBUG DotNode:599 - getDataType() : mother -> org.hibernate.type.ManyToOneType(org.hibernate.test.hql.Animal)
14:13:09,089 DEBUG DotNode:562 - dereferenceShortcut() : property mother in org.hibernate.test.hql.Animal does not require a join.
14:13:09,089 DEBUG DotNode:588 - Terminal propertyPath = [mother]
14:13:09,089 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.mother -> animal0_.mother_id
14:13:09,089 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:09,089 DEBUG DotNode:599 - getDataType() : father -> org.hibernate.type.ManyToOneType(org.hibernate.test.hql.Animal)
14:13:09,089 DEBUG DotNode:562 - dereferenceShortcut() : property father in org.hibernate.test.hql.Animal does not require a join.
14:13:09,089 DEBUG DotNode:588 - Terminal propertyPath = [father]
14:13:09,089 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.father -> animal0_.father_id
14:13:09,090 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Animal)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[animal0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Animal' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Animal,tableAlias=animal0_,origin=null,columns={,className=org.hibernate.test.hql.Animal}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[IS_NOT_NULL] IsNotNullLogicOperatorNode: 'is not null'
          |  \-[DOT] DotNode: 'animal0_.mother_id' {propertyName=mother,dereferenceType=0,propertyPath=mother,path={synthetic-alias}.mother,tableAlias=animal0_,className=org.hibernate.test.hql.Animal,classAlias=null}
          |     +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     \-[IDENT] IdentNode: 'mother' {originalText=mother}
          \-[IS_NOT_NULL] IsNotNullLogicOperatorNode: 'is not null'
             \-[DOT] DotNode: 'animal0_.father_id' {propertyName=father,dereferenceType=0,propertyPath=father,path={synthetic-alias}.father,tableAlias=animal0_,className=org.hibernate.test.hql.Animal,classAlias=null}
                +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
                \-[IDENT] IdentNode: 'father' {originalText=father}

14:13:09,090 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,090 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_ 
        where
            animal0_.mother_id is not null 
            or animal0_.father_id is not null
14:13:09,091 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,091 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,091 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,091 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,092 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,092 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,092 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,092 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,092 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:09,093 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete from org.hibernate.test.hql.Animal
14:13:09,094 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'hql'
             \-[IDENT] Node: 'Animal'

14:13:09,094 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,094 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Animal (<no alias>) -> animal0_
14:13:09,094 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Animal)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[animal0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Animal' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Animal,tableAlias=animal0_,origin=null,columns={,className=org.hibernate.test.hql.Animal}}

14:13:09,094 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,095 DEBUG DeleteStatement:73 - getWhereClause() : Creating a new WHERE clause...
14:13:09,095 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_
14:13:09,095 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,096 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,096 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,096 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,097 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,097 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,097 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,098 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,098 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:09,099 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete from org.hibernate.test.hql.Zoo
14:13:09,100 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'hql'
             \-[IDENT] Node: 'Zoo'

14:13:09,100 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,100 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (<no alias>) -> zoo0_
14:13:09,100 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Zoo)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Zoo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}

14:13:09,100 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,100 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,101 DEBUG SQL:104 - 
    delete 
    from
        Zoo
14:13:09,101 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete from org.hibernate.test.hql.Joiner
14:13:09,102 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'hql'
             \-[IDENT] Node: 'Joiner'

14:13:09,102 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,102 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Joiner (<no alias>) -> joiner0_
14:13:09,102 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (JOINED,Joiner)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[joiner0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Joiner' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Joiner,tableAlias=joiner0_,origin=null,columns={,className=org.hibernate.test.hql.Joiner}}

14:13:09,102 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,102 DEBUG DeleteStatement:73 - getWhereClause() : Creating a new WHERE clause...
14:13:09,103 DEBUG SQL:104 - 
    insert 
    into
        HT_Joiner
        select
            joiner0_.id as id 
        from
            Joiner joiner0_ 
        inner join
            JOINED joiner0_1_ 
                on joiner0_.id=joiner0_1_.ID
14:13:09,103 DEBUG SQL:104 - 
    delete 
    from
        JOINED 
    where
        (
            ID
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:09,103 DEBUG SQL:104 - 
    delete 
    from
        Joiner 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:09,103 DEBUG SQL:104 - 
    delete 
    from
        HT_Joiner
14:13:09,104 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete from org.hibernate.test.hql.Vehicle
14:13:09,105 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'hql'
             \-[IDENT] Node: 'Vehicle'

14:13:09,105 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,105 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Vehicle (<no alias>) -> vehicle0_
14:13:09,105 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Car,Truck,SUV,Pickup,Vehicle)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[vehicle0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: '( select id, vin, owner, 3 as clazz_ from SUV union all select id, vin, owner, 4 as clazz_ from Pickup union all select id, vin, owner, 1 as clazz_ from Car union all select id, vin, owner, 2 as clazz_ from Truck )' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=( select id, vin, owner, 3 as clazz_ from SUV union all select id, vin, owner, 4 as clazz_ from Pickup union all select id, vin, owner, 1 as clazz_ from Car union all select id, vin, owner, 2 as clazz_ from Truck ),tableAlias=vehicle0_,origin=null,columns={,className=org.hibernate.test.hql.Vehicle}}

14:13:09,105 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,105 DEBUG DeleteStatement:73 - getWhereClause() : Creating a new WHERE clause...
14:13:09,106 DEBUG SQL:104 - 
    insert 
    into
        HT_Vehicle
        select
            vehicle0_.id as id 
        from
            ( select
                id,
                vin,
                owner,
                3 as clazz_ 
            from
                SUV 
            union
            all select
                id,
                vin,
                owner,
                4 as clazz_ 
            from
                Pickup 
            union
            all select
                id,
                vin,
                owner,
                1 as clazz_ 
            from
                Car 
            union
            all select
                id,
                vin,
                owner,
                2 as clazz_ 
            from
                Truck 
        ) vehicle0_
14:13:09,107 DEBUG SQL:104 - 
    delete 
    from
        Car 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:09,107 DEBUG SQL:104 - 
    delete 
    from
        Truck 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:09,107 DEBUG SQL:104 - 
    delete 
    from
        SUV 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:09,107 DEBUG SQL:104 - 
    delete 
    from
        Pickup 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:09,108 DEBUG SQL:104 - 
    delete 
    from
        HT_Vehicle
14:13:09,108 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete from org.hibernate.test.hql.BooleanLiteralEntity
14:13:09,109 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'hql'
             \-[IDENT] Node: 'BooleanLiteralEntity'

14:13:09,109 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,109 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.BooleanLiteralEntity (<no alias>) -> booleanlit0_
14:13:09,109 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (BooleanLiteralEntity)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[booleanlit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'BooleanLiteralEntity' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=BooleanLiteralEntity,tableAlias=booleanlit0_,origin=null,columns={,className=org.hibernate.test.hql.BooleanLiteralEntity}}

14:13:09,110 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,110 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,110 DEBUG SQL:104 - 
    delete 
    from
        BooleanLiteralEntity
14:13:09,118  INFO CustomRunner:139 - Test: testDeleteNonExistentEntity
14:13:09,119 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete NonExistentEntity
14:13:09,120 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[IDENT] Node: 'NonExistentEntity'

14:13:09,120 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,120  INFO CustomRunner:139 - Test: testDeleteOnDiscriminatorSubclass
14:13:09,121 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:09,122 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:09,122 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:09,123 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:09,123 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:09,140 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:09,141 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:09,141 DEBUG SQL:104 - 
    insert 
    into
        Dog
        (mammal) 
    values
        (?)
14:13:09,141 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:09,151 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:09,151 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:09,151 DEBUG SQL:104 - 
    insert 
    into
        Cat
        (mammal) 
    values
        (?)
14:13:09,152 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:13:09,152 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'P')
14:13:09,161 DEBUG SQL:104 - 
    insert 
    into
        Joiner
        (id, name) 
    values
        (null, ?)
14:13:09,162 DEBUG SQL:104 - 
    insert 
    into
        JOINED
        (joinedName, ID) 
    values
        (?, ?)
14:13:09,162 DEBUG SQL:104 - 
    insert 
    into
        Car
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:09,162 DEBUG SQL:104 - 
    insert 
    into
        Truck
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:09,171 DEBUG SQL:104 - 
    insert 
    into
        SUV
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:09,172 DEBUG SQL:104 - 
    insert 
    into
        Pickup
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:09,172 DEBUG SQL:104 - 
    insert 
    into
        BooleanLiteralEntity
        (id, Y_N_BOOL, T_F_BOOL, NUM_BOOL) 
    values
        (null, ?, ?, ?)
14:13:09,173 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:09,181 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:09,181 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:09,190 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:09,191 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.hql.PettingZoo
14:13:09,192 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'hql'
             \-[IDENT] Node: 'PettingZoo'

14:13:09,192 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,192 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.PettingZoo (<no alias>) -> pettingzoo0_
14:13:09,192 DEBUG DeleteStatement:73 - getWhereClause() : Creating a new WHERE clause...
14:13:09,192 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Zoo)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[pettingzoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Zoo,tableAlias=pettingzoo0_,origin=null,columns={,className=org.hibernate.test.hql.PettingZoo}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[SQL_TOKEN] SqlFragment: 'zooType='P''

14:13:09,199 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,199 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,200 DEBUG SQL:104 - 
    delete 
    from
        Zoo 
    where
        zooType='P'
14:13:09,200 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.hql.Zoo
14:13:09,201 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'hql'
             \-[IDENT] Node: 'Zoo'

14:13:09,201 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,201 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (<no alias>) -> zoo0_
14:13:09,201 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Zoo)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Zoo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}

14:13:09,201 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,202 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,202 DEBUG SQL:104 - 
    delete 
    from
        Zoo
14:13:09,202 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_ 
        where
            animal0_.mother_id is not null 
            or animal0_.father_id is not null
14:13:09,202 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,213 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,213 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,222 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,223 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,223 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,223 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,245 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,246 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:09,246 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_
14:13:09,256 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,256 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,259 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,271 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,272 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,278 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,279 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,289 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,289 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:09,290 DEBUG SQL:104 - 
    delete 
    from
        Zoo
14:13:09,290 DEBUG SQL:104 - 
    insert 
    into
        HT_Joiner
        select
            joiner0_.id as id 
        from
            Joiner joiner0_ 
        inner join
            JOINED joiner0_1_ 
                on joiner0_.id=joiner0_1_.ID
14:13:09,299 DEBUG SQL:104 - 
    delete 
    from
        JOINED 
    where
        (
            ID
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:09,300 DEBUG SQL:104 - 
    delete 
    from
        Joiner 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:09,300 DEBUG SQL:104 - 
    delete 
    from
        HT_Joiner
14:13:09,310 DEBUG SQL:104 - 
    insert 
    into
        HT_Vehicle
        select
            vehicle0_.id as id 
        from
            ( select
                id,
                vin,
                owner,
                3 as clazz_ 
            from
                SUV 
            union
            all select
                id,
                vin,
                owner,
                4 as clazz_ 
            from
                Pickup 
            union
            all select
                id,
                vin,
                owner,
                1 as clazz_ 
            from
                Car 
            union
            all select
                id,
                vin,
                owner,
                2 as clazz_ 
            from
                Truck 
        ) vehicle0_
14:13:09,321 DEBUG SQL:104 - 
    delete 
    from
        Car 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:09,321 DEBUG SQL:104 - 
    delete 
    from
        Truck 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:09,332 DEBUG SQL:104 - 
    delete 
    from
        SUV 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:09,332 DEBUG SQL:104 - 
    delete 
    from
        Pickup 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:09,332 DEBUG SQL:104 - 
    delete 
    from
        HT_Vehicle
14:13:09,332 DEBUG SQL:104 - 
    delete 
    from
        BooleanLiteralEntity
14:13:09,333  INFO CustomRunner:139 - Test: testDeleteOnJoinedSubclass
14:13:09,334 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:09,335 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:09,335 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:09,345 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:09,345 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:09,345 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:09,346 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:09,356 DEBUG SQL:104 - 
    insert 
    into
        Dog
        (mammal) 
    values
        (?)
14:13:09,356 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:09,356 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:09,357 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:09,357 DEBUG SQL:104 - 
    insert 
    into
        Cat
        (mammal) 
    values
        (?)
14:13:09,357 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:13:09,379 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'P')
14:13:09,379 DEBUG SQL:104 - 
    insert 
    into
        Joiner
        (id, name) 
    values
        (null, ?)
14:13:09,379 DEBUG SQL:104 - 
    insert 
    into
        JOINED
        (joinedName, ID) 
    values
        (?, ?)
14:13:09,380 DEBUG SQL:104 - 
    insert 
    into
        Car
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:09,380 DEBUG SQL:104 - 
    insert 
    into
        Truck
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:09,388 DEBUG SQL:104 - 
    insert 
    into
        SUV
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:09,389 DEBUG SQL:104 - 
    insert 
    into
        Pickup
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:09,389 DEBUG SQL:104 - 
    insert 
    into
        BooleanLiteralEntity
        (id, Y_N_BOOL, T_F_BOOL, NUM_BOOL) 
    values
        (null, ?, ?, ?)
14:13:09,390 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:09,400 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:09,401 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:09,411 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:09,412 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.hql.Mammal where bodyWeight > 150
14:13:09,413 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'Mammal'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[IDENT] Node: 'bodyWeight'
          \-[NUM_INT] Node: '150'

14:13:09,413 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,413 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Mammal (<no alias>) -> mammal0_
14:13:09,413 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:09,413 DEBUG DotNode:599 - getDataType() : bodyWeight -> org.hibernate.type.FloatType@39fd378e
14:13:09,414 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.bodyWeight -> mammal0_1_.body_weight
14:13:09,422 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Animal,Mammal)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[mammal0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Mammal' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Mammal,tableAlias=mammal0_,origin=null,columns={,className=org.hibernate.test.hql.Mammal}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'mammal0_1_.body_weight' {propertyName=bodyWeight,dereferenceType=ALL,propertyPath=bodyWeight,path={synthetic-alias}.bodyWeight,tableAlias=mammal0_,className=org.hibernate.test.hql.Mammal,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'bodyWeight' {originalText=bodyWeight}
          \-[NUM_INT] LiteralNode: '150'

14:13:09,423 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,423 DEBUG SQL:104 - 
    insert 
    into
        HT_Mammal
        select
            mammal0_.animal as animal 
        from
            Mammal mammal0_ 
        inner join
            Animal mammal0_1_ 
                on mammal0_.animal=mammal0_1_.id 
        where
            mammal0_1_.body_weight>150
14:13:09,423 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                animal 
            from
                HT_Mammal
        )
14:13:09,434 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                animal 
            from
                HT_Mammal
        )
14:13:09,435 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                animal 
            from
                HT_Mammal
        )
14:13:09,445 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                animal 
            from
                HT_Mammal
        )
14:13:09,445 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                animal 
            from
                HT_Mammal
        )
14:13:09,446 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                animal 
            from
                HT_Mammal
        )
14:13:09,456 DEBUG SQL:104 - 
    delete 
    from
        HT_Mammal
14:13:09,457 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.hql.Mammal
14:13:09,458 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'hql'
             \-[IDENT] Node: 'Mammal'

14:13:09,459 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,459 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Mammal (<no alias>) -> mammal0_
14:13:09,459 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Animal,Mammal)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[mammal0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Mammal' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Mammal,tableAlias=mammal0_,origin=null,columns={,className=org.hibernate.test.hql.Mammal}}

14:13:09,459 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,459 DEBUG DeleteStatement:73 - getWhereClause() : Creating a new WHERE clause...
14:13:09,460 DEBUG SQL:104 - 
    insert 
    into
        HT_Mammal
        select
            mammal0_.animal as animal 
        from
            Mammal mammal0_ 
        inner join
            Animal mammal0_1_ 
                on mammal0_.animal=mammal0_1_.id
14:13:09,460 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                animal 
            from
                HT_Mammal
        )
14:13:09,477 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                animal 
            from
                HT_Mammal
        )
14:13:09,477 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                animal 
            from
                HT_Mammal
        )
14:13:09,477 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                animal 
            from
                HT_Mammal
        )
14:13:09,485 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                animal 
            from
                HT_Mammal
        )
14:13:09,486 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                animal 
            from
                HT_Mammal
        )
14:13:09,487 DEBUG SQL:104 - 
    delete 
    from
        HT_Mammal
14:13:09,487 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.legacy.SubMulti
14:13:09,488 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'legacy'
             \-[IDENT] Node: 'SubMulti'

14:13:09,508 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,508 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.legacy.SubMulti (<no alias>) -> submulti0_
14:13:09,508 DEBUG DeleteStatement:73 - getWhereClause() : Creating a new WHERE clause...
14:13:09,508 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (nonleafsubclass,rootclass,leafsubsubclass)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[submulti0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'leafsubsubclass' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=leafsubsubclass,tableAlias=submulti0_,origin=null,columns={,className=org.hibernate.test.legacy.SubMulti}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[SQL_TOKEN] SqlFragment: '( id1_ is not null)'

14:13:09,509 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,509 DEBUG SQL:104 - 
    insert 
    into
        HT_leafsubsubclass
        select
            submulti0_.sid as sid 
        from
            leafsubsubclass submulti0_ 
        inner join
            nonleafsubclass submulti0_1_ 
                on submulti0_.sid=submulti0_1_.sid 
        inner join
            rootclass submulti0_2_ 
                on submulti0_.sid=submulti0_2_.id1_ 
        where
            (
                id1_ is not null
            )
14:13:09,518 DEBUG SQL:104 - 
    delete 
    from
        leafsubsubclass 
    where
        (
            sid
        ) IN (
            select
                sid 
            from
                HT_leafsubsubclass
        )
14:13:09,518 DEBUG SQL:104 - 
    delete 
    from
        nonleafsubclass 
    where
        (
            sid
        ) IN (
            select
                sid 
            from
                HT_leafsubsubclass
        )
14:13:09,518 DEBUG SQL:104 - 
    delete 
    from
        rootclass 
    where
        (
            id1_
        ) IN (
            select
                sid 
            from
                HT_leafsubsubclass
        )
14:13:09,519 DEBUG SQL:104 - 
    delete 
    from
        HT_leafsubsubclass
14:13:09,519 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_ 
        where
            animal0_.mother_id is not null 
            or animal0_.father_id is not null
14:13:09,520 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,542 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,542 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,542 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,551 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,552 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,562 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,562 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,572 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:09,572 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_
14:13:09,572 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,573 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,582 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,582 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,582 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,583 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,595 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,595 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,595 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:09,605 DEBUG SQL:104 - 
    delete 
    from
        Zoo
14:13:09,605 DEBUG SQL:104 - 
    insert 
    into
        HT_Joiner
        select
            joiner0_.id as id 
        from
            Joiner joiner0_ 
        inner join
            JOINED joiner0_1_ 
                on joiner0_.id=joiner0_1_.ID
14:13:09,606 DEBUG SQL:104 - 
    delete 
    from
        JOINED 
    where
        (
            ID
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:09,606 DEBUG SQL:104 - 
    delete 
    from
        Joiner 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:09,606 DEBUG SQL:104 - 
    delete 
    from
        HT_Joiner
14:13:09,606 DEBUG SQL:104 - 
    insert 
    into
        HT_Vehicle
        select
            vehicle0_.id as id 
        from
            ( select
                id,
                vin,
                owner,
                3 as clazz_ 
            from
                SUV 
            union
            all select
                id,
                vin,
                owner,
                4 as clazz_ 
            from
                Pickup 
            union
            all select
                id,
                vin,
                owner,
                1 as clazz_ 
            from
                Car 
            union
            all select
                id,
                vin,
                owner,
                2 as clazz_ 
            from
                Truck 
        ) vehicle0_
14:13:09,647 DEBUG SQL:104 - 
    delete 
    from
        Car 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:09,648 DEBUG SQL:104 - 
    delete 
    from
        Truck 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:09,652 DEBUG SQL:104 - 
    delete 
    from
        SUV 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:09,653 DEBUG SQL:104 - 
    delete 
    from
        Pickup 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:09,653 DEBUG SQL:104 - 
    delete 
    from
        HT_Vehicle
14:13:09,664 DEBUG SQL:104 - 
    delete 
    from
        BooleanLiteralEntity
14:13:09,665  INFO CustomRunner:139 - Test: testDeleteOnMappedJoin
14:13:09,666 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:09,667 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:09,667 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:09,675 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:09,675 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:09,675 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:09,676 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:09,676 DEBUG SQL:104 - 
    insert 
    into
        Dog
        (mammal) 
    values
        (?)
14:13:09,686 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:09,687 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:09,687 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:09,687 DEBUG SQL:104 - 
    insert 
    into
        Cat
        (mammal) 
    values
        (?)
14:13:09,701 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:13:09,702 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'P')
14:13:09,702 DEBUG SQL:104 - 
    insert 
    into
        Joiner
        (id, name) 
    values
        (null, ?)
14:13:09,703 DEBUG SQL:104 - 
    insert 
    into
        JOINED
        (joinedName, ID) 
    values
        (?, ?)
14:13:09,712 DEBUG SQL:104 - 
    insert 
    into
        Car
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:09,712 DEBUG SQL:104 - 
    insert 
    into
        Truck
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:09,713 DEBUG SQL:104 - 
    insert 
    into
        SUV
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:09,714 DEBUG SQL:104 - 
    insert 
    into
        Pickup
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:09,714 DEBUG SQL:104 - 
    insert 
    into
        BooleanLiteralEntity
        (id, Y_N_BOOL, T_F_BOOL, NUM_BOOL) 
    values
        (null, ?, ?, ?)
14:13:09,715 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:09,715 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:09,728 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:09,729 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:09,730 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.hql.Joiner where joinedName = :joinedName
14:13:09,731 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'Joiner'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'joinedName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'joinedName'

14:13:09,741 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,741 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Joiner (<no alias>) -> joiner0_
14:13:09,741 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:09,742 DEBUG DotNode:599 - getDataType() : joinedName -> org.hibernate.type.StringType@2dc8de40
14:13:09,742 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.joinedName -> joiner0_1_.joinedName
14:13:09,742 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (JOINED,Joiner)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[joiner0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Joiner' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Joiner,tableAlias=joiner0_,origin=null,columns={,className=org.hibernate.test.hql.Joiner}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'joiner0_1_.joinedName' {propertyName=joinedName,dereferenceType=ALL,propertyPath=joinedName,path={synthetic-alias}.joinedName,tableAlias=joiner0_,className=org.hibernate.test.hql.Joiner,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'joinedName' {originalText=joinedName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=joinedName, expectedType=org.hibernate.type.StringType@2dc8de40}

14:13:09,742 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,743 DEBUG SQL:104 - 
    insert 
    into
        HT_Joiner
        select
            joiner0_.id as id 
        from
            Joiner joiner0_ 
        inner join
            JOINED joiner0_1_ 
                on joiner0_.id=joiner0_1_.ID 
        where
            joiner0_1_.joinedName=?
14:13:09,743 DEBUG SQL:104 - 
    delete 
    from
        JOINED 
    where
        (
            ID
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:09,763 DEBUG SQL:104 - 
    delete 
    from
        Joiner 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:09,764 DEBUG SQL:104 - 
    delete 
    from
        HT_Joiner
14:13:09,764 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_ 
        where
            animal0_.mother_id is not null 
            or animal0_.father_id is not null
14:13:09,774 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,775 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,775 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,784 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,785 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,795 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,795 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,805 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,805 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:09,805 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_
14:13:09,806 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,817 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,817 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,827 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,828 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,828 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,838 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,839 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,839 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:09,839 DEBUG SQL:104 - 
    delete 
    from
        Zoo
14:13:09,840 DEBUG SQL:104 - 
    insert 
    into
        HT_Joiner
        select
            joiner0_.id as id 
        from
            Joiner joiner0_ 
        inner join
            JOINED joiner0_1_ 
                on joiner0_.id=joiner0_1_.ID
14:13:09,840 DEBUG SQL:104 - 
    delete 
    from
        JOINED 
    where
        (
            ID
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:09,849 DEBUG SQL:104 - 
    delete 
    from
        Joiner 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:09,850 DEBUG SQL:104 - 
    delete 
    from
        HT_Joiner
14:13:09,850 DEBUG SQL:104 - 
    insert 
    into
        HT_Vehicle
        select
            vehicle0_.id as id 
        from
            ( select
                id,
                vin,
                owner,
                3 as clazz_ 
            from
                SUV 
            union
            all select
                id,
                vin,
                owner,
                4 as clazz_ 
            from
                Pickup 
            union
            all select
                id,
                vin,
                owner,
                1 as clazz_ 
            from
                Car 
            union
            all select
                id,
                vin,
                owner,
                2 as clazz_ 
            from
                Truck 
        ) vehicle0_
14:13:09,860 DEBUG SQL:104 - 
    delete 
    from
        Car 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:09,882 DEBUG SQL:104 - 
    delete 
    from
        Truck 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:09,882 DEBUG SQL:104 - 
    delete 
    from
        SUV 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:09,882 DEBUG SQL:104 - 
    delete 
    from
        Pickup 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:09,896 DEBUG SQL:104 - 
    delete 
    from
        HT_Vehicle
14:13:09,896 DEBUG SQL:104 - 
    delete 
    from
        BooleanLiteralEntity
14:13:09,897  INFO CustomRunner:139 - Test: testDeleteRestrictedOnManyToOne
14:13:09,898 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:09,898 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:09,906 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:09,906 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:09,907 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:09,907 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:09,916 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:09,916 DEBUG SQL:104 - 
    insert 
    into
        Dog
        (mammal) 
    values
        (?)
14:13:09,917 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:09,917 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:09,917 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:09,925 DEBUG SQL:104 - 
    insert 
    into
        Cat
        (mammal) 
    values
        (?)
14:13:09,926 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:13:09,926 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'P')
14:13:09,927 DEBUG SQL:104 - 
    insert 
    into
        Joiner
        (id, name) 
    values
        (null, ?)
14:13:09,937 DEBUG SQL:104 - 
    insert 
    into
        JOINED
        (joinedName, ID) 
    values
        (?, ?)
14:13:09,937 DEBUG SQL:104 - 
    insert 
    into
        Car
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:09,937 DEBUG SQL:104 - 
    insert 
    into
        Truck
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:09,938 DEBUG SQL:104 - 
    insert 
    into
        SUV
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:09,946 DEBUG SQL:104 - 
    insert 
    into
        Pickup
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:09,947 DEBUG SQL:104 - 
    insert 
    into
        BooleanLiteralEntity
        (id, Y_N_BOOL, T_F_BOOL, NUM_BOOL) 
    values
        (null, ?, ?, ?)
14:13:09,948 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:09,948 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:09,957 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:09,958 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:09,958 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.hql.Animal where mother = :mother
14:13:09,959 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'Animal'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'mother'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'mother'

14:13:09,969 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,969 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Animal (<no alias>) -> animal0_
14:13:09,969 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:09,969 DEBUG DotNode:599 - getDataType() : mother -> org.hibernate.type.ManyToOneType(org.hibernate.test.hql.Animal)
14:13:09,969 DEBUG DotNode:562 - dereferenceShortcut() : property mother in org.hibernate.test.hql.Animal does not require a join.
14:13:09,970 DEBUG DotNode:588 - Terminal propertyPath = [mother]
14:13:09,970 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.mother -> animal0_.mother_id
14:13:09,970 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Animal)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[animal0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Animal' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Animal,tableAlias=animal0_,origin=null,columns={,className=org.hibernate.test.hql.Animal}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'animal0_.mother_id' {propertyName=mother,dereferenceType=0,propertyPath=mother,path={synthetic-alias}.mother,tableAlias=animal0_,className=org.hibernate.test.hql.Animal,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'mother' {originalText=mother}
          \-[NAMED_PARAM] ParameterNode: '?' {name=mother, expectedType=org.hibernate.type.ManyToOneType(org.hibernate.test.hql.Animal)}

14:13:09,970 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:09,971 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_ 
        where
            animal0_.mother_id=?
14:13:09,971 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,971 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,982 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,982 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,991 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,992 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,992 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:09,992 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,014 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:10,015 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_ 
        where
            animal0_.mother_id is not null 
            or animal0_.father_id is not null
14:13:10,015 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,016 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,016 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,016 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,039 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,039 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,040 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,049 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,050 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:10,050 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_
14:13:10,060 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,060 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,070 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,070 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,070 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,081 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,081 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,093 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,094 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:10,094 DEBUG SQL:104 - 
    delete 
    from
        Zoo
14:13:10,095 DEBUG SQL:104 - 
    insert 
    into
        HT_Joiner
        select
            joiner0_.id as id 
        from
            Joiner joiner0_ 
        inner join
            JOINED joiner0_1_ 
                on joiner0_.id=joiner0_1_.ID
14:13:10,095 DEBUG SQL:104 - 
    delete 
    from
        JOINED 
    where
        (
            ID
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:10,095 DEBUG SQL:104 - 
    delete 
    from
        Joiner 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:10,109 DEBUG SQL:104 - 
    delete 
    from
        HT_Joiner
14:13:10,109 DEBUG SQL:104 - 
    insert 
    into
        HT_Vehicle
        select
            vehicle0_.id as id 
        from
            ( select
                id,
                vin,
                owner,
                3 as clazz_ 
            from
                SUV 
            union
            all select
                id,
                vin,
                owner,
                4 as clazz_ 
            from
                Pickup 
            union
            all select
                id,
                vin,
                owner,
                1 as clazz_ 
            from
                Car 
            union
            all select
                id,
                vin,
                owner,
                2 as clazz_ 
            from
                Truck 
        ) vehicle0_
14:13:10,120 DEBUG SQL:104 - 
    delete 
    from
        Car 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:10,120 DEBUG SQL:104 - 
    delete 
    from
        Truck 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:10,121 DEBUG SQL:104 - 
    delete 
    from
        SUV 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:10,143 DEBUG SQL:104 - 
    delete 
    from
        Pickup 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:10,144 DEBUG SQL:104 - 
    delete 
    from
        HT_Vehicle
14:13:10,144 DEBUG SQL:104 - 
    delete 
    from
        BooleanLiteralEntity
14:13:10,145  INFO CustomRunner:139 - Test: testDeleteSyntaxWithCompositeId
14:13:10,154 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.hql.EntityWithCrazyCompositeKey where id.id = 1 and id.otherId = 2
14:13:10,156 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'EntityWithCrazyCompositeKey'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'id'
          |  |  \-[IDENT] Node: 'id'
          |  \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'id'
             |  \-[IDENT] Node: 'otherId'
             \-[NUM_INT] Node: '2'

14:13:10,156 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:10,156 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.EntityWithCrazyCompositeKey (<no alias>) -> entitywith0_
14:13:10,156 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:10,164 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.ComponentType@76f0dc15
14:13:10,164 DEBUG DotNode:585 - Unresolved property path is now 'id.id'
14:13:10,164 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.id -> id
14:13:10,164 DEBUG DotNode:599 - getDataType() : id.id -> org.hibernate.type.LongType@4bf3f9d
14:13:10,164 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.id.id -> id
14:13:10,164 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:10,164 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.ComponentType@76f0dc15
14:13:10,165 DEBUG DotNode:585 - Unresolved property path is now 'id.otherId'
14:13:10,165 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.id -> other_id
14:13:10,165 DEBUG DotNode:599 - getDataType() : id.otherId -> org.hibernate.type.LongType@4bf3f9d
14:13:10,165 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.id.otherId -> other_id
14:13:10,165 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (EntityWithCrazyCompositeKey)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[entitywith0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'EntityWithCrazyCompositeKey' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=EntityWithCrazyCompositeKey,tableAlias=entitywith0_,origin=null,columns={,className=org.hibernate.test.hql.EntityWithCrazyCompositeKey}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'id' {propertyName=id,dereferenceType=ALL,propertyPath=id.id,path={synthetic-alias}.id.id,tableAlias=entitywith0_,className=org.hibernate.test.hql.EntityWithCrazyCompositeKey,classAlias=null}
          |  |  +-[DOT] DotNode: 'id' {propertyName=id,dereferenceType=2,propertyPath=id.id,path={synthetic-alias}.id,tableAlias=entitywith0_,className=org.hibernate.test.hql.EntityWithCrazyCompositeKey,classAlias=null}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
          |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
          |  \-[NUM_INT] LiteralNode: '1'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'other_id' {propertyName=otherId,dereferenceType=ALL,propertyPath=id.otherId,path={synthetic-alias}.id.otherId,tableAlias=entitywith0_,className=org.hibernate.test.hql.EntityWithCrazyCompositeKey,classAlias=null}
             |  +-[DOT] DotNode: 'other_id' {propertyName=otherId,dereferenceType=2,propertyPath=id.otherId,path={synthetic-alias}.id,tableAlias=entitywith0_,className=org.hibernate.test.hql.EntityWithCrazyCompositeKey,classAlias=null}
             |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
             |  \-[IDENT] IdentNode: 'otherId' {originalText=otherId}
             \-[NUM_INT] LiteralNode: '2'

14:13:10,174 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:10,174 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:10,175 DEBUG SQL:104 - 
    delete 
    from
        EntityWithCrazyCompositeKey 
    where
        id=1 
        and other_id=2
14:13:10,176 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete from org.hibernate.test.hql.EntityWithCrazyCompositeKey where id.id = 1 and id.otherId = 2
14:13:10,177 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'EntityWithCrazyCompositeKey'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'id'
          |  |  \-[IDENT] Node: 'id'
          |  \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'id'
             |  \-[IDENT] Node: 'otherId'
             \-[NUM_INT] Node: '2'

14:13:10,187 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:10,188 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.EntityWithCrazyCompositeKey (<no alias>) -> entitywith0_
14:13:10,188 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:10,188 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.ComponentType@76f0dc15
14:13:10,188 DEBUG DotNode:585 - Unresolved property path is now 'id.id'
14:13:10,188 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.id -> id
14:13:10,188 DEBUG DotNode:599 - getDataType() : id.id -> org.hibernate.type.LongType@4bf3f9d
14:13:10,189 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.id.id -> id
14:13:10,189 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:10,189 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.ComponentType@76f0dc15
14:13:10,189 DEBUG DotNode:585 - Unresolved property path is now 'id.otherId'
14:13:10,189 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.id -> other_id
14:13:10,189 DEBUG DotNode:599 - getDataType() : id.otherId -> org.hibernate.type.LongType@4bf3f9d
14:13:10,189 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.id.otherId -> other_id
14:13:10,189 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (EntityWithCrazyCompositeKey)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[entitywith0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'EntityWithCrazyCompositeKey' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=EntityWithCrazyCompositeKey,tableAlias=entitywith0_,origin=null,columns={,className=org.hibernate.test.hql.EntityWithCrazyCompositeKey}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'id' {propertyName=id,dereferenceType=ALL,propertyPath=id.id,path={synthetic-alias}.id.id,tableAlias=entitywith0_,className=org.hibernate.test.hql.EntityWithCrazyCompositeKey,classAlias=null}
          |  |  +-[DOT] DotNode: 'id' {propertyName=id,dereferenceType=2,propertyPath=id.id,path={synthetic-alias}.id,tableAlias=entitywith0_,className=org.hibernate.test.hql.EntityWithCrazyCompositeKey,classAlias=null}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
          |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
          |  \-[NUM_INT] LiteralNode: '1'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'other_id' {propertyName=otherId,dereferenceType=ALL,propertyPath=id.otherId,path={synthetic-alias}.id.otherId,tableAlias=entitywith0_,className=org.hibernate.test.hql.EntityWithCrazyCompositeKey,classAlias=null}
             |  +-[DOT] DotNode: 'other_id' {propertyName=otherId,dereferenceType=2,propertyPath=id.otherId,path={synthetic-alias}.id,tableAlias=entitywith0_,className=org.hibernate.test.hql.EntityWithCrazyCompositeKey,classAlias=null}
             |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
             |  \-[IDENT] IdentNode: 'otherId' {originalText=otherId}
             \-[NUM_INT] LiteralNode: '2'

14:13:10,198 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:10,198 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:10,198 DEBUG SQL:104 - 
    delete 
    from
        EntityWithCrazyCompositeKey 
    where
        id=1 
        and other_id=2
14:13:10,199 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete from org.hibernate.test.hql.EntityWithCrazyCompositeKey e where e.id.id = 1 and e.id.otherId = 2
14:13:10,200 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'org'
    |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |     |  |  |  \-[IDENT] Node: 'test'
    |     |  |  \-[IDENT] Node: 'hql'
    |     |  \-[IDENT] Node: 'EntityWithCrazyCompositeKey'
    |     \-[ALIAS] Node: 'e'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'e'
          |  |  |  \-[IDENT] Node: 'id'
          |  |  \-[IDENT] Node: 'id'
          |  \-[NUM_INT] Node: '1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'e'
             |  |  \-[IDENT] Node: 'id'
             |  \-[IDENT] Node: 'otherId'
             \-[NUM_INT] Node: '2'

14:13:10,208 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:10,208 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.EntityWithCrazyCompositeKey (e) -> entitywith0_
14:13:10,209 DEBUG FromReferenceNode:74 - Resolved : e -> (id, other_id)
14:13:10,209 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.ComponentType@76f0dc15
14:13:10,209 DEBUG DotNode:585 - Unresolved property path is now 'id.id'
14:13:10,209 DEBUG FromReferenceNode:74 - Resolved : e.id -> id
14:13:10,209 DEBUG DotNode:599 - getDataType() : id.id -> org.hibernate.type.LongType@4bf3f9d
14:13:10,209 DEBUG FromReferenceNode:74 - Resolved : e.id.id -> id
14:13:10,209 DEBUG FromReferenceNode:74 - Resolved : e -> (id, other_id)
14:13:10,219 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.ComponentType@76f0dc15
14:13:10,219 DEBUG DotNode:585 - Unresolved property path is now 'id.otherId'
14:13:10,219 DEBUG FromReferenceNode:74 - Resolved : e.id -> other_id
14:13:10,219 DEBUG DotNode:599 - getDataType() : id.otherId -> org.hibernate.type.LongType@4bf3f9d
14:13:10,219 DEBUG FromReferenceNode:74 - Resolved : e.id.otherId -> other_id
14:13:10,220 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (EntityWithCrazyCompositeKey)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[entitywith0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'EntityWithCrazyCompositeKey' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=EntityWithCrazyCompositeKey,tableAlias=entitywith0_,origin=null,columns={,className=org.hibernate.test.hql.EntityWithCrazyCompositeKey}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'id' {propertyName=id,dereferenceType=ALL,propertyPath=id.id,path=e.id.id,tableAlias=entitywith0_,className=org.hibernate.test.hql.EntityWithCrazyCompositeKey,classAlias=e}
          |  |  +-[DOT] DotNode: 'id' {propertyName=id,dereferenceType=2,propertyPath=id.id,path=e.id,tableAlias=entitywith0_,className=org.hibernate.test.hql.EntityWithCrazyCompositeKey,classAlias=e}
          |  |  |  +-[ALIAS_REF] IdentNode: '(id, other_id)' {alias=e, className=org.hibernate.test.hql.EntityWithCrazyCompositeKey, tableAlias=entitywith0_}
          |  |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
          |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
          |  \-[NUM_INT] LiteralNode: '1'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'other_id' {propertyName=otherId,dereferenceType=ALL,propertyPath=id.otherId,path=e.id.otherId,tableAlias=entitywith0_,className=org.hibernate.test.hql.EntityWithCrazyCompositeKey,classAlias=e}
             |  +-[DOT] DotNode: 'other_id' {propertyName=otherId,dereferenceType=2,propertyPath=id.otherId,path=e.id,tableAlias=entitywith0_,className=org.hibernate.test.hql.EntityWithCrazyCompositeKey,classAlias=e}
             |  |  +-[ALIAS_REF] IdentNode: '(id, other_id)' {alias=e, className=org.hibernate.test.hql.EntityWithCrazyCompositeKey, tableAlias=entitywith0_}
             |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
             |  \-[IDENT] IdentNode: 'otherId' {originalText=otherId}
             \-[NUM_INT] LiteralNode: '2'

14:13:10,220 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:10,220 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:10,220 DEBUG SQL:104 - 
    delete 
    from
        EntityWithCrazyCompositeKey 
    where
        id=1 
        and other_id=2
14:13:10,221  INFO CustomRunner:139 - Test: testDeleteUnionSubclassAbstractRoot
14:13:10,222 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:10,222 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:10,223 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:10,223 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:10,234 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:10,234 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:10,234 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:10,234 DEBUG SQL:104 - 
    insert 
    into
        Dog
        (mammal) 
    values
        (?)
14:13:10,244 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:10,245 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:10,245 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:10,246 DEBUG SQL:104 - 
    insert 
    into
        Cat
        (mammal) 
    values
        (?)
14:13:10,246 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:13:10,246 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'P')
14:13:10,270 DEBUG SQL:104 - 
    insert 
    into
        Joiner
        (id, name) 
    values
        (null, ?)
14:13:10,271 DEBUG SQL:104 - 
    insert 
    into
        JOINED
        (joinedName, ID) 
    values
        (?, ?)
14:13:10,271 DEBUG SQL:104 - 
    insert 
    into
        Car
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:10,271 DEBUG SQL:104 - 
    insert 
    into
        Truck
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:10,272 DEBUG SQL:104 - 
    insert 
    into
        SUV
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:10,280 DEBUG SQL:104 - 
    insert 
    into
        Pickup
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:10,281 DEBUG SQL:104 - 
    insert 
    into
        BooleanLiteralEntity
        (id, Y_N_BOOL, T_F_BOOL, NUM_BOOL) 
    values
        (null, ?, ?, ?)
14:13:10,281 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:10,290 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:10,290 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:10,291 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:10,291 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.hql.Vehicle where owner = :owner
14:13:10,292 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'Vehicle'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'owner'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'owner'

14:13:10,300 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:10,300 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Vehicle (<no alias>) -> vehicle0_
14:13:10,300 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:10,300 DEBUG DotNode:599 - getDataType() : owner -> org.hibernate.type.StringType@2dc8de40
14:13:10,300 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.owner -> vehicle0_.owner
14:13:10,301 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Car,Truck,SUV,Pickup,Vehicle)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[vehicle0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: '( select id, vin, owner, 3 as clazz_ from SUV union all select id, vin, owner, 4 as clazz_ from Pickup union all select id, vin, owner, 1 as clazz_ from Car union all select id, vin, owner, 2 as clazz_ from Truck )' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=( select id, vin, owner, 3 as clazz_ from SUV union all select id, vin, owner, 4 as clazz_ from Pickup union all select id, vin, owner, 1 as clazz_ from Car union all select id, vin, owner, 2 as clazz_ from Truck ),tableAlias=vehicle0_,origin=null,columns={,className=org.hibernate.test.hql.Vehicle}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'vehicle0_.owner' {propertyName=owner,dereferenceType=ALL,propertyPath=owner,path={synthetic-alias}.owner,tableAlias=vehicle0_,className=org.hibernate.test.hql.Vehicle,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'owner' {originalText=owner}
          \-[NAMED_PARAM] ParameterNode: '?' {name=owner, expectedType=org.hibernate.type.StringType@2dc8de40}

14:13:10,309 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:10,310 DEBUG SQL:104 - 
    insert 
    into
        HT_Vehicle
        select
            vehicle0_.id as id 
        from
            ( select
                id,
                vin,
                owner,
                3 as clazz_ 
            from
                SUV 
            union
            all select
                id,
                vin,
                owner,
                4 as clazz_ 
            from
                Pickup 
            union
            all select
                id,
                vin,
                owner,
                1 as clazz_ 
            from
                Car 
            union
            all select
                id,
                vin,
                owner,
                2 as clazz_ 
            from
                Truck 
        ) vehicle0_ 
    where
        vehicle0_.owner=?
14:13:10,322 DEBUG SQL:104 - 
    delete 
    from
        Car 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:10,322 DEBUG SQL:104 - 
    delete 
    from
        Truck 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:10,331 DEBUG SQL:104 - 
    delete 
    from
        SUV 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:10,331 DEBUG SQL:104 - 
    delete 
    from
        Pickup 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:10,342 DEBUG SQL:104 - 
    delete 
    from
        HT_Vehicle
14:13:10,343 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.hql.Vehicle
14:13:10,344 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'hql'
             \-[IDENT] Node: 'Vehicle'

14:13:10,344 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:10,344 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Vehicle (<no alias>) -> vehicle0_
14:13:10,344 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Car,Truck,SUV,Pickup,Vehicle)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[vehicle0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: '( select id, vin, owner, 3 as clazz_ from SUV union all select id, vin, owner, 4 as clazz_ from Pickup union all select id, vin, owner, 1 as clazz_ from Car union all select id, vin, owner, 2 as clazz_ from Truck )' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=( select id, vin, owner, 3 as clazz_ from SUV union all select id, vin, owner, 4 as clazz_ from Pickup union all select id, vin, owner, 1 as clazz_ from Car union all select id, vin, owner, 2 as clazz_ from Truck ),tableAlias=vehicle0_,origin=null,columns={,className=org.hibernate.test.hql.Vehicle}}

14:13:10,344 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:10,344 DEBUG DeleteStatement:73 - getWhereClause() : Creating a new WHERE clause...
14:13:10,345 DEBUG SQL:104 - 
    insert 
    into
        HT_Vehicle
        select
            vehicle0_.id as id 
        from
            ( select
                id,
                vin,
                owner,
                3 as clazz_ 
            from
                SUV 
            union
            all select
                id,
                vin,
                owner,
                4 as clazz_ 
            from
                Pickup 
            union
            all select
                id,
                vin,
                owner,
                1 as clazz_ 
            from
                Car 
            union
            all select
                id,
                vin,
                owner,
                2 as clazz_ 
            from
                Truck 
        ) vehicle0_
14:13:10,356 DEBUG SQL:104 - 
    delete 
    from
        Car 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:10,356 DEBUG SQL:104 - 
    delete 
    from
        Truck 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:10,366 DEBUG SQL:104 - 
    delete 
    from
        SUV 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:10,366 DEBUG SQL:104 - 
    delete 
    from
        Pickup 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:10,366 DEBUG SQL:104 - 
    delete 
    from
        HT_Vehicle
14:13:10,367 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_ 
        where
            animal0_.mother_id is not null 
            or animal0_.father_id is not null
14:13:10,387 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,387 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,387 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,397 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,397 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,407 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,407 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,417 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,417 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:10,417 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_
14:13:10,418 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,426 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,427 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,465 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,482 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,486 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,486 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,486 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,488 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:10,488 DEBUG SQL:104 - 
    delete 
    from
        Zoo
14:13:10,489 DEBUG SQL:104 - 
    insert 
    into
        HT_Joiner
        select
            joiner0_.id as id 
        from
            Joiner joiner0_ 
        inner join
            JOINED joiner0_1_ 
                on joiner0_.id=joiner0_1_.ID
14:13:10,503 DEBUG SQL:104 - 
    delete 
    from
        JOINED 
    where
        (
            ID
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:10,503 DEBUG SQL:104 - 
    delete 
    from
        Joiner 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:10,503 DEBUG SQL:104 - 
    delete 
    from
        HT_Joiner
14:13:10,514 DEBUG SQL:104 - 
    insert 
    into
        HT_Vehicle
        select
            vehicle0_.id as id 
        from
            ( select
                id,
                vin,
                owner,
                3 as clazz_ 
            from
                SUV 
            union
            all select
                id,
                vin,
                owner,
                4 as clazz_ 
            from
                Pickup 
            union
            all select
                id,
                vin,
                owner,
                1 as clazz_ 
            from
                Car 
            union
            all select
                id,
                vin,
                owner,
                2 as clazz_ 
            from
                Truck 
        ) vehicle0_
14:13:10,515 DEBUG SQL:104 - 
    delete 
    from
        Car 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:10,537 DEBUG SQL:104 - 
    delete 
    from
        Truck 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:10,537 DEBUG SQL:104 - 
    delete 
    from
        SUV 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:10,551 DEBUG SQL:104 - 
    delete 
    from
        Pickup 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:10,551 DEBUG SQL:104 - 
    delete 
    from
        HT_Vehicle
14:13:10,551 DEBUG SQL:104 - 
    delete 
    from
        BooleanLiteralEntity
14:13:10,552  INFO CustomRunner:139 - Test: testDeleteUnionSubclassConcreteSubclass
14:13:10,553 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:10,554 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:10,554 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:10,554 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:10,555 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:10,555 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:10,555 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:10,574 DEBUG SQL:104 - 
    insert 
    into
        Dog
        (mammal) 
    values
        (?)
14:13:10,575 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:10,575 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:10,575 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:10,638 DEBUG SQL:104 - 
    insert 
    into
        Cat
        (mammal) 
    values
        (?)
14:13:10,639 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:13:10,639 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'P')
14:13:10,639 DEBUG SQL:104 - 
    insert 
    into
        Joiner
        (id, name) 
    values
        (null, ?)
14:13:10,640 DEBUG SQL:104 - 
    insert 
    into
        JOINED
        (joinedName, ID) 
    values
        (?, ?)
14:13:10,640 DEBUG SQL:104 - 
    insert 
    into
        Car
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:10,640 DEBUG SQL:104 - 
    insert 
    into
        Truck
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:10,641 DEBUG SQL:104 - 
    insert 
    into
        SUV
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:10,641 DEBUG SQL:104 - 
    insert 
    into
        Pickup
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:10,641 DEBUG SQL:104 - 
    insert 
    into
        BooleanLiteralEntity
        (id, Y_N_BOOL, T_F_BOOL, NUM_BOOL) 
    values
        (null, ?, ?, ?)
14:13:10,642 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:10,642 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:10,642 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:10,642 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:10,643 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.hql.Truck where owner = :owner
14:13:10,644 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'Truck'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'owner'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'owner'

14:13:10,648 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:10,648 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Truck (<no alias>) -> truck0_
14:13:10,648 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:10,648 DEBUG DotNode:599 - getDataType() : owner -> org.hibernate.type.StringType@2dc8de40
14:13:10,649 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.owner -> truck0_.owner
14:13:10,649 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Truck,SUV,Pickup,Vehicle)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[truck0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: '( select id, vin, owner, 2 as clazz_ from Truck union all select id, vin, owner, 3 as clazz_ from SUV union all select id, vin, owner, 4 as clazz_ from Pickup )' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=( select id, vin, owner, 2 as clazz_ from Truck union all select id, vin, owner, 3 as clazz_ from SUV union all select id, vin, owner, 4 as clazz_ from Pickup ),tableAlias=truck0_,origin=null,columns={,className=org.hibernate.test.hql.Truck}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'truck0_.owner' {propertyName=owner,dereferenceType=ALL,propertyPath=owner,path={synthetic-alias}.owner,tableAlias=truck0_,className=org.hibernate.test.hql.Truck,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'owner' {originalText=owner}
          \-[NAMED_PARAM] ParameterNode: '?' {name=owner, expectedType=org.hibernate.type.StringType@2dc8de40}

14:13:10,649 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:10,649 DEBUG SQL:104 - 
    insert 
    into
        HT_Truck
        select
            truck0_.id as id 
        from
            ( select
                id,
                vin,
                owner,
                2 as clazz_ 
            from
                Truck 
            union
            all select
                id,
                vin,
                owner,
                3 as clazz_ 
            from
                SUV 
            union
            all select
                id,
                vin,
                owner,
                4 as clazz_ 
            from
                Pickup 
        ) truck0_ 
    where
        truck0_.owner=?
14:13:10,671 DEBUG SQL:104 - 
    delete 
    from
        Truck 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Truck
        )
14:13:10,672 DEBUG SQL:104 - 
    delete 
    from
        Truck 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Truck
        )
14:13:10,682 DEBUG SQL:104 - 
    delete 
    from
        SUV 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Truck
        )
14:13:10,683 DEBUG SQL:104 - 
    delete 
    from
        Pickup 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Truck
        )
14:13:10,692 DEBUG SQL:104 - 
    delete 
    from
        HT_Truck
14:13:10,692 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.hql.Truck
14:13:10,693 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'hql'
             \-[IDENT] Node: 'Truck'

14:13:10,693 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:10,693 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Truck (<no alias>) -> truck0_
14:13:10,701 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Truck,SUV,Pickup,Vehicle)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[truck0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: '( select id, vin, owner, 2 as clazz_ from Truck union all select id, vin, owner, 3 as clazz_ from SUV union all select id, vin, owner, 4 as clazz_ from Pickup )' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=( select id, vin, owner, 2 as clazz_ from Truck union all select id, vin, owner, 3 as clazz_ from SUV union all select id, vin, owner, 4 as clazz_ from Pickup ),tableAlias=truck0_,origin=null,columns={,className=org.hibernate.test.hql.Truck}}

14:13:10,702 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:10,702 DEBUG DeleteStatement:73 - getWhereClause() : Creating a new WHERE clause...
14:13:10,702 DEBUG SQL:104 - 
    insert 
    into
        HT_Truck
        select
            truck0_.id as id 
        from
            ( select
                id,
                vin,
                owner,
                2 as clazz_ 
            from
                Truck 
            union
            all select
                id,
                vin,
                owner,
                3 as clazz_ 
            from
                SUV 
            union
            all select
                id,
                vin,
                owner,
                4 as clazz_ 
            from
                Pickup 
        ) truck0_
14:13:10,714 DEBUG SQL:104 - 
    delete 
    from
        Truck 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Truck
        )
14:13:10,714 DEBUG SQL:104 - 
    delete 
    from
        Truck 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Truck
        )
14:13:10,723 DEBUG SQL:104 - 
    delete 
    from
        SUV 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Truck
        )
14:13:10,724 DEBUG SQL:104 - 
    delete 
    from
        Pickup 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Truck
        )
14:13:10,724 DEBUG SQL:104 - 
    delete 
    from
        HT_Truck
14:13:10,734 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_ 
        where
            animal0_.mother_id is not null 
            or animal0_.father_id is not null
14:13:10,734 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,734 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,744 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,744 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,744 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,744 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,745 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,758 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,758 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:10,758 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_
14:13:10,768 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,768 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,768 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,791 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,791 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,791 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,801 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,801 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:10,811 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:10,811 DEBUG SQL:104 - 
    delete 
    from
        Zoo
14:13:10,812 DEBUG SQL:104 - 
    insert 
    into
        HT_Joiner
        select
            joiner0_.id as id 
        from
            Joiner joiner0_ 
        inner join
            JOINED joiner0_1_ 
                on joiner0_.id=joiner0_1_.ID
14:13:10,812 DEBUG SQL:104 - 
    delete 
    from
        JOINED 
    where
        (
            ID
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:10,821 DEBUG SQL:104 - 
    delete 
    from
        Joiner 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:10,822 DEBUG SQL:104 - 
    delete 
    from
        HT_Joiner
14:13:10,822 DEBUG SQL:104 - 
    insert 
    into
        HT_Vehicle
        select
            vehicle0_.id as id 
        from
            ( select
                id,
                vin,
                owner,
                3 as clazz_ 
            from
                SUV 
            union
            all select
                id,
                vin,
                owner,
                4 as clazz_ 
            from
                Pickup 
            union
            all select
                id,
                vin,
                owner,
                1 as clazz_ 
            from
                Car 
            union
            all select
                id,
                vin,
                owner,
                2 as clazz_ 
            from
                Truck 
        ) vehicle0_
14:13:10,860 DEBUG SQL:104 - 
    delete 
    from
        Car 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:10,863 DEBUG SQL:104 - 
    delete 
    from
        Truck 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:10,863 DEBUG SQL:104 - 
    delete 
    from
        SUV 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:10,863 DEBUG SQL:104 - 
    delete 
    from
        Pickup 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:10,863 DEBUG SQL:104 - 
    delete 
    from
        HT_Vehicle
14:13:10,864 DEBUG SQL:104 - 
    delete 
    from
        BooleanLiteralEntity
14:13:10,865  INFO CustomRunner:139 - Test: testDeleteUnionSubclassLeafSubclass
14:13:10,866 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:10,867 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:10,867 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:10,867 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:10,900 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:10,900 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:10,900 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:10,901 DEBUG SQL:104 - 
    insert 
    into
        Dog
        (mammal) 
    values
        (?)
14:13:10,901 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:10,901 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:10,901 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:10,901 DEBUG SQL:104 - 
    insert 
    into
        Cat
        (mammal) 
    values
        (?)
14:13:10,925 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:13:10,926 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'P')
14:13:10,926 DEBUG SQL:104 - 
    insert 
    into
        Joiner
        (id, name) 
    values
        (null, ?)
14:13:10,926 DEBUG SQL:104 - 
    insert 
    into
        JOINED
        (joinedName, ID) 
    values
        (?, ?)
14:13:10,928 DEBUG SQL:104 - 
    insert 
    into
        Car
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:10,928 DEBUG SQL:104 - 
    insert 
    into
        Truck
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:10,928 DEBUG SQL:104 - 
    insert 
    into
        SUV
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:10,928 DEBUG SQL:104 - 
    insert 
    into
        Pickup
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:10,929 DEBUG SQL:104 - 
    insert 
    into
        BooleanLiteralEntity
        (id, Y_N_BOOL, T_F_BOOL, NUM_BOOL) 
    values
        (null, ?, ?, ?)
14:13:10,929 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:10,953 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:10,953 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:10,954 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:10,987 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.hql.Car where owner = :owner
14:13:10,988 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'Car'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'owner'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'owner'

14:13:10,988 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:10,989 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Car (<no alias>) -> car0_
14:13:10,989 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:10,989 DEBUG DotNode:599 - getDataType() : owner -> org.hibernate.type.StringType@2dc8de40
14:13:10,989 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.owner -> owner
14:13:10,990 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Car,Vehicle)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[car0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Car' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Car,tableAlias=car0_,origin=null,columns={,className=org.hibernate.test.hql.Car}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'owner' {propertyName=owner,dereferenceType=ALL,propertyPath=owner,path={synthetic-alias}.owner,tableAlias=car0_,className=org.hibernate.test.hql.Car,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'owner' {originalText=owner}
          \-[NAMED_PARAM] ParameterNode: '?' {name=owner, expectedType=org.hibernate.type.StringType@2dc8de40}

14:13:11,000 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:11,000 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:11,000 DEBUG SQL:104 - 
    delete 
    from
        Car 
    where
        owner=?
14:13:11,001 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.hql.Car
14:13:11,002 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'hql'
             \-[IDENT] Node: 'Car'

14:13:11,002 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:11,002 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Car (<no alias>) -> car0_
14:13:11,002 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Car,Vehicle)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[car0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Car' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Car,tableAlias=car0_,origin=null,columns={,className=org.hibernate.test.hql.Car}}

14:13:11,002 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:11,002 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:11,002 DEBUG SQL:104 - 
    delete 
    from
        Car
14:13:11,003 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_ 
        where
            animal0_.mother_id is not null 
            or animal0_.father_id is not null
14:13:11,003 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:11,013 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:11,013 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:11,024 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:11,025 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:11,025 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:11,025 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:11,025 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:11,039 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:11,040 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_
14:13:11,040 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:11,051 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:11,052 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:11,052 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:11,052 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:11,075 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:11,075 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:11,087 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:11,087 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:11,088 DEBUG SQL:104 - 
    delete 
    from
        Zoo
14:13:11,088 DEBUG SQL:104 - 
    insert 
    into
        HT_Joiner
        select
            joiner0_.id as id 
        from
            Joiner joiner0_ 
        inner join
            JOINED joiner0_1_ 
                on joiner0_.id=joiner0_1_.ID
14:13:11,098 DEBUG SQL:104 - 
    delete 
    from
        JOINED 
    where
        (
            ID
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:11,099 DEBUG SQL:104 - 
    delete 
    from
        Joiner 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:11,111 DEBUG SQL:104 - 
    delete 
    from
        HT_Joiner
14:13:11,112 DEBUG SQL:104 - 
    insert 
    into
        HT_Vehicle
        select
            vehicle0_.id as id 
        from
            ( select
                id,
                vin,
                owner,
                3 as clazz_ 
            from
                SUV 
            union
            all select
                id,
                vin,
                owner,
                4 as clazz_ 
            from
                Pickup 
            union
            all select
                id,
                vin,
                owner,
                1 as clazz_ 
            from
                Car 
            union
            all select
                id,
                vin,
                owner,
                2 as clazz_ 
            from
                Truck 
        ) vehicle0_
14:13:11,127 DEBUG SQL:104 - 
    delete 
    from
        Car 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:11,127 DEBUG SQL:104 - 
    delete 
    from
        Truck 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:11,138 DEBUG SQL:104 - 
    delete 
    from
        SUV 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:11,145 DEBUG SQL:104 - 
    delete 
    from
        Pickup 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:11,149 DEBUG SQL:104 - 
    delete 
    from
        HT_Vehicle
14:13:11,149 DEBUG SQL:104 - 
    delete 
    from
        BooleanLiteralEntity
14:13:11,150  INFO CustomRunner:139 - Test: testDeleteWithMetadataWhereFragments
14:13:11,151 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete from org.hibernate.test.legacy.Bar
14:13:11,152 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'legacy'
             \-[IDENT] Node: 'Bar'

14:13:11,162 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:11,162 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.legacy.Bar (<no alias>) -> bar0_
14:13:11,162 DEBUG DeleteStatement:73 - getWhereClause() : Creating a new WHERE clause...
14:13:11,162 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces ("foos",jointable,bar_join_table)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[bar0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: '"foos"' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName="foos",tableAlias=bar0_,origin=null,columns={,className=org.hibernate.test.legacy.Bar}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[SQL_TOKEN] SqlFragment: '"foo_subclass_1234"='B''

14:13:11,162 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:11,163 DEBUG SQL:104 - 
    insert 
    into
        HT_foos
        select
            bar0_."foo_idcolumnname123" as "foo_idcolumnname123" 
        from
            "foos" bar0_ 
        inner join
            jointable bar0_1_ 
                on bar0_."foo_idcolumnname123"=bar0_1_.fooid 
        inner join
            bar_join_table bar0_2_ 
                on bar0_."foo_idcolumnname123"=bar0_2_.bar_id 
        where
            "foo_subclass_1234"='B'
14:13:11,163 DEBUG SQL:104 - 
    delete 
    from
        bar_join_table 
    where
        (
            bar_id
        ) IN (
            select
                "foo_idcolumnname123" 
            from
                HT_foos
        )
14:13:11,164 DEBUG SQL:104 - 
    delete 
    from
        jointable 
    where
        (
            fooid
        ) IN (
            select
                "foo_idcolumnname123" 
            from
                HT_foos
        )
14:13:11,164 DEBUG SQL:104 - 
    delete 
    from
        "foos" 
    where
        (
            "foo_idcolumnname123"
        ) IN (
            select
                "foo_idcolumnname123" 
            from
                HT_foos
        )
14:13:11,176 DEBUG SQL:104 - 
    delete 
    from
        HT_foos
14:13:11,177 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete from org.hibernate.test.legacy.Bar where barString = 's'
14:13:11,178 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'legacy'
    |        \-[IDENT] Node: 'Bar'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'barString'
          \-[QUOTED_STRING] Node: ''s''

14:13:11,178 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:11,178 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.legacy.Bar (<no alias>) -> bar0_
14:13:11,178 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:11,186 DEBUG DotNode:599 - getDataType() : barString -> org.hibernate.type.StringType@2dc8de40
14:13:11,186 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.barString -> bar0_.bar_string
14:13:11,186 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces ("foos",jointable,bar_join_table)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[bar0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: '"foos"' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName="foos",tableAlias=bar0_,origin=null,columns={,className=org.hibernate.test.legacy.Bar}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: '{and}'
          +-[SQL_TOKEN] SqlFragment: '"foo_subclass_1234"='B''
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'bar0_.bar_string' {propertyName=barString,dereferenceType=ALL,propertyPath=barString,path={synthetic-alias}.barString,tableAlias=bar0_,className=org.hibernate.test.legacy.Bar,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'barString' {originalText=barString}
             \-[QUOTED_STRING] LiteralNode: ''s''

14:13:11,187 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:11,187 DEBUG SQL:104 - 
    insert 
    into
        HT_foos
        select
            bar0_."foo_idcolumnname123" as "foo_idcolumnname123" 
        from
            "foos" bar0_ 
        inner join
            jointable bar0_1_ 
                on bar0_."foo_idcolumnname123"=bar0_1_.fooid 
        inner join
            bar_join_table bar0_2_ 
                on bar0_."foo_idcolumnname123"=bar0_2_.bar_id 
        where
            "foo_subclass_1234"='B' 
            and bar0_.bar_string='s'
14:13:11,187 DEBUG SQL:104 - 
    delete 
    from
        bar_join_table 
    where
        (
            bar_id
        ) IN (
            select
                "foo_idcolumnname123" 
            from
                HT_foos
        )
14:13:11,210 DEBUG SQL:104 - 
    delete 
    from
        jointable 
    where
        (
            fooid
        ) IN (
            select
                "foo_idcolumnname123" 
            from
                HT_foos
        )
14:13:11,211 DEBUG SQL:104 - 
    delete 
    from
        "foos" 
    where
        (
            "foo_idcolumnname123"
        ) IN (
            select
                "foo_idcolumnname123" 
            from
                HT_foos
        )
14:13:11,211 DEBUG SQL:104 - 
    delete 
    from
        HT_foos
14:13:11,222  INFO CustomRunner:139 - Test: testDeleteWithSubquery
14:13:11,223 DEBUG SQL:104 - 
    insert 
    into
        SIMPLE_1
        (ID, NAME, negated_num) 
    values
        (null, ?, 0 - ?)
14:13:11,224 DEBUG SQL:104 - 
    insert 
    into
        SIMPLE_2
        (ID, NAME, SIMPLE_1_ID) 
    values
        (null, ?, ?)
14:13:11,224 DEBUG SQL:104 - 
    insert 
    into
        SIMPLE_2
        (ID, NAME, SIMPLE_1_ID) 
    values
        (null, ?, ?)
14:13:11,225 DEBUG SQL:104 - 
    insert 
    into
        SIMPLE_2
        (ID, NAME, SIMPLE_1_ID) 
    values
        (null, ?, ?)
14:13:11,233 DEBUG SQL:104 - 
    insert 
    into
        SIMPLE_1
        (ID, NAME, negated_num) 
    values
        (null, ?, 0 - ?)
14:13:11,234 DEBUG SQL:104 - 
    insert 
    into
        SIMPLE_2
        (ID, NAME, SIMPLE_1_ID) 
    values
        (null, ?, ?)
14:13:11,234 DEBUG SQL:104 - 
    insert 
    into
        SIMPLE_2
        (ID, NAME, SIMPLE_1_ID) 
    values
        (null, ?, ?)
14:13:11,234 DEBUG SQL:104 - 
    insert 
    into
        SIMPLE_2
        (ID, NAME, SIMPLE_1_ID) 
    values
        (null, ?, ?)
14:13:11,235 DEBUG SQL:104 - 
    insert 
    into
        SIMPLE_2
        (ID, NAME, SIMPLE_1_ID) 
    values
        (null, ?, ?)
14:13:11,247 DEBUG SQL:104 - 
    insert 
    into
        SIMPLE_1
        (ID, NAME, negated_num) 
    values
        (null, ?, 0 - ?)
14:13:11,248 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.hql.SimpleEntityWithAssociation e where size( e.associatedEntities ) = 0 and e.name like '%'
14:13:11,249 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'org'
    |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |     |  |  |  \-[IDENT] Node: 'test'
    |     |  |  \-[IDENT] Node: 'hql'
    |     |  \-[IDENT] Node: 'SimpleEntityWithAssociation'
    |     \-[ALIAS] Node: 'e'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[METHOD_CALL] Node: '('
          |  |  +-[IDENT] Node: 'size'
          |  |  \-[EXPR_LIST] Node: 'exprList'
          |  |     \-[DOT] Node: '.'
          |  |        +-[IDENT] Node: 'e'
          |  |        \-[IDENT] Node: 'associatedEntities'
          |  \-[NUM_INT] Node: '0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'e'
             |  \-[IDENT] Node: 'name'
             \-[QUOTED_STRING] Node: ''%''

14:13:11,264 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:11,265 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.SimpleEntityWithAssociation (e) -> simpleenti0_
14:13:11,265 DEBUG FromReferenceNode:74 - Resolved : e -> ID
14:13:11,265 DEBUG DotNode:599 - getDataType() : associatedEntities -> org.hibernate.type.SetType(org.hibernate.test.hql.SimpleEntityWithAssociation.associatedEntities)
14:13:11,265 DEBUG FromElementFactory:376 - createEntityAssociation() : One to many - path = e.associatedEntities role = org.hibernate.test.hql.SimpleEntityWithAssociation.associatedEntities associatedEntityName = org.hibernate.test.hql.SimpleAssociatedEntity
14:13:11,265 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.SimpleAssociatedEntity (<no alias>) -> associated1_
14:13:11,265 DEBUG FromClause:282 - addJoinByPathMap() : e.associatedEntities -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=SIMPLE_2,tableAlias=associated1_,origin=SIMPLE_1 simpleenti0_,columns={SIMPLE_1.ID ,className=org.hibernate.test.hql.SimpleAssociatedEntity}}
14:13:11,266 DEBUG DotNode:308 - dereferenceCollection() : Created new FROM element for e.associatedEntities : SIMPLE_2 associated1_
14:13:11,266 DEBUG MethodNode:151 - collectionProperty() :  name=size type=org.hibernate.type.SetType(org.hibernate.test.hql.SimpleEntityWithAssociation.associatedEntities)
14:13:11,266 DEBUG FromElementType:347 - toColumns(associated1_,size) : subquery = select count(associated1_.SIMPLE_1_ID) from SIMPLE_2 associated1_ where SIMPLE_1.ID=associated1_.SIMPLE_1_ID
14:13:11,267 DEBUG FromReferenceNode:74 - Resolved : e -> ID
14:13:11,267 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:13:11,267 DEBUG FromReferenceNode:74 - Resolved : e.name -> NAME
14:13:11,267 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (SIMPLE_2,SIMPLE_1)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[e], fromElementByTableAlias=[simpleenti0_, associated1_], fromElementsByPath=[e.associatedEntities], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'SIMPLE_1' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=SIMPLE_1,tableAlias=simpleenti0_,origin=null,columns={,className=org.hibernate.test.hql.SimpleEntityWithAssociation}}
    |  \-[JOIN_FRAGMENT] ImpliedFromElement: '' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.hql.SimpleEntityWithAssociation.associatedEntities,tableName=SIMPLE_2,tableAlias=associated1_,origin=SIMPLE_1,columns={SIMPLE_1.ID ,className=org.hibernate.test.hql.SimpleAssociatedEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[SQL_TOKEN] MethodNode: '(select count(associated1_.SIMPLE_1_ID) from SIMPLE_2 associated1_ where SIMPLE_1.ID=associated1_.SIMPLE_1_ID)'
          |  |  +-[METHOD_NAME] IdentNode: 'size' {originalText=size}
          |  |  \-[EXPR_LIST] SqlNode: 'exprList'
          |  |     \-[DOT] DotNode: '.' {propertyName=associatedEntities,dereferenceType=NULL_TREE_LOOKAHEAD,propertyPath=associatedEntities,path=e.associatedEntities,tableAlias=associated1_,className=org.hibernate.test.hql.SimpleAssociatedEntity,classAlias=null}
          |  |        +-[ALIAS_REF] IdentNode: 'ID' {alias=e, className=org.hibernate.test.hql.SimpleEntityWithAssociation, tableAlias=simpleenti0_}
          |  |        \-[IDENT] IdentNode: 'associatedEntities' {originalText=associatedEntities}
          |  \-[NUM_INT] LiteralNode: '0'
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'NAME' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=e.name,tableAlias=simpleenti0_,className=org.hibernate.test.hql.SimpleEntityWithAssociation,classAlias=e}
             |  +-[ALIAS_REF] IdentNode: 'ID' {alias=e, className=org.hibernate.test.hql.SimpleEntityWithAssociation, tableAlias=simpleenti0_}
             |  \-[IDENT] IdentNode: 'name' {originalText=name}
             \-[QUOTED_STRING] LiteralNode: ''%''

14:13:11,278 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:11,279 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:11,279 DEBUG SQL:104 - 
    delete 
    from
        SIMPLE_1 
    where
        (
            select
                count(associated1_.SIMPLE_1_ID) 
            from
                SIMPLE_2 associated1_ 
            where
                SIMPLE_1.ID=associated1_.SIMPLE_1_ID
        )=0 
        and (
            NAME like '%'
        )
14:13:11,291 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.hql.SimpleAssociatedEntity
14:13:11,292 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'hql'
             \-[IDENT] Node: 'SimpleAssociatedEntity'

14:13:11,292 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:11,293 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.SimpleAssociatedEntity (<no alias>) -> simpleasso0_
14:13:11,293 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (SIMPLE_2)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[simpleasso0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'SIMPLE_2' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=SIMPLE_2,tableAlias=simpleasso0_,origin=null,columns={,className=org.hibernate.test.hql.SimpleAssociatedEntity}}

14:13:11,293 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:11,293 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:11,293 DEBUG SQL:104 - 
    delete 
    from
        SIMPLE_2
14:13:11,294 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.hql.SimpleEntityWithAssociation
14:13:11,294 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'hql'
             \-[IDENT] Node: 'SimpleEntityWithAssociation'

14:13:11,294 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:11,294 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.SimpleEntityWithAssociation (<no alias>) -> simpleenti0_
14:13:11,295 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (SIMPLE_1)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[simpleenti0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'SIMPLE_1' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=SIMPLE_1,tableAlias=simpleenti0_,origin=null,columns={,className=org.hibernate.test.hql.SimpleEntityWithAssociation}}

14:13:11,295 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:11,295 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:11,295 DEBUG SQL:104 - 
    delete 
    from
        SIMPLE_1
14:13:11,306  INFO CustomRunner:139 - Test: testIncorrectSyntax
14:13:11,307 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update org.hibernate.test.hql.Human set Human.description = 'xyz' where Human.id = 1 and Human.description is null
14:13:11,309 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'Human'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'Human'
    |     |  \-[IDENT] Node: 'description'
    |     \-[QUOTED_STRING] Node: ''xyz''
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'Human'
          |  |  \-[IDENT] Node: 'id'
          |  \-[NUM_INT] Node: '1'
          \-[IS_NULL] Node: 'is null'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'Human'
                \-[IDENT] Node: 'description'

14:13:11,318 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:11,319 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Human (<no alias>) -> human0_
14:13:11,319  INFO CustomRunner:139 - Test: testIncrementCounterVersion
14:13:11,321 DEBUG SQL:104 - 
    insert 
    into
        IntegerVersioned
        (id, vers, name) 
    values
        (null, ?, ?)
14:13:11,322 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update versioned IntegerVersioned set name = name
14:13:11,322 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[VERSIONED] Node: 'versioned'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[IDENT] Node: 'IntegerVersioned'
    \-[SET] Node: 'set'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'name'
          \-[IDENT] Node: 'name'

14:13:11,322 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:11,322 DEBUG FromElement:157 - FromClause{level=1} : IntegerVersioned (<no alias>) -> integerver0_
14:13:11,323 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:11,323 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:13:11,323 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> name
14:13:11,323 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:11,323 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:13:11,323 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> name
14:13:11,634 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:11,635 DEBUG DotNode:599 - getDataType() : version -> org.hibernate.type.IntegerType@42252fee
14:13:11,635 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.version -> vers
14:13:11,635 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:11,635 DEBUG DotNode:599 - getDataType() : version -> org.hibernate.type.IntegerType@42252fee
14:13:11,635 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.version -> vers
14:13:11,635 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (IntegerVersioned)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[integerver0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'IntegerVersioned' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=IntegerVersioned,tableAlias=integerver0_,origin=null,columns={,className=IntegerVersioned}}
    \-[SET] SqlNode: 'set'
       +-[EQ] BinaryLogicOperatorNode: '='
       |  +-[DOT] DotNode: 'vers' {propertyName=version,dereferenceType=ALL,propertyPath=version,path={synthetic-alias}.version,tableAlias=integerver0_,className=IntegerVersioned,classAlias=null}
       |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  |  \-[IDENT] IdentNode: 'version' {originalText=version}
       |  \-[PLUS] BinaryArithmeticOperatorNode: '+' {dataType=org.hibernate.type.IntegerType@42252fee}
       |     +-[DOT] DotNode: 'vers' {propertyName=version,dereferenceType=ALL,propertyPath=version,path={synthetic-alias}.version,tableAlias=integerver0_,className=IntegerVersioned,classAlias=null}
       |     |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |     |  \-[IDENT] IdentNode: 'version' {originalText=version}
       |     \-[IDENT] IdentNode: '1' {originalText=1}
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=integerver0_,className=IntegerVersioned,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[DOT] DotNode: 'name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=integerver0_,className=IntegerVersioned,classAlias=null}
             +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             \-[IDENT] IdentNode: 'name' {originalText=name}

14:13:11,636 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:11,636 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:11,636 DEBUG SQL:104 - 
    update
        IntegerVersioned 
    set
        vers=vers+1,
        name=name
14:13:11,637 DEBUG SQL:104 - 
    select
        integerver0_.id as id11_0_,
        integerver0_.vers as vers11_0_,
        integerver0_.name as name11_0_ 
    from
        IntegerVersioned integerver0_ 
    where
        integerver0_.id=?
14:13:11,637 DEBUG SQL:104 - 
    delete 
    from
        IntegerVersioned 
    where
        id=? 
        and vers=?
14:13:11,638  INFO CustomRunner:139 - Test: testIncrementTimestampVersion
14:13:11,639 DEBUG SQL:104 - 
    insert 
    into
        TimestampVersioned
        (id, vers, name) 
    values
        (null, ?, ?)
14:13:13,141 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update versioned TimestampVersioned set name = name
14:13:13,141 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[VERSIONED] Node: 'versioned'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[IDENT] Node: 'TimestampVersioned'
    \-[SET] Node: 'set'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'name'
          \-[IDENT] Node: 'name'

14:13:13,141 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,142 DEBUG FromElement:157 - FromClause{level=1} : TimestampVersioned (<no alias>) -> timestampv0_
14:13:13,142 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:13,142 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:13:13,142 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> name
14:13:13,142 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:13,143 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:13:13,143 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> name
14:13:13,143 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:13,143 DEBUG DotNode:599 - getDataType() : version -> org.hibernate.type.TimestampType@54a68bb4
14:13:13,143 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.version -> vers
14:13:13,177 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (TimestampVersioned)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[timestampv0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'TimestampVersioned' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TimestampVersioned,tableAlias=timestampv0_,origin=null,columns={,className=TimestampVersioned}}
    \-[SET] SqlNode: 'set'
       +-[EQ] BinaryLogicOperatorNode: '='
       |  +-[DOT] DotNode: 'vers' {propertyName=version,dereferenceType=ALL,propertyPath=version,path={synthetic-alias}.version,tableAlias=timestampv0_,className=TimestampVersioned,classAlias=null}
       |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  |  \-[IDENT] IdentNode: 'version' {originalText=version}
       |  \-[PARAM] ParameterNode: '?' {version-seed, type=org.hibernate.type.TimestampType@54a68bb4}
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=timestampv0_,className=TimestampVersioned,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[DOT] DotNode: 'name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=timestampv0_,className=TimestampVersioned,classAlias=null}
             +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             \-[IDENT] IdentNode: 'name' {originalText=name}

14:13:13,178 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,178 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,178 DEBUG SQL:104 - 
    update
        TimestampVersioned 
    set
        vers=?,
        name=name
14:13:13,179 DEBUG SQL:104 - 
    select
        timestampv0_.id as id26_0_,
        timestampv0_.vers as vers26_0_,
        timestampv0_.name as name26_0_ 
    from
        TimestampVersioned timestampv0_ 
    where
        timestampv0_.id=?
14:13:13,180 DEBUG SQL:104 - 
    delete 
    from
        TimestampVersioned 
    where
        id=? 
        and vers=?
14:13:13,181  INFO CustomRunner:139 - Test: testInsertAcrossMappedJoinFails
14:13:13,182 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:13,183 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:13,183 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:13,184 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:13,184 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:13,184 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:13,184 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:13,185 DEBUG SQL:104 - 
    insert 
    into
        Dog
        (mammal) 
    values
        (?)
14:13:13,185 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:13,185 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:13,186 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:13,186 DEBUG SQL:104 - 
    insert 
    into
        Cat
        (mammal) 
    values
        (?)
14:13:13,186 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:13:13,187 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'P')
14:13:13,187 DEBUG SQL:104 - 
    insert 
    into
        Joiner
        (id, name) 
    values
        (null, ?)
14:13:13,188 DEBUG SQL:104 - 
    insert 
    into
        JOINED
        (joinedName, ID) 
    values
        (?, ?)
14:13:13,190 DEBUG SQL:104 - 
    insert 
    into
        Car
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:13,190 DEBUG SQL:104 - 
    insert 
    into
        Truck
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:13,190 DEBUG SQL:104 - 
    insert 
    into
        SUV
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:13,190 DEBUG SQL:104 - 
    insert 
    into
        Pickup
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:13,191 DEBUG SQL:104 - 
    insert 
    into
        BooleanLiteralEntity
        (id, Y_N_BOOL, T_F_BOOL, NUM_BOOL) 
    values
        (null, ?, ?, ?)
14:13:13,191 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:13,192 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:13,192 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:13,236 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:13,237 DEBUG QueryTranslatorImpl:265 - parse() - HQL: insert into Joiner (name, joinedName) select vin, owner from org.hibernate.test.hql.Car
14:13:13,237 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[INSERT] Node: 'insert'
    +-[INTO] Node: 'into'
    |  +-[IDENT] Node: 'Joiner'
    |  \-[RANGE] Node: 'column-spec'
    |     +-[IDENT] Node: 'name'
    |     \-[IDENT] Node: 'joinedName'
    \-[QUERY] Node: 'query'
       \-[SELECT_FROM] Node: 'SELECT_FROM'
          +-[FROM] Node: 'from'
          |  \-[RANGE] Node: 'RANGE'
          |     \-[DOT] Node: '.'
          |        +-[DOT] Node: '.'
          |        |  +-[DOT] Node: '.'
          |        |  |  +-[DOT] Node: '.'
          |        |  |  |  +-[IDENT] Node: 'org'
          |        |  |  |  \-[IDENT] Node: 'hibernate'
          |        |  |  \-[IDENT] Node: 'test'
          |        |  \-[IDENT] Node: 'hql'
          |        \-[IDENT] Node: 'Car'
          \-[SELECT] Node: 'select'
             +-[IDENT] Node: 'vin'
             \-[IDENT] Node: 'owner'

14:13:13,237 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,263 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.hql.Joiner
14:13:13,264 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'hql'
             \-[IDENT] Node: 'Joiner'

14:13:13,264 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,264 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Joiner (<no alias>) -> joiner0_
14:13:13,264 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (JOINED,Joiner)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[joiner0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Joiner' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Joiner,tableAlias=joiner0_,origin=null,columns={,className=org.hibernate.test.hql.Joiner}}

14:13:13,264 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,264 DEBUG DeleteStatement:73 - getWhereClause() : Creating a new WHERE clause...
14:13:13,265 DEBUG SQL:104 - 
    insert 
    into
        HT_Joiner
        select
            joiner0_.id as id 
        from
            Joiner joiner0_ 
        inner join
            JOINED joiner0_1_ 
                on joiner0_.id=joiner0_1_.ID
14:13:13,265 DEBUG SQL:104 - 
    delete 
    from
        JOINED 
    where
        (
            ID
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:13,265 DEBUG SQL:104 - 
    delete 
    from
        Joiner 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:13,265 DEBUG SQL:104 - 
    delete 
    from
        HT_Joiner
14:13:13,266 DEBUG SQL:104 - 
    insert 
    into
        HT_Vehicle
        select
            vehicle0_.id as id 
        from
            ( select
                id,
                vin,
                owner,
                3 as clazz_ 
            from
                SUV 
            union
            all select
                id,
                vin,
                owner,
                4 as clazz_ 
            from
                Pickup 
            union
            all select
                id,
                vin,
                owner,
                1 as clazz_ 
            from
                Car 
            union
            all select
                id,
                vin,
                owner,
                2 as clazz_ 
            from
                Truck 
        ) vehicle0_
14:13:13,267 DEBUG SQL:104 - 
    delete 
    from
        Car 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:13,267 DEBUG SQL:104 - 
    delete 
    from
        Truck 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:13,267 DEBUG SQL:104 - 
    delete 
    from
        SUV 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:13,267 DEBUG SQL:104 - 
    delete 
    from
        Pickup 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:13,267 DEBUG SQL:104 - 
    delete 
    from
        HT_Vehicle
14:13:13,268 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_ 
        where
            animal0_.mother_id is not null 
            or animal0_.father_id is not null
14:13:13,268 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,268 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,268 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,269 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,270 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,270 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,271 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,272 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,273 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:13,273 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_
14:13:13,273 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,273 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,274 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,274 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,274 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,274 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,274 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,275 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,275 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:13,275 DEBUG SQL:104 - 
    delete 
    from
        Zoo
14:13:13,275 DEBUG SQL:104 - 
    insert 
    into
        HT_Joiner
        select
            joiner0_.id as id 
        from
            Joiner joiner0_ 
        inner join
            JOINED joiner0_1_ 
                on joiner0_.id=joiner0_1_.ID
14:13:13,275 DEBUG SQL:104 - 
    delete 
    from
        JOINED 
    where
        (
            ID
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:13,276 DEBUG SQL:104 - 
    delete 
    from
        Joiner 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:13,276 DEBUG SQL:104 - 
    delete 
    from
        HT_Joiner
14:13:13,276 DEBUG SQL:104 - 
    insert 
    into
        HT_Vehicle
        select
            vehicle0_.id as id 
        from
            ( select
                id,
                vin,
                owner,
                3 as clazz_ 
            from
                SUV 
            union
            all select
                id,
                vin,
                owner,
                4 as clazz_ 
            from
                Pickup 
            union
            all select
                id,
                vin,
                owner,
                1 as clazz_ 
            from
                Car 
            union
            all select
                id,
                vin,
                owner,
                2 as clazz_ 
            from
                Truck 
        ) vehicle0_
14:13:13,277 DEBUG SQL:104 - 
    delete 
    from
        Car 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:13,277 DEBUG SQL:104 - 
    delete 
    from
        Truck 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:13,277 DEBUG SQL:104 - 
    delete 
    from
        SUV 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:13,278 DEBUG SQL:104 - 
    delete 
    from
        Pickup 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:13,278 DEBUG SQL:104 - 
    delete 
    from
        HT_Vehicle
14:13:13,278 DEBUG SQL:104 - 
    delete 
    from
        BooleanLiteralEntity
14:13:13,279  INFO CustomRunner:139 - Test: testInsertIntoSuperclassPropertiesFails
14:13:13,280 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:13,281 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:13,281 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:13,281 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:13,281 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:13,282 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:13,282 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:13,282 DEBUG SQL:104 - 
    insert 
    into
        Dog
        (mammal) 
    values
        (?)
14:13:13,282 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:13,282 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:13,283 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:13,283 DEBUG SQL:104 - 
    insert 
    into
        Cat
        (mammal) 
    values
        (?)
14:13:13,283 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:13:13,283 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'P')
14:13:13,284 DEBUG SQL:104 - 
    insert 
    into
        Joiner
        (id, name) 
    values
        (null, ?)
14:13:13,284 DEBUG SQL:104 - 
    insert 
    into
        JOINED
        (joinedName, ID) 
    values
        (?, ?)
14:13:13,284 DEBUG SQL:104 - 
    insert 
    into
        Car
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:13,284 DEBUG SQL:104 - 
    insert 
    into
        Truck
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:13,285 DEBUG SQL:104 - 
    insert 
    into
        SUV
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:13,285 DEBUG SQL:104 - 
    insert 
    into
        Pickup
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:13,285 DEBUG SQL:104 - 
    insert 
    into
        BooleanLiteralEntity
        (id, Y_N_BOOL, T_F_BOOL, NUM_BOOL) 
    values
        (null, ?, ?, ?)
14:13:13,286 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:13,286 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:13,286 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:13,287 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:13,287 DEBUG QueryTranslatorImpl:265 - parse() - HQL: insert into Human (id, bodyWeight) select id, bodyWeight from org.hibernate.test.hql.Lizard
14:13:13,288 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[INSERT] Node: 'insert'
    +-[INTO] Node: 'into'
    |  +-[IDENT] Node: 'Human'
    |  \-[RANGE] Node: 'column-spec'
    |     +-[IDENT] Node: 'id'
    |     \-[IDENT] Node: 'bodyWeight'
    \-[QUERY] Node: 'query'
       \-[SELECT_FROM] Node: 'SELECT_FROM'
          +-[FROM] Node: 'from'
          |  \-[RANGE] Node: 'RANGE'
          |     \-[DOT] Node: '.'
          |        +-[DOT] Node: '.'
          |        |  +-[DOT] Node: '.'
          |        |  |  +-[DOT] Node: '.'
          |        |  |  |  +-[IDENT] Node: 'org'
          |        |  |  |  \-[IDENT] Node: 'hibernate'
          |        |  |  \-[IDENT] Node: 'test'
          |        |  \-[IDENT] Node: 'hql'
          |        \-[IDENT] Node: 'Lizard'
          \-[SELECT] Node: 'select'
             +-[IDENT] Node: 'id'
             \-[IDENT] Node: 'bodyWeight'

14:13:13,288 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,289 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.hql.Animal where mother is not null
14:13:13,289 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'Animal'
    \-[WHERE] Node: 'where'
       \-[IS_NOT_NULL] Node: 'is not null'
          \-[IDENT] Node: 'mother'

14:13:13,289 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,289 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Animal (<no alias>) -> animal0_
14:13:13,290 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:13,290 DEBUG DotNode:599 - getDataType() : mother -> org.hibernate.type.ManyToOneType(org.hibernate.test.hql.Animal)
14:13:13,290 DEBUG DotNode:562 - dereferenceShortcut() : property mother in org.hibernate.test.hql.Animal does not require a join.
14:13:13,290 DEBUG DotNode:588 - Terminal propertyPath = [mother]
14:13:13,290 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.mother -> animal0_.mother_id
14:13:13,290 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Animal)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[animal0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Animal' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Animal,tableAlias=animal0_,origin=null,columns={,className=org.hibernate.test.hql.Animal}}
    \-[WHERE] SqlNode: 'where'
       \-[IS_NOT_NULL] IsNotNullLogicOperatorNode: 'is not null'
          \-[DOT] DotNode: 'animal0_.mother_id' {propertyName=mother,dereferenceType=0,propertyPath=mother,path={synthetic-alias}.mother,tableAlias=animal0_,className=org.hibernate.test.hql.Animal,classAlias=null}
             +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             \-[IDENT] IdentNode: 'mother' {originalText=mother}

14:13:13,290 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,291 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_ 
        where
            animal0_.mother_id is not null
14:13:13,292 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,292 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,292 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,292 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,293 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,293 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,293 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,293 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,293 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:13,294 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.hql.Animal where father is not null
14:13:13,294 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'Animal'
    \-[WHERE] Node: 'where'
       \-[IS_NOT_NULL] Node: 'is not null'
          \-[IDENT] Node: 'father'

14:13:13,294 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,295 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Animal (<no alias>) -> animal0_
14:13:13,295 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:13,295 DEBUG DotNode:599 - getDataType() : father -> org.hibernate.type.ManyToOneType(org.hibernate.test.hql.Animal)
14:13:13,295 DEBUG DotNode:562 - dereferenceShortcut() : property father in org.hibernate.test.hql.Animal does not require a join.
14:13:13,295 DEBUG DotNode:588 - Terminal propertyPath = [father]
14:13:13,295 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.father -> animal0_.father_id
14:13:13,295 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Animal)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[animal0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Animal' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Animal,tableAlias=animal0_,origin=null,columns={,className=org.hibernate.test.hql.Animal}}
    \-[WHERE] SqlNode: 'where'
       \-[IS_NOT_NULL] IsNotNullLogicOperatorNode: 'is not null'
          \-[DOT] DotNode: 'animal0_.father_id' {propertyName=father,dereferenceType=0,propertyPath=father,path={synthetic-alias}.father,tableAlias=animal0_,className=org.hibernate.test.hql.Animal,classAlias=null}
             +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             \-[IDENT] IdentNode: 'father' {originalText=father}

14:13:13,295 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,296 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_ 
        where
            animal0_.father_id is not null
14:13:13,297 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,297 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,297 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,310 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,310 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,310 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,311 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,311 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,311 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:13,330 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.hql.Animal
14:13:13,331 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'hql'
             \-[IDENT] Node: 'Animal'

14:13:13,331 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,331 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Animal (<no alias>) -> animal0_
14:13:13,331 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Animal)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[animal0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Animal' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Animal,tableAlias=animal0_,origin=null,columns={,className=org.hibernate.test.hql.Animal}}

14:13:13,332 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,332 DEBUG DeleteStatement:73 - getWhereClause() : Creating a new WHERE clause...
14:13:13,332 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_
14:13:13,339 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,339 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,339 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,348 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,349 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,358 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,358 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,367 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,368 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:13,368 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_ 
        where
            animal0_.mother_id is not null 
            or animal0_.father_id is not null
14:13:13,368 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,376 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,376 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,386 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,386 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,396 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,396 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,396 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,397 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:13,397 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_
14:13:13,397 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,407 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,407 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,416 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,417 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,417 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,417 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,437 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,438 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:13,438 DEBUG SQL:104 - 
    delete 
    from
        Zoo
14:13:13,438 DEBUG SQL:104 - 
    insert 
    into
        HT_Joiner
        select
            joiner0_.id as id 
        from
            Joiner joiner0_ 
        inner join
            JOINED joiner0_1_ 
                on joiner0_.id=joiner0_1_.ID
14:13:13,447 DEBUG SQL:104 - 
    delete 
    from
        JOINED 
    where
        (
            ID
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:13,447 DEBUG SQL:104 - 
    delete 
    from
        Joiner 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:13,456 DEBUG SQL:104 - 
    delete 
    from
        HT_Joiner
14:13:13,456 DEBUG SQL:104 - 
    insert 
    into
        HT_Vehicle
        select
            vehicle0_.id as id 
        from
            ( select
                id,
                vin,
                owner,
                3 as clazz_ 
            from
                SUV 
            union
            all select
                id,
                vin,
                owner,
                4 as clazz_ 
            from
                Pickup 
            union
            all select
                id,
                vin,
                owner,
                1 as clazz_ 
            from
                Car 
            union
            all select
                id,
                vin,
                owner,
                2 as clazz_ 
            from
                Truck 
        ) vehicle0_
14:13:13,466 DEBUG SQL:104 - 
    delete 
    from
        Car 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:13,467 DEBUG SQL:104 - 
    delete 
    from
        Truck 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:13,475 DEBUG SQL:104 - 
    delete 
    from
        SUV 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:13,476 DEBUG SQL:104 - 
    delete 
    from
        Pickup 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:13,484 DEBUG SQL:104 - 
    delete 
    from
        HT_Vehicle
14:13:13,485 DEBUG SQL:104 - 
    delete 
    from
        BooleanLiteralEntity
14:13:13,485  INFO CustomRunner:139 - Test: testInsertWithAssignedCompositeId
14:13:13,487 DEBUG QueryTranslatorImpl:265 - parse() - HQL: insert into CompositeIdEntity (key2, someProperty, key1) select a.key2, 'COPY', a.key1 from org.hibernate.test.hql.CompositeIdEntity a
14:13:13,488 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[INSERT] Node: 'insert'
    +-[INTO] Node: 'into'
    |  +-[IDENT] Node: 'CompositeIdEntity'
    |  \-[RANGE] Node: 'column-spec'
    |     +-[IDENT] Node: 'key2'
    |     +-[IDENT] Node: 'someProperty'
    |     \-[IDENT] Node: 'key1'
    \-[QUERY] Node: 'query'
       \-[SELECT_FROM] Node: 'SELECT_FROM'
          +-[FROM] Node: 'from'
          |  \-[RANGE] Node: 'RANGE'
          |     +-[DOT] Node: '.'
          |     |  +-[DOT] Node: '.'
          |     |  |  +-[DOT] Node: '.'
          |     |  |  |  +-[DOT] Node: '.'
          |     |  |  |  |  +-[IDENT] Node: 'org'
          |     |  |  |  |  \-[IDENT] Node: 'hibernate'
          |     |  |  |  \-[IDENT] Node: 'test'
          |     |  |  \-[IDENT] Node: 'hql'
          |     |  \-[IDENT] Node: 'CompositeIdEntity'
          |     \-[ALIAS] Node: 'a'
          \-[SELECT] Node: 'select'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'a'
             |  \-[IDENT] Node: 'key2'
             +-[QUOTED_STRING] Node: ''COPY''
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'a'
                \-[IDENT] Node: 'key1'

14:13:13,494 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,494 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.CompositeIdEntity (a) -> compositei0_
14:13:13,494 DEBUG FromReferenceNode:74 - Resolved : a -> (key1, key2)
14:13:13,494 DEBUG DotNode:599 - getDataType() : key2 -> org.hibernate.type.StringType@2dc8de40
14:13:13,494 DEBUG FromReferenceNode:74 - Resolved : a.key2 -> compositei0_.key2
14:13:13,495 DEBUG FromReferenceNode:74 - Resolved : a -> (key1, key2)
14:13:13,495 DEBUG DotNode:599 - getDataType() : key1 -> org.hibernate.type.LongType@4bf3f9d
14:13:13,495 DEBUG FromReferenceNode:74 - Resolved : a.key1 -> compositei0_.key1
14:13:13,503 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( compositei0_.key2 (key1, key2) key2 ) 'COPY' ( compositei0_.key1 (key1, key2) key1 ) ) ( FromClause{level=1} CompositeIdEntity compositei0_ ) )
14:13:13,503 DEBUG JoinProcessor:175 - Using FROM fragment [CompositeIdEntity compositei0_]
14:13:13,503 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[INSERT] InsertStatement: 'insert'  querySpaces (CompositeIdEntity)
    +-[INTO] IntoClause: 'into CompositeIdEntity ( key2, someProperty, key1 )' IntoClause{entityName=org.hibernate.test.hql.CompositeIdEntity,tableName=CompositeIdEntity,columns={key2, someProperty, key1}}
    |  \-[RANGE] Node: 'column-spec'
    |     +-[IDENT] Node: 'key2'
    |     +-[IDENT] Node: 'someProperty'
    |     \-[IDENT] Node: 'key1'
    \-[SELECT] QueryNode: 'SELECT'  querySpaces (CompositeIdEntity)
       +-[SELECT_CLAUSE] SelectClause: '{select clause}'
       |  +-[DOT] DotNode: 'compositei0_.key2' {propertyName=key2,dereferenceType=ALL,propertyPath=key2,path=a.key2,tableAlias=compositei0_,className=org.hibernate.test.hql.CompositeIdEntity,classAlias=a}
       |  |  +-[ALIAS_REF] IdentNode: '(key1, key2)' {alias=a, className=org.hibernate.test.hql.CompositeIdEntity, tableAlias=compositei0_}
       |  |  \-[IDENT] IdentNode: 'key2' {originalText=key2}
       |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
       |  +-[QUOTED_STRING] LiteralNode: ''COPY''
       |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
       |  +-[DOT] DotNode: 'compositei0_.key1' {propertyName=key1,dereferenceType=ALL,propertyPath=key1,path=a.key1,tableAlias=compositei0_,className=org.hibernate.test.hql.CompositeIdEntity,classAlias=a}
       |  |  +-[ALIAS_REF] IdentNode: '(key1, key2)' {alias=a, className=org.hibernate.test.hql.CompositeIdEntity, tableAlias=compositei0_}
       |  |  \-[IDENT] IdentNode: 'key1' {originalText=key1}
       |  \-[SELECT_COLUMNS] SqlNode: ' as col_2_0_'
       \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[compositei0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
          \-[FROM_FRAGMENT] FromElement: 'CompositeIdEntity compositei0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=CompositeIdEntity,tableAlias=compositei0_,origin=null,columns={,className=org.hibernate.test.hql.CompositeIdEntity}}

14:13:13,504 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,504 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,504 DEBUG SQL:104 - 
    insert 
    into
        CompositeIdEntity
        ( key2, someProperty, key1 ) select
            compositei0_.key2 as col_0_0_,
            'COPY' as col_1_0_,
            compositei0_.key1 as col_2_0_ 
        from
            CompositeIdEntity compositei0_
14:13:13,512 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete from org.hibernate.test.hql.CompositeIdEntity
14:13:13,513 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'hql'
             \-[IDENT] Node: 'CompositeIdEntity'

14:13:13,514 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,514 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.CompositeIdEntity (<no alias>) -> compositei0_
14:13:13,515 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (CompositeIdEntity)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[compositei0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'CompositeIdEntity' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=CompositeIdEntity,tableAlias=compositei0_,origin=null,columns={,className=org.hibernate.test.hql.CompositeIdEntity}}

14:13:13,515 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,515 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,516 DEBUG SQL:104 - 
    delete 
    from
        CompositeIdEntity
14:13:13,517  INFO CustomRunner:139 - Test: testInsertWithGeneratedId
14:13:13,552 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:13:13,553 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:13,553 DEBUG QueryTranslatorImpl:265 - parse() - HQL: insert into PettingZoo (name) select name from org.hibernate.test.hql.Zoo
14:13:13,555 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[INSERT] Node: 'insert'
    +-[INTO] Node: 'into'
    |  +-[IDENT] Node: 'PettingZoo'
    |  \-[RANGE] Node: 'column-spec'
    |     \-[IDENT] Node: 'name'
    \-[QUERY] Node: 'query'
       \-[SELECT_FROM] Node: 'SELECT_FROM'
          +-[FROM] Node: 'from'
          |  \-[RANGE] Node: 'RANGE'
          |     \-[DOT] Node: '.'
          |        +-[DOT] Node: '.'
          |        |  +-[DOT] Node: '.'
          |        |  |  +-[DOT] Node: '.'
          |        |  |  |  +-[IDENT] Node: 'org'
          |        |  |  |  \-[IDENT] Node: 'hibernate'
          |        |  |  \-[IDENT] Node: 'test'
          |        |  \-[IDENT] Node: 'hql'
          |        \-[IDENT] Node: 'Zoo'
          \-[SELECT] Node: 'select'
             \-[IDENT] Node: 'name'

14:13:13,557 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,557 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (<no alias>) -> zoo0_
14:13:13,557 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:13,558 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:13:13,558 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> zoo0_.name
14:13:13,558 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo0_.name {synthetic-alias} name ) ) ( FromClause{level=1} Zoo zoo0_ ) )
14:13:13,558 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:13:13,558 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[INSERT] InsertStatement: 'insert'  querySpaces (Zoo)
    +-[INTO] IntoClause: 'into Zoo ( name, zooType )' IntoClause{entityName=org.hibernate.test.hql.PettingZoo,tableName=Zoo,columns={name, zooType}}
    |  \-[RANGE] Node: 'column-spec'
    |     \-[IDENT] Node: 'name'
    \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
       +-[SELECT_CLAUSE] SelectClause: '{select clause}'
       |  +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=null}
       |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
       |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
       |  \-[SQL_TOKEN] SqlFragment: ''P''
       \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
          \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}

14:13:13,559 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,559 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,559 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        ( name, zooType ) select
            zoo0_.name as col_0_0_,
            'P' 
        from
            Zoo zoo0_
14:13:13,560 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.hql.PettingZoo
14:13:13,561 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'hql'
                \-[IDENT] Node: 'PettingZoo'

14:13:13,561 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,561 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.PettingZoo (<no alias>) -> pettingzoo0_
14:13:13,562 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Zoo pettingzoo0_ ) )
14:13:13,562 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:13:13,562 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo pettingzoo0_]
14:13:13,562 DEBUG SyntheticAndFactory:92 - Using unprocessed WHERE-fragment [pettingzoo0_.zooType='P']
14:13:13,562 DEBUG SyntheticAndFactory:124 - Using processed WHERE-fragment [pettingzoo0_.zooType='P']
14:13:13,562 DEBUG QueryNode:73 - getWhereClause() : Creating a new WHERE clause...
14:13:13,562 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'pettingzoo0_.id as id30_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Zoo,tableAlias=pettingzoo0_,origin=null,columns={,className=org.hibernate.test.hql.PettingZoo}}}
    |  \-[SQL_TOKEN] SqlFragment: 'pettingzoo0_.name as name30_, pettingzoo0_.classification as classifi4_30_, pettingzoo0_.street as street30_, pettingzoo0_.city as city30_, pettingzoo0_.postalCode as postalCode30_, pettingzoo0_.country as country30_, pettingzoo0_.state_prov_id as state9_30_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[pettingzoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo pettingzoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Zoo,tableAlias=pettingzoo0_,origin=null,columns={,className=org.hibernate.test.hql.PettingZoo}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[FILTERS] SqlNode: '{filter conditions}'
          \-[SQL_TOKEN] SqlFragment: 'pettingzoo0_.zooType='P''

14:13:13,562 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,562 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.hql.PettingZoo
14:13:13,563 DEBUG QueryTranslatorImpl:236 - SQL: select pettingzoo0_.id as id30_, pettingzoo0_.name as name30_, pettingzoo0_.classification as classifi4_30_, pettingzoo0_.street as street30_, pettingzoo0_.city as city30_, pettingzoo0_.postalCode as postalCode30_, pettingzoo0_.country as country30_, pettingzoo0_.state_prov_id as state9_30_ from Zoo pettingzoo0_ where pettingzoo0_.zooType='P'
14:13:13,563 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,563 DEBUG SQL:104 - 
    select
        pettingzoo0_.id as id30_,
        pettingzoo0_.name as name30_,
        pettingzoo0_.classification as classifi4_30_,
        pettingzoo0_.street as street30_,
        pettingzoo0_.city as city30_,
        pettingzoo0_.postalCode as postalCode30_,
        pettingzoo0_.country as country30_,
        pettingzoo0_.state_prov_id as state9_30_ 
    from
        Zoo pettingzoo0_ 
    where
        pettingzoo0_.zooType='P'
14:13:13,564 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:13,564 DEBUG SQL:104 - 
    delete 
    from
        Zoo
14:13:13,565  INFO CustomRunner:139 - Test: testInsertWithGeneratedTimestampVersion
14:13:13,566 DEBUG SQL:104 - 
    insert 
    into
        TimestampVersioned
        (id, vers, name) 
    values
        (null, ?, ?)
14:13:13,566 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select id, name, version from org.hibernate.test.hql.TimestampVersioned
14:13:13,567 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     \-[DOT] Node: '.'
       |        +-[DOT] Node: '.'
       |        |  +-[DOT] Node: '.'
       |        |  |  +-[DOT] Node: '.'
       |        |  |  |  +-[IDENT] Node: 'org'
       |        |  |  |  \-[IDENT] Node: 'hibernate'
       |        |  |  \-[IDENT] Node: 'test'
       |        |  \-[IDENT] Node: 'hql'
       |        \-[IDENT] Node: 'TimestampVersioned'
       \-[SELECT] Node: 'select'
          +-[IDENT] Node: 'id'
          +-[IDENT] Node: 'name'
          \-[IDENT] Node: 'version'

14:13:13,586 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,586 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.TimestampVersioned (<no alias>) -> timestampv0_
14:13:13,586 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:13,586 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.LongType@4bf3f9d
14:13:13,587 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.id -> timestampv0_.id
14:13:13,587 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:13,587 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:13:13,587 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> timestampv0_.name
14:13:13,587 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:13,588 DEBUG DotNode:599 - getDataType() : version -> org.hibernate.type.TimestampType@54a68bb4
14:13:13,588 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.version -> timestampv0_.vers
14:13:13,588 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( timestampv0_.id {synthetic-alias} id ) ( timestampv0_.name {synthetic-alias} name ) ( timestampv0_.vers {synthetic-alias} version ) ) ( FromClause{level=1} TimestampVersioned timestampv0_ ) )
14:13:13,588 DEBUG JoinProcessor:175 - Using FROM fragment [TimestampVersioned timestampv0_]
14:13:13,588 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TimestampVersioned)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'timestampv0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path={synthetic-alias}.id,tableAlias=timestampv0_,className=org.hibernate.test.hql.TimestampVersioned,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'timestampv0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=timestampv0_,className=org.hibernate.test.hql.TimestampVersioned,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[DOT] DotNode: 'timestampv0_.vers' {propertyName=version,dereferenceType=ALL,propertyPath=version,path={synthetic-alias}.version,tableAlias=timestampv0_,className=org.hibernate.test.hql.TimestampVersioned,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'version' {originalText=version}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_2_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[timestampv0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'TimestampVersioned timestampv0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TimestampVersioned,tableAlias=timestampv0_,origin=null,columns={,className=org.hibernate.test.hql.TimestampVersioned}}

14:13:13,597 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,597 DEBUG QueryTranslatorImpl:235 - HQL: select id, name, version from org.hibernate.test.hql.TimestampVersioned
14:13:13,597 DEBUG QueryTranslatorImpl:236 - SQL: select timestampv0_.id as col_0_0_, timestampv0_.name as col_1_0_, timestampv0_.vers as col_2_0_ from TimestampVersioned timestampv0_
14:13:13,597 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,598 DEBUG SQL:104 - 
    select
        timestampv0_.id as col_0_0_,
        timestampv0_.name as col_1_0_,
        timestampv0_.vers as col_2_0_ 
    from
        TimestampVersioned timestampv0_
14:13:13,598 DEBUG QueryTranslatorImpl:265 - parse() - HQL: insert into TimestampVersioned ( name ) select name from org.hibernate.test.hql.TimestampVersioned
14:13:13,599 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[INSERT] Node: 'insert'
    +-[INTO] Node: 'into'
    |  +-[IDENT] Node: 'TimestampVersioned'
    |  \-[RANGE] Node: 'column-spec'
    |     \-[IDENT] Node: 'name'
    \-[QUERY] Node: 'query'
       \-[SELECT_FROM] Node: 'SELECT_FROM'
          +-[FROM] Node: 'from'
          |  \-[RANGE] Node: 'RANGE'
          |     \-[DOT] Node: '.'
          |        +-[DOT] Node: '.'
          |        |  +-[DOT] Node: '.'
          |        |  |  +-[DOT] Node: '.'
          |        |  |  |  +-[IDENT] Node: 'org'
          |        |  |  |  \-[IDENT] Node: 'hibernate'
          |        |  |  \-[IDENT] Node: 'test'
          |        |  \-[IDENT] Node: 'hql'
          |        \-[IDENT] Node: 'TimestampVersioned'
          \-[SELECT] Node: 'select'
             \-[IDENT] Node: 'name'

14:13:13,608 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,609 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.TimestampVersioned (<no alias>) -> timestampv0_
14:13:13,609 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:13,609 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:13:13,609 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> timestampv0_.name
14:13:13,609 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( timestampv0_.name {synthetic-alias} name ) ) ( FromClause{level=1} TimestampVersioned timestampv0_ ) )
14:13:13,609 DEBUG JoinProcessor:175 - Using FROM fragment [TimestampVersioned timestampv0_]
14:13:13,610 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[INSERT] InsertStatement: 'insert'  querySpaces (TimestampVersioned)
    +-[INTO] IntoClause: 'into TimestampVersioned ( vers, name )' IntoClause{entityName=org.hibernate.test.hql.TimestampVersioned,tableName=TimestampVersioned,columns={vers, name}}
    |  \-[RANGE] Node: 'column-spec'
    |     \-[IDENT] Node: 'name'
    \-[SELECT] QueryNode: 'SELECT'  querySpaces (TimestampVersioned)
       +-[SELECT_CLAUSE] SelectClause: '{select clause}'
       |  +-[PARAM] ParameterNode: '?' {version-seed, type=org.hibernate.type.TimestampType@54a68bb4}
       |  +-[DOT] DotNode: 'timestampv0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=timestampv0_,className=org.hibernate.test.hql.TimestampVersioned,classAlias=null}
       |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
       |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
       \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[timestampv0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
          \-[FROM_FRAGMENT] FromElement: 'TimestampVersioned timestampv0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TimestampVersioned,tableAlias=timestampv0_,origin=null,columns={,className=org.hibernate.test.hql.TimestampVersioned}}

14:13:13,619 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,619 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,619 DEBUG SQL:104 - 
    insert 
    into
        TimestampVersioned
        ( vers, name ) select
            ?,
            timestampv0_.name as col_0_0_ 
        from
            TimestampVersioned timestampv0_
14:13:13,620 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.hql.TimestampVersioned where id <> :initialId
14:13:13,620 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'org'
    |           |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  \-[IDENT] Node: 'test'
    |           |  \-[IDENT] Node: 'hql'
    |           \-[IDENT] Node: 'TimestampVersioned'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'initialId'

14:13:13,629 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,630 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.TimestampVersioned (<no alias>) -> timestampv0_
14:13:13,630 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:13,630 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.LongType@4bf3f9d
14:13:13,630 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.id -> timestampv0_.id
14:13:13,630 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} TimestampVersioned timestampv0_ ) ( where ( <> ( timestampv0_.id {synthetic-alias} id ) ? ) ) )
14:13:13,630 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:13:13,631 DEBUG JoinProcessor:175 - Using FROM fragment [TimestampVersioned timestampv0_]
14:13:13,631 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (TimestampVersioned)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'timestampv0_.id as id26_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TimestampVersioned,tableAlias=timestampv0_,origin=null,columns={,className=org.hibernate.test.hql.TimestampVersioned}}}
    |  \-[SQL_TOKEN] SqlFragment: 'timestampv0_.vers as vers26_, timestampv0_.name as name26_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[timestampv0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'TimestampVersioned timestampv0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TimestampVersioned,tableAlias=timestampv0_,origin=null,columns={,className=org.hibernate.test.hql.TimestampVersioned}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'timestampv0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path={synthetic-alias}.id,tableAlias=timestampv0_,className=org.hibernate.test.hql.TimestampVersioned,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=initialId, expectedType=org.hibernate.type.LongType@4bf3f9d}

14:13:13,645 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,645 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.hql.TimestampVersioned where id <> :initialId
14:13:13,645 DEBUG QueryTranslatorImpl:236 - SQL: select timestampv0_.id as id26_, timestampv0_.vers as vers26_, timestampv0_.name as name26_ from TimestampVersioned timestampv0_ where timestampv0_.id<>?
14:13:13,645 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,645 DEBUG SQL:104 - 
    select
        timestampv0_.id as id26_,
        timestampv0_.vers as vers26_,
        timestampv0_.name as name26_ 
    from
        TimestampVersioned timestampv0_ 
    where
        timestampv0_.id<>?
14:13:13,646 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.hql.TimestampVersioned
14:13:13,647 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'hql'
             \-[IDENT] Node: 'TimestampVersioned'

14:13:13,647 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,647 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.TimestampVersioned (<no alias>) -> timestampv0_
14:13:13,648 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (TimestampVersioned)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[timestampv0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'TimestampVersioned' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=TimestampVersioned,tableAlias=timestampv0_,origin=null,columns={,className=org.hibernate.test.hql.TimestampVersioned}}

14:13:13,648 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,648 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,648 DEBUG SQL:104 - 
    delete 
    from
        TimestampVersioned
14:13:13,648  INFO CustomRunner:139 - Test: testInsertWithGeneratedVersionAndId
14:13:13,649 DEBUG SQL:104 - 
    insert 
    into
        IntegerVersioned
        (id, vers, name) 
    values
        (null, ?, ?)
14:13:13,650 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select id, name, version from org.hibernate.test.hql.IntegerVersioned
14:13:13,651 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     \-[DOT] Node: '.'
       |        +-[DOT] Node: '.'
       |        |  +-[DOT] Node: '.'
       |        |  |  +-[DOT] Node: '.'
       |        |  |  |  +-[IDENT] Node: 'org'
       |        |  |  |  \-[IDENT] Node: 'hibernate'
       |        |  |  \-[IDENT] Node: 'test'
       |        |  \-[IDENT] Node: 'hql'
       |        \-[IDENT] Node: 'IntegerVersioned'
       \-[SELECT] Node: 'select'
          +-[IDENT] Node: 'id'
          +-[IDENT] Node: 'name'
          \-[IDENT] Node: 'version'

14:13:13,656 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,656 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.IntegerVersioned (<no alias>) -> integerver0_
14:13:13,656 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:13,656 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.LongType@4bf3f9d
14:13:13,656 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.id -> integerver0_.id
14:13:13,656 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:13,656 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:13:13,657 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> integerver0_.name
14:13:13,657 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:13,657 DEBUG DotNode:599 - getDataType() : version -> org.hibernate.type.IntegerType@42252fee
14:13:13,657 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.version -> integerver0_.vers
14:13:13,657 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( integerver0_.id {synthetic-alias} id ) ( integerver0_.name {synthetic-alias} name ) ( integerver0_.vers {synthetic-alias} version ) ) ( FromClause{level=1} IntegerVersioned integerver0_ ) )
14:13:13,657 DEBUG JoinProcessor:175 - Using FROM fragment [IntegerVersioned integerver0_]
14:13:13,657 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (IntegerVersioned)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'integerver0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path={synthetic-alias}.id,tableAlias=integerver0_,className=org.hibernate.test.hql.IntegerVersioned,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'integerver0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=integerver0_,className=org.hibernate.test.hql.IntegerVersioned,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[DOT] DotNode: 'integerver0_.vers' {propertyName=version,dereferenceType=ALL,propertyPath=version,path={synthetic-alias}.version,tableAlias=integerver0_,className=org.hibernate.test.hql.IntegerVersioned,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'version' {originalText=version}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_2_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[integerver0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'IntegerVersioned integerver0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=IntegerVersioned,tableAlias=integerver0_,origin=null,columns={,className=org.hibernate.test.hql.IntegerVersioned}}

14:13:13,666 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,666 DEBUG QueryTranslatorImpl:235 - HQL: select id, name, version from org.hibernate.test.hql.IntegerVersioned
14:13:13,666 DEBUG QueryTranslatorImpl:236 - SQL: select integerver0_.id as col_0_0_, integerver0_.name as col_1_0_, integerver0_.vers as col_2_0_ from IntegerVersioned integerver0_
14:13:13,666 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,666 DEBUG SQL:104 - 
    select
        integerver0_.id as col_0_0_,
        integerver0_.name as col_1_0_,
        integerver0_.vers as col_2_0_ 
    from
        IntegerVersioned integerver0_
14:13:13,667 DEBUG QueryTranslatorImpl:265 - parse() - HQL: insert into IntegerVersioned ( name ) select name from org.hibernate.test.hql.IntegerVersioned
14:13:13,668 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[INSERT] Node: 'insert'
    +-[INTO] Node: 'into'
    |  +-[IDENT] Node: 'IntegerVersioned'
    |  \-[RANGE] Node: 'column-spec'
    |     \-[IDENT] Node: 'name'
    \-[QUERY] Node: 'query'
       \-[SELECT_FROM] Node: 'SELECT_FROM'
          +-[FROM] Node: 'from'
          |  \-[RANGE] Node: 'RANGE'
          |     \-[DOT] Node: '.'
          |        +-[DOT] Node: '.'
          |        |  +-[DOT] Node: '.'
          |        |  |  +-[DOT] Node: '.'
          |        |  |  |  +-[IDENT] Node: 'org'
          |        |  |  |  \-[IDENT] Node: 'hibernate'
          |        |  |  \-[IDENT] Node: 'test'
          |        |  \-[IDENT] Node: 'hql'
          |        \-[IDENT] Node: 'IntegerVersioned'
          \-[SELECT] Node: 'select'
             \-[IDENT] Node: 'name'

14:13:13,689 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,689 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.IntegerVersioned (<no alias>) -> integerver0_
14:13:13,689 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:13,689 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:13:13,690 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> integerver0_.name
14:13:13,690 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( integerver0_.name {synthetic-alias} name ) ) ( FromClause{level=1} IntegerVersioned integerver0_ ) )
14:13:13,690 DEBUG JoinProcessor:175 - Using FROM fragment [IntegerVersioned integerver0_]
14:13:13,690 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[INSERT] InsertStatement: 'insert'  querySpaces (IntegerVersioned)
    +-[INTO] IntoClause: 'into IntegerVersioned ( vers, name )' IntoClause{entityName=org.hibernate.test.hql.IntegerVersioned,tableName=IntegerVersioned,columns={vers, name}}
    |  \-[RANGE] Node: 'column-spec'
    |     \-[IDENT] Node: 'name'
    \-[SELECT] QueryNode: 'SELECT'  querySpaces (IntegerVersioned)
       +-[SELECT_CLAUSE] SelectClause: '{select clause}'
       |  +-[PARAM] ParameterNode: '?' {version-seed, type=org.hibernate.type.IntegerType@42252fee}
       |  +-[DOT] DotNode: 'integerver0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=integerver0_,className=org.hibernate.test.hql.IntegerVersioned,classAlias=null}
       |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
       |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
       \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[integerver0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
          \-[FROM_FRAGMENT] FromElement: 'IntegerVersioned integerver0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=IntegerVersioned,tableAlias=integerver0_,origin=null,columns={,className=org.hibernate.test.hql.IntegerVersioned}}

14:13:13,690 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,690 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,691 DEBUG SQL:104 - 
    insert 
    into
        IntegerVersioned
        ( vers, name ) select
            ?,
            integerver0_.name as col_0_0_ 
        from
            IntegerVersioned integerver0_
14:13:13,701 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.hql.IntegerVersioned where id <> :initialId
14:13:13,702 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'org'
    |           |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  \-[IDENT] Node: 'test'
    |           |  \-[IDENT] Node: 'hql'
    |           \-[IDENT] Node: 'IntegerVersioned'
    \-[WHERE] Node: 'where'
       \-[NE] Node: '<>'
          +-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'initialId'

14:13:13,702 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,702 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.IntegerVersioned (<no alias>) -> integerver0_
14:13:13,702 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:13,702 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.LongType@4bf3f9d
14:13:13,702 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.id -> integerver0_.id
14:13:13,711 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} IntegerVersioned integerver0_ ) ( where ( <> ( integerver0_.id {synthetic-alias} id ) ? ) ) )
14:13:13,711 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:13:13,711 DEBUG JoinProcessor:175 - Using FROM fragment [IntegerVersioned integerver0_]
14:13:13,712 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (IntegerVersioned)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'integerver0_.id as id11_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=IntegerVersioned,tableAlias=integerver0_,origin=null,columns={,className=org.hibernate.test.hql.IntegerVersioned}}}
    |  \-[SQL_TOKEN] SqlFragment: 'integerver0_.vers as vers11_, integerver0_.name as name11_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[integerver0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'IntegerVersioned integerver0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=IntegerVersioned,tableAlias=integerver0_,origin=null,columns={,className=org.hibernate.test.hql.IntegerVersioned}}
    \-[WHERE] SqlNode: 'where'
       \-[NE] BinaryLogicOperatorNode: '<>'
          +-[DOT] DotNode: 'integerver0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path={synthetic-alias}.id,tableAlias=integerver0_,className=org.hibernate.test.hql.IntegerVersioned,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=initialId, expectedType=org.hibernate.type.LongType@4bf3f9d}

14:13:13,712 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,712 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.hql.IntegerVersioned where id <> :initialId
14:13:13,712 DEBUG QueryTranslatorImpl:236 - SQL: select integerver0_.id as id11_, integerver0_.vers as vers11_, integerver0_.name as name11_ from IntegerVersioned integerver0_ where integerver0_.id<>?
14:13:13,712 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,712 DEBUG SQL:104 - 
    select
        integerver0_.id as id11_,
        integerver0_.vers as vers11_,
        integerver0_.name as name11_ 
    from
        IntegerVersioned integerver0_ 
    where
        integerver0_.id<>?
14:13:13,713 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.hql.IntegerVersioned
14:13:13,722 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'hql'
             \-[IDENT] Node: 'IntegerVersioned'

14:13:13,722 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,722 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.IntegerVersioned (<no alias>) -> integerver0_
14:13:13,722 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (IntegerVersioned)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[integerver0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'IntegerVersioned' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=IntegerVersioned,tableAlias=integerver0_,origin=null,columns={,className=org.hibernate.test.hql.IntegerVersioned}}

14:13:13,722 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,722 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,723 DEBUG SQL:104 - 
    delete 
    from
        IntegerVersioned
14:13:13,723  INFO CustomRunner:139 - Test: testInsertWithManyToOne
14:13:13,733 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:13,733 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:13,734 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:13,734 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:13,734 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:13,744 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:13,744 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:13,744 DEBUG SQL:104 - 
    insert 
    into
        Dog
        (mammal) 
    values
        (?)
14:13:13,745 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:13,758 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:13,758 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:13,758 DEBUG SQL:104 - 
    insert 
    into
        Cat
        (mammal) 
    values
        (?)
14:13:13,759 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:13:13,759 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'P')
14:13:13,768 DEBUG SQL:104 - 
    insert 
    into
        Joiner
        (id, name) 
    values
        (null, ?)
14:13:13,768 DEBUG SQL:104 - 
    insert 
    into
        JOINED
        (joinedName, ID) 
    values
        (?, ?)
14:13:13,768 DEBUG SQL:104 - 
    insert 
    into
        Car
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:13,769 DEBUG SQL:104 - 
    insert 
    into
        Truck
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:13,769 DEBUG SQL:104 - 
    insert 
    into
        SUV
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:13,769 DEBUG SQL:104 - 
    insert 
    into
        Pickup
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:13,769 DEBUG SQL:104 - 
    insert 
    into
        BooleanLiteralEntity
        (id, Y_N_BOOL, T_F_BOOL, NUM_BOOL) 
    values
        (null, ?, ?, ?)
14:13:13,770 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:13,782 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:13,782 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:13,783 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:13,794 DEBUG QueryTranslatorImpl:265 - parse() - HQL: insert into Animal (description, bodyWeight, mother) select description, bodyWeight, mother from org.hibernate.test.hql.Human
14:13:13,795 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[INSERT] Node: 'insert'
    +-[INTO] Node: 'into'
    |  +-[IDENT] Node: 'Animal'
    |  \-[RANGE] Node: 'column-spec'
    |     +-[IDENT] Node: 'description'
    |     +-[IDENT] Node: 'bodyWeight'
    |     \-[IDENT] Node: 'mother'
    \-[QUERY] Node: 'query'
       \-[SELECT_FROM] Node: 'SELECT_FROM'
          +-[FROM] Node: 'from'
          |  \-[RANGE] Node: 'RANGE'
          |     \-[DOT] Node: '.'
          |        +-[DOT] Node: '.'
          |        |  +-[DOT] Node: '.'
          |        |  |  +-[DOT] Node: '.'
          |        |  |  |  +-[IDENT] Node: 'org'
          |        |  |  |  \-[IDENT] Node: 'hibernate'
          |        |  |  \-[IDENT] Node: 'test'
          |        |  \-[IDENT] Node: 'hql'
          |        \-[IDENT] Node: 'Human'
          \-[SELECT] Node: 'select'
             +-[IDENT] Node: 'description'
             +-[IDENT] Node: 'bodyWeight'
             \-[IDENT] Node: 'mother'

14:13:13,795 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,795 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Human (<no alias>) -> human0_
14:13:13,795 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:13,795 DEBUG DotNode:599 - getDataType() : description -> org.hibernate.type.StringType@2dc8de40
14:13:13,796 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.description -> human0_2_.description
14:13:13,796 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:13,796 DEBUG DotNode:599 - getDataType() : bodyWeight -> org.hibernate.type.FloatType@39fd378e
14:13:13,796 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.bodyWeight -> human0_2_.body_weight
14:13:13,796 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:13,796 DEBUG DotNode:599 - getDataType() : mother -> org.hibernate.type.ManyToOneType(org.hibernate.test.hql.Animal)
14:13:13,796 DEBUG DotNode:562 - dereferenceShortcut() : property mother in org.hibernate.test.hql.Human does not require a join.
14:13:13,819 DEBUG DotNode:588 - Terminal propertyPath = [mother]
14:13:13,819 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.mother -> human0_2_.mother_id
14:13:13,819 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( human0_2_.description {synthetic-alias} description ) ( human0_2_.body_weight {synthetic-alias} bodyWeight ) ( human0_2_.mother_id {synthetic-alias} mother ) ) ( FromClause{level=1} Human human0_ ) )
14:13:13,819 DEBUG JoinProcessor:175 - Using FROM fragment [Human human0_ inner join Mammal human0_1_ on human0_.mammal=human0_1_.animal inner join Animal human0_2_ on human0_.mammal=human0_2_.id]
14:13:13,820 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[INSERT] InsertStatement: 'insert'  querySpaces (Human,Animal,Mammal)
    +-[INTO] IntoClause: 'into Animal ( description, body_weight, mother_id )' IntoClause{entityName=org.hibernate.test.hql.Animal,tableName=Animal,columns={description, body_weight, mother_id}}
    |  \-[RANGE] Node: 'column-spec'
    |     +-[IDENT] Node: 'description'
    |     +-[IDENT] Node: 'bodyWeight'
    |     \-[IDENT] Node: 'mother'
    \-[SELECT] QueryNode: 'SELECT'  querySpaces (Human,Animal,Mammal)
       +-[SELECT_CLAUSE] SelectClause: '{select clause}'
       |  +-[DOT] DotNode: 'human0_2_.description' {propertyName=description,dereferenceType=ALL,propertyPath=description,path={synthetic-alias}.description,tableAlias=human0_,className=org.hibernate.test.hql.Human,classAlias=null}
       |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  |  \-[IDENT] IdentNode: 'description' {originalText=description}
       |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
       |  +-[DOT] DotNode: 'human0_2_.body_weight' {propertyName=bodyWeight,dereferenceType=ALL,propertyPath=bodyWeight,path={synthetic-alias}.bodyWeight,tableAlias=human0_,className=org.hibernate.test.hql.Human,classAlias=null}
       |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  |  \-[IDENT] IdentNode: 'bodyWeight' {originalText=bodyWeight}
       |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
       |  +-[DOT] DotNode: 'human0_2_.mother_id' {propertyName=mother,dereferenceType=0,propertyPath=mother,path={synthetic-alias}.mother,tableAlias=human0_,className=org.hibernate.test.hql.Human,classAlias=null}
       |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  |  \-[IDENT] IdentNode: 'mother' {originalText=mother}
       |  \-[SELECT_COLUMNS] SqlNode: ' as col_2_0_'
       \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[human0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
          \-[FROM_FRAGMENT] FromElement: 'Human human0_ inner join Mammal human0_1_ on human0_.mammal=human0_1_.animal inner join Animal human0_2_ on human0_.mammal=human0_2_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Human,tableAlias=human0_,origin=null,columns={,className=org.hibernate.test.hql.Human}}

14:13:13,820 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,820 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:13,828 DEBUG SQL:104 - 
    insert 
    into
        Animal
        ( description, body_weight, mother_id ) select
            human0_2_.description as col_0_0_,
            human0_2_.body_weight as col_1_0_,
            human0_2_.mother_id as col_2_0_ 
        from
            Human human0_ 
        inner join
            Mammal human0_1_ 
                on human0_.mammal=human0_1_.animal 
        inner join
            Animal human0_2_ 
                on human0_.mammal=human0_2_.id
14:13:13,829 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_ 
        where
            animal0_.mother_id is not null 
            or animal0_.father_id is not null
14:13:13,830 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,839 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,840 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,849 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,849 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,859 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,859 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,869 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,869 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:13,870 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_
14:13:13,870 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,880 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,880 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,890 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,891 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,903 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,903 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,904 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:13,904 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:13,904 DEBUG SQL:104 - 
    delete 
    from
        Zoo
14:13:13,905 DEBUG SQL:104 - 
    insert 
    into
        HT_Joiner
        select
            joiner0_.id as id 
        from
            Joiner joiner0_ 
        inner join
            JOINED joiner0_1_ 
                on joiner0_.id=joiner0_1_.ID
14:13:13,914 DEBUG SQL:104 - 
    delete 
    from
        JOINED 
    where
        (
            ID
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:13,914 DEBUG SQL:104 - 
    delete 
    from
        Joiner 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:13,914 DEBUG SQL:104 - 
    delete 
    from
        HT_Joiner
14:13:13,925 DEBUG SQL:104 - 
    insert 
    into
        HT_Vehicle
        select
            vehicle0_.id as id 
        from
            ( select
                id,
                vin,
                owner,
                3 as clazz_ 
            from
                SUV 
            union
            all select
                id,
                vin,
                owner,
                4 as clazz_ 
            from
                Pickup 
            union
            all select
                id,
                vin,
                owner,
                1 as clazz_ 
            from
                Car 
            union
            all select
                id,
                vin,
                owner,
                2 as clazz_ 
            from
                Truck 
        ) vehicle0_
14:13:13,926 DEBUG SQL:104 - 
    delete 
    from
        Car 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:13,952 DEBUG SQL:104 - 
    delete 
    from
        Truck 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:13,953 DEBUG SQL:104 - 
    delete 
    from
        SUV 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:13,962 DEBUG SQL:104 - 
    delete 
    from
        Pickup 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:13,963 DEBUG SQL:104 - 
    delete 
    from
        HT_Vehicle
14:13:13,963 DEBUG SQL:104 - 
    delete 
    from
        BooleanLiteralEntity
14:13:13,973  INFO CustomRunner:139 - Test: testInsertWithMismatchedTypes
14:13:13,974 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:13,975 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:13,975 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:13,975 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:13,982 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:13,983 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:13,983 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:13,984 DEBUG SQL:104 - 
    insert 
    into
        Dog
        (mammal) 
    values
        (?)
14:13:13,993 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:13,993 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:13,993 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:13,994 DEBUG SQL:104 - 
    insert 
    into
        Cat
        (mammal) 
    values
        (?)
14:13:13,994 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:13:14,004 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'P')
14:13:14,005 DEBUG SQL:104 - 
    insert 
    into
        Joiner
        (id, name) 
    values
        (null, ?)
14:13:14,005 DEBUG SQL:104 - 
    insert 
    into
        JOINED
        (joinedName, ID) 
    values
        (?, ?)
14:13:14,005 DEBUG SQL:104 - 
    insert 
    into
        Car
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:14,015 DEBUG SQL:104 - 
    insert 
    into
        Truck
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:14,016 DEBUG SQL:104 - 
    insert 
    into
        SUV
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:14,016 DEBUG SQL:104 - 
    insert 
    into
        Pickup
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:14,017 DEBUG SQL:104 - 
    insert 
    into
        BooleanLiteralEntity
        (id, Y_N_BOOL, T_F_BOOL, NUM_BOOL) 
    values
        (null, ?, ?, ?)
14:13:14,026 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:14,026 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:14,027 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:14,027 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:14,028 DEBUG QueryTranslatorImpl:265 - parse() - HQL: insert into Pickup (owner, vin, id) select id, vin, owner from org.hibernate.test.hql.Car
14:13:14,029 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[INSERT] Node: 'insert'
    +-[INTO] Node: 'into'
    |  +-[IDENT] Node: 'Pickup'
    |  \-[RANGE] Node: 'column-spec'
    |     +-[IDENT] Node: 'owner'
    |     +-[IDENT] Node: 'vin'
    |     \-[IDENT] Node: 'id'
    \-[QUERY] Node: 'query'
       \-[SELECT_FROM] Node: 'SELECT_FROM'
          +-[FROM] Node: 'from'
          |  \-[RANGE] Node: 'RANGE'
          |     \-[DOT] Node: '.'
          |        +-[DOT] Node: '.'
          |        |  +-[DOT] Node: '.'
          |        |  |  +-[DOT] Node: '.'
          |        |  |  |  +-[IDENT] Node: 'org'
          |        |  |  |  \-[IDENT] Node: 'hibernate'
          |        |  |  \-[IDENT] Node: 'test'
          |        |  \-[IDENT] Node: 'hql'
          |        \-[IDENT] Node: 'Car'
          \-[SELECT] Node: 'select'
             +-[IDENT] Node: 'id'
             +-[IDENT] Node: 'vin'
             \-[IDENT] Node: 'owner'

14:13:14,040 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:14,041 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Car (<no alias>) -> car0_
14:13:14,041 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:14,041 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.LongType@4bf3f9d
14:13:14,041 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.id -> car0_.id
14:13:14,041 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:14,042 DEBUG DotNode:599 - getDataType() : vin -> org.hibernate.type.StringType@2dc8de40
14:13:14,042 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.vin -> car0_.vin
14:13:14,042 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:14,042 DEBUG DotNode:599 - getDataType() : owner -> org.hibernate.type.StringType@2dc8de40
14:13:14,042 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.owner -> car0_.owner
14:13:14,042 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( car0_.id {synthetic-alias} id ) ( car0_.vin {synthetic-alias} vin ) ( car0_.owner {synthetic-alias} owner ) ) ( FromClause{level=1} Car car0_ ) )
14:13:14,043 DEBUG JoinProcessor:175 - Using FROM fragment [Car car0_]
14:13:14,043 DEBUG SQL:104 - 
    insert 
    into
        HT_Vehicle
        select
            vehicle0_.id as id 
        from
            ( select
                id,
                vin,
                owner,
                3 as clazz_ 
            from
                SUV 
            union
            all select
                id,
                vin,
                owner,
                4 as clazz_ 
            from
                Pickup 
            union
            all select
                id,
                vin,
                owner,
                1 as clazz_ 
            from
                Car 
            union
            all select
                id,
                vin,
                owner,
                2 as clazz_ 
            from
                Truck 
        ) vehicle0_
14:13:14,052 DEBUG SQL:104 - 
    delete 
    from
        Car 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:14,053 DEBUG SQL:104 - 
    delete 
    from
        Truck 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:14,074 DEBUG SQL:104 - 
    delete 
    from
        SUV 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:14,075 DEBUG SQL:104 - 
    delete 
    from
        Pickup 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:14,075 DEBUG SQL:104 - 
    delete 
    from
        HT_Vehicle
14:13:14,076 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_ 
        where
            animal0_.mother_id is not null 
            or animal0_.father_id is not null
14:13:14,076 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,076 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,100 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,100 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,110 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,111 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,112 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,122 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,123 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:14,123 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_
14:13:14,132 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,133 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,142 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,142 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,142 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,152 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,152 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,153 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,153 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:14,153 DEBUG SQL:104 - 
    delete 
    from
        Zoo
14:13:14,153 DEBUG SQL:104 - 
    insert 
    into
        HT_Joiner
        select
            joiner0_.id as id 
        from
            Joiner joiner0_ 
        inner join
            JOINED joiner0_1_ 
                on joiner0_.id=joiner0_1_.ID
14:13:14,165 DEBUG SQL:104 - 
    delete 
    from
        JOINED 
    where
        (
            ID
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:14,165 DEBUG SQL:104 - 
    delete 
    from
        Joiner 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:14,177 DEBUG SQL:104 - 
    delete 
    from
        HT_Joiner
14:13:14,178 DEBUG SQL:104 - 
    insert 
    into
        HT_Vehicle
        select
            vehicle0_.id as id 
        from
            ( select
                id,
                vin,
                owner,
                3 as clazz_ 
            from
                SUV 
            union
            all select
                id,
                vin,
                owner,
                4 as clazz_ 
            from
                Pickup 
            union
            all select
                id,
                vin,
                owner,
                1 as clazz_ 
            from
                Car 
            union
            all select
                id,
                vin,
                owner,
                2 as clazz_ 
            from
                Truck 
        ) vehicle0_
14:13:14,207 DEBUG SQL:104 - 
    delete 
    from
        Car 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:14,207 DEBUG SQL:104 - 
    delete 
    from
        Truck 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:14,208 DEBUG SQL:104 - 
    delete 
    from
        SUV 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:14,210 DEBUG SQL:104 - 
    delete 
    from
        Pickup 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:14,210 DEBUG SQL:104 - 
    delete 
    from
        HT_Vehicle
14:13:14,210 DEBUG SQL:104 - 
    delete 
    from
        BooleanLiteralEntity
14:13:14,211  INFO CustomRunner:139 - Test: testInsertWithSelectListUsingJoins
14:13:14,221 DEBUG QueryTranslatorImpl:265 - parse() - HQL: insert into Animal (description, bodyWeight) select h.description, h.bodyWeight from org.hibernate.test.hql.Human h where h.mother.mother is not null
14:13:14,222 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[INSERT] Node: 'insert'
    +-[INTO] Node: 'into'
    |  +-[IDENT] Node: 'Animal'
    |  \-[RANGE] Node: 'column-spec'
    |     +-[IDENT] Node: 'description'
    |     \-[IDENT] Node: 'bodyWeight'
    \-[QUERY] Node: 'query'
       +-[SELECT_FROM] Node: 'SELECT_FROM'
       |  +-[FROM] Node: 'from'
       |  |  \-[RANGE] Node: 'RANGE'
       |  |     +-[DOT] Node: '.'
       |  |     |  +-[DOT] Node: '.'
       |  |     |  |  +-[DOT] Node: '.'
       |  |     |  |  |  +-[DOT] Node: '.'
       |  |     |  |  |  |  +-[IDENT] Node: 'org'
       |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
       |  |     |  |  |  \-[IDENT] Node: 'test'
       |  |     |  |  \-[IDENT] Node: 'hql'
       |  |     |  \-[IDENT] Node: 'Human'
       |  |     \-[ALIAS] Node: 'h'
       |  \-[SELECT] Node: 'select'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'h'
       |     |  \-[IDENT] Node: 'description'
       |     \-[DOT] Node: '.'
       |        +-[IDENT] Node: 'h'
       |        \-[IDENT] Node: 'bodyWeight'
       \-[WHERE] Node: 'where'
          \-[IS_NOT_NULL] Node: 'is not null'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[IDENT] Node: 'h'
                |  \-[IDENT] Node: 'mother'
                \-[IDENT] Node: 'mother'

14:13:14,229 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:14,230 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Human (h) -> human0_
14:13:14,230 DEBUG FromReferenceNode:74 - Resolved : h -> mammal
14:13:14,230 DEBUG DotNode:599 - getDataType() : description -> org.hibernate.type.StringType@2dc8de40
14:13:14,230 DEBUG FromReferenceNode:74 - Resolved : h.description -> human0_2_.description
14:13:14,230 DEBUG FromReferenceNode:74 - Resolved : h -> mammal
14:13:14,231 DEBUG DotNode:599 - getDataType() : bodyWeight -> org.hibernate.type.FloatType@39fd378e
14:13:14,231 DEBUG FromReferenceNode:74 - Resolved : h.bodyWeight -> human0_2_.body_weight
14:13:14,231 DEBUG FromReferenceNode:74 - Resolved : h -> mammal
14:13:14,231 DEBUG DotNode:599 - getDataType() : mother -> org.hibernate.type.ManyToOneType(org.hibernate.test.hql.Animal)
14:13:14,231 DEBUG DotNode:389 - dereferenceEntityJoin() : generating join for mother in org.hibernate.test.hql.Human (<no alias>) parent = [  ( . ( . mammal mother ) mother ) ]
14:13:14,232 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Animal (<no alias>) -> animal1_
14:13:14,232 DEBUG FromClause:282 - addJoinByPathMap() : h.mother -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Animal,tableAlias=animal1_,origin=Human human0_,columns={human0_2_.mother_id ,className=org.hibernate.test.hql.Animal}}
14:13:14,232 DEBUG FromReferenceNode:74 - Resolved : h.mother -> human0_2_.mother_id
14:13:14,232 DEBUG DotNode:599 - getDataType() : mother -> org.hibernate.type.ManyToOneType(org.hibernate.test.hql.Animal)
14:13:14,232 DEBUG DotNode:562 - dereferenceShortcut() : property mother in org.hibernate.test.hql.Animal does not require a join.
14:13:14,232 DEBUG DotNode:588 - Terminal propertyPath = [mother]
14:13:14,232 DEBUG FromReferenceNode:74 - Resolved : h.mother.mother -> animal1_.mother_id
14:13:14,232 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( human0_2_.description mammal description ) ( human0_2_.body_weight mammal bodyWeight ) ) ( FromClause{level=1} Human human0_ Animal animal1_ ) ( where ( is not null ( animal1_.mother_id ( human0_2_.mother_id mammal mother ) mother ) ) ) )
14:13:14,233 DEBUG JoinProcessor:175 - Using FROM fragment [Human human0_ inner join Mammal human0_1_ on human0_.mammal=human0_1_.animal inner join Animal human0_2_ on human0_.mammal=human0_2_.id]
14:13:14,233 DEBUG SyntheticAndFactory:92 - Using unprocessed WHERE-fragment [human0_2_.mother_id=animal1_.id]
14:13:14,233 DEBUG SyntheticAndFactory:124 - Using processed WHERE-fragment [human0_2_.mother_id=animal1_.id]
14:13:14,233 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[INSERT] InsertStatement: 'insert'  querySpaces (Human,Animal,Mammal)
    +-[INTO] IntoClause: 'into Animal ( description, body_weight )' IntoClause{entityName=org.hibernate.test.hql.Animal,tableName=Animal,columns={description, body_weight}}
    |  \-[RANGE] Node: 'column-spec'
    |     +-[IDENT] Node: 'description'
    |     \-[IDENT] Node: 'bodyWeight'
    \-[SELECT] QueryNode: 'SELECT'  querySpaces (Human,Animal,Mammal)
       +-[SELECT_CLAUSE] SelectClause: '{select clause}'
       |  +-[DOT] DotNode: 'human0_2_.description' {propertyName=description,dereferenceType=ALL,propertyPath=description,path=h.description,tableAlias=human0_,className=org.hibernate.test.hql.Human,classAlias=h}
       |  |  +-[ALIAS_REF] IdentNode: 'mammal' {alias=h, className=org.hibernate.test.hql.Human, tableAlias=human0_}
       |  |  \-[IDENT] IdentNode: 'description' {originalText=description}
       |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
       |  +-[DOT] DotNode: 'human0_2_.body_weight' {propertyName=bodyWeight,dereferenceType=ALL,propertyPath=bodyWeight,path=h.bodyWeight,tableAlias=human0_,className=org.hibernate.test.hql.Human,classAlias=h}
       |  |  +-[ALIAS_REF] IdentNode: 'mammal' {alias=h, className=org.hibernate.test.hql.Human, tableAlias=human0_}
       |  |  \-[IDENT] IdentNode: 'bodyWeight' {originalText=bodyWeight}
       |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
       +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[h], fromElementByTableAlias=[human0_, animal1_], fromElementsByPath=[h.mother], collectionJoinFromElementsByPath=[], impliedElements=[]}
       |  +-[FROM_FRAGMENT] FromElement: 'Human human0_ inner join Mammal human0_1_ on human0_.mammal=human0_1_.animal inner join Animal human0_2_ on human0_.mammal=human0_2_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=h,role=null,tableName=Human,tableAlias=human0_,origin=null,columns={,className=org.hibernate.test.hql.Human}}
       |  \-[FROM_FRAGMENT] ImpliedFromElement: 'Animal animal1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Animal,tableAlias=animal1_,origin=Human human0_ inner join Mammal human0_1_ on human0_.mammal=human0_1_.animal inner join Animal human0_2_ on human0_.mammal=human0_2_.id,columns={human0_2_.mother_id ,className=org.hibernate.test.hql.Animal}}
       \-[WHERE] SqlNode: 'where'
          +-[THETA_JOINS] SqlNode: '{theta joins}'
          |  \-[SQL_TOKEN] SqlFragment: 'human0_2_.mother_id=animal1_.id'
          \-[IS_NOT_NULL] IsNotNullLogicOperatorNode: 'is not null'
             \-[DOT] DotNode: 'animal1_.mother_id' {propertyName=mother,dereferenceType=0,propertyPath=mother,path=h.mother.mother,tableAlias=animal1_,className=org.hibernate.test.hql.Animal,classAlias=null}
                +-[DOT] DotNode: 'human0_2_.mother_id' {propertyName=mother,dereferenceType=EOF,propertyPath=mother,path=h.mother,tableAlias=animal1_,className=org.hibernate.test.hql.Animal,classAlias=null}
                |  +-[ALIAS_REF] IdentNode: 'mammal' {alias=h, className=org.hibernate.test.hql.Human, tableAlias=human0_}
                |  \-[IDENT] IdentNode: 'mother' {originalText=mother}
                \-[IDENT] IdentNode: 'mother' {originalText=mother}

14:13:14,240 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:14,241 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:14,251 DEBUG SQL:104 - 
    insert 
    into
        Animal
        ( description, body_weight ) select
            human0_2_.description as col_0_0_,
            human0_2_.body_weight as col_1_0_ 
        from
            Human human0_ 
        inner join
            Mammal human0_1_ 
                on human0_.mammal=human0_1_.animal 
        inner join
            Animal human0_2_ 
                on human0_.mammal=human0_2_.id cross 
        join
            Animal animal1_ 
        where
            human0_2_.mother_id=animal1_.id 
            and (
                animal1_.mother_id is not null
            )
14:13:14,252 DEBUG QueryTranslatorImpl:265 - parse() - HQL: insert into Animal (description, bodyWeight) select h.description, h.bodyWeight from org.hibernate.test.hql.Human h join h.mother m where m.mother is not null
14:13:14,254 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[INSERT] Node: 'insert'
    +-[INTO] Node: 'into'
    |  +-[IDENT] Node: 'Animal'
    |  \-[RANGE] Node: 'column-spec'
    |     +-[IDENT] Node: 'description'
    |     \-[IDENT] Node: 'bodyWeight'
    \-[QUERY] Node: 'query'
       +-[SELECT_FROM] Node: 'SELECT_FROM'
       |  +-[FROM] Node: 'from'
       |  |  +-[RANGE] Node: 'RANGE'
       |  |  |  +-[DOT] Node: '.'
       |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  |  |  +-[IDENT] Node: 'org'
       |  |  |  |  |  |  |  \-[IDENT] Node: 'hibernate'
       |  |  |  |  |  |  \-[IDENT] Node: 'test'
       |  |  |  |  |  \-[IDENT] Node: 'hql'
       |  |  |  |  \-[IDENT] Node: 'Human'
       |  |  |  \-[ALIAS] Node: 'h'
       |  |  \-[JOIN] Node: 'join'
       |  |     +-[DOT] Node: '.'
       |  |     |  +-[IDENT] Node: 'h'
       |  |     |  \-[IDENT] Node: 'mother'
       |  |     \-[ALIAS] Node: 'm'
       |  \-[SELECT] Node: 'select'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'h'
       |     |  \-[IDENT] Node: 'description'
       |     \-[DOT] Node: '.'
       |        +-[IDENT] Node: 'h'
       |        \-[IDENT] Node: 'bodyWeight'
       \-[WHERE] Node: 'where'
          \-[IS_NOT_NULL] Node: 'is not null'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'm'
                \-[IDENT] Node: 'mother'

14:13:14,271 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:14,272 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Human (h) -> human0_
14:13:14,272 DEBUG FromReferenceNode:74 - Resolved : h -> mammal
14:13:14,272 DEBUG DotNode:599 - getDataType() : mother -> org.hibernate.type.ManyToOneType(org.hibernate.test.hql.Animal)
14:13:14,272 DEBUG DotNode:389 - dereferenceEntityJoin() : generating join for mother in org.hibernate.test.hql.Human (m) parent = [ {null} ]
14:13:14,273 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Animal (m) -> animal1_
14:13:14,273 DEBUG FromClause:282 - addJoinByPathMap() : h.mother -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=m,role=null,tableName=Animal,tableAlias=animal1_,origin=Human human0_,columns={human0_2_.mother_id ,className=org.hibernate.test.hql.Animal}}
14:13:14,273 DEBUG FromReferenceNode:74 - Resolved : h.mother -> human0_2_.mother_id
14:13:14,273 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'Animal animal1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=m,role=null,tableName=Animal,tableAlias=animal1_,origin=Human human0_,columns={human0_2_.mother_id ,className=org.hibernate.test.hql.Animal}}

14:13:14,273 DEBUG FromReferenceNode:74 - Resolved : h -> mammal
14:13:14,274 DEBUG DotNode:599 - getDataType() : description -> org.hibernate.type.StringType@2dc8de40
14:13:14,274 DEBUG FromReferenceNode:74 - Resolved : h.description -> human0_2_.description
14:13:14,274 DEBUG FromReferenceNode:74 - Resolved : h -> mammal
14:13:14,274 DEBUG DotNode:599 - getDataType() : bodyWeight -> org.hibernate.type.FloatType@39fd378e
14:13:14,274 DEBUG FromReferenceNode:74 - Resolved : h.bodyWeight -> human0_2_.body_weight
14:13:14,274 DEBUG FromReferenceNode:74 - Resolved : m -> id
14:13:14,274 DEBUG DotNode:599 - getDataType() : mother -> org.hibernate.type.ManyToOneType(org.hibernate.test.hql.Animal)
14:13:14,275 DEBUG DotNode:562 - dereferenceShortcut() : property mother in org.hibernate.test.hql.Animal does not require a join.
14:13:14,275 DEBUG DotNode:588 - Terminal propertyPath = [mother]
14:13:14,275 DEBUG FromReferenceNode:74 - Resolved : m.mother -> animal1_.mother_id
14:13:14,275 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( human0_2_.description mammal description ) ( human0_2_.body_weight mammal bodyWeight ) ) ( FromClause{level=1} ( Human human0_ Animal animal1_ ) ) ( where ( is not null ( animal1_.mother_id id mother ) ) ) )
14:13:14,275 DEBUG JoinProcessor:175 - Using FROM fragment [Human human0_ inner join Mammal human0_1_ on human0_.mammal=human0_1_.animal inner join Animal human0_2_ on human0_.mammal=human0_2_.id]
14:13:14,275 DEBUG JoinProcessor:175 - Using FROM fragment [inner join Animal animal1_ on human0_2_.mother_id=animal1_.id]
14:13:14,276 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[INSERT] InsertStatement: 'insert'  querySpaces (Human,Animal,Mammal)
    +-[INTO] IntoClause: 'into Animal ( description, body_weight )' IntoClause{entityName=org.hibernate.test.hql.Animal,tableName=Animal,columns={description, body_weight}}
    |  \-[RANGE] Node: 'column-spec'
    |     +-[IDENT] Node: 'description'
    |     \-[IDENT] Node: 'bodyWeight'
    \-[SELECT] QueryNode: 'SELECT'  querySpaces (Human,Animal,Mammal)
       +-[SELECT_CLAUSE] SelectClause: '{select clause}'
       |  +-[DOT] DotNode: 'human0_2_.description' {propertyName=description,dereferenceType=ALL,propertyPath=description,path=h.description,tableAlias=human0_,className=org.hibernate.test.hql.Human,classAlias=h}
       |  |  +-[ALIAS_REF] IdentNode: 'mammal' {alias=h, className=org.hibernate.test.hql.Human, tableAlias=human0_}
       |  |  \-[IDENT] IdentNode: 'description' {originalText=description}
       |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
       |  +-[DOT] DotNode: 'human0_2_.body_weight' {propertyName=bodyWeight,dereferenceType=ALL,propertyPath=bodyWeight,path=h.bodyWeight,tableAlias=human0_,className=org.hibernate.test.hql.Human,classAlias=h}
       |  |  +-[ALIAS_REF] IdentNode: 'mammal' {alias=h, className=org.hibernate.test.hql.Human, tableAlias=human0_}
       |  |  \-[IDENT] IdentNode: 'bodyWeight' {originalText=bodyWeight}
       |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
       +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[m, h], fromElementByTableAlias=[human0_, animal1_], fromElementsByPath=[h.mother], collectionJoinFromElementsByPath=[], impliedElements=[]}
       |  \-[FROM_FRAGMENT] FromElement: 'Human human0_ inner join Mammal human0_1_ on human0_.mammal=human0_1_.animal inner join Animal human0_2_ on human0_.mammal=human0_2_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=h,role=null,tableName=Human,tableAlias=human0_,origin=null,columns={,className=org.hibernate.test.hql.Human}}
       |     \-[JOIN_FRAGMENT] FromElement: 'inner join Animal animal1_ on human0_2_.mother_id=animal1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=m,role=null,tableName=Animal,tableAlias=animal1_,origin=Human human0_ inner join Mammal human0_1_ on human0_.mammal=human0_1_.animal inner join Animal human0_2_ on human0_.mammal=human0_2_.id,columns={human0_2_.mother_id ,className=org.hibernate.test.hql.Animal}}
       \-[WHERE] SqlNode: 'where'
          \-[IS_NOT_NULL] IsNotNullLogicOperatorNode: 'is not null'
             \-[DOT] DotNode: 'animal1_.mother_id' {propertyName=mother,dereferenceType=0,propertyPath=mother,path=m.mother,tableAlias=animal1_,className=org.hibernate.test.hql.Animal,classAlias=m}
                +-[ALIAS_REF] IdentNode: 'id' {alias=m, className=org.hibernate.test.hql.Animal, tableAlias=animal1_}
                \-[IDENT] IdentNode: 'mother' {originalText=mother}

14:13:14,284 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:14,284 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:14,285 DEBUG SQL:104 - 
    insert 
    into
        Animal
        ( description, body_weight ) select
            human0_2_.description as col_0_0_,
            human0_2_.body_weight as col_1_0_ 
        from
            Human human0_ 
        inner join
            Mammal human0_1_ 
                on human0_.mammal=human0_1_.animal 
        inner join
            Animal human0_2_ 
                on human0_.mammal=human0_2_.id 
        inner join
            Animal animal1_ 
                on human0_2_.mother_id=animal1_.id 
        where
            animal1_.mother_id is not null
14:13:14,286 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_
14:13:14,286 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,297 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,298 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,299 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,309 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,309 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,310 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,346 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,346 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:14,347  INFO CustomRunner:139 - Test: testManyToManyBulkDelete
14:13:14,349 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:14,349 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:14,349 DEBUG SQL:104 - 
    insert 
    into
        Human
        (name_first, name_initial, name_last, nickName, height_centimeters, intValue, floatValue, bigDecimalValue, bigIntegerValue, mammal) 
    values
        (?, ?, ?, ?, ? * 2.54E0, ?, ?, ?, ?, ?)
14:13:14,350 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:14,350 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:14,350 DEBUG SQL:104 - 
    insert 
    into
        Human
        (name_first, name_initial, name_last, nickName, height_centimeters, intValue, floatValue, bigDecimalValue, bigIntegerValue, mammal) 
    values
        (?, ?, ?, ?, ? * 2.54E0, ?, ?, ?, ?, ?)
14:13:14,358 DEBUG SQL:104 - 
    insert 
    into
        Human_friends
        (human1, human2) 
    values
        (?, ?)
14:13:14,358 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete from org.hibernate.test.hql.Human
14:13:14,359 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'hql'
             \-[IDENT] Node: 'Human'

14:13:14,360 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:14,360 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Human (<no alias>) -> human0_
14:13:14,367 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Human,Animal,Mammal)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[human0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Human' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Human,tableAlias=human0_,origin=null,columns={,className=org.hibernate.test.hql.Human}}

14:13:14,368 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:14,368 DEBUG DeleteStatement:73 - getWhereClause() : Creating a new WHERE clause...
14:13:14,368 DEBUG SQL:104 - 
    insert 
    into
        HT_Human
        select
            human0_.mammal as mammal 
        from
            Human human0_ 
        inner join
            Mammal human0_1_ 
                on human0_.mammal=human0_1_.animal 
        inner join
            Animal human0_2_ 
                on human0_.mammal=human0_2_.id
14:13:14,370 DEBUG SQL:104 - 
    delete 
    from
        Human_friends 
    where
        (
            human1
        ) IN (
            select
                mammal 
            from
                HT_Human
        )
14:13:14,378 DEBUG SQL:104 - 
    delete 
    from
        Human_family 
    where
        (
            human1
        ) IN (
            select
                mammal 
            from
                HT_Human
        )
14:13:14,379 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                mammal 
            from
                HT_Human
        )
14:13:14,379 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                mammal 
            from
                HT_Human
        )
14:13:14,389 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                mammal 
            from
                HT_Human
        )
14:13:14,390 DEBUG SQL:104 - 
    delete 
    from
        HT_Human
14:13:14,400  INFO CustomRunner:139 - Test: testSimpleInsert
14:13:14,401 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:14,402 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:14,403 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:14,403 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:14,410 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:14,411 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:14,411 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:14,411 DEBUG SQL:104 - 
    insert 
    into
        Dog
        (mammal) 
    values
        (?)
14:13:14,411 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:14,412 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:14,412 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:14,412 DEBUG SQL:104 - 
    insert 
    into
        Cat
        (mammal) 
    values
        (?)
14:13:14,412 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:13:14,425 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'P')
14:13:14,425 DEBUG SQL:104 - 
    insert 
    into
        Joiner
        (id, name) 
    values
        (null, ?)
14:13:14,426 DEBUG SQL:104 - 
    insert 
    into
        JOINED
        (joinedName, ID) 
    values
        (?, ?)
14:13:14,426 DEBUG SQL:104 - 
    insert 
    into
        Car
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:14,426 DEBUG SQL:104 - 
    insert 
    into
        Truck
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:14,435 DEBUG SQL:104 - 
    insert 
    into
        SUV
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:14,435 DEBUG SQL:104 - 
    insert 
    into
        Pickup
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:14,435 DEBUG SQL:104 - 
    insert 
    into
        BooleanLiteralEntity
        (id, Y_N_BOOL, T_F_BOOL, NUM_BOOL) 
    values
        (null, ?, ?, ?)
14:13:14,436 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:14,437 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:14,459 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:14,460 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:14,461 DEBUG QueryTranslatorImpl:265 - parse() - HQL: insert into Pickup (id, vin, owner) select id, vin, owner from org.hibernate.test.hql.Car
14:13:14,461 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[INSERT] Node: 'insert'
    +-[INTO] Node: 'into'
    |  +-[IDENT] Node: 'Pickup'
    |  \-[RANGE] Node: 'column-spec'
    |     +-[IDENT] Node: 'id'
    |     +-[IDENT] Node: 'vin'
    |     \-[IDENT] Node: 'owner'
    \-[QUERY] Node: 'query'
       \-[SELECT_FROM] Node: 'SELECT_FROM'
          +-[FROM] Node: 'from'
          |  \-[RANGE] Node: 'RANGE'
          |     \-[DOT] Node: '.'
          |        +-[DOT] Node: '.'
          |        |  +-[DOT] Node: '.'
          |        |  |  +-[DOT] Node: '.'
          |        |  |  |  +-[IDENT] Node: 'org'
          |        |  |  |  \-[IDENT] Node: 'hibernate'
          |        |  |  \-[IDENT] Node: 'test'
          |        |  \-[IDENT] Node: 'hql'
          |        \-[IDENT] Node: 'Car'
          \-[SELECT] Node: 'select'
             +-[IDENT] Node: 'id'
             +-[IDENT] Node: 'vin'
             \-[IDENT] Node: 'owner'

14:13:14,469 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:14,470 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Car (<no alias>) -> car0_
14:13:14,470 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:14,470 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.LongType@4bf3f9d
14:13:14,470 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.id -> car0_.id
14:13:14,470 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:14,470 DEBUG DotNode:599 - getDataType() : vin -> org.hibernate.type.StringType@2dc8de40
14:13:14,470 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.vin -> car0_.vin
14:13:14,470 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:14,470 DEBUG DotNode:599 - getDataType() : owner -> org.hibernate.type.StringType@2dc8de40
14:13:14,471 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.owner -> car0_.owner
14:13:14,471 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( car0_.id {synthetic-alias} id ) ( car0_.vin {synthetic-alias} vin ) ( car0_.owner {synthetic-alias} owner ) ) ( FromClause{level=1} Car car0_ ) )
14:13:14,471 DEBUG JoinProcessor:175 - Using FROM fragment [Car car0_]
14:13:14,480 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[INSERT] InsertStatement: 'insert'  querySpaces (Car,Truck,Pickup,Vehicle)
    +-[INTO] IntoClause: 'into Pickup ( id, vin, owner )' IntoClause{entityName=org.hibernate.test.hql.Pickup,tableName=Pickup,columns={id, vin, owner}}
    |  \-[RANGE] Node: 'column-spec'
    |     +-[IDENT] Node: 'id'
    |     +-[IDENT] Node: 'vin'
    |     \-[IDENT] Node: 'owner'
    \-[SELECT] QueryNode: 'SELECT'  querySpaces (Car,Truck,Pickup,Vehicle)
       +-[SELECT_CLAUSE] SelectClause: '{select clause}'
       |  +-[DOT] DotNode: 'car0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path={synthetic-alias}.id,tableAlias=car0_,className=org.hibernate.test.hql.Car,classAlias=null}
       |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
       |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
       |  +-[DOT] DotNode: 'car0_.vin' {propertyName=vin,dereferenceType=ALL,propertyPath=vin,path={synthetic-alias}.vin,tableAlias=car0_,className=org.hibernate.test.hql.Car,classAlias=null}
       |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  |  \-[IDENT] IdentNode: 'vin' {originalText=vin}
       |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
       |  +-[DOT] DotNode: 'car0_.owner' {propertyName=owner,dereferenceType=ALL,propertyPath=owner,path={synthetic-alias}.owner,tableAlias=car0_,className=org.hibernate.test.hql.Car,classAlias=null}
       |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  |  \-[IDENT] IdentNode: 'owner' {originalText=owner}
       |  \-[SELECT_COLUMNS] SqlNode: ' as col_2_0_'
       \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[car0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
          \-[FROM_FRAGMENT] FromElement: 'Car car0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Car,tableAlias=car0_,origin=null,columns={,className=org.hibernate.test.hql.Car}}

14:13:14,480 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:14,480 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:14,481 DEBUG SQL:104 - 
    insert 
    into
        Pickup
        ( id, vin, owner ) select
            car0_.id as col_0_0_,
            car0_.vin as col_1_0_,
            car0_.owner as col_2_0_ 
        from
            Car car0_
14:13:14,490 DEBUG SQL:104 - 
    insert 
    into
        HT_Vehicle
        select
            vehicle0_.id as id 
        from
            ( select
                id,
                vin,
                owner,
                3 as clazz_ 
            from
                SUV 
            union
            all select
                id,
                vin,
                owner,
                4 as clazz_ 
            from
                Pickup 
            union
            all select
                id,
                vin,
                owner,
                1 as clazz_ 
            from
                Car 
            union
            all select
                id,
                vin,
                owner,
                2 as clazz_ 
            from
                Truck 
        ) vehicle0_
14:13:14,501 DEBUG SQL:104 - 
    delete 
    from
        Car 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:14,501 DEBUG SQL:104 - 
    delete 
    from
        Truck 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:14,511 DEBUG SQL:104 - 
    delete 
    from
        SUV 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:14,511 DEBUG SQL:104 - 
    delete 
    from
        Pickup 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:14,521 DEBUG SQL:104 - 
    delete 
    from
        HT_Vehicle
14:13:14,522 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_ 
        where
            animal0_.mother_id is not null 
            or animal0_.father_id is not null
14:13:14,522 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,523 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,523 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,523 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,546 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,546 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,547 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,547 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,547 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:14,557 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_
14:13:14,558 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,558 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,571 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,572 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,572 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,593 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,593 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,593 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,602 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:14,603 DEBUG SQL:104 - 
    delete 
    from
        Zoo
14:13:14,603 DEBUG SQL:104 - 
    insert 
    into
        HT_Joiner
        select
            joiner0_.id as id 
        from
            Joiner joiner0_ 
        inner join
            JOINED joiner0_1_ 
                on joiner0_.id=joiner0_1_.ID
14:13:14,603 DEBUG SQL:104 - 
    delete 
    from
        JOINED 
    where
        (
            ID
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:14,613 DEBUG SQL:104 - 
    delete 
    from
        Joiner 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:14,613 DEBUG SQL:104 - 
    delete 
    from
        HT_Joiner
14:13:14,613 DEBUG SQL:104 - 
    insert 
    into
        HT_Vehicle
        select
            vehicle0_.id as id 
        from
            ( select
                id,
                vin,
                owner,
                3 as clazz_ 
            from
                SUV 
            union
            all select
                id,
                vin,
                owner,
                4 as clazz_ 
            from
                Pickup 
            union
            all select
                id,
                vin,
                owner,
                1 as clazz_ 
            from
                Car 
            union
            all select
                id,
                vin,
                owner,
                2 as clazz_ 
            from
                Truck 
        ) vehicle0_
14:13:14,635 DEBUG SQL:104 - 
    delete 
    from
        Car 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:14,635 DEBUG SQL:104 - 
    delete 
    from
        Truck 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:14,644 DEBUG SQL:104 - 
    delete 
    from
        SUV 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:14,644 DEBUG SQL:104 - 
    delete 
    from
        Pickup 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:14,644 DEBUG SQL:104 - 
    delete 
    from
        HT_Vehicle
14:13:14,654 DEBUG SQL:104 - 
    delete 
    from
        BooleanLiteralEntity
14:13:14,654  INFO CustomRunner:139 - Test: testSimpleNativeSQLInsert
14:13:14,655 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:14,656 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:14,656 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:14,657 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:14,665 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:14,665 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:14,666 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:14,666 DEBUG SQL:104 - 
    insert 
    into
        Dog
        (mammal) 
    values
        (?)
14:13:14,677 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:14,677 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:14,677 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:14,678 DEBUG SQL:104 - 
    insert 
    into
        Cat
        (mammal) 
    values
        (?)
14:13:14,678 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:13:14,678 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'P')
14:13:14,678 DEBUG SQL:104 - 
    insert 
    into
        Joiner
        (id, name) 
    values
        (null, ?)
14:13:14,679 DEBUG SQL:104 - 
    insert 
    into
        JOINED
        (joinedName, ID) 
    values
        (?, ?)
14:13:14,679 DEBUG SQL:104 - 
    insert 
    into
        Car
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:14,688 DEBUG SQL:104 - 
    insert 
    into
        Truck
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:14,689 DEBUG SQL:104 - 
    insert 
    into
        SUV
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:14,689 DEBUG SQL:104 - 
    insert 
    into
        Pickup
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:14,689 DEBUG SQL:104 - 
    insert 
    into
        BooleanLiteralEntity
        (id, Y_N_BOOL, T_F_BOOL, NUM_BOOL) 
    values
        (null, ?, ?, ?)
14:13:14,700 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:14,700 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:14,700 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:14,701 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:14,702 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.hql.Vehicle
14:13:14,702 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'hql'
                \-[IDENT] Node: 'Vehicle'

14:13:14,723 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:14,723 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Vehicle (<no alias>) -> vehicle0_
14:13:14,723 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} ( select id, vin, owner, 3 as clazz_ from SUV union all select id, vin, owner, 4 as clazz_ from Pickup union all select id, vin, owner, 1 as clazz_ from Car union all select id, vin, owner, 2 as clazz_ from Truck ) vehicle0_ ) )
14:13:14,727 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:13:14,727 DEBUG JoinProcessor:175 - Using FROM fragment [( select id, vin, owner, 3 as clazz_ from SUV union all select id, vin, owner, 4 as clazz_ from Pickup union all select id, vin, owner, 1 as clazz_ from Car union all select id, vin, owner, 2 as clazz_ from Truck ) vehicle0_]
14:13:14,727 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Car,Truck,SUV,Pickup,Vehicle)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'vehicle0_.id as id29_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=( select id, vin, owner, 3 as clazz_ from SUV union all select id, vin, owner, 4 as clazz_ from Pickup union all select id, vin, owner, 1 as clazz_ from Car union all select id, vin, owner, 2 as clazz_ from Truck ),tableAlias=vehicle0_,origin=null,columns={,className=org.hibernate.test.hql.Vehicle}}}
    |  \-[SQL_TOKEN] SqlFragment: 'vehicle0_.vin as vin29_, vehicle0_.owner as owner29_, vehicle0_.clazz_ as clazz_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[vehicle0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: '( select id, vin, owner, 3 as clazz_ from SUV union all select id, vin, owner, 4 as clazz_ from Pickup union all select id, vin, owner, 1 as clazz_ from Car union all select id, vin, owner, 2 as clazz_ from Truck ) vehicle0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=( select id, vin, owner, 3 as clazz_ from SUV union all select id, vin, owner, 4 as clazz_ from Pickup union all select id, vin, owner, 1 as clazz_ from Car union all select id, vin, owner, 2 as clazz_ from Truck ),tableAlias=vehicle0_,origin=null,columns={,className=org.hibernate.test.hql.Vehicle}}

14:13:14,727 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:14,727 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.hql.Vehicle
14:13:14,727 DEBUG QueryTranslatorImpl:236 - SQL: select vehicle0_.id as id29_, vehicle0_.vin as vin29_, vehicle0_.owner as owner29_, vehicle0_.clazz_ as clazz_ from ( select id, vin, owner, 3 as clazz_ from SUV union all select id, vin, owner, 4 as clazz_ from Pickup union all select id, vin, owner, 1 as clazz_ from Car union all select id, vin, owner, 2 as clazz_ from Truck ) vehicle0_
14:13:14,727 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:14,735 DEBUG SQL:104 - 
    select
        vehicle0_.id as id29_,
        vehicle0_.vin as vin29_,
        vehicle0_.owner as owner29_,
        vehicle0_.clazz_ as clazz_ 
    from
        ( select
            id,
            vin,
            owner,
            3 as clazz_ 
        from
            SUV 
        union
        all select
            id,
            vin,
            owner,
            4 as clazz_ 
        from
            Pickup 
        union
        all select
            id,
            vin,
            owner,
            1 as clazz_ 
        from
            Car 
        union
        all select
            id,
            vin,
            owner,
            2 as clazz_ 
        from
            Truck 
    ) vehicle0_
14:13:14,746 DEBUG SQL:104 - 
    insert 
    into
        Pickup
        (id, vin, owner) select
            id,
            vin,
            owner 
        from
            Car
14:13:14,746 DEBUG SQL:104 - 
    select
        vehicle0_.id as id29_,
        vehicle0_.vin as vin29_,
        vehicle0_.owner as owner29_,
        vehicle0_.clazz_ as clazz_ 
    from
        ( select
            id,
            vin,
            owner,
            3 as clazz_ 
        from
            SUV 
        union
        all select
            id,
            vin,
            owner,
            4 as clazz_ 
        from
            Pickup 
        union
        all select
            id,
            vin,
            owner,
            1 as clazz_ 
        from
            Car 
        union
        all select
            id,
            vin,
            owner,
            2 as clazz_ 
        from
            Truck 
    ) vehicle0_
14:13:14,759 DEBUG SQL:104 - 
    delete 
    from
        Truck
14:13:14,778 DEBUG SQL:104 - 
    select
        vehicle0_.id as id29_,
        vehicle0_.vin as vin29_,
        vehicle0_.owner as owner29_,
        vehicle0_.clazz_ as clazz_ 
    from
        ( select
            id,
            vin,
            owner,
            3 as clazz_ 
        from
            SUV 
        union
        all select
            id,
            vin,
            owner,
            4 as clazz_ 
        from
            Pickup 
        union
        all select
            id,
            vin,
            owner,
            1 as clazz_ 
        from
            Car 
        union
        all select
            id,
            vin,
            owner,
            2 as clazz_ 
        from
            Truck 
    ) vehicle0_
14:13:14,789 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.hql.Car where owner = 'Kirsten'
14:13:14,790 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'org'
    |           |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  \-[IDENT] Node: 'test'
    |           |  \-[IDENT] Node: 'hql'
    |           \-[IDENT] Node: 'Car'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'owner'
          \-[QUOTED_STRING] Node: ''Kirsten''

14:13:14,799 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:14,799 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Car (<no alias>) -> car0_
14:13:14,799 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:14,800 DEBUG DotNode:599 - getDataType() : owner -> org.hibernate.type.StringType@2dc8de40
14:13:14,800 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.owner -> car0_.owner
14:13:14,800 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Car car0_ ) ( where ( = ( car0_.owner {synthetic-alias} owner ) 'Kirsten' ) ) )
14:13:14,800 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:13:14,800 DEBUG JoinProcessor:175 - Using FROM fragment [Car car0_]
14:13:14,800 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Car,Vehicle)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'car0_.id as id29_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Car,tableAlias=car0_,origin=null,columns={,className=org.hibernate.test.hql.Car}}}
    |  \-[SQL_TOKEN] SqlFragment: 'car0_.vin as vin29_, car0_.owner as owner29_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[car0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Car car0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Car,tableAlias=car0_,origin=null,columns={,className=org.hibernate.test.hql.Car}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'car0_.owner' {propertyName=owner,dereferenceType=ALL,propertyPath=owner,path={synthetic-alias}.owner,tableAlias=car0_,className=org.hibernate.test.hql.Car,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'owner' {originalText=owner}
          \-[QUOTED_STRING] LiteralNode: ''Kirsten''

14:13:14,800 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:14,801 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.hql.Car where owner = 'Kirsten'
14:13:14,801 DEBUG QueryTranslatorImpl:236 - SQL: select car0_.id as id29_, car0_.vin as vin29_, car0_.owner as owner29_ from Car car0_ where car0_.owner='Kirsten'
14:13:14,801 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:14,801 DEBUG SQL:104 - 
    select
        car0_.id as id29_,
        car0_.vin as vin29_,
        car0_.owner as owner29_ 
    from
        Car car0_ 
    where
        car0_.owner='Kirsten'
14:13:14,802 DEBUG SQL:104 - 
    update
        Car 
    set
        vin=?,
        owner=? 
    where
        id=?
14:13:14,802 DEBUG SQL:104 - 
    delete 
    from
        Car 
    where
        owner = ?
14:13:14,803 DEBUG SQL:104 - 
    delete 
    from
        Car 
    where
        owner = ?
14:13:14,803 DEBUG SQL:104 - 
    delete 
    from
        SUV 
    where
        owner = ?
14:13:14,811 DEBUG SQL:104 - 
    delete 
    from
        SUV 
    where
        owner = ?
14:13:14,812 DEBUG SQL:104 - 
    delete 
    from
        Pickup
14:13:14,812 DEBUG SQL:104 - 
    select
        vehicle0_.id as id29_,
        vehicle0_.vin as vin29_,
        vehicle0_.owner as owner29_,
        vehicle0_.clazz_ as clazz_ 
    from
        ( select
            id,
            vin,
            owner,
            3 as clazz_ 
        from
            SUV 
        union
        all select
            id,
            vin,
            owner,
            4 as clazz_ 
        from
            Pickup 
        union
        all select
            id,
            vin,
            owner,
            1 as clazz_ 
        from
            Car 
        union
        all select
            id,
            vin,
            owner,
            2 as clazz_ 
        from
            Truck 
    ) vehicle0_
14:13:14,823 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_ 
        where
            animal0_.mother_id is not null 
            or animal0_.father_id is not null
14:13:14,823 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,824 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,843 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,844 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,854 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,854 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,864 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,865 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,865 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:14,875 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_
14:13:14,875 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,875 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,885 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,886 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,897 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,897 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,897 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,906 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:14,906 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:14,906 DEBUG SQL:104 - 
    delete 
    from
        Zoo
14:13:14,907 DEBUG SQL:104 - 
    insert 
    into
        HT_Joiner
        select
            joiner0_.id as id 
        from
            Joiner joiner0_ 
        inner join
            JOINED joiner0_1_ 
                on joiner0_.id=joiner0_1_.ID
14:13:14,917 DEBUG SQL:104 - 
    delete 
    from
        JOINED 
    where
        (
            ID
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:14,918 DEBUG SQL:104 - 
    delete 
    from
        Joiner 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:14,928 DEBUG SQL:104 - 
    delete 
    from
        HT_Joiner
14:13:14,929 DEBUG SQL:104 - 
    insert 
    into
        HT_Vehicle
        select
            vehicle0_.id as id 
        from
            ( select
                id,
                vin,
                owner,
                3 as clazz_ 
            from
                SUV 
            union
            all select
                id,
                vin,
                owner,
                4 as clazz_ 
            from
                Pickup 
            union
            all select
                id,
                vin,
                owner,
                1 as clazz_ 
            from
                Car 
            union
            all select
                id,
                vin,
                owner,
                2 as clazz_ 
            from
                Truck 
        ) vehicle0_
14:13:14,930 DEBUG SQL:104 - 
    delete 
    from
        Car 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:14,940 DEBUG SQL:104 - 
    delete 
    from
        Truck 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:14,940 DEBUG SQL:104 - 
    delete 
    from
        SUV 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:14,940 DEBUG SQL:104 - 
    delete 
    from
        Pickup 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:14,950 DEBUG SQL:104 - 
    delete 
    from
        HT_Vehicle
14:13:14,951 DEBUG SQL:104 - 
    delete 
    from
        BooleanLiteralEntity
14:13:14,951  INFO CustomRunner:139 - Test: testTempTableGenerationIsolation
14:13:14,952 DEBUG SQL:104 - 
    insert 
    into
        Truck
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:14,953 DEBUG SQL:104 - 
    insert 
    into
        HT_Vehicle
        select
            vehicle0_.id as id 
        from
            ( select
                id,
                vin,
                owner,
                3 as clazz_ 
            from
                SUV 
            union
            all select
                id,
                vin,
                owner,
                4 as clazz_ 
            from
                Pickup 
            union
            all select
                id,
                vin,
                owner,
                1 as clazz_ 
            from
                Car 
            union
            all select
                id,
                vin,
                owner,
                2 as clazz_ 
            from
                Truck 
        ) vehicle0_
14:13:14,974 DEBUG SQL:104 - 
    delete 
    from
        Car 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:14,985 DEBUG SQL:104 - 
    delete 
    from
        Truck 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:14,986 DEBUG SQL:104 - 
    delete 
    from
        SUV 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:14,986 DEBUG SQL:104 - 
    delete 
    from
        Pickup 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:14,986 DEBUG SQL:104 - 
    delete 
    from
        HT_Vehicle
14:13:14,987 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.hql.Car
14:13:14,988 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'hql'
                \-[IDENT] Node: 'Car'

14:13:14,988 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:14,988 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Car (<no alias>) -> car0_
14:13:14,988 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Car car0_ ) )
14:13:14,988 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:13:14,988 DEBUG JoinProcessor:175 - Using FROM fragment [Car car0_]
14:13:14,989 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Car,Vehicle)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'car0_.id as id29_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Car,tableAlias=car0_,origin=null,columns={,className=org.hibernate.test.hql.Car}}}
    |  \-[SQL_TOKEN] SqlFragment: 'car0_.vin as vin29_, car0_.owner as owner29_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[car0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Car car0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Car,tableAlias=car0_,origin=null,columns={,className=org.hibernate.test.hql.Car}}

14:13:15,008 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,008 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.hql.Car
14:13:15,008 DEBUG QueryTranslatorImpl:236 - SQL: select car0_.id as id29_, car0_.vin as vin29_, car0_.owner as owner29_ from Car car0_
14:13:15,008 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,009 DEBUG SQL:104 - 
    select
        car0_.id as id29_,
        car0_.vin as vin29_,
        car0_.owner as owner29_ 
    from
        Car car0_
14:13:15,010 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete from org.hibernate.test.hql.Car
14:13:15,010 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'hql'
             \-[IDENT] Node: 'Car'

14:13:15,010 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,011 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Car (<no alias>) -> car0_
14:13:15,018 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Car,Vehicle)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[car0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Car' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Car,tableAlias=car0_,origin=null,columns={,className=org.hibernate.test.hql.Car}}

14:13:15,018 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,018 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,019 DEBUG SQL:104 - 
    delete 
    from
        Car
14:13:15,019  INFO CustomRunner:139 - Test: testUpdateNonExistentEntity
14:13:15,021 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update NonExistentEntity e set e.someProp = ?
14:13:15,021 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[IDENT] Node: 'NonExistentEntity'
    |     \-[ALIAS] Node: 'e'
    \-[SET] Node: 'set'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'someProp'
          \-[PARAM] Node: '?'

14:13:15,021 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,027  INFO CustomRunner:139 - Test: testUpdateOnAnimal
14:13:15,028 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:15,029 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:15,029 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:15,029 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:15,030 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:15,036 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:15,037 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:15,037 DEBUG SQL:104 - 
    insert 
    into
        Dog
        (mammal) 
    values
        (?)
14:13:15,037 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:15,045 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:15,045 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:15,046 DEBUG SQL:104 - 
    insert 
    into
        Cat
        (mammal) 
    values
        (?)
14:13:15,046 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:13:15,055 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'P')
14:13:15,056 DEBUG SQL:104 - 
    insert 
    into
        Joiner
        (id, name) 
    values
        (null, ?)
14:13:15,056 DEBUG SQL:104 - 
    insert 
    into
        JOINED
        (joinedName, ID) 
    values
        (?, ?)
14:13:15,057 DEBUG SQL:104 - 
    insert 
    into
        Car
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:15,057 DEBUG SQL:104 - 
    insert 
    into
        Truck
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:15,057 DEBUG SQL:104 - 
    insert 
    into
        SUV
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:15,057 DEBUG SQL:104 - 
    insert 
    into
        Pickup
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:15,057 DEBUG SQL:104 - 
    insert 
    into
        BooleanLiteralEntity
        (id, Y_N_BOOL, T_F_BOOL, NUM_BOOL) 
    values
        (null, ?, ?, ?)
14:13:15,058 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:15,066 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:15,066 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:15,076 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:15,077 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update org.hibernate.test.hql.Animal set description = description where description = :desc
14:13:15,077 DEBUG ErrorCounter:63 - Keyword  'desc' is being interpreted as an identifier due to: expecting IDENT, found 'desc'
14:13:15,078 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'Animal'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[IDENT] Node: 'description'
    |     \-[IDENT] Node: 'description'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'description'
          \-[COLON] Node: ':'
             \-[WEIRD_IDENT] Node: 'desc'

14:13:15,078 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,078 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Animal (<no alias>) -> animal0_
14:13:15,078 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:15,078 DEBUG DotNode:599 - getDataType() : description -> org.hibernate.type.StringType@2dc8de40
14:13:15,079 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.description -> description
14:13:15,079 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:15,079 DEBUG DotNode:599 - getDataType() : description -> org.hibernate.type.StringType@2dc8de40
14:13:15,079 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.description -> description
14:13:15,079 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:15,079 DEBUG DotNode:599 - getDataType() : description -> org.hibernate.type.StringType@2dc8de40
14:13:15,079 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.description -> animal0_.description
14:13:15,079 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (Animal)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[animal0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Animal' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Animal,tableAlias=animal0_,origin=null,columns={,className=org.hibernate.test.hql.Animal}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'description' {propertyName=description,dereferenceType=ALL,propertyPath=description,path={synthetic-alias}.description,tableAlias=animal0_,className=org.hibernate.test.hql.Animal,classAlias=null}
    |     |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |     |  \-[IDENT] IdentNode: 'description' {originalText=description}
    |     \-[DOT] DotNode: 'description' {propertyName=description,dereferenceType=ALL,propertyPath=description,path={synthetic-alias}.description,tableAlias=animal0_,className=org.hibernate.test.hql.Animal,classAlias=null}
    |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |        \-[IDENT] IdentNode: 'description' {originalText=description}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'animal0_.description' {propertyName=description,dereferenceType=ALL,propertyPath=description,path={synthetic-alias}.description,tableAlias=animal0_,className=org.hibernate.test.hql.Animal,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'description' {originalText=description}
          \-[NAMED_PARAM] ParameterNode: '?' {name=desc, expectedType=org.hibernate.type.StringType@2dc8de40}

14:13:15,096 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,096 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_ 
        where
            animal0_.description=?
14:13:15,097 DEBUG SQL:104 - 
    update
        Animal 
    set
        description=description 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,105 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:15,105 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update org.hibernate.test.hql.Animal set description = :newDesc where description = :desc
14:13:15,106 DEBUG ErrorCounter:63 - Keyword  'desc' is being interpreted as an identifier due to: expecting IDENT, found 'desc'
14:13:15,106 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'Animal'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[IDENT] Node: 'description'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newDesc'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'description'
          \-[COLON] Node: ':'
             \-[WEIRD_IDENT] Node: 'desc'

14:13:15,114 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,114 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Animal (<no alias>) -> animal0_
14:13:15,115 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:15,115 DEBUG DotNode:599 - getDataType() : description -> org.hibernate.type.StringType@2dc8de40
14:13:15,115 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.description -> description
14:13:15,115 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:15,115 DEBUG DotNode:599 - getDataType() : description -> org.hibernate.type.StringType@2dc8de40
14:13:15,115 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.description -> animal0_.description
14:13:15,115 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (Animal)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[animal0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Animal' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Animal,tableAlias=animal0_,origin=null,columns={,className=org.hibernate.test.hql.Animal}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'description' {propertyName=description,dereferenceType=ALL,propertyPath=description,path={synthetic-alias}.description,tableAlias=animal0_,className=org.hibernate.test.hql.Animal,classAlias=null}
    |     |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |     |  \-[IDENT] IdentNode: 'description' {originalText=description}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newDesc, expectedType=org.hibernate.type.StringType@2dc8de40}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'animal0_.description' {propertyName=description,dereferenceType=ALL,propertyPath=description,path={synthetic-alias}.description,tableAlias=animal0_,className=org.hibernate.test.hql.Animal,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'description' {originalText=description}
          \-[NAMED_PARAM] ParameterNode: '?' {name=desc, expectedType=org.hibernate.type.StringType@2dc8de40}

14:13:15,138 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,139 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_ 
        where
            animal0_.description=?
14:13:15,139 DEBUG SQL:104 - 
    update
        Animal 
    set
        description=? 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,140 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:15,140 DEBUG SQL:104 - 
    select
        animal0_.id as id0_0_,
        animal0_.description as descript2_0_0_,
        animal0_.body_weight as body3_0_0_,
        animal0_.mother_id as mother4_0_0_,
        animal0_.father_id as father5_0_0_,
        animal0_.zoo_id as zoo6_0_0_,
        animal0_.serialNumber as serialNu7_0_0_,
        animal0_1_.bodyTemperature as bodyTemp2_21_0_,
        animal0_3_.pregnant as pregnant18_0_,
        animal0_3_.birthdate as birthdate18_0_,
        animal0_4_.owner as owner6_0_,
        animal0_7_.name_first as name2_8_0_,
        animal0_7_.name_initial as name3_8_0_,
        animal0_7_.name_last as name4_8_0_,
        animal0_7_.nickName as nickName8_0_,
        animal0_7_.height_centimeters / 2.54E0 as height6_8_0_,
        animal0_7_.intValue as intValue8_0_,
        animal0_7_.floatValue as floatValue8_0_,
        animal0_7_.bigDecimalValue as bigDecim9_8_0_,
        animal0_7_.bigIntegerValue as bigInte10_8_0_,
        case 
            when animal0_2_.reptile is not null then 2 
            when animal0_5_.mammal is not null then 5 
            when animal0_6_.mammal is not null then 6 
            when animal0_4_.mammal is not null then 4 
            when animal0_7_.mammal is not null then 7 
            when animal0_1_.animal is not null then 1 
            when animal0_3_.animal is not null then 3 
            when animal0_.id is not null then 0 
        end as clazz_0_ 
    from
        Animal animal0_ 
    left outer join
        Reptile animal0_1_ 
            on animal0_.id=animal0_1_.animal 
    left outer join
        Lizard animal0_2_ 
            on animal0_.id=animal0_2_.reptile 
    left outer join
        Mammal animal0_3_ 
            on animal0_.id=animal0_3_.animal 
    left outer join
        DomesticAnimal animal0_4_ 
            on animal0_.id=animal0_4_.mammal 
    left outer join
        Cat animal0_5_ 
            on animal0_.id=animal0_5_.mammal 
    left outer join
        Dog animal0_6_ 
            on animal0_.id=animal0_6_.mammal 
    left outer join
        Human animal0_7_ 
            on animal0_.id=animal0_7_.mammal 
    where
        animal0_.id=?
14:13:15,164 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update org.hibernate.test.hql.Animal set bodyWeight = bodyWeight + :w1 + :w2
14:13:15,165 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'Animal'
    \-[SET] Node: 'set'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'bodyWeight'
          \-[PLUS] Node: '+'
             +-[PLUS] Node: '+'
             |  +-[IDENT] Node: 'bodyWeight'
             |  \-[COLON] Node: ':'
             |     \-[IDENT] Node: 'w1'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'w2'

14:13:15,165 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,165 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Animal (<no alias>) -> animal0_
14:13:15,165 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:15,165 DEBUG DotNode:599 - getDataType() : bodyWeight -> org.hibernate.type.FloatType@39fd378e
14:13:15,165 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.bodyWeight -> body_weight
14:13:15,165 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:15,169 DEBUG DotNode:599 - getDataType() : bodyWeight -> org.hibernate.type.FloatType@39fd378e
14:13:15,169 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.bodyWeight -> body_weight
14:13:15,169 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (Animal)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[animal0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Animal' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Animal,tableAlias=animal0_,origin=null,columns={,className=org.hibernate.test.hql.Animal}}
    \-[SET] SqlNode: 'set'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'body_weight' {propertyName=bodyWeight,dereferenceType=ALL,propertyPath=bodyWeight,path={synthetic-alias}.bodyWeight,tableAlias=animal0_,className=org.hibernate.test.hql.Animal,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'bodyWeight' {originalText=bodyWeight}
          \-[PLUS] BinaryArithmeticOperatorNode: '+' {dataType=org.hibernate.type.FloatType@39fd378e}
             +-[PLUS] BinaryArithmeticOperatorNode: '+' {dataType=org.hibernate.type.FloatType@39fd378e}
             |  +-[DOT] DotNode: 'body_weight' {propertyName=bodyWeight,dereferenceType=ALL,propertyPath=bodyWeight,path={synthetic-alias}.bodyWeight,tableAlias=animal0_,className=org.hibernate.test.hql.Animal,classAlias=null}
             |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  |  \-[IDENT] IdentNode: 'bodyWeight' {originalText=bodyWeight}
             |  \-[NAMED_PARAM] ParameterNode: '?' {name=w1, expectedType=org.hibernate.type.FloatType@39fd378e}
             \-[NAMED_PARAM] ParameterNode: '?' {name=w2, expectedType=org.hibernate.type.FloatType@39fd378e}

14:13:15,170 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,170 DEBUG UpdateStatement:73 - getWhereClause() : Creating a new WHERE clause...
14:13:15,170 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_
14:13:15,171 DEBUG SQL:104 - 
    update
        Animal 
    set
        body_weight=body_weight+?+? 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,182 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:15,182 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update org.hibernate.test.hql.Animal set bodyWeight = ( select max(bodyWeight) from Animal )
14:13:15,183 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'Animal'
    \-[SET] Node: 'set'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'bodyWeight'
          \-[QUERY] Node: 'query'
             \-[SELECT_FROM] Node: 'SELECT_FROM'
                +-[FROM] Node: 'from'
                |  \-[RANGE] Node: 'RANGE'
                |     \-[IDENT] Node: 'Animal'
                \-[SELECT] Node: 'select'
                   \-[AGGREGATE] Node: 'max'
                      \-[IDENT] Node: 'bodyWeight'

14:13:15,184 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,184 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Animal (<no alias>) -> animal0_
14:13:15,184 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:15,185 DEBUG DotNode:599 - getDataType() : bodyWeight -> org.hibernate.type.FloatType@39fd378e
14:13:15,185 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.bodyWeight -> body_weight
14:13:15,185 DEBUG FromElement:157 - FromClause{level=2} : Animal (<no alias>) -> animal1_
14:13:15,185 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:15,185 DEBUG DotNode:599 - getDataType() : bodyWeight -> org.hibernate.type.FloatType@39fd378e
14:13:15,185 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.bodyWeight -> animal1_.body_weight
14:13:15,185 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( max ( animal1_.body_weight {synthetic-alias} bodyWeight ) ) ) ( FromClause{level=2} Animal animal1_ ) )
14:13:15,186 DEBUG JoinProcessor:175 - Using FROM fragment [Animal animal1_]
14:13:15,186 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (Animal)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[animal0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Animal' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Animal,tableAlias=animal0_,origin=null,columns={,className=org.hibernate.test.hql.Animal}}
    \-[SET] SqlNode: 'set'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'body_weight' {propertyName=bodyWeight,dereferenceType=ALL,propertyPath=bodyWeight,path={synthetic-alias}.bodyWeight,tableAlias=animal0_,className=org.hibernate.test.hql.Animal,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'bodyWeight' {originalText=bodyWeight}
          \-[SELECT] QueryNode: 'SELECT'  querySpaces (Animal)
             +-[SELECT_CLAUSE] SelectClause: '{select clause}'
             |  \-[AGGREGATE] AggregateNode: 'max'
             |     \-[DOT] DotNode: 'animal1_.body_weight' {propertyName=bodyWeight,dereferenceType=ALL,propertyPath=bodyWeight,path={synthetic-alias}.bodyWeight,tableAlias=animal1_,className=Animal,classAlias=null}
             |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |        \-[IDENT] IdentNode: 'bodyWeight' {originalText=bodyWeight}
             \-[FROM] FromClause: 'from' FromClause{level=2, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[animal1_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
                \-[FROM_FRAGMENT] FromElement: 'Animal animal1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Animal,tableAlias=animal1_,origin=null,columns={,className=Animal}}

14:13:15,194 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,195 DEBUG UpdateStatement:73 - getWhereClause() : Creating a new WHERE clause...
14:13:15,196 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_
14:13:15,196 DEBUG SQL:104 - 
    update
        Animal 
    set
        body_weight=(select
            max(animal1_.body_weight) 
        from
            Animal animal1_) 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,207 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:15,208 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_ 
        where
            animal0_.mother_id is not null 
            or animal0_.father_id is not null
14:13:15,208 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,208 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,230 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,230 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,231 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,241 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,241 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,250 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,250 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:15,251 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_
14:13:15,261 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,261 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,261 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,271 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,272 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,282 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,282 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,292 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,294 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:15,294 DEBUG SQL:104 - 
    delete 
    from
        Zoo
14:13:15,295 DEBUG SQL:104 - 
    insert 
    into
        HT_Joiner
        select
            joiner0_.id as id 
        from
            Joiner joiner0_ 
        inner join
            JOINED joiner0_1_ 
                on joiner0_.id=joiner0_1_.ID
14:13:15,303 DEBUG SQL:104 - 
    delete 
    from
        JOINED 
    where
        (
            ID
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:15,305 DEBUG SQL:104 - 
    delete 
    from
        Joiner 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:15,305 DEBUG SQL:104 - 
    delete 
    from
        HT_Joiner
14:13:15,305 DEBUG SQL:104 - 
    insert 
    into
        HT_Vehicle
        select
            vehicle0_.id as id 
        from
            ( select
                id,
                vin,
                owner,
                3 as clazz_ 
            from
                SUV 
            union
            all select
                id,
                vin,
                owner,
                4 as clazz_ 
            from
                Pickup 
            union
            all select
                id,
                vin,
                owner,
                1 as clazz_ 
            from
                Car 
            union
            all select
                id,
                vin,
                owner,
                2 as clazz_ 
            from
                Truck 
        ) vehicle0_
14:13:15,318 DEBUG SQL:104 - 
    delete 
    from
        Car 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:15,319 DEBUG SQL:104 - 
    delete 
    from
        Truck 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:15,331 DEBUG SQL:104 - 
    delete 
    from
        SUV 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:15,332 DEBUG SQL:104 - 
    delete 
    from
        Pickup 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:15,332 DEBUG SQL:104 - 
    delete 
    from
        HT_Vehicle
14:13:15,332 DEBUG SQL:104 - 
    delete 
    from
        BooleanLiteralEntity
14:13:15,333  INFO CustomRunner:139 - Test: testUpdateOnComponent
14:13:15,334 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:15,352 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:15,353 DEBUG SQL:104 - 
    insert 
    into
        Human
        (name_first, name_initial, name_last, nickName, height_centimeters, intValue, floatValue, bigDecimalValue, bigIntegerValue, mammal) 
    values
        (?, ?, ?, ?, ? * 2.54E0, ?, ?, ?, ?, ?)
14:13:15,353 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update org.hibernate.test.hql.Human set name.first = :correction where id = :id
14:13:15,355 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'Human'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'name'
    |     |  \-[IDENT] Node: 'first'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'correction'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

14:13:15,365 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,366 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Human (<no alias>) -> human0_
14:13:15,366 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:15,366 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.ComponentType@697a4b4b
14:13:15,366 DEBUG DotNode:585 - Unresolved property path is now 'name.first'
14:13:15,366 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> name_first
14:13:15,366 DEBUG DotNode:599 - getDataType() : name.first -> org.hibernate.type.StringType@2dc8de40
14:13:15,366 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name.first -> name_first
14:13:15,367 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:15,367 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.LongType@4bf3f9d
14:13:15,367 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.id -> human0_.mammal
14:13:15,367 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (Human,Animal,Mammal)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[human0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Human' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Human,tableAlias=human0_,origin=null,columns={,className=org.hibernate.test.hql.Human}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'name_first' {propertyName=first,dereferenceType=ALL,propertyPath=name.first,path={synthetic-alias}.name.first,tableAlias=human0_,className=org.hibernate.test.hql.Human,classAlias=null}
    |     |  +-[DOT] DotNode: 'name_first' {propertyName=first,dereferenceType=2,propertyPath=name.first,path={synthetic-alias}.name,tableAlias=human0_,className=org.hibernate.test.hql.Human,classAlias=null}
    |     |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |     |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |     |  \-[IDENT] IdentNode: 'first' {originalText=first}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=correction, expectedType=org.hibernate.type.StringType@2dc8de40}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'human0_.mammal' {propertyName=id,dereferenceType=ALL,propertyPath=id,path={synthetic-alias}.id,tableAlias=human0_,className=org.hibernate.test.hql.Human,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.LongType@4bf3f9d}

14:13:15,376 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,377 DEBUG SQL:104 - 
    insert 
    into
        HT_Human
        select
            human0_.mammal as mammal 
        from
            Human human0_ 
        inner join
            Mammal human0_1_ 
                on human0_.mammal=human0_1_.animal 
        inner join
            Animal human0_2_ 
                on human0_.mammal=human0_2_.id 
        where
            human0_.mammal=?
14:13:15,386 DEBUG SQL:104 - 
    update
        Human 
    set
        name_first=? 
    where
        (
            mammal
        ) IN (
            select
                mammal 
            from
                HT_Human
        )
14:13:15,387 DEBUG SQL:104 - 
    delete 
    from
        HT_Human
14:13:15,387 DEBUG SQL:104 - 
    select
        human0_.mammal as id0_0_,
        human0_2_.description as descript2_0_0_,
        human0_2_.body_weight as body3_0_0_,
        human0_2_.mother_id as mother4_0_0_,
        human0_2_.father_id as father5_0_0_,
        human0_2_.zoo_id as zoo6_0_0_,
        human0_2_.serialNumber as serialNu7_0_0_,
        human0_1_.pregnant as pregnant18_0_,
        human0_1_.birthdate as birthdate18_0_,
        human0_.name_first as name2_8_0_,
        human0_.name_initial as name3_8_0_,
        human0_.name_last as name4_8_0_,
        human0_.nickName as nickName8_0_,
        human0_.height_centimeters / 2.54E0 as height6_8_0_,
        human0_.intValue as intValue8_0_,
        human0_.floatValue as floatValue8_0_,
        human0_.bigDecimalValue as bigDecim9_8_0_,
        human0_.bigIntegerValue as bigInte10_8_0_ 
    from
        Human human0_ 
    inner join
        Mammal human0_1_ 
            on human0_.mammal=human0_1_.animal 
    inner join
        Animal human0_2_ 
            on human0_.mammal=human0_2_.id 
    where
        human0_.mammal=?
14:13:15,397 DEBUG SQL:104 - 
    select
        nicknames0_.human as human0_0_,
        nicknames0_.nick_name as nick2_38_0_ 
    from
        human_nick_names nicknames0_ 
    where
        nicknames0_.human=?
14:13:15,407 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.hql.Human
14:13:15,408 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'hql'
             \-[IDENT] Node: 'Human'

14:13:15,408 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,408 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Human (<no alias>) -> human0_
14:13:15,409 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Human,Animal,Mammal)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[human0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Human' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Human,tableAlias=human0_,origin=null,columns={,className=org.hibernate.test.hql.Human}}

14:13:15,409 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,409 DEBUG DeleteStatement:73 - getWhereClause() : Creating a new WHERE clause...
14:13:15,409 DEBUG SQL:104 - 
    insert 
    into
        HT_Human
        select
            human0_.mammal as mammal 
        from
            Human human0_ 
        inner join
            Mammal human0_1_ 
                on human0_.mammal=human0_1_.animal 
        inner join
            Animal human0_2_ 
                on human0_.mammal=human0_2_.id
14:13:15,418 DEBUG SQL:104 - 
    delete 
    from
        Human_friends 
    where
        (
            human1
        ) IN (
            select
                mammal 
            from
                HT_Human
        )
14:13:15,418 DEBUG SQL:104 - 
    delete 
    from
        Human_family 
    where
        (
            human1
        ) IN (
            select
                mammal 
            from
                HT_Human
        )
14:13:15,418 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                mammal 
            from
                HT_Human
        )
14:13:15,419 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                mammal 
            from
                HT_Human
        )
14:13:15,419 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                mammal 
            from
                HT_Human
        )
14:13:15,430 DEBUG SQL:104 - 
    delete 
    from
        HT_Human
14:13:15,431  INFO CustomRunner:139 - Test: testUpdateOnDiscriminatorSubclass
14:13:15,432 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:15,432 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:15,432 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:15,433 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:15,442 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:15,443 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:15,443 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:15,443 DEBUG SQL:104 - 
    insert 
    into
        Dog
        (mammal) 
    values
        (?)
14:13:15,452 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:15,452 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:15,453 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:15,453 DEBUG SQL:104 - 
    insert 
    into
        Cat
        (mammal) 
    values
        (?)
14:13:15,453 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:13:15,453 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'P')
14:13:15,474 DEBUG SQL:104 - 
    insert 
    into
        Joiner
        (id, name) 
    values
        (null, ?)
14:13:15,475 DEBUG SQL:104 - 
    insert 
    into
        JOINED
        (joinedName, ID) 
    values
        (?, ?)
14:13:15,475 DEBUG SQL:104 - 
    insert 
    into
        Car
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:15,475 DEBUG SQL:104 - 
    insert 
    into
        Truck
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:15,483 DEBUG SQL:104 - 
    insert 
    into
        SUV
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:15,483 DEBUG SQL:104 - 
    insert 
    into
        Pickup
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:15,484 DEBUG SQL:104 - 
    insert 
    into
        BooleanLiteralEntity
        (id, Y_N_BOOL, T_F_BOOL, NUM_BOOL) 
    values
        (null, ?, ?, ?)
14:13:15,484 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:15,494 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:15,495 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:15,495 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:15,504 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update org.hibernate.test.hql.PettingZoo set name = name
14:13:15,505 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'PettingZoo'
    \-[SET] Node: 'set'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'name'
          \-[IDENT] Node: 'name'

14:13:15,505 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,506 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.PettingZoo (<no alias>) -> pettingzoo0_
14:13:15,506 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:15,506 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:13:15,506 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> name
14:13:15,506 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:15,506 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:13:15,506 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> name
14:13:15,506 DEBUG UpdateStatement:73 - getWhereClause() : Creating a new WHERE clause...
14:13:15,515 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (Zoo)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[pettingzoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Zoo,tableAlias=pettingzoo0_,origin=null,columns={,className=org.hibernate.test.hql.PettingZoo}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=pettingzoo0_,className=org.hibernate.test.hql.PettingZoo,classAlias=null}
    |     |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |     \-[DOT] DotNode: 'name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=pettingzoo0_,className=org.hibernate.test.hql.PettingZoo,classAlias=null}
    |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |        \-[IDENT] IdentNode: 'name' {originalText=name}
    \-[WHERE] SqlNode: 'WHERE'
       \-[SQL_TOKEN] SqlFragment: 'zooType='P''

14:13:15,515 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,516 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,516 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=name 
    where
        zooType='P'
14:13:15,516 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update org.hibernate.test.hql.PettingZoo pz set pz.name = pz.name where pz.id = :id
14:13:15,518 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'org'
    |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |     |  |  |  \-[IDENT] Node: 'test'
    |     |  |  \-[IDENT] Node: 'hql'
    |     |  \-[IDENT] Node: 'PettingZoo'
    |     \-[ALIAS] Node: 'pz'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'pz'
    |     |  \-[IDENT] Node: 'name'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'pz'
    |        \-[IDENT] Node: 'name'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'pz'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

14:13:15,550 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,552 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.PettingZoo (pz) -> pettingzoo0_
14:13:15,552 DEBUG FromReferenceNode:74 - Resolved : pz -> id
14:13:15,552 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:13:15,553 DEBUG FromReferenceNode:74 - Resolved : pz.name -> name
14:13:15,553 DEBUG FromReferenceNode:74 - Resolved : pz -> id
14:13:15,553 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:13:15,553 DEBUG FromReferenceNode:74 - Resolved : pz.name -> name
14:13:15,553 DEBUG FromReferenceNode:74 - Resolved : pz -> id
14:13:15,553 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.LongType@4bf3f9d
14:13:15,553 DEBUG FromReferenceNode:74 - Resolved : pz.id -> id
14:13:15,554 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (Zoo)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[pz], fromElementByTableAlias=[pettingzoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=pz,role=null,tableName=Zoo,tableAlias=pettingzoo0_,origin=null,columns={,className=org.hibernate.test.hql.PettingZoo}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=pz.name,tableAlias=pettingzoo0_,className=org.hibernate.test.hql.PettingZoo,classAlias=pz}
    |     |  +-[ALIAS_REF] IdentNode: 'id' {alias=pz, className=org.hibernate.test.hql.PettingZoo, tableAlias=pettingzoo0_}
    |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |     \-[DOT] DotNode: 'name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=pz.name,tableAlias=pettingzoo0_,className=org.hibernate.test.hql.PettingZoo,classAlias=pz}
    |        +-[ALIAS_REF] IdentNode: 'id' {alias=pz, className=org.hibernate.test.hql.PettingZoo, tableAlias=pettingzoo0_}
    |        \-[IDENT] IdentNode: 'name' {originalText=name}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: '{and}'
          +-[SQL_TOKEN] SqlFragment: 'zooType='P''
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path=pz.id,tableAlias=pettingzoo0_,className=org.hibernate.test.hql.PettingZoo,classAlias=pz}
             |  +-[ALIAS_REF] IdentNode: 'id' {alias=pz, className=org.hibernate.test.hql.PettingZoo, tableAlias=pettingzoo0_}
             |  \-[IDENT] IdentNode: 'id' {originalText=id}
             \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.LongType@4bf3f9d}

14:13:15,554 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,554 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,554 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=name 
    where
        zooType='P' 
        and id=?
14:13:15,555 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update org.hibernate.test.hql.Zoo as z set z.name = z.name
14:13:15,556 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'org'
    |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |     |  |  |  \-[IDENT] Node: 'test'
    |     |  |  \-[IDENT] Node: 'hql'
    |     |  \-[IDENT] Node: 'Zoo'
    |     \-[ALIAS] Node: 'z'
    \-[SET] Node: 'set'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'z'
          |  \-[IDENT] Node: 'name'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'z'
             \-[IDENT] Node: 'name'

14:13:15,557 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,557 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z) -> zoo0_
14:13:15,557 DEBUG FromReferenceNode:74 - Resolved : z -> id
14:13:15,557 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:13:15,557 DEBUG FromReferenceNode:74 - Resolved : z.name -> name
14:13:15,557 DEBUG FromReferenceNode:74 - Resolved : z -> id
14:13:15,557 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:13:15,558 DEBUG FromReferenceNode:74 - Resolved : z.name -> name
14:13:15,558 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (Zoo)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[z], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    \-[SET] SqlNode: 'set'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
          |  +-[ALIAS_REF] IdentNode: 'id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[DOT] DotNode: 'name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
             +-[ALIAS_REF] IdentNode: 'id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
             \-[IDENT] IdentNode: 'name' {originalText=name}

14:13:15,558 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,558 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,558 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=name
14:13:15,559 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update org.hibernate.test.hql.Zoo as z set name = name where id = :id
14:13:15,559 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'org'
    |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |     |  |  |  \-[IDENT] Node: 'test'
    |     |  |  \-[IDENT] Node: 'hql'
    |     |  \-[IDENT] Node: 'Zoo'
    |     \-[ALIAS] Node: 'z'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[IDENT] Node: 'name'
    |     \-[IDENT] Node: 'name'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

14:13:15,567 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,567 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z) -> zoo0_
14:13:15,567 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:15,568 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:13:15,568 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> name
14:13:15,568 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:15,568 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:13:15,568 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> name
14:13:15,568 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:15,568 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.LongType@4bf3f9d
14:13:15,569 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.id -> id
14:13:15,569 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (Zoo)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[z], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |     |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |     \-[DOT] DotNode: 'name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |        \-[IDENT] IdentNode: 'name' {originalText=name}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path={synthetic-alias}.id,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.LongType@4bf3f9d}

14:13:15,580 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,580 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,581 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=name 
    where
        id=?
14:13:15,581 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_ 
        where
            animal0_.mother_id is not null 
            or animal0_.father_id is not null
14:13:15,582 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,591 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,601 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,602 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,612 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,612 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,613 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,623 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,623 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:15,624 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_
14:13:15,633 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,634 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,642 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,643 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,643 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,653 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,654 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,664 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,665 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:15,665 DEBUG SQL:104 - 
    delete 
    from
        Zoo
14:13:15,665 DEBUG SQL:104 - 
    insert 
    into
        HT_Joiner
        select
            joiner0_.id as id 
        from
            Joiner joiner0_ 
        inner join
            JOINED joiner0_1_ 
                on joiner0_.id=joiner0_1_.ID
14:13:15,675 DEBUG SQL:104 - 
    delete 
    from
        JOINED 
    where
        (
            ID
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:15,676 DEBUG SQL:104 - 
    delete 
    from
        Joiner 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:15,676 DEBUG SQL:104 - 
    delete 
    from
        HT_Joiner
14:13:15,676 DEBUG SQL:104 - 
    insert 
    into
        HT_Vehicle
        select
            vehicle0_.id as id 
        from
            ( select
                id,
                vin,
                owner,
                3 as clazz_ 
            from
                SUV 
            union
            all select
                id,
                vin,
                owner,
                4 as clazz_ 
            from
                Pickup 
            union
            all select
                id,
                vin,
                owner,
                1 as clazz_ 
            from
                Car 
            union
            all select
                id,
                vin,
                owner,
                2 as clazz_ 
            from
                Truck 
        ) vehicle0_
14:13:15,688 DEBUG SQL:104 - 
    delete 
    from
        Car 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:15,700 DEBUG SQL:104 - 
    delete 
    from
        Truck 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:15,700 DEBUG SQL:104 - 
    delete 
    from
        SUV 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:15,700 DEBUG SQL:104 - 
    delete 
    from
        Pickup 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:15,710 DEBUG SQL:104 - 
    delete 
    from
        HT_Vehicle
14:13:15,710 DEBUG SQL:104 - 
    delete 
    from
        BooleanLiteralEntity
14:13:15,720  INFO CustomRunner:139 - Test: testUpdateOnImplicitJoinFails
14:13:15,721 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:15,721 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:15,722 DEBUG SQL:104 - 
    insert 
    into
        Human
        (name_first, name_initial, name_last, nickName, height_centimeters, intValue, floatValue, bigDecimalValue, bigIntegerValue, mammal) 
    values
        (?, ?, ?, ?, ? * 2.54E0, ?, ?, ?, ?, ?)
14:13:15,722 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:15,730 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:15,730 DEBUG SQL:104 - 
    insert 
    into
        Human
        (name_first, name_initial, name_last, nickName, height_centimeters, intValue, floatValue, bigDecimalValue, bigIntegerValue, mammal) 
    values
        (?, ?, ?, ?, ? * 2.54E0, ?, ?, ?, ?, ?)
14:13:15,730 DEBUG SQL:104 - 
    update
        Animal 
    set
        description=?,
        body_weight=?,
        mother_id=?,
        father_id=?,
        zoo_id=?,
        serialNumber=? 
    where
        id=?
14:13:15,731 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update org.hibernate.test.hql.Human set mother.name.initial = :initial
14:13:15,741 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'Human'
    \-[SET] Node: 'set'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'mother'
          |  |  \-[IDENT] Node: 'name'
          |  \-[IDENT] Node: 'initial'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'initial'

14:13:15,742 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,742 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Human (<no alias>) -> human0_
14:13:15,742 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:15,742 DEBUG DotNode:599 - getDataType() : mother -> org.hibernate.type.ManyToOneType(org.hibernate.test.hql.Animal)
14:13:15,743 DEBUG DotNode:389 - dereferenceEntityJoin() : generating join for mother in org.hibernate.test.hql.Human (<no alias>) parent = [  ( . ( {non-qualified-property-ref} {synthetic-alias} mother ) name ) ]
14:13:15,743 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Animal (<no alias>) -> animal1_
14:13:15,743 DEBUG FromClause:282 - addJoinByPathMap() : {synthetic-alias}.mother -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Animal,tableAlias=animal1_,origin=Human human0_,columns={mother_id ,className=org.hibernate.test.hql.Animal}}
14:13:15,743 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.mother -> mother_id
14:13:15,750 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.ComponentType@12ed12ae
14:13:15,751 DEBUG DotNode:585 - Unresolved property path is now 'name.initial'
14:13:15,751 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.mother.name -> name_initial
14:13:15,751 DEBUG DotNode:599 - getDataType() : name.initial -> org.hibernate.type.CharacterType@26ccbcea
14:13:15,751 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.mother.name.initial -> name_initial
14:13:15,751 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.hql.Human where mother is not null
14:13:15,752 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'Human'
    \-[WHERE] Node: 'where'
       \-[IS_NOT_NULL] Node: 'is not null'
          \-[IDENT] Node: 'mother'

14:13:15,752 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,752 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Human (<no alias>) -> human0_
14:13:15,752 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:15,752 DEBUG DotNode:599 - getDataType() : mother -> org.hibernate.type.ManyToOneType(org.hibernate.test.hql.Animal)
14:13:15,753 DEBUG DotNode:562 - dereferenceShortcut() : property mother in org.hibernate.test.hql.Human does not require a join.
14:13:15,753 DEBUG DotNode:588 - Terminal propertyPath = [mother]
14:13:15,753 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.mother -> human0_2_.mother_id
14:13:15,762 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Human,Animal,Mammal)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[human0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Human' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Human,tableAlias=human0_,origin=null,columns={,className=org.hibernate.test.hql.Human}}
    \-[WHERE] SqlNode: 'where'
       \-[IS_NOT_NULL] IsNotNullLogicOperatorNode: 'is not null'
          \-[DOT] DotNode: 'human0_2_.mother_id' {propertyName=mother,dereferenceType=0,propertyPath=mother,path={synthetic-alias}.mother,tableAlias=human0_,className=org.hibernate.test.hql.Human,classAlias=null}
             +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             \-[IDENT] IdentNode: 'mother' {originalText=mother}

14:13:15,763 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,763 DEBUG SQL:104 - 
    insert 
    into
        HT_Human
        select
            human0_.mammal as mammal 
        from
            Human human0_ 
        inner join
            Mammal human0_1_ 
                on human0_.mammal=human0_1_.animal 
        inner join
            Animal human0_2_ 
                on human0_.mammal=human0_2_.id 
        where
            human0_2_.mother_id is not null
14:13:15,764 DEBUG SQL:104 - 
    delete 
    from
        Human_friends 
    where
        (
            human1
        ) IN (
            select
                mammal 
            from
                HT_Human
        )
14:13:15,772 DEBUG SQL:104 - 
    delete 
    from
        Human_family 
    where
        (
            human1
        ) IN (
            select
                mammal 
            from
                HT_Human
        )
14:13:15,773 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                mammal 
            from
                HT_Human
        )
14:13:15,782 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                mammal 
            from
                HT_Human
        )
14:13:15,782 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                mammal 
            from
                HT_Human
        )
14:13:15,793 DEBUG SQL:104 - 
    delete 
    from
        HT_Human
14:13:15,794 DEBUG SQL:104 - 
    insert 
    into
        HT_Human
        select
            human0_.mammal as mammal 
        from
            Human human0_ 
        inner join
            Mammal human0_1_ 
                on human0_.mammal=human0_1_.animal 
        inner join
            Animal human0_2_ 
                on human0_.mammal=human0_2_.id
14:13:15,794 DEBUG SQL:104 - 
    delete 
    from
        Human_friends 
    where
        (
            human1
        ) IN (
            select
                mammal 
            from
                HT_Human
        )
14:13:15,804 DEBUG SQL:104 - 
    delete 
    from
        Human_family 
    where
        (
            human1
        ) IN (
            select
                mammal 
            from
                HT_Human
        )
14:13:15,804 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                mammal 
            from
                HT_Human
        )
14:13:15,804 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                mammal 
            from
                HT_Human
        )
14:13:15,804 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                mammal 
            from
                HT_Human
        )
14:13:15,805 DEBUG SQL:104 - 
    delete 
    from
        HT_Human
14:13:15,816  INFO CustomRunner:139 - Test: testUpdateOnMammal
14:13:15,817 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:15,818 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:15,818 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:15,818 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:15,828 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:15,829 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:15,829 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:15,829 DEBUG SQL:104 - 
    insert 
    into
        Dog
        (mammal) 
    values
        (?)
14:13:15,839 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:15,839 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:15,839 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:15,848 DEBUG SQL:104 - 
    insert 
    into
        Cat
        (mammal) 
    values
        (?)
14:13:15,849 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:13:15,849 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'P')
14:13:15,849 DEBUG SQL:104 - 
    insert 
    into
        Joiner
        (id, name) 
    values
        (null, ?)
14:13:15,859 DEBUG SQL:104 - 
    insert 
    into
        JOINED
        (joinedName, ID) 
    values
        (?, ?)
14:13:15,860 DEBUG SQL:104 - 
    insert 
    into
        Car
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:15,860 DEBUG SQL:104 - 
    insert 
    into
        Truck
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:15,860 DEBUG SQL:104 - 
    insert 
    into
        SUV
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:15,869 DEBUG SQL:104 - 
    insert 
    into
        Pickup
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:15,869 DEBUG SQL:104 - 
    insert 
    into
        BooleanLiteralEntity
        (id, Y_N_BOOL, T_F_BOOL, NUM_BOOL) 
    values
        (null, ?, ?, ?)
14:13:15,870 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:15,890 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:15,890 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:15,890 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:15,891 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update org.hibernate.test.hql.Mammal set description = description
14:13:15,892 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'Mammal'
    \-[SET] Node: 'set'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'description'
          \-[IDENT] Node: 'description'

14:13:15,892 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,893 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Mammal (<no alias>) -> mammal0_
14:13:15,893 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:15,893 DEBUG DotNode:599 - getDataType() : description -> org.hibernate.type.StringType@2dc8de40
14:13:15,893 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.description -> description
14:13:15,893 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:15,893 DEBUG DotNode:599 - getDataType() : description -> org.hibernate.type.StringType@2dc8de40
14:13:15,894 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.description -> description
14:13:15,894 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (Animal,Mammal)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[mammal0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Mammal' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Mammal,tableAlias=mammal0_,origin=null,columns={,className=org.hibernate.test.hql.Mammal}}
    \-[SET] SqlNode: 'set'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'description' {propertyName=description,dereferenceType=ALL,propertyPath=description,path={synthetic-alias}.description,tableAlias=mammal0_,className=org.hibernate.test.hql.Mammal,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'description' {originalText=description}
          \-[DOT] DotNode: 'description' {propertyName=description,dereferenceType=ALL,propertyPath=description,path={synthetic-alias}.description,tableAlias=mammal0_,className=org.hibernate.test.hql.Mammal,classAlias=null}
             +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             \-[IDENT] IdentNode: 'description' {originalText=description}

14:13:15,903 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,903 DEBUG UpdateStatement:73 - getWhereClause() : Creating a new WHERE clause...
14:13:15,904 DEBUG SQL:104 - 
    insert 
    into
        HT_Mammal
        select
            mammal0_.animal as animal 
        from
            Mammal mammal0_ 
        inner join
            Animal mammal0_1_ 
                on mammal0_.animal=mammal0_1_.id
14:13:15,904 DEBUG SQL:104 - 
    update
        Animal 
    set
        description=description 
    where
        (
            id
        ) IN (
            select
                animal 
            from
                HT_Mammal
        )
14:13:15,914 DEBUG SQL:104 - 
    delete 
    from
        HT_Mammal
14:13:15,915 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update org.hibernate.test.hql.Mammal set bodyWeight = 25
14:13:15,916 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'Mammal'
    \-[SET] Node: 'set'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'bodyWeight'
          \-[NUM_INT] Node: '25'

14:13:15,916 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,916 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Mammal (<no alias>) -> mammal0_
14:13:15,916 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:15,916 DEBUG DotNode:599 - getDataType() : bodyWeight -> org.hibernate.type.FloatType@39fd378e
14:13:15,916 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.bodyWeight -> body_weight
14:13:15,917 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (Animal,Mammal)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[mammal0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Mammal' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Mammal,tableAlias=mammal0_,origin=null,columns={,className=org.hibernate.test.hql.Mammal}}
    \-[SET] SqlNode: 'set'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'body_weight' {propertyName=bodyWeight,dereferenceType=ALL,propertyPath=bodyWeight,path={synthetic-alias}.bodyWeight,tableAlias=mammal0_,className=org.hibernate.test.hql.Mammal,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'bodyWeight' {originalText=bodyWeight}
          \-[NUM_INT] LiteralNode: '25'

14:13:15,931 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,931 DEBUG UpdateStatement:73 - getWhereClause() : Creating a new WHERE clause...
14:13:15,931 DEBUG SQL:104 - 
    insert 
    into
        HT_Mammal
        select
            mammal0_.animal as animal 
        from
            Mammal mammal0_ 
        inner join
            Animal mammal0_1_ 
                on mammal0_.animal=mammal0_1_.id
14:13:15,932 DEBUG SQL:104 - 
    update
        Animal 
    set
        body_weight=25 
    where
        (
            id
        ) IN (
            select
                animal 
            from
                HT_Mammal
        )
14:13:15,937 DEBUG SQL:104 - 
    delete 
    from
        HT_Mammal
14:13:15,938 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update org.hibernate.test.hql.Mammal set bodyWeight = ( select max(bodyWeight) from Animal )
14:13:15,940 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'Mammal'
    \-[SET] Node: 'set'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'bodyWeight'
          \-[QUERY] Node: 'query'
             \-[SELECT_FROM] Node: 'SELECT_FROM'
                +-[FROM] Node: 'from'
                |  \-[RANGE] Node: 'RANGE'
                |     \-[IDENT] Node: 'Animal'
                \-[SELECT] Node: 'select'
                   \-[AGGREGATE] Node: 'max'
                      \-[IDENT] Node: 'bodyWeight'

14:13:15,940 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,940 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Mammal (<no alias>) -> mammal0_
14:13:15,940 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:15,940 DEBUG DotNode:599 - getDataType() : bodyWeight -> org.hibernate.type.FloatType@39fd378e
14:13:15,940 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.bodyWeight -> body_weight
14:13:15,941 DEBUG FromElement:157 - FromClause{level=2} : Animal (<no alias>) -> animal1_
14:13:15,941 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:15,941 DEBUG DotNode:599 - getDataType() : bodyWeight -> org.hibernate.type.FloatType@39fd378e
14:13:15,941 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.bodyWeight -> animal1_.body_weight
14:13:15,941 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( max ( animal1_.body_weight {synthetic-alias} bodyWeight ) ) ) ( FromClause{level=2} Animal animal1_ ) )
14:13:15,941 DEBUG JoinProcessor:175 - Using FROM fragment [Animal animal1_]
14:13:15,942 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (Animal,Mammal)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[mammal0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Mammal' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Mammal,tableAlias=mammal0_,origin=null,columns={,className=org.hibernate.test.hql.Mammal}}
    \-[SET] SqlNode: 'set'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'body_weight' {propertyName=bodyWeight,dereferenceType=ALL,propertyPath=bodyWeight,path={synthetic-alias}.bodyWeight,tableAlias=mammal0_,className=org.hibernate.test.hql.Mammal,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'bodyWeight' {originalText=bodyWeight}
          \-[SELECT] QueryNode: 'SELECT'  querySpaces (Animal,Mammal)
             +-[SELECT_CLAUSE] SelectClause: '{select clause}'
             |  \-[AGGREGATE] AggregateNode: 'max'
             |     \-[DOT] DotNode: 'animal1_.body_weight' {propertyName=bodyWeight,dereferenceType=ALL,propertyPath=bodyWeight,path={synthetic-alias}.bodyWeight,tableAlias=animal1_,className=Animal,classAlias=null}
             |        +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |        \-[IDENT] IdentNode: 'bodyWeight' {originalText=bodyWeight}
             \-[FROM] FromClause: 'from' FromClause{level=2, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[animal1_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
                \-[FROM_FRAGMENT] FromElement: 'Animal animal1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Animal,tableAlias=animal1_,origin=null,columns={,className=Animal}}

14:13:15,952 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:15,952 DEBUG UpdateStatement:73 - getWhereClause() : Creating a new WHERE clause...
14:13:15,953 DEBUG SQL:104 - 
    insert 
    into
        HT_Mammal
        select
            mammal0_.animal as animal 
        from
            Mammal mammal0_ 
        inner join
            Animal mammal0_1_ 
                on mammal0_.animal=mammal0_1_.id
14:13:15,953 DEBUG SQL:104 - 
    update
        Animal 
    set
        body_weight=(select
            max(animal1_.body_weight) 
        from
            Animal animal1_) 
    where
        (
            id
        ) IN (
            select
                animal 
            from
                HT_Mammal
        )
14:13:15,966 DEBUG SQL:104 - 
    delete 
    from
        HT_Mammal
14:13:15,966 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_ 
        where
            animal0_.mother_id is not null 
            or animal0_.father_id is not null
14:13:15,967 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,975 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,976 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,986 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,987 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,997 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:15,997 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,007 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,008 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:16,008 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_
14:13:16,008 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,017 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,017 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,027 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,027 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,037 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,038 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,047 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,047 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:16,048 DEBUG SQL:104 - 
    delete 
    from
        Zoo
14:13:16,048 DEBUG SQL:104 - 
    insert 
    into
        HT_Joiner
        select
            joiner0_.id as id 
        from
            Joiner joiner0_ 
        inner join
            JOINED joiner0_1_ 
                on joiner0_.id=joiner0_1_.ID
14:13:16,057 DEBUG SQL:104 - 
    delete 
    from
        JOINED 
    where
        (
            ID
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:16,058 DEBUG SQL:104 - 
    delete 
    from
        Joiner 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:16,058 DEBUG SQL:104 - 
    delete 
    from
        HT_Joiner
14:13:16,069 DEBUG SQL:104 - 
    insert 
    into
        HT_Vehicle
        select
            vehicle0_.id as id 
        from
            ( select
                id,
                vin,
                owner,
                3 as clazz_ 
            from
                SUV 
            union
            all select
                id,
                vin,
                owner,
                4 as clazz_ 
            from
                Pickup 
            union
            all select
                id,
                vin,
                owner,
                1 as clazz_ 
            from
                Car 
            union
            all select
                id,
                vin,
                owner,
                2 as clazz_ 
            from
                Truck 
        ) vehicle0_
14:13:16,070 DEBUG SQL:104 - 
    delete 
    from
        Car 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:16,070 DEBUG SQL:104 - 
    delete 
    from
        Truck 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:16,081 DEBUG SQL:104 - 
    delete 
    from
        SUV 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:16,082 DEBUG SQL:104 - 
    delete 
    from
        Pickup 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:16,094 DEBUG SQL:104 - 
    delete 
    from
        HT_Vehicle
14:13:16,094 DEBUG SQL:104 - 
    delete 
    from
        BooleanLiteralEntity
14:13:16,095  INFO CustomRunner:139 - Test: testUpdateOnManyToOne
14:13:16,096 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update org.hibernate.test.hql.Animal a set a.mother = null where a.id = 2
14:13:16,097 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'org'
    |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |     |  |  |  \-[IDENT] Node: 'test'
    |     |  |  \-[IDENT] Node: 'hql'
    |     |  \-[IDENT] Node: 'Animal'
    |     \-[ALIAS] Node: 'a'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'a'
    |     |  \-[IDENT] Node: 'mother'
    |     \-[NULL] Node: 'null'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'a'
          |  \-[IDENT] Node: 'id'
          \-[NUM_INT] Node: '2'

14:13:16,104 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:16,104 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Animal (a) -> animal0_
14:13:16,104 DEBUG FromReferenceNode:74 - Resolved : a -> id
14:13:16,105 DEBUG DotNode:599 - getDataType() : mother -> org.hibernate.type.ManyToOneType(org.hibernate.test.hql.Animal)
14:13:16,105 DEBUG DotNode:562 - dereferenceShortcut() : property mother in org.hibernate.test.hql.Animal does not require a join.
14:13:16,105 DEBUG DotNode:588 - Terminal propertyPath = [mother]
14:13:16,114 DEBUG FromReferenceNode:74 - Resolved : a.mother -> mother_id
14:13:16,115 DEBUG FromReferenceNode:74 - Resolved : a -> id
14:13:16,115 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.LongType@4bf3f9d
14:13:16,115 DEBUG FromReferenceNode:74 - Resolved : a.id -> animal0_.id
14:13:16,115 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (Animal)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[animal0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Animal' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Animal,tableAlias=animal0_,origin=null,columns={,className=org.hibernate.test.hql.Animal}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'mother_id' {propertyName=mother,dereferenceType=0,propertyPath=mother,path=a.mother,tableAlias=animal0_,className=org.hibernate.test.hql.Animal,classAlias=a}
    |     |  +-[ALIAS_REF] IdentNode: 'id' {alias=a, className=org.hibernate.test.hql.Animal, tableAlias=animal0_}
    |     |  \-[IDENT] IdentNode: 'mother' {originalText=mother}
    |     \-[NULL] SqlNode: 'null'
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'animal0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path=a.id,tableAlias=animal0_,className=org.hibernate.test.hql.Animal,classAlias=a}
          |  +-[ALIAS_REF] IdentNode: 'id' {alias=a, className=org.hibernate.test.hql.Animal, tableAlias=animal0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_INT] LiteralNode: '2'

14:13:16,115 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:16,116 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_ 
        where
            animal0_.id=2
14:13:16,126 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=null 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,126 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:16,126 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update org.hibernate.test.hql.Animal a set a.mother = (from org.hibernate.test.hql.Animal where id = 1) where a.id = 2
14:13:16,128 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'org'
    |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |     |  |  |  \-[IDENT] Node: 'test'
    |     |  |  \-[IDENT] Node: 'hql'
    |     |  \-[IDENT] Node: 'Animal'
    |     \-[ALIAS] Node: 'a'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'a'
    |     |  \-[IDENT] Node: 'mother'
    |     \-[QUERY] Node: 'query'
    |        +-[SELECT_FROM] Node: 'SELECT_FROM'
    |        |  \-[FROM] Node: 'from'
    |        |     \-[RANGE] Node: 'RANGE'
    |        |        \-[DOT] Node: '.'
    |        |           +-[DOT] Node: '.'
    |        |           |  +-[DOT] Node: '.'
    |        |           |  |  +-[DOT] Node: '.'
    |        |           |  |  |  +-[IDENT] Node: 'org'
    |        |           |  |  |  \-[IDENT] Node: 'hibernate'
    |        |           |  |  \-[IDENT] Node: 'test'
    |        |           |  \-[IDENT] Node: 'hql'
    |        |           \-[IDENT] Node: 'Animal'
    |        \-[WHERE] Node: 'where'
    |           \-[EQ] Node: '='
    |              +-[IDENT] Node: 'id'
    |              \-[NUM_INT] Node: '1'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'a'
          |  \-[IDENT] Node: 'id'
          \-[NUM_INT] Node: '2'

14:13:16,146 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:16,147 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Animal (a) -> animal0_
14:13:16,147 DEBUG FromReferenceNode:74 - Resolved : a -> id
14:13:16,147 DEBUG DotNode:599 - getDataType() : mother -> org.hibernate.type.ManyToOneType(org.hibernate.test.hql.Animal)
14:13:16,147 DEBUG DotNode:562 - dereferenceShortcut() : property mother in org.hibernate.test.hql.Animal does not require a join.
14:13:16,147 DEBUG DotNode:588 - Terminal propertyPath = [mother]
14:13:16,147 DEBUG FromReferenceNode:74 - Resolved : a.mother -> mother_id
14:13:16,147 DEBUG FromElement:157 - FromClause{level=2} : org.hibernate.test.hql.Animal (<no alias>) -> animal1_
14:13:16,148 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:16,148 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.LongType@4bf3f9d
14:13:16,148 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.id -> animal1_.id
14:13:16,148 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=2} Animal animal1_ ) ( where ( = ( animal1_.id {synthetic-alias} id ) 1 ) ) )
14:13:16,148 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:13:16,148 DEBUG JoinProcessor:175 - Using FROM fragment [Animal animal1_]
14:13:16,148 DEBUG FromReferenceNode:74 - Resolved : a -> id
14:13:16,149 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.LongType@4bf3f9d
14:13:16,149 DEBUG FromReferenceNode:74 - Resolved : a.id -> animal0_.id
14:13:16,149 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (Animal)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[animal0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Animal' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Animal,tableAlias=animal0_,origin=null,columns={,className=org.hibernate.test.hql.Animal}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'mother_id' {propertyName=mother,dereferenceType=0,propertyPath=mother,path=a.mother,tableAlias=animal0_,className=org.hibernate.test.hql.Animal,classAlias=a}
    |     |  +-[ALIAS_REF] IdentNode: 'id' {alias=a, className=org.hibernate.test.hql.Animal, tableAlias=animal0_}
    |     |  \-[IDENT] IdentNode: 'mother' {originalText=mother}
    |     \-[SELECT] QueryNode: 'SELECT'  querySpaces (Animal)
    |        +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |        |  \-[SELECT_EXPR] SelectExpressionImpl: 'animal1_.id' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Animal,tableAlias=animal1_,origin=null,columns={,className=org.hibernate.test.hql.Animal}}}
    |        +-[FROM] FromClause: 'from' FromClause{level=2, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[animal1_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |        |  \-[FROM_FRAGMENT] FromElement: 'Animal animal1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Animal,tableAlias=animal1_,origin=null,columns={,className=org.hibernate.test.hql.Animal}}
    |        \-[WHERE] SqlNode: 'where'
    |           \-[EQ] BinaryLogicOperatorNode: '='
    |              +-[DOT] DotNode: 'animal1_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path={synthetic-alias}.id,tableAlias=animal1_,className=org.hibernate.test.hql.Animal,classAlias=null}
    |              |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |              |  \-[IDENT] IdentNode: 'id' {originalText=id}
    |              \-[NUM_INT] LiteralNode: '1'
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'animal0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path=a.id,tableAlias=animal0_,className=org.hibernate.test.hql.Animal,classAlias=a}
          |  +-[ALIAS_REF] IdentNode: 'id' {alias=a, className=org.hibernate.test.hql.Animal, tableAlias=animal0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_INT] LiteralNode: '2'

14:13:16,168 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:16,170 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_ 
        where
            animal0_.id=2
14:13:16,171 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=(select
            animal1_.id 
        from
            Animal animal1_ 
        where
            animal1_.id=1) 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,178 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:16,179  INFO CustomRunner:139 - Test: testUpdateSetNullOnDiscriminatorSubclass
14:13:16,180 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:16,180 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:16,188 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:16,189 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:16,189 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:16,189 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:16,200 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:16,200 DEBUG SQL:104 - 
    insert 
    into
        Dog
        (mammal) 
    values
        (?)
14:13:16,200 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:16,200 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:16,201 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:16,201 DEBUG SQL:104 - 
    insert 
    into
        Cat
        (mammal) 
    values
        (?)
14:13:16,201 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:13:16,201 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'P')
14:13:16,212 DEBUG SQL:104 - 
    insert 
    into
        Joiner
        (id, name) 
    values
        (null, ?)
14:13:16,213 DEBUG SQL:104 - 
    insert 
    into
        JOINED
        (joinedName, ID) 
    values
        (?, ?)
14:13:16,213 DEBUG SQL:104 - 
    insert 
    into
        Car
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:16,213 DEBUG SQL:104 - 
    insert 
    into
        Truck
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:16,222 DEBUG SQL:104 - 
    insert 
    into
        SUV
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:16,223 DEBUG SQL:104 - 
    insert 
    into
        Pickup
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:16,223 DEBUG SQL:104 - 
    insert 
    into
        BooleanLiteralEntity
        (id, Y_N_BOOL, T_F_BOOL, NUM_BOOL) 
    values
        (null, ?, ?, ?)
14:13:16,224 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:16,224 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:16,244 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:16,245 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:16,245 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update org.hibernate.test.hql.PettingZoo set address.city = null
14:13:16,247 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'PettingZoo'
    \-[SET] Node: 'set'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'address'
          |  \-[IDENT] Node: 'city'
          \-[NULL] Node: 'null'

14:13:16,254 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:16,254 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.PettingZoo (<no alias>) -> pettingzoo0_
14:13:16,255 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:16,255 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@324a692c
14:13:16,255 DEBUG DotNode:585 - Unresolved property path is now 'address.city'
14:13:16,255 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.address -> city
14:13:16,255 DEBUG DotNode:599 - getDataType() : address.city -> org.hibernate.type.StringType@2dc8de40
14:13:16,255 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.address.city -> city
14:13:16,255 DEBUG UpdateStatement:73 - getWhereClause() : Creating a new WHERE clause...
14:13:16,256 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (Zoo)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[pettingzoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Zoo,tableAlias=pettingzoo0_,origin=null,columns={,className=org.hibernate.test.hql.PettingZoo}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'city' {propertyName=city,dereferenceType=ALL,propertyPath=address.city,path={synthetic-alias}.address.city,tableAlias=pettingzoo0_,className=org.hibernate.test.hql.PettingZoo,classAlias=null}
    |     |  +-[DOT] DotNode: 'city' {propertyName=city,dereferenceType=2,propertyPath=address.city,path={synthetic-alias}.address,tableAlias=pettingzoo0_,className=org.hibernate.test.hql.PettingZoo,classAlias=null}
    |     |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |     |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |     |  \-[IDENT] IdentNode: 'city' {originalText=city}
    |     \-[NULL] SqlNode: 'null'
    \-[WHERE] SqlNode: 'WHERE'
       \-[SQL_TOKEN] SqlFragment: 'zooType='P''

14:13:16,265 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:16,265 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:16,266 DEBUG SQL:104 - 
    update
        Zoo 
    set
        city=null 
    where
        zooType='P'
14:13:16,266 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.hql.Zoo where address.city is null
14:13:16,267 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'Zoo'
    \-[WHERE] Node: 'where'
       \-[IS_NULL] Node: 'is null'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'address'
             \-[IDENT] Node: 'city'

14:13:16,277 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:16,277 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (<no alias>) -> zoo0_
14:13:16,277 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:16,278 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@2b0aa5
14:13:16,278 DEBUG DotNode:585 - Unresolved property path is now 'address.city'
14:13:16,278 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.address -> city
14:13:16,278 DEBUG DotNode:599 - getDataType() : address.city -> org.hibernate.type.StringType@2dc8de40
14:13:16,278 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.address.city -> city
14:13:16,278 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Zoo)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    \-[WHERE] SqlNode: 'where'
       \-[IS_NULL] IsNullLogicOperatorNode: 'is null'
          \-[DOT] DotNode: 'city' {propertyName=city,dereferenceType=ALL,propertyPath=address.city,path={synthetic-alias}.address.city,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=null}
             +-[DOT] DotNode: 'city' {propertyName=city,dereferenceType=2,propertyPath=address.city,path={synthetic-alias}.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'address' {originalText=address}
             \-[IDENT] IdentNode: 'city' {originalText=city}

14:13:16,278 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:16,279 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:16,279 DEBUG SQL:104 - 
    delete 
    from
        Zoo 
    where
        city is null
14:13:16,279 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update org.hibernate.test.hql.Zoo set address.city = null
14:13:16,280 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'Zoo'
    \-[SET] Node: 'set'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'address'
          |  \-[IDENT] Node: 'city'
          \-[NULL] Node: 'null'

14:13:16,287 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:16,287 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (<no alias>) -> zoo0_
14:13:16,288 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:16,288 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@2b0aa5
14:13:16,288 DEBUG DotNode:585 - Unresolved property path is now 'address.city'
14:13:16,288 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.address -> city
14:13:16,288 DEBUG DotNode:599 - getDataType() : address.city -> org.hibernate.type.StringType@2dc8de40
14:13:16,288 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.address.city -> city
14:13:16,288 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (Zoo)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    \-[SET] SqlNode: 'set'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'city' {propertyName=city,dereferenceType=ALL,propertyPath=address.city,path={synthetic-alias}.address.city,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=null}
          |  +-[DOT] DotNode: 'city' {propertyName=city,dereferenceType=2,propertyPath=address.city,path={synthetic-alias}.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=null}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
          |  \-[IDENT] IdentNode: 'city' {originalText=city}
          \-[NULL] SqlNode: 'null'

14:13:16,298 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:16,298 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:16,298 DEBUG SQL:104 - 
    update
        Zoo 
    set
        city=null
14:13:16,299 DEBUG SQL:104 - 
    delete 
    from
        Zoo 
    where
        city is null
14:13:16,299 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_ 
        where
            animal0_.mother_id is not null 
            or animal0_.father_id is not null
14:13:16,309 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,310 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,310 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,320 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,321 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,321 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,321 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,336 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,336 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:16,337 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_
14:13:16,337 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,346 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,346 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,347 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,369 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,369 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,370 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,380 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,380 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:16,381 DEBUG SQL:104 - 
    delete 
    from
        Zoo
14:13:16,391 DEBUG SQL:104 - 
    insert 
    into
        HT_Joiner
        select
            joiner0_.id as id 
        from
            Joiner joiner0_ 
        inner join
            JOINED joiner0_1_ 
                on joiner0_.id=joiner0_1_.ID
14:13:16,391 DEBUG SQL:104 - 
    delete 
    from
        JOINED 
    where
        (
            ID
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:16,391 DEBUG SQL:104 - 
    delete 
    from
        Joiner 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:16,401 DEBUG SQL:104 - 
    delete 
    from
        HT_Joiner
14:13:16,402 DEBUG SQL:104 - 
    insert 
    into
        HT_Vehicle
        select
            vehicle0_.id as id 
        from
            ( select
                id,
                vin,
                owner,
                3 as clazz_ 
            from
                SUV 
            union
            all select
                id,
                vin,
                owner,
                4 as clazz_ 
            from
                Pickup 
            union
            all select
                id,
                vin,
                owner,
                1 as clazz_ 
            from
                Car 
            union
            all select
                id,
                vin,
                owner,
                2 as clazz_ 
            from
                Truck 
        ) vehicle0_
14:13:16,413 DEBUG SQL:104 - 
    delete 
    from
        Car 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:16,423 DEBUG SQL:104 - 
    delete 
    from
        Truck 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:16,423 DEBUG SQL:104 - 
    delete 
    from
        SUV 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:16,433 DEBUG SQL:104 - 
    delete 
    from
        Pickup 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:16,433 DEBUG SQL:104 - 
    delete 
    from
        HT_Vehicle
14:13:16,434 DEBUG SQL:104 - 
    delete 
    from
        BooleanLiteralEntity
14:13:16,434  INFO CustomRunner:139 - Test: testUpdateSetNullOnJoinedSubclass
14:13:16,435 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:16,449 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:16,449 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:16,450 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:16,450 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:16,450 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:16,450 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:16,451 DEBUG SQL:104 - 
    insert 
    into
        Dog
        (mammal) 
    values
        (?)
14:13:16,451 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:16,459 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:16,460 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:16,460 DEBUG SQL:104 - 
    insert 
    into
        Cat
        (mammal) 
    values
        (?)
14:13:16,461 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:13:16,461 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'P')
14:13:16,471 DEBUG SQL:104 - 
    insert 
    into
        Joiner
        (id, name) 
    values
        (null, ?)
14:13:16,471 DEBUG SQL:104 - 
    insert 
    into
        JOINED
        (joinedName, ID) 
    values
        (?, ?)
14:13:16,471 DEBUG SQL:104 - 
    insert 
    into
        Car
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:16,472 DEBUG SQL:104 - 
    insert 
    into
        Truck
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:16,472 DEBUG SQL:104 - 
    insert 
    into
        SUV
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:16,472 DEBUG SQL:104 - 
    insert 
    into
        Pickup
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:16,493 DEBUG SQL:104 - 
    insert 
    into
        BooleanLiteralEntity
        (id, Y_N_BOOL, T_F_BOOL, NUM_BOOL) 
    values
        (null, ?, ?, ?)
14:13:16,494 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:16,495 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:16,504 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:16,504 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:16,505 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update org.hibernate.test.hql.Mammal set bodyWeight = null
14:13:16,506 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'Mammal'
    \-[SET] Node: 'set'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'bodyWeight'
          \-[NULL] Node: 'null'

14:13:16,514 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:16,515 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Mammal (<no alias>) -> mammal0_
14:13:16,515 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:16,515 DEBUG DotNode:599 - getDataType() : bodyWeight -> org.hibernate.type.FloatType@39fd378e
14:13:16,515 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.bodyWeight -> body_weight
14:13:16,515 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (Animal,Mammal)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[mammal0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Mammal' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Mammal,tableAlias=mammal0_,origin=null,columns={,className=org.hibernate.test.hql.Mammal}}
    \-[SET] SqlNode: 'set'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'body_weight' {propertyName=bodyWeight,dereferenceType=ALL,propertyPath=bodyWeight,path={synthetic-alias}.bodyWeight,tableAlias=mammal0_,className=org.hibernate.test.hql.Mammal,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'bodyWeight' {originalText=bodyWeight}
          \-[NULL] SqlNode: 'null'

14:13:16,515 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:16,515 DEBUG UpdateStatement:73 - getWhereClause() : Creating a new WHERE clause...
14:13:16,516 DEBUG SQL:104 - 
    insert 
    into
        HT_Mammal
        select
            mammal0_.animal as animal 
        from
            Mammal mammal0_ 
        inner join
            Animal mammal0_1_ 
                on mammal0_.animal=mammal0_1_.id
14:13:16,525 DEBUG SQL:104 - 
    update
        Animal 
    set
        body_weight=null 
    where
        (
            id
        ) IN (
            select
                animal 
            from
                HT_Mammal
        )
14:13:16,526 DEBUG SQL:104 - 
    delete 
    from
        HT_Mammal
14:13:16,526 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.hql.Animal where bodyWeight = null
14:13:16,527 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'Animal'
    \-[WHERE] Node: 'where'
       \-[IS_NULL] Node: 'is null'
          \-[IDENT] Node: 'bodyWeight'

14:13:16,536 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:16,536 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Animal (<no alias>) -> animal0_
14:13:16,536 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:16,537 DEBUG DotNode:599 - getDataType() : bodyWeight -> org.hibernate.type.FloatType@39fd378e
14:13:16,537 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.bodyWeight -> animal0_.body_weight
14:13:16,537 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Animal)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[animal0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Animal' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Animal,tableAlias=animal0_,origin=null,columns={,className=org.hibernate.test.hql.Animal}}
    \-[WHERE] SqlNode: 'where'
       \-[IS_NULL] IsNullLogicOperatorNode: 'is null'
          \-[DOT] DotNode: 'animal0_.body_weight' {propertyName=bodyWeight,dereferenceType=ALL,propertyPath=bodyWeight,path={synthetic-alias}.bodyWeight,tableAlias=animal0_,className=org.hibernate.test.hql.Animal,classAlias=null}
             +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             \-[IDENT] IdentNode: 'bodyWeight' {originalText=bodyWeight}

14:13:16,537 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:16,538 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_ 
        where
            animal0_.body_weight is null
14:13:16,548 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,548 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,557 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,557 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,557 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,567 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,568 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,568 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,568 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:16,569 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_ 
        where
            animal0_.mother_id is not null 
            or animal0_.father_id is not null
14:13:16,580 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,580 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,590 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,591 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,591 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,591 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,615 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,615 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,615 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:16,616 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_
14:13:16,616 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,616 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,616 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,636 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,636 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,645 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,645 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,656 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,667 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:16,667 DEBUG SQL:104 - 
    delete 
    from
        Zoo
14:13:16,668 DEBUG SQL:104 - 
    insert 
    into
        HT_Joiner
        select
            joiner0_.id as id 
        from
            Joiner joiner0_ 
        inner join
            JOINED joiner0_1_ 
                on joiner0_.id=joiner0_1_.ID
14:13:16,674 DEBUG SQL:104 - 
    delete 
    from
        JOINED 
    where
        (
            ID
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:16,674 DEBUG SQL:104 - 
    delete 
    from
        Joiner 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:16,675 DEBUG SQL:104 - 
    delete 
    from
        HT_Joiner
14:13:16,684 DEBUG SQL:104 - 
    insert 
    into
        HT_Vehicle
        select
            vehicle0_.id as id 
        from
            ( select
                id,
                vin,
                owner,
                3 as clazz_ 
            from
                SUV 
            union
            all select
                id,
                vin,
                owner,
                4 as clazz_ 
            from
                Pickup 
            union
            all select
                id,
                vin,
                owner,
                1 as clazz_ 
            from
                Car 
            union
            all select
                id,
                vin,
                owner,
                2 as clazz_ 
            from
                Truck 
        ) vehicle0_
14:13:16,695 DEBUG SQL:104 - 
    delete 
    from
        Car 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:16,695 DEBUG SQL:104 - 
    delete 
    from
        Truck 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:16,696 DEBUG SQL:104 - 
    delete 
    from
        SUV 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:16,696 DEBUG SQL:104 - 
    delete 
    from
        Pickup 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:16,707 DEBUG SQL:104 - 
    delete 
    from
        HT_Vehicle
14:13:16,708 DEBUG SQL:104 - 
    delete 
    from
        BooleanLiteralEntity
14:13:16,708  INFO CustomRunner:139 - Test: testUpdateSetNullUnionSubclass
14:13:16,709 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:16,710 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:16,710 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:16,718 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:16,718 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:16,718 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:16,718 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:16,719 DEBUG SQL:104 - 
    insert 
    into
        Dog
        (mammal) 
    values
        (?)
14:13:16,719 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:16,742 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:16,742 DEBUG SQL:104 - 
    insert 
    into
        DomesticAnimal
        (owner, mammal) 
    values
        (?, ?)
14:13:16,742 DEBUG SQL:104 - 
    insert 
    into
        Cat
        (mammal) 
    values
        (?)
14:13:16,743 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:13:16,743 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'P')
14:13:16,751 DEBUG SQL:104 - 
    insert 
    into
        Joiner
        (id, name) 
    values
        (null, ?)
14:13:16,752 DEBUG SQL:104 - 
    insert 
    into
        JOINED
        (joinedName, ID) 
    values
        (?, ?)
14:13:16,752 DEBUG SQL:104 - 
    insert 
    into
        Car
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:16,752 DEBUG SQL:104 - 
    insert 
    into
        Truck
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:16,763 DEBUG SQL:104 - 
    insert 
    into
        SUV
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:16,764 DEBUG SQL:104 - 
    insert 
    into
        Pickup
        (vin, owner, id) 
    values
        (?, ?, ?)
14:13:16,764 DEBUG SQL:104 - 
    insert 
    into
        BooleanLiteralEntity
        (id, Y_N_BOOL, T_F_BOOL, NUM_BOOL) 
    values
        (null, ?, ?, ?)
14:13:16,765 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:16,773 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:13:16,773 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:16,774 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=? 
    where
        id=?
14:13:16,784 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update org.hibernate.test.hql.Vehicle set owner = 'Steve'
14:13:16,785 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'Vehicle'
    \-[SET] Node: 'set'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'owner'
          \-[QUOTED_STRING] Node: ''Steve''

14:13:16,785 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:16,785 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Vehicle (<no alias>) -> vehicle0_
14:13:16,785 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:16,785 DEBUG DotNode:599 - getDataType() : owner -> org.hibernate.type.StringType@2dc8de40
14:13:16,785 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.owner -> owner
14:13:16,786 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (Car,Truck,SUV,Pickup,Vehicle)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[vehicle0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: '( select id, vin, owner, 3 as clazz_ from SUV union all select id, vin, owner, 4 as clazz_ from Pickup union all select id, vin, owner, 1 as clazz_ from Car union all select id, vin, owner, 2 as clazz_ from Truck )' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=( select id, vin, owner, 3 as clazz_ from SUV union all select id, vin, owner, 4 as clazz_ from Pickup union all select id, vin, owner, 1 as clazz_ from Car union all select id, vin, owner, 2 as clazz_ from Truck ),tableAlias=vehicle0_,origin=null,columns={,className=org.hibernate.test.hql.Vehicle}}
    \-[SET] SqlNode: 'set'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'owner' {propertyName=owner,dereferenceType=ALL,propertyPath=owner,path={synthetic-alias}.owner,tableAlias=vehicle0_,className=org.hibernate.test.hql.Vehicle,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'owner' {originalText=owner}
          \-[QUOTED_STRING] LiteralNode: ''Steve''

14:13:16,793 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:16,793 DEBUG UpdateStatement:73 - getWhereClause() : Creating a new WHERE clause...
14:13:16,794 DEBUG SQL:104 - 
    insert 
    into
        HT_Vehicle
        select
            vehicle0_.id as id 
        from
            ( select
                id,
                vin,
                owner,
                3 as clazz_ 
            from
                SUV 
            union
            all select
                id,
                vin,
                owner,
                4 as clazz_ 
            from
                Pickup 
            union
            all select
                id,
                vin,
                owner,
                1 as clazz_ 
            from
                Car 
            union
            all select
                id,
                vin,
                owner,
                2 as clazz_ 
            from
                Truck 
        ) vehicle0_
14:13:16,803 DEBUG SQL:104 - 
    update
        Car 
    set
        owner='Steve' 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:16,812 DEBUG SQL:104 - 
    update
        Truck 
    set
        owner='Steve' 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:16,813 DEBUG SQL:104 - 
    update
        SUV 
    set
        owner='Steve' 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:16,824 DEBUG SQL:104 - 
    update
        Pickup 
    set
        owner='Steve' 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:16,824 DEBUG SQL:104 - 
    delete 
    from
        HT_Vehicle
14:13:16,824 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update org.hibernate.test.hql.Vehicle set owner = null where owner = 'Steve'
14:13:16,825 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'Vehicle'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[IDENT] Node: 'owner'
    |     \-[NULL] Node: 'null'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'owner'
          \-[QUOTED_STRING] Node: ''Steve''

14:13:16,825 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:16,825 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Vehicle (<no alias>) -> vehicle0_
14:13:16,826 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:16,826 DEBUG DotNode:599 - getDataType() : owner -> org.hibernate.type.StringType@2dc8de40
14:13:16,826 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.owner -> owner
14:13:16,826 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:16,826 DEBUG DotNode:599 - getDataType() : owner -> org.hibernate.type.StringType@2dc8de40
14:13:16,826 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.owner -> vehicle0_.owner
14:13:16,826 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (Car,Truck,SUV,Pickup,Vehicle)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[vehicle0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: '( select id, vin, owner, 3 as clazz_ from SUV union all select id, vin, owner, 4 as clazz_ from Pickup union all select id, vin, owner, 1 as clazz_ from Car union all select id, vin, owner, 2 as clazz_ from Truck )' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=( select id, vin, owner, 3 as clazz_ from SUV union all select id, vin, owner, 4 as clazz_ from Pickup union all select id, vin, owner, 1 as clazz_ from Car union all select id, vin, owner, 2 as clazz_ from Truck ),tableAlias=vehicle0_,origin=null,columns={,className=org.hibernate.test.hql.Vehicle}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'owner' {propertyName=owner,dereferenceType=ALL,propertyPath=owner,path={synthetic-alias}.owner,tableAlias=vehicle0_,className=org.hibernate.test.hql.Vehicle,classAlias=null}
    |     |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |     |  \-[IDENT] IdentNode: 'owner' {originalText=owner}
    |     \-[NULL] SqlNode: 'null'
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'vehicle0_.owner' {propertyName=owner,dereferenceType=ALL,propertyPath=owner,path={synthetic-alias}.owner,tableAlias=vehicle0_,className=org.hibernate.test.hql.Vehicle,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'owner' {originalText=owner}
          \-[QUOTED_STRING] LiteralNode: ''Steve''

14:13:16,835 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:16,836 DEBUG SQL:104 - 
    insert 
    into
        HT_Vehicle
        select
            vehicle0_.id as id 
        from
            ( select
                id,
                vin,
                owner,
                3 as clazz_ 
            from
                SUV 
            union
            all select
                id,
                vin,
                owner,
                4 as clazz_ 
            from
                Pickup 
            union
            all select
                id,
                vin,
                owner,
                1 as clazz_ 
            from
                Car 
            union
            all select
                id,
                vin,
                owner,
                2 as clazz_ 
            from
                Truck 
        ) vehicle0_ 
    where
        vehicle0_.owner='Steve'
14:13:16,847 DEBUG SQL:104 - 
    update
        Car 
    set
        owner=null 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:16,847 DEBUG SQL:104 - 
    update
        Truck 
    set
        owner=null 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:16,868 DEBUG SQL:104 - 
    update
        SUV 
    set
        owner=null 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:16,868 DEBUG SQL:104 - 
    update
        Pickup 
    set
        owner=null 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:16,868 DEBUG SQL:104 - 
    delete 
    from
        HT_Vehicle
14:13:16,877 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.hql.Vehicle where owner is null
14:13:16,878 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'hql'
    |        \-[IDENT] Node: 'Vehicle'
    \-[WHERE] Node: 'where'
       \-[IS_NULL] Node: 'is null'
          \-[IDENT] Node: 'owner'

14:13:16,878 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:16,879 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Vehicle (<no alias>) -> vehicle0_
14:13:16,879 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:13:16,879 DEBUG DotNode:599 - getDataType() : owner -> org.hibernate.type.StringType@2dc8de40
14:13:16,879 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.owner -> vehicle0_.owner
14:13:16,879 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Car,Truck,SUV,Pickup,Vehicle)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[vehicle0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: '( select id, vin, owner, 3 as clazz_ from SUV union all select id, vin, owner, 4 as clazz_ from Pickup union all select id, vin, owner, 1 as clazz_ from Car union all select id, vin, owner, 2 as clazz_ from Truck )' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=( select id, vin, owner, 3 as clazz_ from SUV union all select id, vin, owner, 4 as clazz_ from Pickup union all select id, vin, owner, 1 as clazz_ from Car union all select id, vin, owner, 2 as clazz_ from Truck ),tableAlias=vehicle0_,origin=null,columns={,className=org.hibernate.test.hql.Vehicle}}
    \-[WHERE] SqlNode: 'where'
       \-[IS_NULL] IsNullLogicOperatorNode: 'is null'
          \-[DOT] DotNode: 'vehicle0_.owner' {propertyName=owner,dereferenceType=ALL,propertyPath=owner,path={synthetic-alias}.owner,tableAlias=vehicle0_,className=org.hibernate.test.hql.Vehicle,classAlias=null}
             +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             \-[IDENT] IdentNode: 'owner' {originalText=owner}

14:13:16,888 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:16,889 DEBUG SQL:104 - 
    insert 
    into
        HT_Vehicle
        select
            vehicle0_.id as id 
        from
            ( select
                id,
                vin,
                owner,
                3 as clazz_ 
            from
                SUV 
            union
            all select
                id,
                vin,
                owner,
                4 as clazz_ 
            from
                Pickup 
            union
            all select
                id,
                vin,
                owner,
                1 as clazz_ 
            from
                Car 
            union
            all select
                id,
                vin,
                owner,
                2 as clazz_ 
            from
                Truck 
        ) vehicle0_ 
    where
        vehicle0_.owner is null
14:13:16,900 DEBUG SQL:104 - 
    delete 
    from
        Car 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:16,901 DEBUG SQL:104 - 
    delete 
    from
        Truck 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:16,913 DEBUG SQL:104 - 
    delete 
    from
        SUV 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:16,913 DEBUG SQL:104 - 
    delete 
    from
        Pickup 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:16,923 DEBUG SQL:104 - 
    delete 
    from
        HT_Vehicle
14:13:16,924 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_ 
        where
            animal0_.mother_id is not null 
            or animal0_.father_id is not null
14:13:16,924 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,934 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,934 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,935 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,945 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,945 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,956 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,956 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,957 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:16,957 DEBUG SQL:104 - 
    insert 
    into
        HT_Animal
        select
            animal0_.id as id 
        from
            Animal animal0_
14:13:16,957 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,957 DEBUG SQL:104 - 
    delete 
    from
        Dog 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,969 DEBUG SQL:104 - 
    delete 
    from
        Cat 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,970 DEBUG SQL:104 - 
    delete 
    from
        DomesticAnimal 
    where
        (
            mammal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,980 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,980 DEBUG SQL:104 - 
    delete 
    from
        Lizard 
    where
        (
            reptile
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,980 DEBUG SQL:104 - 
    delete 
    from
        Reptile 
    where
        (
            animal
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:16,981 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Animal
        )
14:13:17,011 DEBUG SQL:104 - 
    delete 
    from
        HT_Animal
14:13:17,011 DEBUG SQL:104 - 
    delete 
    from
        Zoo
14:13:17,012 DEBUG SQL:104 - 
    insert 
    into
        HT_Joiner
        select
            joiner0_.id as id 
        from
            Joiner joiner0_ 
        inner join
            JOINED joiner0_1_ 
                on joiner0_.id=joiner0_1_.ID
14:13:17,016 DEBUG SQL:104 - 
    delete 
    from
        JOINED 
    where
        (
            ID
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:17,016 DEBUG SQL:104 - 
    delete 
    from
        Joiner 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Joiner
        )
14:13:17,017 DEBUG SQL:104 - 
    delete 
    from
        HT_Joiner
14:13:17,028 DEBUG SQL:104 - 
    insert 
    into
        HT_Vehicle
        select
            vehicle0_.id as id 
        from
            ( select
                id,
                vin,
                owner,
                3 as clazz_ 
            from
                SUV 
            union
            all select
                id,
                vin,
                owner,
                4 as clazz_ 
            from
                Pickup 
            union
            all select
                id,
                vin,
                owner,
                1 as clazz_ 
            from
                Car 
            union
            all select
                id,
                vin,
                owner,
                2 as clazz_ 
            from
                Truck 
        ) vehicle0_
14:13:17,030 DEBUG SQL:104 - 
    delete 
    from
        Car 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:17,030 DEBUG SQL:104 - 
    delete 
    from
        Truck 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:17,030 DEBUG SQL:104 - 
    delete 
    from
        SUV 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:17,052 DEBUG SQL:104 - 
    delete 
    from
        Pickup 
    where
        (
            id
        ) IN (
            select
                id 
            from
                HT_Vehicle
        )
14:13:17,052 DEBUG SQL:104 - 
    delete 
    from
        HT_Vehicle
14:13:17,053 DEBUG SQL:104 - 
    delete 
    from
        BooleanLiteralEntity
14:13:17,053  INFO CustomRunner:139 - Test: testUpdateWithSubquery
14:13:17,054 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update org.hibernate.test.hql.Human h set h.bodyWeight = h.bodyWeight + (select count(1) from IntegerVersioned)
14:13:17,056 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'org'
    |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |     |  |  |  \-[IDENT] Node: 'test'
    |     |  |  \-[IDENT] Node: 'hql'
    |     |  \-[IDENT] Node: 'Human'
    |     \-[ALIAS] Node: 'h'
    \-[SET] Node: 'set'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'h'
          |  \-[IDENT] Node: 'bodyWeight'
          \-[PLUS] Node: '+'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'h'
             |  \-[IDENT] Node: 'bodyWeight'
             \-[QUERY] Node: 'query'
                \-[SELECT_FROM] Node: 'SELECT_FROM'
                   +-[FROM] Node: 'from'
                   |  \-[RANGE] Node: 'RANGE'
                   |     \-[IDENT] Node: 'IntegerVersioned'
                   \-[SELECT] Node: 'select'
                      \-[COUNT] Node: 'count'
                         \-[NUM_INT] Node: '1'

14:13:17,073 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:17,073 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Human (h) -> human0_
14:13:17,075 DEBUG FromReferenceNode:74 - Resolved : h -> mammal
14:13:17,075 DEBUG DotNode:599 - getDataType() : bodyWeight -> org.hibernate.type.FloatType@39fd378e
14:13:17,075 DEBUG FromReferenceNode:74 - Resolved : h.bodyWeight -> body_weight
14:13:17,075 DEBUG FromReferenceNode:74 - Resolved : h -> mammal
14:13:17,076 DEBUG DotNode:599 - getDataType() : bodyWeight -> org.hibernate.type.FloatType@39fd378e
14:13:17,076 DEBUG FromReferenceNode:74 - Resolved : h.bodyWeight -> body_weight
14:13:17,076 DEBUG FromElement:157 - FromClause{level=2} : IntegerVersioned (<no alias>) -> integerver1_
14:13:17,076 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( count 1 ) ) ( FromClause{level=2} IntegerVersioned integerver1_ ) )
14:13:17,076 DEBUG JoinProcessor:175 - Using FROM fragment [IntegerVersioned integerver1_]
14:13:17,077 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (Human,IntegerVersioned,Animal,Mammal)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[h], fromElementByTableAlias=[human0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Human' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=h,role=null,tableName=Human,tableAlias=human0_,origin=null,columns={,className=org.hibernate.test.hql.Human}}
    \-[SET] SqlNode: 'set'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'body_weight' {propertyName=bodyWeight,dereferenceType=ALL,propertyPath=bodyWeight,path=h.bodyWeight,tableAlias=human0_,className=org.hibernate.test.hql.Human,classAlias=h}
          |  +-[ALIAS_REF] IdentNode: 'mammal' {alias=h, className=org.hibernate.test.hql.Human, tableAlias=human0_}
          |  \-[IDENT] IdentNode: 'bodyWeight' {originalText=bodyWeight}
          \-[PLUS] BinaryArithmeticOperatorNode: '+' {dataType=org.hibernate.type.FloatType@39fd378e}
             +-[DOT] DotNode: 'body_weight' {propertyName=bodyWeight,dereferenceType=ALL,propertyPath=bodyWeight,path=h.bodyWeight,tableAlias=human0_,className=org.hibernate.test.hql.Human,classAlias=h}
             |  +-[ALIAS_REF] IdentNode: 'mammal' {alias=h, className=org.hibernate.test.hql.Human, tableAlias=human0_}
             |  \-[IDENT] IdentNode: 'bodyWeight' {originalText=bodyWeight}
             \-[SELECT] QueryNode: 'SELECT'  querySpaces (Human,IntegerVersioned,Animal,Mammal)
                +-[SELECT_CLAUSE] SelectClause: '{select clause}'
                |  \-[COUNT] CountNode: 'count'
                |     \-[NUM_INT] LiteralNode: '1'
                \-[FROM] FromClause: 'from' FromClause{level=2, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[integerver1_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
                   \-[FROM_FRAGMENT] FromElement: 'IntegerVersioned integerver1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=IntegerVersioned,tableAlias=integerver1_,origin=null,columns={,className=IntegerVersioned}}

14:13:17,083 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:17,083 DEBUG UpdateStatement:73 - getWhereClause() : Creating a new WHERE clause...
14:13:17,084 DEBUG SQL:104 - 
    insert 
    into
        HT_Human
        select
            human0_.mammal as mammal 
        from
            Human human0_ 
        inner join
            Mammal human0_1_ 
                on human0_.mammal=human0_1_.animal 
        inner join
            Animal human0_2_ 
                on human0_.mammal=human0_2_.id
14:13:17,085 DEBUG SQL:104 - 
    update
        Animal 
    set
        body_weight=body_weight+(select
            count(1) 
        from
            IntegerVersioned integerver1_) 
    where
        (
            id
        ) IN (
            select
                mammal 
            from
                HT_Human
        )
14:13:17,086 DEBUG SQL:104 - 
    delete 
    from
        HT_Human
14:13:17,087 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update org.hibernate.test.hql.Human h set h.bodyWeight = h.bodyWeight + (select count(1) from IntegerVersioned) where h.description = 'abc'
14:13:17,088 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'org'
    |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |     |  |  |  \-[IDENT] Node: 'test'
    |     |  |  \-[IDENT] Node: 'hql'
    |     |  \-[IDENT] Node: 'Human'
    |     \-[ALIAS] Node: 'h'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'h'
    |     |  \-[IDENT] Node: 'bodyWeight'
    |     \-[PLUS] Node: '+'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'h'
    |        |  \-[IDENT] Node: 'bodyWeight'
    |        \-[QUERY] Node: 'query'
    |           \-[SELECT_FROM] Node: 'SELECT_FROM'
    |              +-[FROM] Node: 'from'
    |              |  \-[RANGE] Node: 'RANGE'
    |              |     \-[IDENT] Node: 'IntegerVersioned'
    |              \-[SELECT] Node: 'select'
    |                 \-[COUNT] Node: 'count'
    |                    \-[NUM_INT] Node: '1'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'h'
          |  \-[IDENT] Node: 'description'
          \-[QUOTED_STRING] Node: ''abc''

14:13:17,099 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:17,099 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Human (h) -> human0_
14:13:17,099 DEBUG FromReferenceNode:74 - Resolved : h -> mammal
14:13:17,099 DEBUG DotNode:599 - getDataType() : bodyWeight -> org.hibernate.type.FloatType@39fd378e
14:13:17,100 DEBUG FromReferenceNode:74 - Resolved : h.bodyWeight -> body_weight
14:13:17,100 DEBUG FromReferenceNode:74 - Resolved : h -> mammal
14:13:17,100 DEBUG DotNode:599 - getDataType() : bodyWeight -> org.hibernate.type.FloatType@39fd378e
14:13:17,100 DEBUG FromReferenceNode:74 - Resolved : h.bodyWeight -> body_weight
14:13:17,100 DEBUG FromElement:157 - FromClause{level=2} : IntegerVersioned (<no alias>) -> integerver1_
14:13:17,101 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( count 1 ) ) ( FromClause{level=2} IntegerVersioned integerver1_ ) )
14:13:17,101 DEBUG JoinProcessor:175 - Using FROM fragment [IntegerVersioned integerver1_]
14:13:17,101 DEBUG FromReferenceNode:74 - Resolved : h -> mammal
14:13:17,101 DEBUG DotNode:599 - getDataType() : description -> org.hibernate.type.StringType@2dc8de40
14:13:17,101 DEBUG FromReferenceNode:74 - Resolved : h.description -> human0_2_.description
14:13:17,109 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (Human,IntegerVersioned,Animal,Mammal)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[h], fromElementByTableAlias=[human0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Human' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=h,role=null,tableName=Human,tableAlias=human0_,origin=null,columns={,className=org.hibernate.test.hql.Human}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'body_weight' {propertyName=bodyWeight,dereferenceType=ALL,propertyPath=bodyWeight,path=h.bodyWeight,tableAlias=human0_,className=org.hibernate.test.hql.Human,classAlias=h}
    |     |  +-[ALIAS_REF] IdentNode: 'mammal' {alias=h, className=org.hibernate.test.hql.Human, tableAlias=human0_}
    |     |  \-[IDENT] IdentNode: 'bodyWeight' {originalText=bodyWeight}
    |     \-[PLUS] BinaryArithmeticOperatorNode: '+' {dataType=org.hibernate.type.FloatType@39fd378e}
    |        +-[DOT] DotNode: 'body_weight' {propertyName=bodyWeight,dereferenceType=ALL,propertyPath=bodyWeight,path=h.bodyWeight,tableAlias=human0_,className=org.hibernate.test.hql.Human,classAlias=h}
    |        |  +-[ALIAS_REF] IdentNode: 'mammal' {alias=h, className=org.hibernate.test.hql.Human, tableAlias=human0_}
    |        |  \-[IDENT] IdentNode: 'bodyWeight' {originalText=bodyWeight}
    |        \-[SELECT] QueryNode: 'SELECT'  querySpaces (Human,IntegerVersioned,Animal,Mammal)
    |           +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |           |  \-[COUNT] CountNode: 'count'
    |           |     \-[NUM_INT] LiteralNode: '1'
    |           \-[FROM] FromClause: 'from' FromClause{level=2, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[integerver1_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |              \-[FROM_FRAGMENT] FromElement: 'IntegerVersioned integerver1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=IntegerVersioned,tableAlias=integerver1_,origin=null,columns={,className=IntegerVersioned}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'human0_2_.description' {propertyName=description,dereferenceType=ALL,propertyPath=description,path=h.description,tableAlias=human0_,className=org.hibernate.test.hql.Human,classAlias=h}
          |  +-[ALIAS_REF] IdentNode: 'mammal' {alias=h, className=org.hibernate.test.hql.Human, tableAlias=human0_}
          |  \-[IDENT] IdentNode: 'description' {originalText=description}
          \-[QUOTED_STRING] LiteralNode: ''abc''

14:13:17,109 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:17,110 DEBUG SQL:104 - 
    insert 
    into
        HT_Human
        select
            human0_.mammal as mammal 
        from
            Human human0_ 
        inner join
            Mammal human0_1_ 
                on human0_.mammal=human0_1_.animal 
        inner join
            Animal human0_2_ 
                on human0_.mammal=human0_2_.id 
        where
            human0_2_.description='abc'
14:13:17,110 DEBUG SQL:104 - 
    update
        Animal 
    set
        body_weight=body_weight+(select
            count(1) 
        from
            IntegerVersioned integerver1_) 
    where
        (
            id
        ) IN (
            select
                mammal 
            from
                HT_Human
        )
14:13:17,135 DEBUG SQL:104 - 
    delete 
    from
        HT_Human
14:13:17,135  INFO CustomRunner:139 - Test: testUpdateWithWhereExistsSubquery
14:13:17,136 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:17,144 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:17,145 DEBUG SQL:104 - 
    insert 
    into
        Human
        (name_first, name_initial, name_last, nickName, height_centimeters, intValue, floatValue, bigDecimalValue, bigIntegerValue, mammal) 
    values
        (?, ?, ?, ?, ? * 2.54E0, ?, ?, ?, ?, ?)
14:13:17,145 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:13:17,145 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:13:17,146 DEBUG SQL:104 - 
    insert 
    into
        Human
        (name_first, name_initial, name_last, nickName, height_centimeters, intValue, floatValue, bigDecimalValue, bigIntegerValue, mammal) 
    values
        (?, ?, ?, ?, ? * 2.54E0, ?, ?, ?, ?, ?)
14:13:17,155 DEBUG SQL:104 - 
    insert 
    into
        Human_friends
        (human1, human2) 
    values
        (?, ?)
14:13:17,157 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update org.hibernate.test.hql.Human h set h.description = 'updated' where exists (      select f.id       from h.friends f       where f.name.last = 'Public' )
14:13:17,159 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'org'
    |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |     |  |  |  \-[IDENT] Node: 'test'
    |     |  |  \-[IDENT] Node: 'hql'
    |     |  \-[IDENT] Node: 'Human'
    |     \-[ALIAS] Node: 'h'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'h'
    |     |  \-[IDENT] Node: 'description'
    |     \-[QUOTED_STRING] Node: ''updated''
    \-[WHERE] Node: 'where'
       \-[EXISTS] Node: 'exists'
          \-[QUERY] Node: 'query'
             +-[SELECT_FROM] Node: 'SELECT_FROM'
             |  +-[FROM] Node: 'from'
             |  |  \-[RANGE] Node: 'RANGE'
             |  |     +-[DOT] Node: '.'
             |  |     |  +-[IDENT] Node: 'h'
             |  |     |  \-[IDENT] Node: 'friends'
             |  |     \-[ALIAS] Node: 'f'
             |  \-[SELECT] Node: 'select'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'f'
             |        \-[IDENT] Node: 'id'
             \-[WHERE] Node: 'where'
                \-[EQ] Node: '='
                   +-[DOT] Node: '.'
                   |  +-[DOT] Node: '.'
                   |  |  +-[IDENT] Node: 'f'
                   |  |  \-[IDENT] Node: 'name'
                   |  \-[IDENT] Node: 'last'
                   \-[QUOTED_STRING] Node: ''Public''

14:13:17,166 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:17,167 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Human (h) -> human0_
14:13:17,167 DEBUG FromReferenceNode:74 - Resolved : h -> mammal
14:13:17,167 DEBUG DotNode:599 - getDataType() : description -> org.hibernate.type.StringType@2dc8de40
14:13:17,167 DEBUG FromReferenceNode:74 - Resolved : h.description -> description
14:13:17,176 DEBUG FromElementFactory:129 - createFromElementInSubselect() : path = h.friends
14:13:17,177 DEBUG PathHelper:68 - parsePath() : h.friends -> [  ( . h friends ) ]
14:13:17,177 DEBUG FromReferenceNode:74 - Resolved : h -> mammal
14:13:17,177 DEBUG DotNode:599 - getDataType() : friends -> org.hibernate.type.BagType(org.hibernate.test.hql.Human.friends)
14:13:17,177 DEBUG FromElementFactory:385 - createManyToMany() : path = h.friends role = org.hibernate.test.hql.Human.friends associatedEntityName = org.hibernate.test.hql.Human
14:13:17,177 DEBUG FromElement:157 - FromClause{level=2} : org.hibernate.test.hql.Human (f) -> human2_
14:13:17,178 DEBUG FromClause:282 - addJoinByPathMap() : h.friends -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=f,role=null,tableName=Human,tableAlias=human2_,origin=Human human0_,columns={human0_.mammal ,className=org.hibernate.test.hql.Human}}
14:13:17,178 DEBUG DotNode:308 - dereferenceCollection() : Created new FROM element for h.friends : Human_friends human2_
14:13:17,178 DEBUG FromReferenceNode:74 - Resolved : h.friends -> .
14:13:17,178 DEBUG FromElementFactory:158 - createFromElementInSubselect() : h.friends -> Human_friends human2_
14:13:17,178 DEBUG FromReferenceNode:74 - Resolved : f -> mammal
14:13:17,178 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.LongType@4bf3f9d
14:13:17,178 DEBUG FromReferenceNode:74 - Resolved : f.id -> human2_.mammal
14:13:17,178 DEBUG FromReferenceNode:74 - Resolved : f -> mammal
14:13:17,179 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.ComponentType@697a4b4b
14:13:17,179 DEBUG DotNode:585 - Unresolved property path is now 'name.last'
14:13:17,179 DEBUG FromReferenceNode:74 - Resolved : f.name -> human2_.name_last
14:13:17,179 DEBUG DotNode:599 - getDataType() : name.last -> org.hibernate.type.StringType@2dc8de40
14:13:17,179 DEBUG FromReferenceNode:74 - Resolved : f.name.last -> human2_.name_last
14:13:17,179 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( human2_.mammal mammal id ) ) ( FromClause{level=2} Human_friends human2_ ) ( where ( = ( human2_.name_last ( human2_.name_last mammal name ) last ) 'Public' ) ) )
14:13:17,179 DEBUG JoinProcessor:175 - Using FROM fragment [Human_friends friends1_, Human human2_ inner join Mammal human2_1_ on human2_.mammal=human2_1_.animal inner join Animal human2_2_ on human2_.mammal=human2_2_.id]
14:13:17,179 DEBUG SyntheticAndFactory:92 - Using unprocessed WHERE-fragment [human0_.mammal=friends1_.human1 and friends1_.human2=human2_.mammal]
14:13:17,180 DEBUG SyntheticAndFactory:124 - Using processed WHERE-fragment [human0_.mammal=friends1_.human1 and friends1_.human2=human2_.mammal]
14:13:17,180 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (Human,Animal,Mammal,Human_friends)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[h], fromElementByTableAlias=[human0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Human' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=h,role=null,tableName=Human,tableAlias=human0_,origin=null,columns={,className=org.hibernate.test.hql.Human}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'description' {propertyName=description,dereferenceType=ALL,propertyPath=description,path=h.description,tableAlias=human0_,className=org.hibernate.test.hql.Human,classAlias=h}
    |     |  +-[ALIAS_REF] IdentNode: 'mammal' {alias=h, className=org.hibernate.test.hql.Human, tableAlias=human0_}
    |     |  \-[IDENT] IdentNode: 'description' {originalText=description}
    |     \-[QUOTED_STRING] LiteralNode: ''updated''
    \-[WHERE] SqlNode: 'where'
       \-[EXISTS] UnaryLogicOperatorNode: 'exists'
          \-[SELECT] QueryNode: 'SELECT'  querySpaces (Human,Animal,Mammal,Human_friends)
             +-[SELECT_CLAUSE] SelectClause: '{select clause}'
             |  \-[DOT] DotNode: 'human2_.mammal' {propertyName=id,dereferenceType=ALL,propertyPath=id,path=f.id,tableAlias=human2_,className=org.hibernate.test.hql.Human,classAlias=f}
             |     +-[ALIAS_REF] IdentNode: 'mammal' {alias=f, className=org.hibernate.test.hql.Human, tableAlias=human2_}
             |     \-[IDENT] IdentNode: 'id' {originalText=id}
             +-[FROM] FromClause: 'from' FromClause{level=2, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[f], fromElementByTableAlias=[human2_], fromElementsByPath=[h.friends], collectionJoinFromElementsByPath=[], impliedElements=[]}
             |  \-[FROM_FRAGMENT] ImpliedFromElement: 'Human_friends friends1_, Human human2_ inner join Mammal human2_1_ on human2_.mammal=human2_1_.animal inner join Animal human2_2_ on human2_.mammal=human2_2_.id' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=f,role=org.hibernate.test.hql.Human.friends,tableName=Human,tableAlias=human2_,origin=Human,columns={human0_.mammal ,className=org.hibernate.test.hql.Human}}
             \-[WHERE] SqlNode: 'where'
                +-[THETA_JOINS] SqlNode: '{theta joins}'
                |  \-[SQL_TOKEN] SqlFragment: 'human0_.mammal=friends1_.human1 and friends1_.human2=human2_.mammal'
                \-[EQ] BinaryLogicOperatorNode: '='
                   +-[DOT] DotNode: 'human2_.name_last' {propertyName=last,dereferenceType=ALL,propertyPath=name.last,path=f.name.last,tableAlias=human2_,className=org.hibernate.test.hql.Human,classAlias=f}
                   |  +-[DOT] DotNode: 'human2_.name_last' {propertyName=last,dereferenceType=2,propertyPath=name.last,path=f.name,tableAlias=human2_,className=org.hibernate.test.hql.Human,classAlias=f}
                   |  |  +-[ALIAS_REF] IdentNode: 'mammal' {alias=f, className=org.hibernate.test.hql.Human, tableAlias=human2_}
                   |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
                   |  \-[IDENT] IdentNode: 'last' {originalText=last}
                   \-[QUOTED_STRING] LiteralNode: ''Public''

14:13:17,189 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:17,190 DEBUG SQL:104 - 
    insert 
    into
        HT_Human
        select
            human0_.mammal as mammal 
        from
            Human human0_ 
        inner join
            Mammal human0_1_ 
                on human0_.mammal=human0_1_.animal 
        inner join
            Animal human0_2_ 
                on human0_.mammal=human0_2_.id 
        where
            exists (
                select
                    human2_.mammal 
                from
                    Human_friends friends1_,
                    Human human2_ 
                inner join
                    Mammal human2_1_ 
                        on human2_.mammal=human2_1_.animal 
                inner join
                    Animal human2_2_ 
                        on human2_.mammal=human2_2_.id 
                where
                    human0_.mammal=friends1_.human1 
                    and friends1_.human2=human2_.mammal 
                    and human2_.name_last='Public'
            )
14:13:17,201 DEBUG SQL:104 - 
    update
        Animal 
    set
        description='updated' 
    where
        (
            id
        ) IN (
            select
                mammal 
            from
                HT_Human
        )
14:13:17,210 DEBUG SQL:104 - 
    delete 
    from
        HT_Human
14:13:17,211 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=null 
    where
        mother_id=?
14:13:17,211 DEBUG SQL:104 - 
    delete 
    from
        Human_family 
    where
        human1=?
14:13:17,211 DEBUG SQL:104 - 
    delete 
    from
        human_nick_names 
    where
        human=?
14:13:17,211 DEBUG SQL:104 - 
    delete 
    from
        addresses 
    where
        human=?
14:13:17,212 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=null 
    where
        mother_id=?
14:13:17,212 DEBUG SQL:104 - 
    delete 
    from
        Human_friends 
    where
        human1=?
14:13:17,212 DEBUG SQL:104 - 
    delete 
    from
        Human_family 
    where
        human1=?
14:13:17,212 DEBUG SQL:104 - 
    delete 
    from
        human_nick_names 
    where
        human=?
14:13:17,223 DEBUG SQL:104 - 
    delete 
    from
        addresses 
    where
        human=?
14:13:17,224 DEBUG SQL:104 - 
    delete 
    from
        Human_friends 
    where
        human1=?
14:13:17,225 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        mammal=?
14:13:17,225 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        animal=?
14:13:17,225 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        id=?
14:13:17,234 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        mammal=?
14:13:17,235 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        animal=?
14:13:17,235 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        id=?
14:13:17,236 DEBUG SQL:104 - 
    insert 
    into
        SIMPLE_1
        (ID, NAME, negated_num) 
    values
        (null, ?, 0 - ?)
14:13:17,238 DEBUG SQL:104 - 
    insert 
    into
        SIMPLE_2
        (ID, NAME, SIMPLE_1_ID) 
    values
        (null, ?, ?)
14:13:17,238 DEBUG SQL:104 - 
    insert 
    into
        SIMPLE_1
        (ID, NAME, negated_num) 
    values
        (null, ?, 0 - ?)
14:13:17,239 DEBUG SQL:104 - 
    insert 
    into
        MANY_TO_MANY
        (IN_ID, OUT_ID) 
    values
        (?, ?)
14:13:17,259 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update org.hibernate.test.hql.SimpleEntityWithAssociation e set e.name = 'updated' where exists (      select a.id       from e.associatedEntities a       where a.name = 'one-to-many-association' )
14:13:17,261 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'org'
    |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |     |  |  |  \-[IDENT] Node: 'test'
    |     |  |  \-[IDENT] Node: 'hql'
    |     |  \-[IDENT] Node: 'SimpleEntityWithAssociation'
    |     \-[ALIAS] Node: 'e'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'e'
    |     |  \-[IDENT] Node: 'name'
    |     \-[QUOTED_STRING] Node: ''updated''
    \-[WHERE] Node: 'where'
       \-[EXISTS] Node: 'exists'
          \-[QUERY] Node: 'query'
             +-[SELECT_FROM] Node: 'SELECT_FROM'
             |  +-[FROM] Node: 'from'
             |  |  \-[RANGE] Node: 'RANGE'
             |  |     +-[DOT] Node: '.'
             |  |     |  +-[IDENT] Node: 'e'
             |  |     |  \-[IDENT] Node: 'associatedEntities'
             |  |     \-[ALIAS] Node: 'a'
             |  \-[SELECT] Node: 'select'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'a'
             |        \-[IDENT] Node: 'id'
             \-[WHERE] Node: 'where'
                \-[EQ] Node: '='
                   +-[DOT] Node: '.'
                   |  +-[IDENT] Node: 'a'
                   |  \-[IDENT] Node: 'name'
                   \-[QUOTED_STRING] Node: ''one-to-many-association''

14:13:17,268 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:17,268 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.SimpleEntityWithAssociation (e) -> simpleenti0_
14:13:17,268 DEBUG FromReferenceNode:74 - Resolved : e -> ID
14:13:17,268 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:13:17,269 DEBUG FromReferenceNode:74 - Resolved : e.name -> NAME
14:13:17,269 DEBUG FromElementFactory:129 - createFromElementInSubselect() : path = e.associatedEntities
14:13:17,269 DEBUG PathHelper:68 - parsePath() : e.associatedEntities -> [  ( . e associatedEntities ) ]
14:13:17,269 DEBUG FromReferenceNode:74 - Resolved : e -> ID
14:13:17,269 DEBUG DotNode:599 - getDataType() : associatedEntities -> org.hibernate.type.SetType(org.hibernate.test.hql.SimpleEntityWithAssociation.associatedEntities)
14:13:17,269 DEBUG FromElementFactory:376 - createEntityAssociation() : One to many - path = e.associatedEntities role = org.hibernate.test.hql.SimpleEntityWithAssociation.associatedEntities associatedEntityName = org.hibernate.test.hql.SimpleAssociatedEntity
14:13:17,269 DEBUG FromElement:157 - FromClause{level=2} : org.hibernate.test.hql.SimpleAssociatedEntity (a) -> associated1_
14:13:17,270 DEBUG FromClause:282 - addJoinByPathMap() : e.associatedEntities -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=SIMPLE_2,tableAlias=associated1_,origin=SIMPLE_1 simpleenti0_,columns={SIMPLE_1.ID ,className=org.hibernate.test.hql.SimpleAssociatedEntity}}
14:13:17,270 DEBUG DotNode:308 - dereferenceCollection() : Created new FROM element for e.associatedEntities : SIMPLE_2 associated1_
14:13:17,270 DEBUG FromReferenceNode:74 - Resolved : e.associatedEntities -> .
14:13:17,270 DEBUG FromElementFactory:158 - createFromElementInSubselect() : e.associatedEntities -> SIMPLE_2 associated1_
14:13:17,270 DEBUG FromReferenceNode:74 - Resolved : a -> ID
14:13:17,270 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.LongType@4bf3f9d
14:13:17,279 DEBUG FromReferenceNode:74 - Resolved : a.id -> associated1_.ID
14:13:17,279 DEBUG FromReferenceNode:74 - Resolved : a -> ID
14:13:17,279 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:13:17,279 DEBUG FromReferenceNode:74 - Resolved : a.name -> associated1_.NAME
14:13:17,279 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( associated1_.ID ID id ) ) ( FromClause{level=2} SIMPLE_2 associated1_ ) ( where ( = ( associated1_.NAME ID name ) 'one-to-many-association' ) ) )
14:13:17,279 DEBUG SyntheticAndFactory:92 - Using unprocessed WHERE-fragment [SIMPLE_1.ID=associated1_.SIMPLE_1_ID]
14:13:17,280 DEBUG SyntheticAndFactory:124 - Using processed WHERE-fragment [SIMPLE_1.ID=associated1_.SIMPLE_1_ID]
14:13:17,280 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (SIMPLE_2,SIMPLE_1)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[simpleenti0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'SIMPLE_1' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=SIMPLE_1,tableAlias=simpleenti0_,origin=null,columns={,className=org.hibernate.test.hql.SimpleEntityWithAssociation}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'NAME' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=e.name,tableAlias=simpleenti0_,className=org.hibernate.test.hql.SimpleEntityWithAssociation,classAlias=e}
    |     |  +-[ALIAS_REF] IdentNode: 'ID' {alias=e, className=org.hibernate.test.hql.SimpleEntityWithAssociation, tableAlias=simpleenti0_}
    |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |     \-[QUOTED_STRING] LiteralNode: ''updated''
    \-[WHERE] SqlNode: 'where'
       \-[EXISTS] UnaryLogicOperatorNode: 'exists'
          \-[SELECT] QueryNode: 'SELECT'  querySpaces (SIMPLE_2,SIMPLE_1)
             +-[SELECT_CLAUSE] SelectClause: '{select clause}'
             |  \-[DOT] DotNode: 'associated1_.ID' {propertyName=id,dereferenceType=ALL,propertyPath=id,path=a.id,tableAlias=associated1_,className=org.hibernate.test.hql.SimpleAssociatedEntity,classAlias=a}
             |     +-[ALIAS_REF] IdentNode: 'ID' {alias=a, className=org.hibernate.test.hql.SimpleAssociatedEntity, tableAlias=associated1_}
             |     \-[IDENT] IdentNode: 'id' {originalText=id}
             +-[FROM] FromClause: 'from' FromClause{level=2, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[associated1_], fromElementsByPath=[e.associatedEntities], collectionJoinFromElementsByPath=[], impliedElements=[]}
             |  \-[FROM_FRAGMENT] ImpliedFromElement: 'SIMPLE_2 associated1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=org.hibernate.test.hql.SimpleEntityWithAssociation.associatedEntities,tableName=SIMPLE_2,tableAlias=associated1_,origin=SIMPLE_1,columns={SIMPLE_1.ID ,className=org.hibernate.test.hql.SimpleAssociatedEntity}}
             \-[WHERE] SqlNode: 'where'
                +-[THETA_JOINS] SqlNode: '{theta joins}'
                |  \-[SQL_TOKEN] SqlFragment: 'SIMPLE_1.ID=associated1_.SIMPLE_1_ID'
                \-[EQ] BinaryLogicOperatorNode: '='
                   +-[DOT] DotNode: 'associated1_.NAME' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=a.name,tableAlias=associated1_,className=org.hibernate.test.hql.SimpleAssociatedEntity,classAlias=a}
                   |  +-[ALIAS_REF] IdentNode: 'ID' {alias=a, className=org.hibernate.test.hql.SimpleAssociatedEntity, tableAlias=associated1_}
                   |  \-[IDENT] IdentNode: 'name' {originalText=name}
                   \-[QUOTED_STRING] LiteralNode: ''one-to-many-association''

14:13:17,289 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:17,290 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:17,290 DEBUG SQL:104 - 
    update
        SIMPLE_1 
    set
        NAME='updated' 
    where
        exists (
            select
                associated1_.ID 
            from
                SIMPLE_2 associated1_ 
            where
                SIMPLE_1.ID=associated1_.SIMPLE_1_ID 
                and associated1_.NAME='one-to-many-association'
        )
14:13:17,291 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update org.hibernate.test.hql.SimpleEntityWithAssociation e set e.name = 'updated' where exists (      select a.id       from e.manyToManyAssociatedEntities a       where a.name = 'many-to-many-association' )
14:13:17,293 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'org'
    |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |     |  |  |  \-[IDENT] Node: 'test'
    |     |  |  \-[IDENT] Node: 'hql'
    |     |  \-[IDENT] Node: 'SimpleEntityWithAssociation'
    |     \-[ALIAS] Node: 'e'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'e'
    |     |  \-[IDENT] Node: 'name'
    |     \-[QUOTED_STRING] Node: ''updated''
    \-[WHERE] Node: 'where'
       \-[EXISTS] Node: 'exists'
          \-[QUERY] Node: 'query'
             +-[SELECT_FROM] Node: 'SELECT_FROM'
             |  +-[FROM] Node: 'from'
             |  |  \-[RANGE] Node: 'RANGE'
             |  |     +-[DOT] Node: '.'
             |  |     |  +-[IDENT] Node: 'e'
             |  |     |  \-[IDENT] Node: 'manyToManyAssociatedEntities'
             |  |     \-[ALIAS] Node: 'a'
             |  \-[SELECT] Node: 'select'
             |     \-[DOT] Node: '.'
             |        +-[IDENT] Node: 'a'
             |        \-[IDENT] Node: 'id'
             \-[WHERE] Node: 'where'
                \-[EQ] Node: '='
                   +-[DOT] Node: '.'
                   |  +-[IDENT] Node: 'a'
                   |  \-[IDENT] Node: 'name'
                   \-[QUOTED_STRING] Node: ''many-to-many-association''

14:13:17,309 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:17,310 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.SimpleEntityWithAssociation (e) -> simpleenti0_
14:13:17,310 DEBUG FromReferenceNode:74 - Resolved : e -> ID
14:13:17,310 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:13:17,310 DEBUG FromReferenceNode:74 - Resolved : e.name -> NAME
14:13:17,310 DEBUG FromElementFactory:129 - createFromElementInSubselect() : path = e.manyToManyAssociatedEntities
14:13:17,310 DEBUG PathHelper:68 - parsePath() : e.manyToManyAssociatedEntities -> [  ( . e manyToManyAssociatedEntities ) ]
14:13:17,310 DEBUG FromReferenceNode:74 - Resolved : e -> ID
14:13:17,310 DEBUG DotNode:599 - getDataType() : manyToManyAssociatedEntities -> org.hibernate.type.SetType(org.hibernate.test.hql.SimpleEntityWithAssociation.manyToManyAssociatedEntities)
14:13:17,311 DEBUG FromElementFactory:385 - createManyToMany() : path = e.manyToManyAssociatedEntities role = org.hibernate.test.hql.SimpleEntityWithAssociation.manyToManyAssociatedEntities associatedEntityName = org.hibernate.test.hql.SimpleEntityWithAssociation
14:13:17,311 DEBUG FromElement:157 - FromClause{level=2} : org.hibernate.test.hql.SimpleEntityWithAssociation (a) -> simpleenti2_
14:13:17,311 DEBUG FromClause:282 - addJoinByPathMap() : e.manyToManyAssociatedEntities -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=SIMPLE_1,tableAlias=simpleenti2_,origin=SIMPLE_1 simpleenti0_,columns={SIMPLE_1.ID ,className=org.hibernate.test.hql.SimpleEntityWithAssociation}}
14:13:17,311 DEBUG DotNode:308 - dereferenceCollection() : Created new FROM element for e.manyToManyAssociatedEntities : MANY_TO_MANY simpleenti2_
14:13:17,311 DEBUG FromReferenceNode:74 - Resolved : e.manyToManyAssociatedEntities -> .
14:13:17,311 DEBUG FromElementFactory:158 - createFromElementInSubselect() : e.manyToManyAssociatedEntities -> MANY_TO_MANY simpleenti2_
14:13:17,311 DEBUG FromReferenceNode:74 - Resolved : a -> ID
14:13:17,311 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.LongType@4bf3f9d
14:13:17,312 DEBUG FromReferenceNode:74 - Resolved : a.id -> simpleenti2_.ID
14:13:17,312 DEBUG FromReferenceNode:74 - Resolved : a -> ID
14:13:17,312 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:13:17,312 DEBUG FromReferenceNode:74 - Resolved : a.name -> simpleenti2_.NAME
14:13:17,312 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( simpleenti2_.ID ID id ) ) ( FromClause{level=2} MANY_TO_MANY simpleenti2_ ) ( where ( = ( simpleenti2_.NAME ID name ) 'many-to-many-association' ) ) )
14:13:17,312 DEBUG JoinProcessor:175 - Using FROM fragment [MANY_TO_MANY manytomany1_, SIMPLE_1 simpleenti2_]
14:13:17,312 DEBUG SyntheticAndFactory:92 - Using unprocessed WHERE-fragment [SIMPLE_1.ID=manytomany1_.IN_ID and manytomany1_.OUT_ID=simpleenti2_.ID]
14:13:17,312 DEBUG SyntheticAndFactory:124 - Using processed WHERE-fragment [SIMPLE_1.ID=manytomany1_.IN_ID and manytomany1_.OUT_ID=simpleenti2_.ID]
14:13:17,313 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (MANY_TO_MANY,SIMPLE_1)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[simpleenti0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'SIMPLE_1' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=SIMPLE_1,tableAlias=simpleenti0_,origin=null,columns={,className=org.hibernate.test.hql.SimpleEntityWithAssociation}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'NAME' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=e.name,tableAlias=simpleenti0_,className=org.hibernate.test.hql.SimpleEntityWithAssociation,classAlias=e}
    |     |  +-[ALIAS_REF] IdentNode: 'ID' {alias=e, className=org.hibernate.test.hql.SimpleEntityWithAssociation, tableAlias=simpleenti0_}
    |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |     \-[QUOTED_STRING] LiteralNode: ''updated''
    \-[WHERE] SqlNode: 'where'
       \-[EXISTS] UnaryLogicOperatorNode: 'exists'
          \-[SELECT] QueryNode: 'SELECT'  querySpaces (MANY_TO_MANY,SIMPLE_1)
             +-[SELECT_CLAUSE] SelectClause: '{select clause}'
             |  \-[DOT] DotNode: 'simpleenti2_.ID' {propertyName=id,dereferenceType=ALL,propertyPath=id,path=a.id,tableAlias=simpleenti2_,className=org.hibernate.test.hql.SimpleEntityWithAssociation,classAlias=a}
             |     +-[ALIAS_REF] IdentNode: 'ID' {alias=a, className=org.hibernate.test.hql.SimpleEntityWithAssociation, tableAlias=simpleenti2_}
             |     \-[IDENT] IdentNode: 'id' {originalText=id}
             +-[FROM] FromClause: 'from' FromClause{level=2, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[simpleenti2_], fromElementsByPath=[e.manyToManyAssociatedEntities], collectionJoinFromElementsByPath=[], impliedElements=[]}
             |  \-[FROM_FRAGMENT] ImpliedFromElement: 'MANY_TO_MANY manytomany1_, SIMPLE_1 simpleenti2_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=org.hibernate.test.hql.SimpleEntityWithAssociation.manyToManyAssociatedEntities,tableName=SIMPLE_1,tableAlias=simpleenti2_,origin=SIMPLE_1,columns={SIMPLE_1.ID ,className=org.hibernate.test.hql.SimpleEntityWithAssociation}}
             \-[WHERE] SqlNode: 'where'
                +-[THETA_JOINS] SqlNode: '{theta joins}'
                |  \-[SQL_TOKEN] SqlFragment: 'SIMPLE_1.ID=manytomany1_.IN_ID and manytomany1_.OUT_ID=simpleenti2_.ID'
                \-[EQ] BinaryLogicOperatorNode: '='
                   +-[DOT] DotNode: 'simpleenti2_.NAME' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=a.name,tableAlias=simpleenti2_,className=org.hibernate.test.hql.SimpleEntityWithAssociation,classAlias=a}
                   |  +-[ALIAS_REF] IdentNode: 'ID' {alias=a, className=org.hibernate.test.hql.SimpleEntityWithAssociation, tableAlias=simpleenti2_}
                   |  \-[IDENT] IdentNode: 'name' {originalText=name}
                   \-[QUOTED_STRING] LiteralNode: ''many-to-many-association''

14:13:17,320 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:17,321 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:17,321 DEBUG SQL:104 - 
    update
        SIMPLE_1 
    set
        NAME='updated' 
    where
        exists (
            select
                simpleenti2_.ID 
            from
                MANY_TO_MANY manytomany1_,
                SIMPLE_1 simpleenti2_ 
            where
                SIMPLE_1.ID=manytomany1_.IN_ID 
                and manytomany1_.OUT_ID=simpleenti2_.ID 
                and simpleenti2_.NAME='many-to-many-association'
        )
14:13:17,333 DEBUG SQL:104 - 
    delete 
    from
        MANY_TO_MANY 
    where
        IN_ID=?
14:13:17,333 DEBUG SQL:104 - 
    delete 
    from
        SIMPLE_1 
    where
        ID=?
14:13:17,334 DEBUG SQL:104 - 
    delete 
    from
        SIMPLE_2 
    where
        ID=?
14:13:17,334 DEBUG SQL:104 - 
    delete 
    from
        SIMPLE_1 
    where
        ID=?
14:13:17,335  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:13:17,335 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:13:17,336 DEBUG SQL:104 - 
    alter table Animal 
        drop constraint FK752A7A1C1F3964B4
14:13:17,336 DEBUG SQL:104 - 
    alter table Animal 
        drop constraint FK752A7A1C6309E77B
14:13:17,336 DEBUG SQL:104 - 
    alter table Animal 
        drop constraint FK752A7A1C4B485C79
14:13:17,336 DEBUG SQL:104 - 
    alter table Cat 
        drop constraint FK107B66D384BBA
14:13:17,336 DEBUG SQL:104 - 
    alter table Dog 
        drop constraint FK10D1C6D384BBA
14:13:17,336 DEBUG SQL:104 - 
    alter table DomesticAnimal 
        drop constraint FKE02638DA1733655F
14:13:17,337 DEBUG SQL:104 - 
    alter table DomesticAnimal 
        drop constraint FKE02638DA6C03411F
14:13:17,345 DEBUG SQL:104 - 
    alter table Human 
        drop constraint FK42D710D1733655F
14:13:17,345 DEBUG SQL:104 - 
    alter table Human_family 
        drop constraint FK5F790ED61DCB1311
14:13:17,345 DEBUG SQL:104 - 
    alter table Human_family 
        drop constraint FK5F790ED61DCB1310
14:13:17,345 DEBUG SQL:104 - 
    alter table Human_friends 
        drop constraint FKAC7104631DCB1311
14:13:17,346 DEBUG SQL:104 - 
    alter table Human_friends 
        drop constraint FKAC7104631DCB1310
14:13:17,346 DEBUG SQL:104 - 
    alter table JOINED 
        drop constraint FK82C23B49534E0F13
14:13:17,346 DEBUG SQL:104 - 
    alter table KeyManyToOneEntity 
        drop constraint FK489A71905D944F66
14:13:17,346 DEBUG SQL:104 - 
    alter table Lizard 
        drop constraint FK87B0E2B6EE398315
14:13:17,346 DEBUG SQL:104 - 
    alter table MANY_TO_MANY 
        drop constraint FK8CF3D7C3E0DF2A91
14:13:17,346 DEBUG SQL:104 - 
    alter table MANY_TO_MANY 
        drop constraint FK8CF3D7C322C9695A
14:13:17,355 DEBUG SQL:104 - 
    alter table Mammal 
        drop constraint FK88EF417FEFA9D699
14:13:17,355 DEBUG SQL:104 - 
    alter table Mammal 
        drop constraint FK88EF417FCE6EEE98
14:13:17,355 DEBUG SQL:104 - 
    alter table Po 
        drop constraint FKA1FDED16EBE
14:13:17,356 DEBUG SQL:104 - 
    alter table Po 
        drop constraint FKA1F6F89E02A
14:13:17,356 DEBUG SQL:104 - 
    alter table Reptile 
        drop constraint FKA4790CABEFA9D699
14:13:17,356 DEBUG SQL:104 - 
    alter table SIMPLE_2 
        drop constraint FK4B988CE5C81DD13B
14:13:17,356 DEBUG SQL:104 - 
    alter table TrivialClass 
        drop constraint FKC09264CFDF079C10
14:13:17,356 DEBUG SQL:104 - 
    alter table Zoo 
        drop constraint FK15FBA55106523
14:13:17,356 DEBUG SQL:104 - 
    alter table Zoo_directors 
        drop constraint FK2D21982265B0D719
14:13:17,356 DEBUG SQL:104 - 
    alter table Zoo_directors 
        drop constraint FK2D219822C590D705
14:13:17,357 DEBUG SQL:104 - 
    alter table "User_permissions" 
        drop constraint FKB4582A30F2810CD2
14:13:17,357 DEBUG SQL:104 - 
    alter table "User" 
        drop constraint FK285FEB65AF5B87
14:13:17,357 DEBUG SQL:104 - 
    alter table "foos" 
        drop constraint FK300C6DDED2B87D
14:13:17,357 DEBUG SQL:104 - 
    alter table "foos" 
        drop constraint FK300C6D800DF629
14:13:17,357 DEBUG SQL:104 - 
    alter table addresses 
        drop constraint FK34207BA255106523
14:13:17,378 DEBUG SQL:104 - 
    alter table addresses 
        drop constraint FK34207BA26B9FAF99
14:13:17,378 DEBUG SQL:104 - 
    alter table bar_join_table 
        drop constraint FKF39114258B9833CB
14:13:17,378 DEBUG SQL:104 - 
    alter table foobytes 
        drop constraint FK16933F65DED138D2
14:13:17,378 DEBUG SQL:104 - 
    alter table human_nick_names 
        drop constraint FK8718E1BE6B9FAF99
14:13:17,378 DEBUG SQL:104 - 
    alter table jointable 
        drop constraint FKE3AC08E4E4A2AC18
14:13:17,379 DEBUG SQL:104 - 
    alter table leafsubclass 
        drop constraint FK24853496DF029E81
14:13:17,379 DEBUG SQL:104 - 
    alter table leafsubclass 
        drop constraint FK24853496A2CEC367
14:13:17,379 DEBUG SQL:104 - 
    alter table leafsubclass 
        drop constraint FK24853496338734D5
14:13:17,379 DEBUG SQL:104 - 
    alter table leafsubsubclass 
        drop constraint FK443F0B5A6F9C38B8
14:13:17,379 DEBUG SQL:104 - 
    alter table leafsubsubclass 
        drop constraint FK443F0B5A8B3D2732
14:13:17,388 DEBUG SQL:104 - 
    alter table leafsubsubclass 
        drop constraint FK443F0B5AAC6C3EE
14:13:17,388 DEBUG SQL:104 - 
    alter table leafsubsubclass 
        drop constraint FK443F0B5A3310E22E
14:13:17,389 DEBUG SQL:104 - 
    alter table nonleafsubclass 
        drop constraint FK2C4413E3DED31D14
14:13:17,389 DEBUG SQL:104 - 
    alter table nonleafsubclass 
        drop constraint FK2C4413E33397DF0C
14:13:17,389 DEBUG SQL:104 - 
    alter table nonleafsubclass 
        drop constraint FK2C4413E328385AED
14:13:17,390 DEBUG SQL:104 - 
    alter table rootclass 
        drop constraint FKCC8765D6DF07C9F0
14:13:17,390 DEBUG SQL:104 - 
    alter table rootclass 
        drop constraint FKCC8765D63434DA5C
14:13:17,390 DEBUG SQL:104 - 
    alter table simple_simple 
        drop constraint FK869810DF5B9F6506
14:13:17,391 DEBUG SQL:104 - 
    alter table simple_simple 
        drop constraint FK869810DFEC57D671
14:13:17,391 DEBUG SQL:104 - 
    drop table Animal if exists
14:13:17,397 DEBUG SQL:104 - 
    drop table BooleanLiteralEntity if exists
14:13:17,397 DEBUG SQL:104 - 
    drop table Car if exists
14:13:17,397 DEBUG SQL:104 - 
    drop table Cat if exists
14:13:17,398 DEBUG SQL:104 - 
    drop table CompositeIdEntity if exists
14:13:17,398 DEBUG SQL:104 - 
    drop table Dog if exists
14:13:17,399 DEBUG SQL:104 - 
    drop table DomesticAnimal if exists
14:13:17,399 DEBUG SQL:104 - 
    drop table EntityWithCrazyCompositeKey if exists
14:13:17,400 DEBUG SQL:104 - 
    drop table Human if exists
14:13:17,400 DEBUG SQL:104 - 
    drop table Human_family if exists
14:13:17,401 DEBUG SQL:104 - 
    drop table Human_friends if exists
14:13:17,401 DEBUG SQL:104 - 
    drop table IntegerVersioned if exists
14:13:17,401 DEBUG SQL:104 - 
    drop table JOINED if exists
14:13:17,402 DEBUG SQL:104 - 
    drop table Joiner if exists
14:13:17,402 DEBUG SQL:104 - 
    drop table KeyManyToOneEntity if exists
14:13:17,406 DEBUG SQL:104 - 
    drop table KeyManyToOneKeyEntity if exists
14:13:17,406 DEBUG SQL:104 - 
    drop table Lizard if exists
14:13:17,406 DEBUG SQL:104 - 
    drop table MANY_TO_MANY if exists
14:13:17,407 DEBUG SQL:104 - 
    drop table Mammal if exists
14:13:17,407 DEBUG SQL:104 - 
    drop table Pickup if exists
14:13:17,408 DEBUG SQL:104 - 
    drop table Po if exists
14:13:17,408 DEBUG SQL:104 - 
    drop table Reptile if exists
14:13:17,408 DEBUG SQL:104 - 
    drop table SIMPLE_1 if exists
14:13:17,408 DEBUG SQL:104 - 
    drop table SIMPLE_2 if exists
14:13:17,409 DEBUG SQL:104 - 
    drop table SUV if exists
14:13:17,409 DEBUG SQL:104 - 
    drop table StateProvince if exists
14:13:17,409 DEBUG SQL:104 - 
    drop table TimestampVersioned if exists
14:13:17,409 DEBUG SQL:104 - 
    drop table TrivialClass if exists
14:13:17,410 DEBUG SQL:104 - 
    drop table Truck if exists
14:13:17,410 DEBUG SQL:104 - 
    drop table Zoo if exists
14:13:17,418 DEBUG SQL:104 - 
    drop table Zoo_directors if exists
14:13:17,419 DEBUG SQL:104 - 
    drop table "User_permissions" if exists
14:13:17,419 DEBUG SQL:104 - 
    drop table "User" if exists
14:13:17,419 DEBUG SQL:104 - 
    drop table "foos" if exists
14:13:17,419 DEBUG SQL:104 - 
    drop table addresses if exists
14:13:17,420 DEBUG SQL:104 - 
    drop table bar_join_table if exists
14:13:17,420 DEBUG SQL:104 - 
    drop table foobytes if exists
14:13:17,420 DEBUG SQL:104 - 
    drop table human_nick_names if exists
14:13:17,420 DEBUG SQL:104 - 
    drop table jointable if exists
14:13:17,420 DEBUG SQL:104 - 
    drop table leafsubclass if exists
14:13:17,420 DEBUG SQL:104 - 
    drop table leafsubsubclass if exists
14:13:17,421 DEBUG SQL:104 - 
    drop table many if exists
14:13:17,421 DEBUG SQL:104 - 
    drop table nonleafsubclass if exists
14:13:17,421 DEBUG SQL:104 - 
    drop table one if exists
14:13:17,421 DEBUG SQL:104 - 
    drop table rootclass if exists
14:13:17,429 DEBUG SQL:104 - 
    drop table simple_simple if exists
14:13:17,429  INFO SchemaExport:405 - HHH000230: Schema export complete
14:13:17,429  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
