<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" hostname="dhcp-10.15.208.168.stl.redhat.com" name="org.hibernate.test.subclassfilter.UnionSubclassFilterTest" tests="1" time="0.247" timestamp="2013-02-28T20:19:21">
  <properties />
  <testcase classname="org.hibernate.test.subclassfilter.UnionSubclassFilterTest" name="testFiltersWithUnionSubclass" time="0.204" />
  <system-out><![CDATA[14:19:21,925  INFO CustomRunner:132 - BeforeClass: org.hibernate.test.subclassfilter.UnionSubclassFilterTest
14:19:21,927  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/subclassfilter/union-subclass.hbm.xml
14:19:21,933  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:19:21,934  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:19:21,934  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:19:21,934  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:19:21,934  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:19:21,936  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:19:21,936  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:19:21,936  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:19:21,937  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:19:21,937  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:19:21,943  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:19:21,944 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:19:21,944 DEBUG SQL:104 - 
    alter table UCustomer 
        drop constraint FK62B4BF53D01561E9
14:19:21,944 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table UCustomer drop constraint FK62B4BF53D01561E9
14:19:21,944 ERROR SchemaExport:426 - Table "UCUSTOMER" not found; SQL statement:

    alter table UCustomer 
        drop constraint FK62B4BF53D01561E9 [42102-145]
14:19:21,944 DEBUG SQL:104 - 
    alter table UEmployee 
        drop constraint FK85B6262342E7F3F8
14:19:21,945 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table UEmployee drop constraint FK85B6262342E7F3F8
14:19:21,945 ERROR SchemaExport:426 - Table "UEMPLOYEE" not found; SQL statement:

    alter table UEmployee 
        drop constraint FK85B6262342E7F3F8 [42102-145]
14:19:21,945 DEBUG SQL:104 - 
    drop table UCustomer if exists
14:19:21,945 DEBUG SQL:104 - 
    drop table UEmployee if exists
14:19:21,945 DEBUG SQL:104 - 
    drop table UPerson if exists
14:19:21,946 DEBUG SQL:104 - 
    drop table hibernate_unique_key if exists
14:19:21,946 DEBUG SQL:104 - 
    create table UCustomer (
        person_id bigint not null,
        name varchar(255) not null,
        company varchar(255),
        region varchar(255),
        contactOwner bigint,
        primary key (person_id)
    )
14:19:21,946 DEBUG SQL:104 - 
    create table UEmployee (
        person_id bigint not null,
        name varchar(255) not null,
        company varchar(255),
        region varchar(255),
        title varchar(255),
        dept varchar(255),
        mgr_id bigint,
        primary key (person_id)
    )
14:19:21,946 DEBUG SQL:104 - 
    create table UPerson (
        person_id bigint not null,
        name varchar(255) not null,
        company varchar(255),
        region varchar(255),
        primary key (person_id)
    )
14:19:21,947 DEBUG SQL:104 - 
    alter table UPerson 
        add constraint uc_UPerson_1 unique (name)
14:19:21,947 DEBUG SQL:104 - 
    alter table UCustomer 
        add constraint uc_UCustomer_1 unique (name)
14:19:21,947 DEBUG SQL:104 - 
    alter table UCustomer 
        add constraint FK62B4BF53D01561E9 
        foreign key (contactOwner) 
        references UEmployee
14:19:21,948 DEBUG SQL:104 - 
    alter table UPerson 
        add constraint uc_UPerson_1 unique (name)
14:19:21,948 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table UPerson add constraint uc_UPerson_1 unique (name)
14:19:21,948 ERROR SchemaExport:426 - Constraint "UC_UPERSON_1" already exists; SQL statement:

    alter table UPerson 
        add constraint uc_UPerson_1 unique (name) [90045-145]
14:19:21,953 DEBUG SQL:104 - 
    alter table UEmployee 
        add constraint uc_UEmployee_1 unique (name)
14:19:21,953 DEBUG SQL:104 - 
    alter table UEmployee 
        add constraint FK85B6262342E7F3F8 
        foreign key (mgr_id) 
        references UEmployee
14:19:21,954 DEBUG SQL:104 - 
    alter table UPerson 
        add constraint uc_UPerson_1 unique (name)
14:19:21,954 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table UPerson add constraint uc_UPerson_1 unique (name)
14:19:21,954 ERROR SchemaExport:426 - Constraint "UC_UPERSON_1" already exists; SQL statement:

    alter table UPerson 
        add constraint uc_UPerson_1 unique (name) [90045-145]
14:19:21,954 DEBUG SQL:104 - 
    create table hibernate_unique_key (
         next_hi integer 
    )
14:19:21,955 DEBUG SQL:104 - 
    insert into hibernate_unique_key values ( 0 )
14:19:21,955  INFO SchemaExport:405 - HHH000230: Schema export complete
14:19:21,955  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:19:21,955  INFO CustomRunner:139 - Test: testFiltersWithUnionSubclass
14:19:21,957 DEBUG SQL:104 - 
    select
        next_hi 
    from
        hibernate_unique_key for update
            
14:19:21,965 DEBUG SQL:104 - 
    update
        hibernate_unique_key 
    set
        next_hi = ? 
    where
        next_hi = ?
14:19:21,966 DEBUG SQL:104 - 
    insert 
    into
        UEmployee
        (name, company, region, title, dept, mgr_id, person_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
14:19:21,967 DEBUG SQL:104 - 
    insert 
    into
        UEmployee
        (name, company, region, title, dept, mgr_id, person_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
14:19:21,967 DEBUG SQL:104 - 
    insert 
    into
        UEmployee
        (name, company, region, title, dept, mgr_id, person_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
14:19:21,967 DEBUG SQL:104 - 
    insert 
    into
        UCustomer
        (name, company, region, contactOwner, person_id) 
    values
        (?, ?, ?, ?, ?)
14:19:21,967 DEBUG SQL:104 - 
    insert 
    into
        UPerson
        (name, company, region, person_id) 
    values
        (?, ?, ?, ?)
14:19:21,968 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.subclassfilter.Person
14:19:21,969 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'subclassfilter'
                \-[IDENT] Node: 'Person'

14:19:21,969 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,976 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.subclassfilter.Person (<no alias>) -> person0_
14:19:21,976 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} ( select person_id, name, company, region, null as title, null as dept, null as mgr_id, null as contactOwner, 0 as clazz_ from UPerson union all select person_id, name, company, region, title, dept, mgr_id, null as contactOwner, 1 as clazz_ from UEmployee union all select person_id, name, company, region, null as title, null as dept, null as mgr_id, contactOwner, 2 as clazz_ from UCustomer ) person0_ ) )
14:19:21,977 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:21,977 DEBUG JoinProcessor:175 - Using FROM fragment [( select person_id, name, company, region, null as title, null as dept, null as mgr_id, null as contactOwner, 0 as clazz_ from UPerson union all select person_id, name, company, region, title, dept, mgr_id, null as contactOwner, 1 as clazz_ from UEmployee union all select person_id, name, company, region, null as title, null as dept, null as mgr_id, contactOwner, 2 as clazz_ from UCustomer ) person0_]
14:19:21,977 DEBUG SyntheticAndFactory:92 - Using unprocessed WHERE-fragment [person0_.region = :region.userRegion]
14:19:21,977 DEBUG SyntheticAndFactory:124 - Using processed WHERE-fragment [person0_.region = ?]
14:19:21,977 DEBUG QueryNode:73 - getWhereClause() : Creating a new WHERE clause...
14:19:21,977 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (UEmployee,UCustomer,UPerson)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'person0_.person_id as person1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=( select person_id, name, company, region, null as title, null as dept, null as mgr_id, null as contactOwner, 0 as clazz_ from UPerson union all select person_id, name, company, region, title, dept, mgr_id, null as contactOwner, 1 as clazz_ from UEmployee union all select person_id, name, company, region, null as title, null as dept, null as mgr_id, contactOwner, 2 as clazz_ from UCustomer ),tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.subclassfilter.Person}}}
    |  \-[SQL_TOKEN] SqlFragment: 'person0_.name as name2_, person0_.company as company2_, person0_.region as region2_, person0_.title as title1_, person0_.dept as dept1_, person0_.mgr_id as mgr3_1_, person0_.contactOwner as contactO1_0_, person0_.clazz_ as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[person0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: '( select person_id, name, company, region, null as title, null as dept, null as mgr_id, null as contactOwner, 0 as clazz_ from UPerson union all select person_id, name, company, region, title, dept, mgr_id, null as contactOwner, 1 as clazz_ from UEmployee union all select person_id, name, company, region, null as title, null as dept, null as mgr_id, contactOwner, 2 as clazz_ from UCustomer ) person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=( select person_id, name, company, region, null as title, null as dept, null as mgr_id, null as contactOwner, 0 as clazz_ from UPerson union all select person_id, name, company, region, title, dept, mgr_id, null as contactOwner, 1 as clazz_ from UEmployee union all select person_id, name, company, region, null as title, null as dept, null as mgr_id, contactOwner, 2 as clazz_ from UCustomer ),tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.subclassfilter.Person}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[FILTERS] SqlNode: '{filter conditions}'
          \-[SQL_TOKEN] SqlFragment: 'person0_.region = ?'

14:19:21,978 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,978 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.subclassfilter.Person
14:19:21,978 DEBUG QueryTranslatorImpl:236 - SQL: select person0_.person_id as person1_2_, person0_.name as name2_, person0_.company as company2_, person0_.region as region2_, person0_.title as title1_, person0_.dept as dept1_, person0_.mgr_id as mgr3_1_, person0_.contactOwner as contactO1_0_, person0_.clazz_ as clazz_ from ( select person_id, name, company, region, null as title, null as dept, null as mgr_id, null as contactOwner, 0 as clazz_ from UPerson union all select person_id, name, company, region, title, dept, mgr_id, null as contactOwner, 1 as clazz_ from UEmployee union all select person_id, name, company, region, null as title, null as dept, null as mgr_id, contactOwner, 2 as clazz_ from UCustomer ) person0_ where person0_.region = ?
14:19:21,978 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,978 DEBUG SQL:104 - 
    select
        person0_.person_id as person1_2_,
        person0_.name as name2_,
        person0_.company as company2_,
        person0_.region as region2_,
        person0_.title as title1_,
        person0_.dept as dept1_,
        person0_.mgr_id as mgr3_1_,
        person0_.contactOwner as contactO1_0_,
        person0_.clazz_ as clazz_ 
    from
        ( select
            person_id,
            name,
            company,
            region,
            null as title,
            null as dept,
            null as mgr_id,
            null as contactOwner,
            0 as clazz_ 
        from
            UPerson 
        union
        all select
            person_id,
            name,
            company,
            region,
            title,
            dept,
            mgr_id,
            null as contactOwner,
            1 as clazz_ 
        from
            UEmployee 
        union
        all select
            person_id,
            name,
            company,
            region,
            null as title,
            null as dept,
            null as mgr_id,
            contactOwner,
            2 as clazz_ 
        from
            UCustomer 
    ) person0_ 
where
    person0_.region = ?
14:19:22,012 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.subclassfilter.Employee
14:19:22,013 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'subclassfilter'
                \-[IDENT] Node: 'Employee'

14:19:22,013 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:22,013 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.subclassfilter.Employee (<no alias>) -> employee0_
14:19:22,013 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} UEmployee employee0_ ) )
14:19:22,014 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:22,014 DEBUG JoinProcessor:175 - Using FROM fragment [UEmployee employee0_]
14:19:22,014 DEBUG SyntheticAndFactory:92 - Using unprocessed WHERE-fragment [employee0_.region = :region.userRegion]
14:19:22,014 DEBUG SyntheticAndFactory:124 - Using processed WHERE-fragment [employee0_.region = ?]
14:19:22,014 DEBUG QueryNode:73 - getWhereClause() : Creating a new WHERE clause...
14:19:22,014 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (UEmployee,UPerson)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'employee0_.person_id as person1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=UEmployee,tableAlias=employee0_,origin=null,columns={,className=org.hibernate.test.subclassfilter.Employee}}}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.name as name2_, employee0_.company as company2_, employee0_.region as region2_, employee0_.title as title1_, employee0_.dept as dept1_, employee0_.mgr_id as mgr3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'UEmployee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=UEmployee,tableAlias=employee0_,origin=null,columns={,className=org.hibernate.test.subclassfilter.Employee}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[FILTERS] SqlNode: '{filter conditions}'
          \-[SQL_TOKEN] SqlFragment: 'employee0_.region = ?'

14:19:22,022 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:22,022 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.subclassfilter.Employee
14:19:22,022 DEBUG QueryTranslatorImpl:236 - SQL: select employee0_.person_id as person1_2_, employee0_.name as name2_, employee0_.company as company2_, employee0_.region as region2_, employee0_.title as title1_, employee0_.dept as dept1_, employee0_.mgr_id as mgr3_1_ from UEmployee employee0_ where employee0_.region = ?
14:19:22,022 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:22,022 DEBUG SQL:104 - 
    select
        employee0_.person_id as person1_2_,
        employee0_.name as name2_,
        employee0_.company as company2_,
        employee0_.region as region2_,
        employee0_.title as title1_,
        employee0_.dept as dept1_,
        employee0_.mgr_id as mgr3_1_ 
    from
        UEmployee employee0_ 
    where
        employee0_.region = ?
14:19:22,023 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.subclassfilter.Person as p left join fetch p.minions
14:19:22,024 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          +-[RANGE] Node: 'RANGE'
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[DOT] Node: '.'
          |  |  |  |  |  +-[IDENT] Node: 'org'
          |  |  |  |  |  \-[IDENT] Node: 'hibernate'
          |  |  |  |  \-[IDENT] Node: 'test'
          |  |  |  \-[IDENT] Node: 'subclassfilter'
          |  |  \-[IDENT] Node: 'Person'
          |  \-[ALIAS] Node: 'p'
          \-[JOIN] Node: 'join'
             +-[LEFT] Node: 'left'
             +-[FETCH] Node: 'fetch'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'p'
                \-[IDENT] Node: 'minions'

14:19:22,032 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:22,033 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.subclassfilter.Person (p) -> person0_
14:19:22,033 DEBUG FromReferenceNode:74 - Resolved : p -> person0_.person_id
14:19:22,033 DEBUG DotNode:599 - getDataType() : minions -> org.hibernate.type.SetType(org.hibernate.test.subclassfilter.Employee.minions)
14:19:22,033 DEBUG FromElementFactory:376 - createEntityAssociation() : One to many - path = p.minions role = org.hibernate.test.subclassfilter.Employee.minions associatedEntityName = org.hibernate.test.subclassfilter.Employee
14:19:22,033 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.subclassfilter.Employee (<no alias>) -> minions1_
14:19:22,033 DEBUG FromClause:282 - addJoinByPathMap() : p.minions -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=UEmployee,tableAlias=minions1_,origin=( select person_id, name, company, region, null as title, null as dept, null as mgr_id, null as contactOwner, 0 as clazz_ from UPerson union all select person_id, name, company, region, title, dept, mgr_id, null as contactOwner, 1 as clazz_ from UEmployee union all select person_id, name, company, region, null as title, null as dept, null as mgr_id, contactOwner, 2 as clazz_ from UCustomer ) person0_,columns={person0_.person_id ,className=org.hibernate.test.subclassfilter.Employee}}
14:19:22,033 DEBUG DotNode:308 - dereferenceCollection() : Created new FROM element for p.minions : UEmployee minions1_
14:19:22,033 DEBUG FromReferenceNode:74 - Resolved : p.minions -> .
14:19:22,034 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'UEmployee minions1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.subclassfilter.Employee.minions,tableName=UEmployee,tableAlias=minions1_,origin=( select person_id, name, company, region, null as title, null as dept, null as mgr_id, null as contactOwner, 0 as clazz_ from UPerson union all select person_id, name, company, region, title, dept, mgr_id, null as contactOwner, 1 as clazz_ from UEmployee union all select person_id, name, company, region, null as title, null as dept, null as mgr_id, contactOwner, 2 as clazz_ from UCustomer ) person0_,columns={person0_.person_id ,className=org.hibernate.test.subclassfilter.Employee}}

14:19:22,042 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} ( ( select person_id, name, company, region, null as title, null as dept, null as mgr_id, null as contactOwner, 0 as clazz_ from UPerson union all select person_id, name, company, region, title, dept, mgr_id, null as contactOwner, 1 as clazz_ from UEmployee union all select person_id, name, company, region, null as title, null as dept, null as mgr_id, contactOwner, 2 as clazz_ from UCustomer ) person0_ UEmployee minions1_ ) ) )
14:19:22,042 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:22,043 DEBUG JoinProcessor:175 - Using FROM fragment [( select person_id, name, company, region, null as title, null as dept, null as mgr_id, null as contactOwner, 0 as clazz_ from UPerson union all select person_id, name, company, region, title, dept, mgr_id, null as contactOwner, 1 as clazz_ from UEmployee union all select person_id, name, company, region, null as title, null as dept, null as mgr_id, contactOwner, 2 as clazz_ from UCustomer ) person0_]
14:19:22,043 DEBUG SyntheticAndFactory:92 - Using unprocessed WHERE-fragment [person0_.region = :region.userRegion]
14:19:22,043 DEBUG SyntheticAndFactory:124 - Using processed WHERE-fragment [person0_.region = ?]
14:19:22,043 DEBUG QueryNode:73 - getWhereClause() : Creating a new WHERE clause...
14:19:22,043 DEBUG JoinProcessor:175 - Using FROM fragment [left outer join UEmployee minions1_ on person0_.person_id=minions1_.mgr_id and minions1_.region = :region.userRegion]
14:19:22,043 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (UEmployee,UCustomer,UPerson)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'person0_.person_id as person1_2_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=( select person_id, name, company, region, null as title, null as dept, null as mgr_id, null as contactOwner, 0 as clazz_ from UPerson union all select person_id, name, company, region, title, dept, mgr_id, null as contactOwner, 1 as clazz_ from UEmployee union all select person_id, name, company, region, null as title, null as dept, null as mgr_id, contactOwner, 2 as clazz_ from UCustomer ),tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.subclassfilter.Person}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'minions1_.person_id as person1_2_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.subclassfilter.Employee.minions,tableName=UEmployee,tableAlias=minions1_,origin=( select person_id, name, company, region, null as title, null as dept, null as mgr_id, null as contactOwner, 0 as clazz_ from UPerson union all select person_id, name, company, region, title, dept, mgr_id, null as contactOwner, 1 as clazz_ from UEmployee union all select person_id, name, company, region, null as title, null as dept, null as mgr_id, contactOwner, 2 as clazz_ from UCustomer ) person0_,columns={person0_.person_id ,className=org.hibernate.test.subclassfilter.Employee}}}
    |  +-[SQL_TOKEN] SqlFragment: 'person0_.name as name2_0_, person0_.company as company2_0_, person0_.region as region2_0_, person0_.title as title1_0_, person0_.dept as dept1_0_, person0_.mgr_id as mgr3_1_0_, person0_.contactOwner as contactO1_0_0_, person0_.clazz_ as clazz_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'minions1_.name as name2_1_, minions1_.company as company2_1_, minions1_.region as region2_1_, minions1_.title as title1_1_, minions1_.dept as dept1_1_, minions1_.mgr_id as mgr3_1_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'minions1_.mgr_id as mgr3_2_0__, minions1_.person_id as person1_1_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[p], fromElementByTableAlias=[minions1_, person0_], fromElementsByPath=[p.minions], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: '( select person_id, name, company, region, null as title, null as dept, null as mgr_id, null as contactOwner, 0 as clazz_ from UPerson union all select person_id, name, company, region, title, dept, mgr_id, null as contactOwner, 1 as clazz_ from UEmployee union all select person_id, name, company, region, null as title, null as dept, null as mgr_id, contactOwner, 2 as clazz_ from UCustomer ) person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=( select person_id, name, company, region, null as title, null as dept, null as mgr_id, null as contactOwner, 0 as clazz_ from UPerson union all select person_id, name, company, region, title, dept, mgr_id, null as contactOwner, 1 as clazz_ from UEmployee union all select person_id, name, company, region, null as title, null as dept, null as mgr_id, contactOwner, 2 as clazz_ from UCustomer ),tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.subclassfilter.Person}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join UEmployee minions1_ on person0_.person_id=minions1_.mgr_id and minions1_.region = ?' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.subclassfilter.Employee.minions,tableName=UEmployee,tableAlias=minions1_,origin=( select person_id, name, company, region, null as title, null as dept, null as mgr_id, null as contactOwner, 0 as clazz_ from UPerson union all select person_id, name, company, region, title, dept, mgr_id, null as contactOwner, 1 as clazz_ from UEmployee union all select person_id, name, company, region, null as title, null as dept, null as mgr_id, contactOwner, 2 as clazz_ from UCustomer ) person0_,columns={person0_.person_id ,className=org.hibernate.test.subclassfilter.Employee}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[FILTERS] SqlNode: '{filter conditions}'
          \-[SQL_TOKEN] SqlFragment: 'person0_.region = ?'

14:19:22,043 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:22,044 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.subclassfilter.Person as p left join fetch p.minions
14:19:22,044 DEBUG QueryTranslatorImpl:236 - SQL: select person0_.person_id as person1_2_0_, minions1_.person_id as person1_2_1_, person0_.name as name2_0_, person0_.company as company2_0_, person0_.region as region2_0_, person0_.title as title1_0_, person0_.dept as dept1_0_, person0_.mgr_id as mgr3_1_0_, person0_.contactOwner as contactO1_0_0_, person0_.clazz_ as clazz_0_, minions1_.name as name2_1_, minions1_.company as company2_1_, minions1_.region as region2_1_, minions1_.title as title1_1_, minions1_.dept as dept1_1_, minions1_.mgr_id as mgr3_1_1_, minions1_.mgr_id as mgr3_2_0__, minions1_.person_id as person1_1_0__ from ( select person_id, name, company, region, null as title, null as dept, null as mgr_id, null as contactOwner, 0 as clazz_ from UPerson union all select person_id, name, company, region, title, dept, mgr_id, null as contactOwner, 1 as clazz_ from UEmployee union all select person_id, name, company, region, null as title, null as dept, null as mgr_id, contactOwner, 2 as clazz_ from UCustomer ) person0_ left outer join UEmployee minions1_ on person0_.person_id=minions1_.mgr_id and minions1_.region = ? where person0_.region = ?
14:19:22,044 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:22,044 DEBUG SQL:104 - 
    select
        person0_.person_id as person1_2_0_,
        minions1_.person_id as person1_2_1_,
        person0_.name as name2_0_,
        person0_.company as company2_0_,
        person0_.region as region2_0_,
        person0_.title as title1_0_,
        person0_.dept as dept1_0_,
        person0_.mgr_id as mgr3_1_0_,
        person0_.contactOwner as contactO1_0_0_,
        person0_.clazz_ as clazz_0_,
        minions1_.name as name2_1_,
        minions1_.company as company2_1_,
        minions1_.region as region2_1_,
        minions1_.title as title1_1_,
        minions1_.dept as dept1_1_,
        minions1_.mgr_id as mgr3_1_1_,
        minions1_.mgr_id as mgr3_2_0__,
        minions1_.person_id as person1_1_0__ 
    from
        ( select
            person_id,
            name,
            company,
            region,
            null as title,
            null as dept,
            null as mgr_id,
            null as contactOwner,
            0 as clazz_ 
        from
            UPerson 
        union
        all select
            person_id,
            name,
            company,
            region,
            title,
            dept,
            mgr_id,
            null as contactOwner,
            1 as clazz_ 
        from
            UEmployee 
        union
        all select
            person_id,
            name,
            company,
            region,
            null as title,
            null as dept,
            null as mgr_id,
            contactOwner,
            2 as clazz_ 
        from
            UCustomer 
    ) person0_ 
left outer join
    UEmployee minions1_ 
        on person0_.person_id=minions1_.mgr_id 
        and minions1_.region = ? 
where
    person0_.region = ?
14:19:22,075 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.subclassfilter.Employee as p left join fetch p.minions
14:19:22,077 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          +-[RANGE] Node: 'RANGE'
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[DOT] Node: '.'
          |  |  |  |  |  +-[IDENT] Node: 'org'
          |  |  |  |  |  \-[IDENT] Node: 'hibernate'
          |  |  |  |  \-[IDENT] Node: 'test'
          |  |  |  \-[IDENT] Node: 'subclassfilter'
          |  |  \-[IDENT] Node: 'Employee'
          |  \-[ALIAS] Node: 'p'
          \-[JOIN] Node: 'join'
             +-[LEFT] Node: 'left'
             +-[FETCH] Node: 'fetch'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'p'
                \-[IDENT] Node: 'minions'

14:19:22,083 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:22,084 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.subclassfilter.Employee (p) -> employee0_
14:19:22,084 DEBUG FromReferenceNode:74 - Resolved : p -> employee0_.person_id
14:19:22,084 DEBUG DotNode:599 - getDataType() : minions -> org.hibernate.type.SetType(org.hibernate.test.subclassfilter.Employee.minions)
14:19:22,084 DEBUG FromElementFactory:376 - createEntityAssociation() : One to many - path = p.minions role = org.hibernate.test.subclassfilter.Employee.minions associatedEntityName = org.hibernate.test.subclassfilter.Employee
14:19:22,084 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.subclassfilter.Employee (<no alias>) -> minions1_
14:19:22,085 DEBUG FromClause:282 - addJoinByPathMap() : p.minions -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=UEmployee,tableAlias=minions1_,origin=UEmployee employee0_,columns={employee0_.person_id ,className=org.hibernate.test.subclassfilter.Employee}}
14:19:22,085 DEBUG DotNode:308 - dereferenceCollection() : Created new FROM element for p.minions : UEmployee minions1_
14:19:22,085 DEBUG FromReferenceNode:74 - Resolved : p.minions -> .
14:19:22,085 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'UEmployee minions1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.subclassfilter.Employee.minions,tableName=UEmployee,tableAlias=minions1_,origin=UEmployee employee0_,columns={employee0_.person_id ,className=org.hibernate.test.subclassfilter.Employee}}

14:19:22,085 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} ( UEmployee employee0_ UEmployee minions1_ ) ) )
14:19:22,085 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:22,085 DEBUG JoinProcessor:175 - Using FROM fragment [UEmployee employee0_]
14:19:22,086 DEBUG SyntheticAndFactory:92 - Using unprocessed WHERE-fragment [employee0_.region = :region.userRegion]
14:19:22,086 DEBUG SyntheticAndFactory:124 - Using processed WHERE-fragment [employee0_.region = ?]
14:19:22,086 DEBUG QueryNode:73 - getWhereClause() : Creating a new WHERE clause...
14:19:22,086 DEBUG JoinProcessor:175 - Using FROM fragment [left outer join UEmployee minions1_ on employee0_.person_id=minions1_.mgr_id and minions1_.region = :region.userRegion]
14:19:22,086 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (UEmployee,UPerson)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'employee0_.person_id as person1_2_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=UEmployee,tableAlias=employee0_,origin=null,columns={,className=org.hibernate.test.subclassfilter.Employee}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'minions1_.person_id as person1_2_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.subclassfilter.Employee.minions,tableName=UEmployee,tableAlias=minions1_,origin=UEmployee employee0_,columns={employee0_.person_id ,className=org.hibernate.test.subclassfilter.Employee}}}
    |  +-[SQL_TOKEN] SqlFragment: 'employee0_.name as name2_0_, employee0_.company as company2_0_, employee0_.region as region2_0_, employee0_.title as title1_0_, employee0_.dept as dept1_0_, employee0_.mgr_id as mgr3_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'minions1_.name as name2_1_, minions1_.company as company2_1_, minions1_.region as region2_1_, minions1_.title as title1_1_, minions1_.dept as dept1_1_, minions1_.mgr_id as mgr3_1_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'minions1_.mgr_id as mgr3_2_0__, minions1_.person_id as person1_1_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[p], fromElementByTableAlias=[minions1_, employee0_], fromElementsByPath=[p.minions], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'UEmployee employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=UEmployee,tableAlias=employee0_,origin=null,columns={,className=org.hibernate.test.subclassfilter.Employee}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join UEmployee minions1_ on employee0_.person_id=minions1_.mgr_id and minions1_.region = ?' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.subclassfilter.Employee.minions,tableName=UEmployee,tableAlias=minions1_,origin=UEmployee employee0_,columns={employee0_.person_id ,className=org.hibernate.test.subclassfilter.Employee}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[FILTERS] SqlNode: '{filter conditions}'
          \-[SQL_TOKEN] SqlFragment: 'employee0_.region = ?'

14:19:22,094 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:22,094 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.subclassfilter.Employee as p left join fetch p.minions
14:19:22,094 DEBUG QueryTranslatorImpl:236 - SQL: select employee0_.person_id as person1_2_0_, minions1_.person_id as person1_2_1_, employee0_.name as name2_0_, employee0_.company as company2_0_, employee0_.region as region2_0_, employee0_.title as title1_0_, employee0_.dept as dept1_0_, employee0_.mgr_id as mgr3_1_0_, minions1_.name as name2_1_, minions1_.company as company2_1_, minions1_.region as region2_1_, minions1_.title as title1_1_, minions1_.dept as dept1_1_, minions1_.mgr_id as mgr3_1_1_, minions1_.mgr_id as mgr3_2_0__, minions1_.person_id as person1_1_0__ from UEmployee employee0_ left outer join UEmployee minions1_ on employee0_.person_id=minions1_.mgr_id and minions1_.region = ? where employee0_.region = ?
14:19:22,094 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:22,095 DEBUG SQL:104 - 
    select
        employee0_.person_id as person1_2_0_,
        minions1_.person_id as person1_2_1_,
        employee0_.name as name2_0_,
        employee0_.company as company2_0_,
        employee0_.region as region2_0_,
        employee0_.title as title1_0_,
        employee0_.dept as dept1_0_,
        employee0_.mgr_id as mgr3_1_0_,
        minions1_.name as name2_1_,
        minions1_.company as company2_1_,
        minions1_.region as region2_1_,
        minions1_.title as title1_1_,
        minions1_.dept as dept1_1_,
        minions1_.mgr_id as mgr3_1_1_,
        minions1_.mgr_id as mgr3_2_0__,
        minions1_.person_id as person1_1_0__ 
    from
        UEmployee employee0_ 
    left outer join
        UEmployee minions1_ 
            on employee0_.person_id=minions1_.mgr_id 
            and minions1_.region = ? 
    where
        employee0_.region = ?
14:19:22,096 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.subclassfilter.Person
14:19:22,097 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'subclassfilter'
                \-[IDENT] Node: 'Person'

14:19:22,097 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:22,097 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.subclassfilter.Person (<no alias>) -> person0_
14:19:22,097 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} ( select person_id, name, company, region, null as title, null as dept, null as mgr_id, null as contactOwner, 0 as clazz_ from UPerson union all select person_id, name, company, region, title, dept, mgr_id, null as contactOwner, 1 as clazz_ from UEmployee union all select person_id, name, company, region, null as title, null as dept, null as mgr_id, contactOwner, 2 as clazz_ from UCustomer ) person0_ ) )
14:19:22,097 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:22,106 DEBUG JoinProcessor:175 - Using FROM fragment [( select person_id, name, company, region, null as title, null as dept, null as mgr_id, null as contactOwner, 0 as clazz_ from UPerson union all select person_id, name, company, region, title, dept, mgr_id, null as contactOwner, 1 as clazz_ from UEmployee union all select person_id, name, company, region, null as title, null as dept, null as mgr_id, contactOwner, 2 as clazz_ from UCustomer ) person0_]
14:19:22,106 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (UEmployee,UCustomer,UPerson)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'person0_.person_id as person1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=( select person_id, name, company, region, null as title, null as dept, null as mgr_id, null as contactOwner, 0 as clazz_ from UPerson union all select person_id, name, company, region, title, dept, mgr_id, null as contactOwner, 1 as clazz_ from UEmployee union all select person_id, name, company, region, null as title, null as dept, null as mgr_id, contactOwner, 2 as clazz_ from UCustomer ),tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.subclassfilter.Person}}}
    |  \-[SQL_TOKEN] SqlFragment: 'person0_.name as name2_, person0_.company as company2_, person0_.region as region2_, person0_.title as title1_, person0_.dept as dept1_, person0_.mgr_id as mgr3_1_, person0_.contactOwner as contactO1_0_, person0_.clazz_ as clazz_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[person0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: '( select person_id, name, company, region, null as title, null as dept, null as mgr_id, null as contactOwner, 0 as clazz_ from UPerson union all select person_id, name, company, region, title, dept, mgr_id, null as contactOwner, 1 as clazz_ from UEmployee union all select person_id, name, company, region, null as title, null as dept, null as mgr_id, contactOwner, 2 as clazz_ from UCustomer ) person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=( select person_id, name, company, region, null as title, null as dept, null as mgr_id, null as contactOwner, 0 as clazz_ from UPerson union all select person_id, name, company, region, title, dept, mgr_id, null as contactOwner, 1 as clazz_ from UEmployee union all select person_id, name, company, region, null as title, null as dept, null as mgr_id, contactOwner, 2 as clazz_ from UCustomer ),tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.subclassfilter.Person}}

14:19:22,107 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:22,107 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.subclassfilter.Person
14:19:22,107 DEBUG QueryTranslatorImpl:236 - SQL: select person0_.person_id as person1_2_, person0_.name as name2_, person0_.company as company2_, person0_.region as region2_, person0_.title as title1_, person0_.dept as dept1_, person0_.mgr_id as mgr3_1_, person0_.contactOwner as contactO1_0_, person0_.clazz_ as clazz_ from ( select person_id, name, company, region, null as title, null as dept, null as mgr_id, null as contactOwner, 0 as clazz_ from UPerson union all select person_id, name, company, region, title, dept, mgr_id, null as contactOwner, 1 as clazz_ from UEmployee union all select person_id, name, company, region, null as title, null as dept, null as mgr_id, contactOwner, 2 as clazz_ from UCustomer ) person0_
14:19:22,107 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:22,107 DEBUG SQL:104 - 
    select
        person0_.person_id as person1_2_,
        person0_.name as name2_,
        person0_.company as company2_,
        person0_.region as region2_,
        person0_.title as title1_,
        person0_.dept as dept1_,
        person0_.mgr_id as mgr3_1_,
        person0_.contactOwner as contactO1_0_,
        person0_.clazz_ as clazz_ 
    from
        ( select
            person_id,
            name,
            company,
            region,
            null as title,
            null as dept,
            null as mgr_id,
            null as contactOwner,
            0 as clazz_ 
        from
            UPerson 
        union
        all select
            person_id,
            name,
            company,
            region,
            title,
            dept,
            mgr_id,
            null as contactOwner,
            1 as clazz_ 
        from
            UEmployee 
        union
        all select
            person_id,
            name,
            company,
            region,
            null as title,
            null as dept,
            null as mgr_id,
            contactOwner,
            2 as clazz_ 
        from
            UCustomer 
    ) person0_
14:19:22,129 DEBUG SQL:104 - 
    select
        minions0_.mgr_id as mgr3_2_1_,
        minions0_.person_id as person1_1_1_,
        minions0_.person_id as person1_2_0_,
        minions0_.name as name2_0_,
        minions0_.company as company2_0_,
        minions0_.region as region2_0_,
        minions0_.title as title1_0_,
        minions0_.dept as dept1_0_,
        minions0_.mgr_id as mgr3_1_0_ 
    from
        UEmployee minions0_ 
    where
        minions0_.mgr_id=?
14:19:22,138 DEBUG SQL:104 - 
    select
        minions0_.mgr_id as mgr3_2_1_,
        minions0_.person_id as person1_1_1_,
        minions0_.person_id as person1_2_0_,
        minions0_.name as name2_0_,
        minions0_.company as company2_0_,
        minions0_.region as region2_0_,
        minions0_.title as title1_0_,
        minions0_.dept as dept1_0_,
        minions0_.mgr_id as mgr3_1_0_ 
    from
        UEmployee minions0_ 
    where
        minions0_.mgr_id=?
14:19:22,138 DEBUG SQL:104 - 
    select
        minions0_.mgr_id as mgr3_2_1_,
        minions0_.person_id as person1_1_1_,
        minions0_.person_id as person1_2_0_,
        minions0_.name as name2_0_,
        minions0_.company as company2_0_,
        minions0_.region as region2_0_,
        minions0_.title as title1_0_,
        minions0_.dept as dept1_0_,
        minions0_.mgr_id as mgr3_1_0_ 
    from
        UEmployee minions0_ 
    where
        minions0_.mgr_id=?
14:19:22,148 DEBUG SQL:104 - 
    update
        UCustomer 
    set
        name=?,
        company=?,
        region=?,
        contactOwner=? 
    where
        person_id=?
14:19:22,148 DEBUG SQL:104 - 
    delete 
    from
        UPerson 
    where
        person_id=?
14:19:22,149 DEBUG SQL:104 - 
    delete 
    from
        UEmployee 
    where
        person_id=?
14:19:22,149 DEBUG SQL:104 - 
    delete 
    from
        UEmployee 
    where
        person_id=?
14:19:22,158 DEBUG SQL:104 - 
    delete 
    from
        UEmployee 
    where
        person_id=?
14:19:22,160 DEBUG SQL:104 - 
    delete 
    from
        UCustomer 
    where
        person_id=?
14:19:22,160  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:19:22,164 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:19:22,164 DEBUG SQL:104 - 
    alter table UCustomer 
        drop constraint FK62B4BF53D01561E9
14:19:22,164 DEBUG SQL:104 - 
    alter table UEmployee 
        drop constraint FK85B6262342E7F3F8
14:19:22,164 DEBUG SQL:104 - 
    drop table UCustomer if exists
14:19:22,165 DEBUG SQL:104 - 
    drop table UEmployee if exists
14:19:22,165 DEBUG SQL:104 - 
    drop table UPerson if exists
14:19:22,169 DEBUG SQL:104 - 
    drop table hibernate_unique_key if exists
14:19:22,170  INFO SchemaExport:405 - HHH000230: Schema export complete
14:19:22,170  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
