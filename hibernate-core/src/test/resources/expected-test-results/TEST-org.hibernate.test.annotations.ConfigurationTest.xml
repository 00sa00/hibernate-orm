<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" hostname="dhcp-10.15.208.168.stl.redhat.com" name="org.hibernate.test.annotations.ConfigurationTest" tests="6" time="1.4" timestamp="2013-02-28T20:10:04">
  <properties />
  <testcase classname="org.hibernate.test.annotations.ConfigurationTest" name="testIgnoringHbm" time="0.187" />
  <testcase classname="org.hibernate.test.annotations.ConfigurationTest" name="testDeclarativeMix" time="0.194" />
  <testcase classname="org.hibernate.test.annotations.ConfigurationTest" name="testPrecedenceAnnotation" time="0.236" />
  <testcase classname="org.hibernate.test.annotations.ConfigurationTest" name="testHbmWithSubclassExtends" time="0.278" />
  <testcase classname="org.hibernate.test.annotations.ConfigurationTest" name="testAnnReferencesHbm" time="0.328" />
  <testcase classname="org.hibernate.test.annotations.ConfigurationTest" name="testPrecedenceHbm" time="0.173" />
  <system-out><![CDATA[14:10:04,735  INFO Configuration:1972 - HHH000043: Configuring from resource: org/hibernate/test/annotations/hibernate.cfg.xml
14:10:04,735  INFO Configuration:1991 - HHH000040: Configuration resource: org/hibernate/test/annotations/hibernate.cfg.xml
14:10:04,739  INFO Configuration:725 - HHH000221: Reading mappings from resource: org/hibernate/test/annotations/Boat.hbm.xml
14:10:04,789  INFO Configuration:2113 - HHH000041: Configured SessionFactory: null
14:10:04,806  WARN Configuration:1778 - HHH000125: Mapping metadata cache was not completely processed
14:10:04,807  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:10:04,807  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:10:04,808  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:10:04,808  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:10:04,808  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:10:04,811  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:10:04,811  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:10:04,812  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:10:04,812  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:10:04,812  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:10:04,828  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:10:04,829 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:10:04,829 DEBUG SQL:104 - 
    drop table Plane if exists
14:10:04,830 DEBUG SQL:104 - 
    create table Plane (
        planetype varchar(100) not null,
        id bigint generated by default as identity,
        alive boolean not null,
        fld_altitude integer,
        color varchar(255) not null,
        serialnbr varchar(255),
        nbrOfSeats integer not null,
        primary key (id)
    )
14:10:04,832  INFO SchemaExport:405 - HHH000230: Schema export complete
14:10:04,832  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:10:04,833 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.annotations.Plane where id = :id
14:10:04,839 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'org'
    |           |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  \-[IDENT] Node: 'test'
    |           |  \-[IDENT] Node: 'annotations'
    |           \-[IDENT] Node: 'Plane'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

14:10:04,853 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:04,854 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.annotations.Plane (<no alias>) -> plane0_
14:10:04,857 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:10:04,858 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.LongType@4bf3f9d
14:10:04,859 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.id -> plane0_.id
14:10:04,872 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Plane plane0_ ) ( where ( = ( plane0_.id {synthetic-alias} id ) ? ) ) )
14:10:04,873 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:10:04,873 DEBUG JoinProcessor:175 - Using FROM fragment [Plane plane0_]
14:10:04,874 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Plane)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'plane0_.id as id0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Plane,tableAlias=plane0_,origin=null,columns={,className=org.hibernate.test.annotations.Plane}}}
    |  \-[SQL_TOKEN] SqlFragment: 'plane0_.alive as alive0_, plane0_.fld_altitude as fld4_0_, plane0_.color as color0_, plane0_.serialnbr as serialnbr0_, plane0_.nbrOfSeats as nbrOfSeats0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[plane0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Plane plane0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Plane,tableAlias=plane0_,origin=null,columns={,className=org.hibernate.test.annotations.Plane}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'plane0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path={synthetic-alias}.id,tableAlias=plane0_,className=org.hibernate.test.annotations.Plane,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.LongType@4bf3f9d}

14:10:04,875 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:04,876 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.annotations.Plane where id = :id
14:10:04,876 DEBUG QueryTranslatorImpl:236 - SQL: select plane0_.id as id0_, plane0_.alive as alive0_, plane0_.fld_altitude as fld4_0_, plane0_.color as color0_, plane0_.serialnbr as serialnbr0_, plane0_.nbrOfSeats as nbrOfSeats0_ from Plane plane0_ where plane0_.id=?
14:10:04,876 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:04,879 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from Boat
14:10:04,880 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[IDENT] Node: 'Boat'

14:10:04,880 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:04,881 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.annotations.Plane
14:10:04,893 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'annotations'
                \-[IDENT] Node: 'Plane'

14:10:04,894 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:04,895 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.annotations.Plane (<no alias>) -> plane0_
14:10:04,895 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Plane plane0_ ) )
14:10:04,895 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:10:04,895 DEBUG JoinProcessor:175 - Using FROM fragment [Plane plane0_]
14:10:04,896 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Plane)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'plane0_.id as id0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Plane,tableAlias=plane0_,origin=null,columns={,className=org.hibernate.test.annotations.Plane}}}
    |  \-[SQL_TOKEN] SqlFragment: 'plane0_.alive as alive0_, plane0_.fld_altitude as fld4_0_, plane0_.color as color0_, plane0_.serialnbr as serialnbr0_, plane0_.nbrOfSeats as nbrOfSeats0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[plane0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Plane plane0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Plane,tableAlias=plane0_,origin=null,columns={,className=org.hibernate.test.annotations.Plane}}

14:10:04,897 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:04,897 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.annotations.Plane
14:10:04,897 DEBUG QueryTranslatorImpl:236 - SQL: select plane0_.id as id0_, plane0_.alive as alive0_, plane0_.fld_altitude as fld4_0_, plane0_.color as color0_, plane0_.serialnbr as serialnbr0_, plane0_.nbrOfSeats as nbrOfSeats0_ from Plane plane0_
14:10:04,909 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:04,910 DEBUG SQL:104 - 
    select
        plane0_.id as id0_,
        plane0_.alive as alive0_,
        plane0_.fld_altitude as fld4_0_,
        plane0_.color as color0_,
        plane0_.serialnbr as serialnbr0_,
        plane0_.nbrOfSeats as nbrOfSeats0_ 
    from
        Plane plane0_
14:10:04,913  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:10:04,914 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:10:04,914 DEBUG SQL:104 - 
    drop table Plane if exists
14:10:04,916  INFO SchemaExport:405 - HHH000230: Schema export complete
14:10:04,916  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:10:04,933  INFO Configuration:1972 - HHH000043: Configuring from resource: org/hibernate/test/annotations/hibernate.cfg.xml
14:10:04,933  INFO Configuration:1991 - HHH000040: Configuration resource: org/hibernate/test/annotations/hibernate.cfg.xml
14:10:04,938  INFO Configuration:725 - HHH000221: Reading mappings from resource: org/hibernate/test/annotations/Boat.hbm.xml
14:10:04,984  INFO Configuration:2113 - HHH000041: Configured SessionFactory: null
14:10:04,989  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:10:04,989  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:10:04,990  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:10:04,990  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:10:04,990  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:10:04,993  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:10:04,994  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:10:04,995  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:10:04,996  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:10:04,996  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:10:05,015  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:10:05,016 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:10:05,017 DEBUG SQL:104 - 
    drop table BoatInXml if exists
14:10:05,019 DEBUG SQL:104 - 
    drop table Plane if exists
14:10:05,020 DEBUG SQL:104 - 
    create table BoatInXml (
        id integer generated by default as identity,
        boat_size integer,
        primary key (id)
    )
14:10:05,022 DEBUG SQL:104 - 
    create table Plane (
        planetype varchar(100) not null,
        id bigint generated by default as identity,
        alive boolean not null,
        fld_altitude integer,
        color varchar(255) not null,
        serialnbr varchar(255),
        nbrOfSeats integer not null,
        primary key (id)
    )
14:10:05,033  INFO SchemaExport:405 - HHH000230: Schema export complete
14:10:05,035  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:10:05,037 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.annotations.Plane where id = :id
14:10:05,039 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'org'
    |           |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  \-[IDENT] Node: 'test'
    |           |  \-[IDENT] Node: 'annotations'
    |           \-[IDENT] Node: 'Plane'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

14:10:05,044 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:05,045 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.annotations.Plane (<no alias>) -> plane0_
14:10:05,045 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:10:05,045 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.LongType@4bf3f9d
14:10:05,046 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.id -> plane0_.id
14:10:05,046 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Plane plane0_ ) ( where ( = ( plane0_.id {synthetic-alias} id ) ? ) ) )
14:10:05,046 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:10:05,047 DEBUG JoinProcessor:175 - Using FROM fragment [Plane plane0_]
14:10:05,047 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Plane)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'plane0_.id as id1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Plane,tableAlias=plane0_,origin=null,columns={,className=org.hibernate.test.annotations.Plane}}}
    |  \-[SQL_TOKEN] SqlFragment: 'plane0_.alive as alive1_, plane0_.fld_altitude as fld4_1_, plane0_.color as color1_, plane0_.serialnbr as serialnbr1_, plane0_.nbrOfSeats as nbrOfSeats1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[plane0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Plane plane0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Plane,tableAlias=plane0_,origin=null,columns={,className=org.hibernate.test.annotations.Plane}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'plane0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path={synthetic-alias}.id,tableAlias=plane0_,className=org.hibernate.test.annotations.Plane,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.LongType@4bf3f9d}

14:10:05,048 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:05,049 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.annotations.Plane where id = :id
14:10:05,049 DEBUG QueryTranslatorImpl:236 - SQL: select plane0_.id as id1_, plane0_.alive as alive1_, plane0_.fld_altitude as fld4_1_, plane0_.color as color1_, plane0_.serialnbr as serialnbr1_, plane0_.nbrOfSeats as nbrOfSeats1_ from Plane plane0_ where plane0_.id=?
14:10:05,049 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:05,052 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.annotations.Boat
14:10:05,054 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'annotations'
                \-[IDENT] Node: 'Boat'

14:10:05,055 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:05,056 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.annotations.Boat (<no alias>) -> boat0_
14:10:05,056 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} BoatInXml boat0_ ) )
14:10:05,056 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:10:05,057 DEBUG JoinProcessor:175 - Using FROM fragment [BoatInXml boat0_]
14:10:05,057 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (BoatInXml)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'boat0_.id as id0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=BoatInXml,tableAlias=boat0_,origin=null,columns={,className=org.hibernate.test.annotations.Boat}}}
    |  \-[SQL_TOKEN] SqlFragment: 'boat0_.boat_size as boat2_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[boat0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'BoatInXml boat0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=BoatInXml,tableAlias=boat0_,origin=null,columns={,className=org.hibernate.test.annotations.Boat}}

14:10:05,058 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:05,059 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.annotations.Boat
14:10:05,059 DEBUG QueryTranslatorImpl:236 - SQL: select boat0_.id as id0_, boat0_.boat_size as boat2_0_ from BoatInXml boat0_
14:10:05,059 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:05,060 DEBUG SQL:104 - 
    select
        boat0_.id as id0_,
        boat0_.boat_size as boat2_0_ 
    from
        BoatInXml boat0_
14:10:05,062 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.annotations.Plane
14:10:05,064 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'annotations'
                \-[IDENT] Node: 'Plane'

14:10:05,065 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:05,065 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.annotations.Plane (<no alias>) -> plane0_
14:10:05,066 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Plane plane0_ ) )
14:10:05,066 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:10:05,066 DEBUG JoinProcessor:175 - Using FROM fragment [Plane plane0_]
14:10:05,067 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Plane)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'plane0_.id as id1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Plane,tableAlias=plane0_,origin=null,columns={,className=org.hibernate.test.annotations.Plane}}}
    |  \-[SQL_TOKEN] SqlFragment: 'plane0_.alive as alive1_, plane0_.fld_altitude as fld4_1_, plane0_.color as color1_, plane0_.serialnbr as serialnbr1_, plane0_.nbrOfSeats as nbrOfSeats1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[plane0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Plane plane0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Plane,tableAlias=plane0_,origin=null,columns={,className=org.hibernate.test.annotations.Plane}}

14:10:05,068 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:05,068 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.annotations.Plane
14:10:05,068 DEBUG QueryTranslatorImpl:236 - SQL: select plane0_.id as id1_, plane0_.alive as alive1_, plane0_.fld_altitude as fld4_1_, plane0_.color as color1_, plane0_.serialnbr as serialnbr1_, plane0_.nbrOfSeats as nbrOfSeats1_ from Plane plane0_
14:10:05,069 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:05,071 DEBUG SQL:104 - 
    select
        plane0_.id as id1_,
        plane0_.alive as alive1_,
        plane0_.fld_altitude as fld4_1_,
        plane0_.color as color1_,
        plane0_.serialnbr as serialnbr1_,
        plane0_.nbrOfSeats as nbrOfSeats1_ 
    from
        Plane plane0_
14:10:05,105  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:10:05,106 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:10:05,107 DEBUG SQL:104 - 
    drop table BoatInXml if exists
14:10:05,108 DEBUG SQL:104 - 
    drop table Plane if exists
14:10:05,110  INFO SchemaExport:405 - HHH000230: Schema export complete
14:10:05,110  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:10:05,115  INFO Configuration:1972 - HHH000043: Configuring from resource: org/hibernate/test/annotations/hibernate.cfg.xml
14:10:05,116  INFO Configuration:1991 - HHH000040: Configuration resource: org/hibernate/test/annotations/hibernate.cfg.xml
14:10:05,121  INFO Configuration:725 - HHH000221: Reading mappings from resource: org/hibernate/test/annotations/Boat.hbm.xml
14:10:05,188  INFO Configuration:2113 - HHH000041: Configured SessionFactory: null
14:10:05,198  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:10:05,198  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:10:05,198  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:10:05,199  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:10:05,199  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:10:05,201  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:10:05,201  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:10:05,202  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:10:05,202  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:10:05,202  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:10:05,214  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:10:05,215 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:10:05,216 DEBUG SQL:104 - 
    drop table Boat if exists
14:10:05,216 DEBUG SQL:104 - 
    drop table Plane if exists
14:10:05,216 DEBUG SQL:104 - 
    create table Boat (
        id integer generated by default as identity,
        boat_size integer,
        weight integer not null,
        primary key (id)
    )
14:10:05,217 DEBUG SQL:104 - 
    create table Plane (
        planetype varchar(100) not null,
        id bigint generated by default as identity,
        alive boolean not null,
        fld_altitude integer,
        color varchar(255) not null,
        serialnbr varchar(255),
        nbrOfSeats integer not null,
        primary key (id)
    )
14:10:05,234  INFO SchemaExport:405 - HHH000230: Schema export complete
14:10:05,235  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:10:05,236 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.annotations.Plane where id = :id
14:10:05,238 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'org'
    |           |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  \-[IDENT] Node: 'test'
    |           |  \-[IDENT] Node: 'annotations'
    |           \-[IDENT] Node: 'Plane'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

14:10:05,240 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:05,241 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.annotations.Plane (<no alias>) -> plane0_
14:10:05,241 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:10:05,242 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.LongType@4bf3f9d
14:10:05,242 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.id -> plane0_.id
14:10:05,242 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Plane plane0_ ) ( where ( = ( plane0_.id {synthetic-alias} id ) ? ) ) )
14:10:05,243 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:10:05,243 DEBUG JoinProcessor:175 - Using FROM fragment [Plane plane0_]
14:10:05,244 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Plane)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'plane0_.id as id1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Plane,tableAlias=plane0_,origin=null,columns={,className=org.hibernate.test.annotations.Plane}}}
    |  \-[SQL_TOKEN] SqlFragment: 'plane0_.alive as alive1_, plane0_.fld_altitude as fld4_1_, plane0_.color as color1_, plane0_.serialnbr as serialnbr1_, plane0_.nbrOfSeats as nbrOfSeats1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[plane0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Plane plane0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Plane,tableAlias=plane0_,origin=null,columns={,className=org.hibernate.test.annotations.Plane}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'plane0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path={synthetic-alias}.id,tableAlias=plane0_,className=org.hibernate.test.annotations.Plane,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.LongType@4bf3f9d}

14:10:05,257 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:05,257 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.annotations.Plane where id = :id
14:10:05,258 DEBUG QueryTranslatorImpl:236 - SQL: select plane0_.id as id1_, plane0_.alive as alive1_, plane0_.fld_altitude as fld4_1_, plane0_.color as color1_, plane0_.serialnbr as serialnbr1_, plane0_.nbrOfSeats as nbrOfSeats1_ from Plane plane0_ where plane0_.id=?
14:10:05,258 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:05,276 DEBUG SQL:104 - 
    insert 
    into
        Boat
        (id, boat_size, weight) 
    values
        (null, ?, ?)
14:10:05,280 DEBUG SQL:104 - 
    select
        boat0_.id as id0_0_,
        boat0_.boat_size as boat2_0_0_,
        boat0_.weight as weight0_0_ 
    from
        Boat boat0_ 
    where
        boat0_.id=?
14:10:05,339 DEBUG SQL:104 - 
    delete 
    from
        Boat 
    where
        id=?
14:10:05,342  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:10:05,343 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:10:05,343 DEBUG SQL:104 - 
    drop table Boat if exists
14:10:05,345 DEBUG SQL:104 - 
    drop table Plane if exists
14:10:05,346  INFO SchemaExport:405 - HHH000230: Schema export complete
14:10:05,346  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:10:05,351  INFO Configuration:1972 - HHH000043: Configuring from resource: org/hibernate/test/annotations/hibernate.cfg.xml
14:10:05,351  INFO Configuration:1991 - HHH000040: Configuration resource: org/hibernate/test/annotations/hibernate.cfg.xml
14:10:05,365  INFO Configuration:725 - HHH000221: Reading mappings from resource: org/hibernate/test/annotations/Boat.hbm.xml
14:10:05,384  INFO Configuration:2113 - HHH000041: Configured SessionFactory: null
14:10:05,385  INFO Configuration:753 - HHH000221: Reading mappings from resource: org/hibernate/test/annotations/Ferry.hbm.xml
14:10:05,385  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/annotations/Ferry.hbm.xml
14:10:05,420  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:10:05,421  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:10:05,421  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:10:05,422  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:10:05,422  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:10:05,426  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:10:05,434  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:10:05,435  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:10:05,436  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:10:05,436  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:10:05,464  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:10:05,477 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:10:05,478 DEBUG SQL:104 - 
    alter table FerryJoined 
        drop constraint FKE5A820E31B10B53B
14:10:05,478 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table FerryJoined drop constraint FKE5A820E31B10B53B
14:10:05,478 ERROR SchemaExport:426 - Table "FERRYJOINED" not found; SQL statement:

    alter table FerryJoined 
        drop constraint FKE5A820E31B10B53B [42102-145]
14:10:05,478 DEBUG SQL:104 - 
    drop table BoatInXml if exists
14:10:05,478 DEBUG SQL:104 - 
    drop table FerryJoined if exists
14:10:05,479 DEBUG SQL:104 - 
    drop table Plane if exists
14:10:05,479 DEBUG SQL:104 - 
    create table BoatInXml (
        id integer generated by default as identity,
        boat_size integer,
        primary key (id)
    )
14:10:05,480 DEBUG SQL:104 - 
    create table FerryJoined (
        id integer not null,
        sea varchar(255),
        primary key (id)
    )
14:10:05,481 DEBUG SQL:104 - 
    create table Plane (
        planetype varchar(100) not null,
        id bigint generated by default as identity,
        alive boolean not null,
        fld_altitude integer,
        color varchar(255) not null,
        serialnbr varchar(255),
        nbrOfSeats integer not null,
        primary key (id)
    )
14:10:05,482 DEBUG SQL:104 - 
    alter table FerryJoined 
        add constraint FKE5A820E31B10B53B 
        foreign key (id) 
        references BoatInXml
14:10:05,484  INFO SchemaExport:405 - HHH000230: Schema export complete
14:10:05,485  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:10:05,486 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.annotations.Plane where id = :id
14:10:05,511 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'org'
    |           |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  \-[IDENT] Node: 'test'
    |           |  \-[IDENT] Node: 'annotations'
    |           \-[IDENT] Node: 'Plane'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

14:10:05,513 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:05,514 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.annotations.Plane (<no alias>) -> plane0_
14:10:05,515 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:10:05,515 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.LongType@4bf3f9d
14:10:05,515 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.id -> plane0_.id
14:10:05,516 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Plane plane0_ ) ( where ( = ( plane0_.id {synthetic-alias} id ) ? ) ) )
14:10:05,516 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:10:05,517 DEBUG JoinProcessor:175 - Using FROM fragment [Plane plane0_]
14:10:05,518 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Plane)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'plane0_.id as id2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Plane,tableAlias=plane0_,origin=null,columns={,className=org.hibernate.test.annotations.Plane}}}
    |  \-[SQL_TOKEN] SqlFragment: 'plane0_.alive as alive2_, plane0_.fld_altitude as fld4_2_, plane0_.color as color2_, plane0_.serialnbr as serialnbr2_, plane0_.nbrOfSeats as nbrOfSeats2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[plane0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Plane plane0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Plane,tableAlias=plane0_,origin=null,columns={,className=org.hibernate.test.annotations.Plane}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'plane0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path={synthetic-alias}.id,tableAlias=plane0_,className=org.hibernate.test.annotations.Plane,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.LongType@4bf3f9d}

14:10:05,519 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:05,519 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.annotations.Plane where id = :id
14:10:05,520 DEBUG QueryTranslatorImpl:236 - SQL: select plane0_.id as id2_, plane0_.alive as alive2_, plane0_.fld_altitude as fld4_2_, plane0_.color as color2_, plane0_.serialnbr as serialnbr2_, plane0_.nbrOfSeats as nbrOfSeats2_ from Plane plane0_ where plane0_.id=?
14:10:05,520 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:05,521 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.annotations.Ferry
14:10:05,523 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'annotations'
                \-[IDENT] Node: 'Ferry'

14:10:05,530 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:05,531 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.annotations.Ferry (<no alias>) -> ferry0_
14:10:05,532 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} FerryJoined ferry0_ ) )
14:10:05,532 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:10:05,532 DEBUG JoinProcessor:175 - Using FROM fragment [FerryJoined ferry0_ inner join BoatInXml ferry0_1_ on ferry0_.id=ferry0_1_.id]
14:10:05,533 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (FerryJoined,BoatInXml)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'ferry0_.id as id0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=FerryJoined,tableAlias=ferry0_,origin=null,columns={,className=org.hibernate.test.annotations.Ferry}}}
    |  \-[SQL_TOKEN] SqlFragment: 'ferry0_1_.boat_size as boat2_0_, ferry0_.sea as sea1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[ferry0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'FerryJoined ferry0_ inner join BoatInXml ferry0_1_ on ferry0_.id=ferry0_1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=FerryJoined,tableAlias=ferry0_,origin=null,columns={,className=org.hibernate.test.annotations.Ferry}}

14:10:05,534 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:05,534 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.annotations.Ferry
14:10:05,535 DEBUG QueryTranslatorImpl:236 - SQL: select ferry0_.id as id0_, ferry0_1_.boat_size as boat2_0_, ferry0_.sea as sea1_ from FerryJoined ferry0_ inner join BoatInXml ferry0_1_ on ferry0_.id=ferry0_1_.id
14:10:05,535 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:05,535 DEBUG SQL:104 - 
    select
        ferry0_.id as id0_,
        ferry0_1_.boat_size as boat2_0_,
        ferry0_.sea as sea1_ 
    from
        FerryJoined ferry0_ 
    inner join
        BoatInXml ferry0_1_ 
            on ferry0_.id=ferry0_1_.id
14:10:05,538 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.annotations.Plane
14:10:05,541 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'annotations'
                \-[IDENT] Node: 'Plane'

14:10:05,542 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:05,543 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.annotations.Plane (<no alias>) -> plane0_
14:10:05,543 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Plane plane0_ ) )
14:10:05,543 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:10:05,544 DEBUG JoinProcessor:175 - Using FROM fragment [Plane plane0_]
14:10:05,551 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Plane)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'plane0_.id as id2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Plane,tableAlias=plane0_,origin=null,columns={,className=org.hibernate.test.annotations.Plane}}}
    |  \-[SQL_TOKEN] SqlFragment: 'plane0_.alive as alive2_, plane0_.fld_altitude as fld4_2_, plane0_.color as color2_, plane0_.serialnbr as serialnbr2_, plane0_.nbrOfSeats as nbrOfSeats2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[plane0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Plane plane0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Plane,tableAlias=plane0_,origin=null,columns={,className=org.hibernate.test.annotations.Plane}}

14:10:05,553 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:05,554 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.annotations.Plane
14:10:05,613 DEBUG QueryTranslatorImpl:236 - SQL: select plane0_.id as id2_, plane0_.alive as alive2_, plane0_.fld_altitude as fld4_2_, plane0_.color as color2_, plane0_.serialnbr as serialnbr2_, plane0_.nbrOfSeats as nbrOfSeats2_ from Plane plane0_
14:10:05,613 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:05,614 DEBUG SQL:104 - 
    select
        plane0_.id as id2_,
        plane0_.alive as alive2_,
        plane0_.fld_altitude as fld4_2_,
        plane0_.color as color2_,
        plane0_.serialnbr as serialnbr2_,
        plane0_.nbrOfSeats as nbrOfSeats2_ 
    from
        Plane plane0_
14:10:05,619  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:10:05,620 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:10:05,620 DEBUG SQL:104 - 
    alter table FerryJoined 
        drop constraint FKE5A820E31B10B53B
14:10:05,621 DEBUG SQL:104 - 
    drop table BoatInXml if exists
14:10:05,622 DEBUG SQL:104 - 
    drop table FerryJoined if exists
14:10:05,623 DEBUG SQL:104 - 
    drop table Plane if exists
14:10:05,625  INFO SchemaExport:405 - HHH000230: Schema export complete
14:10:05,625  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:10:05,676  INFO Configuration:1972 - HHH000043: Configuring from resource: org/hibernate/test/annotations/hibernate.cfg.xml
14:10:05,676  INFO Configuration:1991 - HHH000040: Configuration resource: org/hibernate/test/annotations/hibernate.cfg.xml
14:10:05,682  INFO Configuration:725 - HHH000221: Reading mappings from resource: org/hibernate/test/annotations/Boat.hbm.xml
14:10:05,708  INFO Configuration:2113 - HHH000041: Configured SessionFactory: null
14:10:05,732  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:10:05,733  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:10:05,733  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:10:05,733  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:10:05,734  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:10:05,764  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:10:05,765  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:10:05,766  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:10:05,766  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:10:05,766  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:10:05,812  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:10:05,813 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:10:05,813 DEBUG SQL:104 - 
    alter table Port_BoatInXml 
        drop constraint FKA5CA2D147B35F9C7
14:10:05,813 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Port_BoatInXml drop constraint FKA5CA2D147B35F9C7
14:10:05,814 ERROR SchemaExport:426 - Table "PORT_BOATINXML" not found; SQL statement:

    alter table Port_BoatInXml 
        drop constraint FKA5CA2D147B35F9C7 [42102-145]
14:10:05,814 DEBUG SQL:104 - 
    alter table Port_BoatInXml 
        drop constraint FKA5CA2D143B784FA
14:10:05,814 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Port_BoatInXml drop constraint FKA5CA2D143B784FA
14:10:05,814 ERROR SchemaExport:426 - Table "PORT_BOATINXML" not found; SQL statement:

    alter table Port_BoatInXml 
        drop constraint FKA5CA2D143B784FA [42102-145]
14:10:05,814 DEBUG SQL:104 - 
    drop table BoatInXml if exists
14:10:05,815 DEBUG SQL:104 - 
    drop table Plane if exists
14:10:05,815 DEBUG SQL:104 - 
    drop table Port if exists
14:10:05,815 DEBUG SQL:104 - 
    drop table Port_BoatInXml if exists
14:10:05,815 DEBUG SQL:104 - 
    create table BoatInXml (
        id integer generated by default as identity,
        boat_size integer,
        primary key (id)
    )
14:10:05,832 DEBUG SQL:104 - 
    create table Plane (
        planetype varchar(100) not null,
        id bigint generated by default as identity,
        alive boolean not null,
        fld_altitude integer,
        color varchar(255) not null,
        serialnbr varchar(255),
        nbrOfSeats integer not null,
        primary key (id)
    )
14:10:05,833 DEBUG SQL:104 - 
    create table Port (
        id bigint generated by default as identity,
        primary key (id)
    )
14:10:05,834 DEBUG SQL:104 - 
    create table Port_BoatInXml (
        Port_id bigint not null,
        boats_id integer not null,
        primary key (Port_id, boats_id)
    )
14:10:05,837 DEBUG SQL:104 - 
    alter table Port_BoatInXml 
        add constraint UK_A5CA2D14602551A7 unique (boats_id)
14:10:05,839 DEBUG SQL:104 - 
    alter table Port_BoatInXml 
        add constraint FKA5CA2D147B35F9C7 
        foreign key (boats_id) 
        references BoatInXml
14:10:05,848 DEBUG SQL:104 - 
    alter table Port_BoatInXml 
        add constraint FKA5CA2D143B784FA 
        foreign key (Port_id) 
        references Port
14:10:05,890  INFO SchemaExport:405 - HHH000230: Schema export complete
14:10:05,891  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:10:05,892 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.annotations.Plane where id = :id
14:10:05,894 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'org'
    |           |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  \-[IDENT] Node: 'test'
    |           |  \-[IDENT] Node: 'annotations'
    |           \-[IDENT] Node: 'Plane'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

14:10:05,894 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:05,895 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.annotations.Plane (<no alias>) -> plane0_
14:10:05,895 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:10:05,895 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.LongType@4bf3f9d
14:10:05,895 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.id -> plane0_.id
14:10:05,896 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Plane plane0_ ) ( where ( = ( plane0_.id {synthetic-alias} id ) ? ) ) )
14:10:05,896 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:10:05,896 DEBUG JoinProcessor:175 - Using FROM fragment [Plane plane0_]
14:10:05,897 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Plane)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'plane0_.id as id1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Plane,tableAlias=plane0_,origin=null,columns={,className=org.hibernate.test.annotations.Plane}}}
    |  \-[SQL_TOKEN] SqlFragment: 'plane0_.alive as alive1_, plane0_.fld_altitude as fld4_1_, plane0_.color as color1_, plane0_.serialnbr as serialnbr1_, plane0_.nbrOfSeats as nbrOfSeats1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[plane0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Plane plane0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Plane,tableAlias=plane0_,origin=null,columns={,className=org.hibernate.test.annotations.Plane}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'plane0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path={synthetic-alias}.id,tableAlias=plane0_,className=org.hibernate.test.annotations.Plane,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.LongType@4bf3f9d}

14:10:05,897 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:05,898 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.annotations.Plane where id = :id
14:10:05,898 DEBUG QueryTranslatorImpl:236 - SQL: select plane0_.id as id1_, plane0_.alive as alive1_, plane0_.fld_altitude as fld4_1_, plane0_.color as color1_, plane0_.serialnbr as serialnbr1_, plane0_.nbrOfSeats as nbrOfSeats1_ from Plane plane0_ where plane0_.id=?
14:10:05,898 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:05,899 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.annotations.Boat
14:10:05,901 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'annotations'
                \-[IDENT] Node: 'Boat'

14:10:05,903 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:05,904 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.annotations.Boat (<no alias>) -> boat0_
14:10:05,904 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} BoatInXml boat0_ ) )
14:10:05,905 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:10:05,905 DEBUG JoinProcessor:175 - Using FROM fragment [BoatInXml boat0_]
14:10:05,906 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (BoatInXml)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'boat0_.id as id0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=BoatInXml,tableAlias=boat0_,origin=null,columns={,className=org.hibernate.test.annotations.Boat}}}
    |  \-[SQL_TOKEN] SqlFragment: 'boat0_.boat_size as boat2_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[boat0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'BoatInXml boat0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=BoatInXml,tableAlias=boat0_,origin=null,columns={,className=org.hibernate.test.annotations.Boat}}

14:10:05,907 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:05,907 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.annotations.Boat
14:10:05,907 DEBUG QueryTranslatorImpl:236 - SQL: select boat0_.id as id0_, boat0_.boat_size as boat2_0_ from BoatInXml boat0_
14:10:05,908 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:05,908 DEBUG SQL:104 - 
    select
        boat0_.id as id0_,
        boat0_.boat_size as boat2_0_ 
    from
        BoatInXml boat0_
14:10:05,936 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.annotations.Port
14:10:05,938 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'annotations'
                \-[IDENT] Node: 'Port'

14:10:05,939 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:05,940 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.annotations.Port (<no alias>) -> port0_
14:10:05,940 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Port port0_ ) )
14:10:05,941 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:10:05,941 DEBUG JoinProcessor:175 - Using FROM fragment [Port port0_]
14:10:05,942 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Port)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  \-[SELECT_EXPR] SelectExpressionImpl: 'port0_.id as id2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Port,tableAlias=port0_,origin=null,columns={,className=org.hibernate.test.annotations.Port}}}
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[port0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Port port0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Port,tableAlias=port0_,origin=null,columns={,className=org.hibernate.test.annotations.Port}}

14:10:05,942 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:05,943 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.annotations.Port
14:10:05,943 DEBUG QueryTranslatorImpl:236 - SQL: select port0_.id as id2_ from Port port0_
14:10:05,943 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:05,944 DEBUG SQL:104 - 
    select
        port0_.id as id2_ 
    from
        Port port0_
14:10:05,945  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:10:05,946 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:10:05,947 DEBUG SQL:104 - 
    alter table Port_BoatInXml 
        drop constraint FKA5CA2D147B35F9C7
14:10:05,947 DEBUG SQL:104 - 
    alter table Port_BoatInXml 
        drop constraint FKA5CA2D143B784FA
14:10:05,948 DEBUG SQL:104 - 
    drop table BoatInXml if exists
14:10:05,949 DEBUG SQL:104 - 
    drop table Plane if exists
14:10:05,950 DEBUG SQL:104 - 
    drop table Port if exists
14:10:05,952 DEBUG SQL:104 - 
    drop table Port_BoatInXml if exists
14:10:05,953  INFO SchemaExport:405 - HHH000230: Schema export complete
14:10:05,953  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:10:05,958  INFO Configuration:1972 - HHH000043: Configuring from resource: org/hibernate/test/annotations/hibernate.cfg.xml
14:10:05,959  INFO Configuration:1991 - HHH000040: Configuration resource: org/hibernate/test/annotations/hibernate.cfg.xml
14:10:05,965  INFO Configuration:725 - HHH000221: Reading mappings from resource: org/hibernate/test/annotations/Boat.hbm.xml
14:10:06,008  INFO Configuration:2113 - HHH000041: Configured SessionFactory: null
14:10:06,015  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:10:06,016  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:10:06,016  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:10:06,017  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:10:06,017  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:10:06,019  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:10:06,019  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:10:06,020  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:10:06,020  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:10:06,021  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:10:06,045  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:10:06,046 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:10:06,049 DEBUG SQL:104 - 
    drop table BoatInXml if exists
14:10:06,049 DEBUG SQL:104 - 
    drop table Plane if exists
14:10:06,050 DEBUG SQL:104 - 
    create table BoatInXml (
        id integer generated by default as identity,
        boat_size integer,
        primary key (id)
    )
14:10:06,051 DEBUG SQL:104 - 
    create table Plane (
        planetype varchar(100) not null,
        id bigint generated by default as identity,
        alive boolean not null,
        fld_altitude integer,
        color varchar(255) not null,
        serialnbr varchar(255),
        nbrOfSeats integer not null,
        primary key (id)
    )
14:10:06,052  INFO SchemaExport:405 - HHH000230: Schema export complete
14:10:06,052  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:10:06,053 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.annotations.Plane where id = :id
14:10:06,055 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'org'
    |           |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  \-[IDENT] Node: 'test'
    |           |  \-[IDENT] Node: 'annotations'
    |           \-[IDENT] Node: 'Plane'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

14:10:06,056 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:06,058 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.annotations.Plane (<no alias>) -> plane0_
14:10:06,058 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:10:06,059 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.LongType@4bf3f9d
14:10:06,059 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.id -> plane0_.id
14:10:06,059 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Plane plane0_ ) ( where ( = ( plane0_.id {synthetic-alias} id ) ? ) ) )
14:10:06,060 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:10:06,061 DEBUG JoinProcessor:175 - Using FROM fragment [Plane plane0_]
14:10:06,081 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Plane)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'plane0_.id as id1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Plane,tableAlias=plane0_,origin=null,columns={,className=org.hibernate.test.annotations.Plane}}}
    |  \-[SQL_TOKEN] SqlFragment: 'plane0_.alive as alive1_, plane0_.fld_altitude as fld4_1_, plane0_.color as color1_, plane0_.serialnbr as serialnbr1_, plane0_.nbrOfSeats as nbrOfSeats1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[plane0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Plane plane0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Plane,tableAlias=plane0_,origin=null,columns={,className=org.hibernate.test.annotations.Plane}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'plane0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path={synthetic-alias}.id,tableAlias=plane0_,className=org.hibernate.test.annotations.Plane,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.LongType@4bf3f9d}

14:10:06,082 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:06,083 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.annotations.Plane where id = :id
14:10:06,084 DEBUG QueryTranslatorImpl:236 - SQL: select plane0_.id as id1_, plane0_.alive as alive1_, plane0_.fld_altitude as fld4_1_, plane0_.color as color1_, plane0_.serialnbr as serialnbr1_, plane0_.nbrOfSeats as nbrOfSeats1_ from Plane plane0_ where plane0_.id=?
14:10:06,084 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:06,086 DEBUG SQL:104 - 
    insert 
    into
        BoatInXml
        (id, boat_size) 
    values
        (null, ?)
14:10:06,089 DEBUG SQL:104 - 
    select
        boat0_.id as id0_0_,
        boat0_.boat_size as boat2_0_0_ 
    from
        BoatInXml boat0_ 
    where
        boat0_.id=?
14:10:06,091 DEBUG SQL:104 - 
    delete 
    from
        BoatInXml 
    where
        id=?
14:10:06,108  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:10:06,109 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:10:06,109 DEBUG SQL:104 - 
    drop table BoatInXml if exists
14:10:06,123 DEBUG SQL:104 - 
    drop table Plane if exists
14:10:06,126  INFO SchemaExport:405 - HHH000230: Schema export complete
14:10:06,126  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
