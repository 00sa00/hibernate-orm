<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" hostname="dhcp-10.15.208.168.stl.redhat.com" name="org.hibernate.test.unionsubclass.UnionSubclassTest" tests="6" time="2.278" timestamp="2013-02-28T20:19:26">
  <properties />
  <testcase classname="org.hibernate.test.unionsubclass.UnionSubclassTest" name="testNestedUnionedSubclasses" time="0.056" />
  <testcase classname="org.hibernate.test.unionsubclass.UnionSubclassTest" name="testUnionSubclass" time="0.782" />
  <testcase classname="org.hibernate.test.unionsubclass.UnionSubclassTest" name="testUnionSubclassCollection" time="0.487" />
  <testcase classname="org.hibernate.test.unionsubclass.UnionSubclassTest" name="testUnionSubclassFetchMode" time="0.037" />
  <testcase classname="org.hibernate.test.unionsubclass.UnionSubclassTest" name="testUnionSubclassManyToOne" time="0.588" />
  <testcase classname="org.hibernate.test.unionsubclass.UnionSubclassTest" name="testUnionSubclassOneToMany" time="0.229" />
  <system-out><![CDATA[14:19:26,665  INFO CustomRunner:132 - BeforeClass: org.hibernate.test.unionsubclass.UnionSubclassTest
14:19:26,667  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/unionsubclass/Beings.hbm.xml
14:19:26,678  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:19:26,678  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:19:26,678  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:19:26,679  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:19:26,679  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:19:26,680  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:19:26,680  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:19:26,682  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:19:26,683  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:19:26,683  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:19:26,718  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:19:26,719 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:19:26,719 DEBUG SQL:104 - 
    alter table aliens 
        drop constraint FKABA9428CA4F57E3D
14:19:26,719 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table aliens drop constraint FKABA9428CA4F57E3D
14:19:26,719 ERROR SchemaExport:426 - Table "ALIENS" not found; SQL statement:

    alter table aliens 
        drop constraint FKABA9428CA4F57E3D [42102-145]
14:19:26,720 DEBUG SQL:104 - 
    alter table aliens 
        drop constraint FK3D1909F8E5A0847aba9428c
14:19:26,720 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table aliens drop constraint FK3D1909F8E5A0847aba9428c
14:19:26,720 ERROR SchemaExport:426 - Table "ALIENS" not found; SQL statement:

    alter table aliens 
        drop constraint FK3D1909F8E5A0847aba9428c [42102-145]
14:19:26,720 DEBUG SQL:104 - 
    alter table aliens_hivemates 
        drop constraint FKE2A09EAB9F170555
14:19:26,720 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table aliens_hivemates drop constraint FKE2A09EAB9F170555
14:19:26,720 ERROR SchemaExport:426 - Table "ALIENS_HIVEMATES" not found; SQL statement:

    alter table aliens_hivemates 
        drop constraint FKE2A09EAB9F170555 [42102-145]
14:19:26,720 DEBUG SQL:104 - 
    alter table aliens_hivemates 
        drop constraint FKE2A09EAB9F170554
14:19:26,721 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table aliens_hivemates drop constraint FKE2A09EAB9F170554
14:19:26,721 ERROR SchemaExport:426 - Table "ALIENS_HIVEMATES" not found; SQL statement:

    alter table aliens_hivemates 
        drop constraint FKE2A09EAB9F170554 [42102-145]
14:19:26,721 DEBUG SQL:104 - 
    alter table employees 
        drop constraint FK3D1909F8E5A0847b81bc4e69d39ef85
14:19:26,721 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table employees drop constraint FK3D1909F8E5A0847b81bc4e69d39ef85
14:19:26,721 ERROR SchemaExport:426 - Table "EMPLOYEES" not found; SQL statement:

    alter table employees 
        drop constraint FK3D1909F8E5A0847b81bc4e69d39ef85 [42102-145]
14:19:26,721 DEBUG SQL:104 - 
    alter table hives 
        drop constraint FK5EB0F038E5A0847
14:19:26,721 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table hives drop constraint FK5EB0F038E5A0847
14:19:26,722 ERROR SchemaExport:426 - Table "HIVES" not found; SQL statement:

    alter table hives 
        drop constraint FK5EB0F038E5A0847 [42102-145]
14:19:26,722 DEBUG SQL:104 - 
    alter table humans 
        drop constraint FK3D1909F8E5A0847b81bc4e6
14:19:26,722 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table humans drop constraint FK3D1909F8E5A0847b81bc4e6
14:19:26,722 ERROR SchemaExport:426 - Table "HUMANS" not found; SQL statement:

    alter table humans 
        drop constraint FK3D1909F8E5A0847b81bc4e6 [42102-145]
14:19:26,722 DEBUG SQL:104 - 
    drop table Being_info if exists
14:19:26,722 DEBUG SQL:104 - 
    drop table aliens if exists
14:19:26,722 DEBUG SQL:104 - 
    drop table aliens_hivemates if exists
14:19:26,723 DEBUG SQL:104 - 
    drop table employees if exists
14:19:26,723 DEBUG SQL:104 - 
    drop table hives if exists
14:19:26,723 DEBUG SQL:104 - 
    drop table humans if exists
14:19:26,723 DEBUG SQL:104 - 
    drop table locations if exists
14:19:26,723 DEBUG SQL:104 - 
    drop table things if exists
14:19:26,723 DEBUG SQL:104 - 
    create table Being_info (
        bid bigint not null,
        "value" varchar(255),
        attribute varchar(255) not null,
        primary key (bid, attribute)
    )
14:19:26,724 DEBUG SQL:104 - 
    create table aliens (
        bid bigint not null,
        ident varchar(255) not null,
        location bigint not null,
        species varchar(255) not null,
        hive bigint not null,
        primary key (bid)
    )
14:19:26,724 DEBUG SQL:104 - 
    create table aliens_hivemates (
        alien1 bigint not null,
        alien2 bigint not null
    )
14:19:26,724 DEBUG SQL:104 - 
    create table employees (
        bid bigint not null,
        ident varchar(255) not null,
        location bigint not null,
        sex char(255) not null,
        salary double,
        primary key (bid)
    )
14:19:26,724 DEBUG SQL:104 - 
    create table hives (
        id bigint not null,
        location bigint not null,
        primary key (id)
    )
14:19:26,725 DEBUG SQL:104 - 
    create table humans (
        bid bigint not null,
        ident varchar(255) not null,
        location bigint not null,
        sex char(255) not null,
        primary key (bid)
    )
14:19:26,725 DEBUG SQL:104 - 
    create table locations (
        id bigint not null,
        name varchar(255) not null,
        primary key (id)
    )
14:19:26,725 DEBUG SQL:104 - 
    create table things (
        id bigint not null,
        description varchar(255),
        owner bigint,
        primary key (id)
    )
14:19:26,725 DEBUG SQL:104 - 
    alter table aliens 
        add constraint FKABA9428CA4F57E3D 
        foreign key (hive) 
        references hives
14:19:26,726 DEBUG SQL:104 - 
    alter table aliens 
        add constraint FK3D1909F8E5A0847aba9428c 
        foreign key (location) 
        references locations
14:19:26,726 DEBUG SQL:104 - 
    alter table aliens_hivemates 
        add constraint FKE2A09EAB9F170555 
        foreign key (alien2) 
        references aliens
14:19:26,727 DEBUG SQL:104 - 
    alter table aliens_hivemates 
        add constraint FKE2A09EAB9F170554 
        foreign key (alien1) 
        references aliens
14:19:26,727 DEBUG SQL:104 - 
    alter table employees 
        add constraint FK3D1909F8E5A0847b81bc4e69d39ef85 
        foreign key (location) 
        references locations
14:19:26,739 DEBUG SQL:104 - 
    alter table hives 
        add constraint FK5EB0F038E5A0847 
        foreign key (location) 
        references locations
14:19:26,740 DEBUG SQL:104 - 
    alter table humans 
        add constraint FK3D1909F8E5A0847b81bc4e6 
        foreign key (location) 
        references locations
14:19:26,740  INFO SchemaExport:405 - HHH000230: Schema export complete
14:19:26,741  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:19:26,741  INFO CustomRunner:139 - Test: testNestedUnionedSubclasses
14:19:26,742 DEBUG SQL:104 - 
    select
        max(id) 
    from
        locations
14:19:26,743 DEBUG SQL:104 - 
    select
        max(ids_.mx) 
    from
        ( select
            max(bid) as mx 
        from
            humans 
        union
        select
            max(bid) as mx 
        from
            aliens 
        union
        select
            max(bid) as mx 
        from
            employees 
    ) ids_
14:19:26,744 DEBUG SQL:104 - 
    insert 
    into
        locations
        (name, id) 
    values
        (?, ?)
14:19:26,745 DEBUG SQL:104 - 
    insert 
    into
        humans
        (ident, location, sex, bid) 
    values
        (?, ?, ?, ?)
14:19:26,745 DEBUG SQL:104 - 
    insert 
    into
        employees
        (ident, location, sex, salary, bid) 
    values
        (?, ?, ?, ?, ?)
14:19:26,746 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.unionsubclass.Being h where h.identity = :name1 or h.identity = :name2
14:19:26,747 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  |  \-[IDENT] Node: 'test'
    |        |  |  \-[IDENT] Node: 'unionsubclass'
    |        |  \-[IDENT] Node: 'Being'
    |        \-[ALIAS] Node: 'h'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'h'
          |  |  \-[IDENT] Node: 'identity'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'name1'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'h'
             |  \-[IDENT] Node: 'identity'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'name2'

14:19:26,747 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:26,747 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Being (h) -> being0_
14:19:26,747 DEBUG FromReferenceNode:74 - Resolved : h -> being0_.bid
14:19:26,748 DEBUG DotNode:599 - getDataType() : identity -> org.hibernate.type.StringType@2dc8de40
14:19:26,748 DEBUG FromReferenceNode:74 - Resolved : h.identity -> being0_.ident
14:19:26,748 DEBUG FromReferenceNode:74 - Resolved : h -> being0_.bid
14:19:26,748 DEBUG DotNode:599 - getDataType() : identity -> org.hibernate.type.StringType@2dc8de40
14:19:26,748 DEBUG FromReferenceNode:74 - Resolved : h.identity -> being0_.ident
14:19:26,748 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_ ) ( where ( or ( = ( being0_.ident being0_.bid identity ) ? ) ( = ( being0_.ident being0_.bid identity ) ? ) ) ) )
14:19:26,748 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:26,748 DEBUG JoinProcessor:175 - Using FROM fragment [( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_]
14:19:26,749 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Being,humans,aliens,employees)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'being0_.bid as bid0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=h,role=null,tableName=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ),tableAlias=being0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Being}}}
    |  \-[SQL_TOKEN] SqlFragment: 'being0_.ident as ident0_, being0_.location as location0_, being0_.sex as sex6_, being0_.salary as salary4_, being0_.species as species2_, being0_.hive as hive2_, being0_.clazz_ as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[h], fromElementByTableAlias=[being0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: '( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=h,role=null,tableName=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ),tableAlias=being0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Being}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'being0_.ident' {propertyName=identity,dereferenceType=ALL,propertyPath=identity,path=h.identity,tableAlias=being0_,className=org.hibernate.test.unionsubclass.Being,classAlias=h}
          |  |  +-[ALIAS_REF] IdentNode: 'being0_.bid' {alias=h, className=org.hibernate.test.unionsubclass.Being, tableAlias=being0_}
          |  |  \-[IDENT] IdentNode: 'identity' {originalText=identity}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=name1, expectedType=org.hibernate.type.StringType@2dc8de40}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'being0_.ident' {propertyName=identity,dereferenceType=ALL,propertyPath=identity,path=h.identity,tableAlias=being0_,className=org.hibernate.test.unionsubclass.Being,classAlias=h}
             |  +-[ALIAS_REF] IdentNode: 'being0_.bid' {alias=h, className=org.hibernate.test.unionsubclass.Being, tableAlias=being0_}
             |  \-[IDENT] IdentNode: 'identity' {originalText=identity}
             \-[NAMED_PARAM] ParameterNode: '?' {name=name2, expectedType=org.hibernate.type.StringType@2dc8de40}

14:19:26,749 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:26,749 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.unionsubclass.Being h where h.identity = :name1 or h.identity = :name2
14:19:26,749 DEBUG QueryTranslatorImpl:236 - SQL: select being0_.bid as bid0_, being0_.ident as ident0_, being0_.location as location0_, being0_.sex as sex6_, being0_.salary as salary4_, being0_.species as species2_, being0_.hive as hive2_, being0_.clazz_ as clazz_ from ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_ where being0_.ident=? or being0_.ident=?
14:19:26,749 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:26,750 DEBUG SQL:104 - 
    select
        being0_.bid as bid0_,
        being0_.ident as ident0_,
        being0_.location as location0_,
        being0_.sex as sex6_,
        being0_.salary as salary4_,
        being0_.species as species2_,
        being0_.hive as hive2_,
        being0_.clazz_ as clazz_ 
    from
        ( select
            bid,
            ident,
            location,
            sex,
            salary,
            null as species,
            null as hive,
            2 as clazz_ 
        from
            employees 
        union
        all select
            bid,
            ident,
            location,
            sex,
            null as salary,
            null as species,
            null as hive,
            1 as clazz_ 
        from
            humans 
        union
        all select
            bid,
            ident,
            location,
            null as sex,
            null as salary,
            species,
            hive,
            3 as clazz_ 
        from
            aliens 
    ) being0_ 
where
    being0_.ident=? 
    or being0_.ident=?
14:19:26,759 DEBUG SQL:104 - 
    select
        location0_.id as id7_0_,
        location0_.name as name7_0_ 
    from
        locations location0_ 
    where
        location0_.id=?
14:19:26,760 DEBUG SQL:104 - 
    select
        beings0_.location as location7_1_,
        beings0_.bid as bid0_1_,
        beings0_.bid as bid0_0_,
        beings0_.ident as ident0_0_,
        beings0_.location as location0_0_,
        beings0_.sex as sex6_0_,
        beings0_.salary as salary4_0_,
        beings0_.species as species2_0_,
        beings0_.hive as hive2_0_,
        beings0_.clazz_ as clazz_0_ 
    from
        ( select
            bid,
            ident,
            location,
            sex,
            salary,
            null as species,
            null as hive,
            2 as clazz_ 
        from
            employees 
        union
        all select
            bid,
            ident,
            location,
            sex,
            null as salary,
            null as species,
            null as hive,
            1 as clazz_ 
        from
            humans 
        union
        all select
            bid,
            ident,
            location,
            null as sex,
            null as salary,
            species,
            hive,
            3 as clazz_ 
        from
            aliens 
    ) beings0_ 
where
    beings0_.location=?
14:19:26,796 DEBUG SQL:104 - 
    delete 
    from
        Being_info 
    where
        bid=?
14:19:26,796 DEBUG SQL:104 - 
    delete 
    from
        Being_info 
    where
        bid=?
14:19:26,796 DEBUG SQL:104 - 
    delete 
    from
        employees 
    where
        bid=?
14:19:26,797 DEBUG SQL:104 - 
    delete 
    from
        humans 
    where
        bid=?
14:19:26,797 DEBUG SQL:104 - 
    delete 
    from
        locations 
    where
        id=?
14:19:26,797  INFO CustomRunner:139 - Test: testUnionSubclass
14:19:26,799 DEBUG SQL:104 - 
    select
        max(id) 
    from
        hives
14:19:26,800 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.unionsubclass.Being
14:19:26,800 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'unionsubclass'
                \-[IDENT] Node: 'Being'

14:19:26,827 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:26,828 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Being (<no alias>) -> being0_
14:19:26,828 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_ ) )
14:19:26,828 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:26,828 DEBUG JoinProcessor:175 - Using FROM fragment [( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_]
14:19:26,828 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Being,humans,aliens,employees)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'being0_.bid as bid0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ),tableAlias=being0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Being}}}
    |  \-[SQL_TOKEN] SqlFragment: 'being0_.ident as ident0_, being0_.location as location0_, being0_.sex as sex6_, being0_.salary as salary4_, being0_.species as species2_, being0_.hive as hive2_, being0_.clazz_ as clazz_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[being0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: '( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ),tableAlias=being0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Being}}

14:19:26,828 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:26,829 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.unionsubclass.Being
14:19:26,829 DEBUG QueryTranslatorImpl:236 - SQL: select being0_.bid as bid0_, being0_.ident as ident0_, being0_.location as location0_, being0_.sex as sex6_, being0_.salary as salary4_, being0_.species as species2_, being0_.hive as hive2_, being0_.clazz_ as clazz_ from ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_
14:19:26,829 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:26,830 DEBUG SQL:104 - 
    insert 
    into
        locations
        (name, id) 
    values
        (?, ?)
14:19:26,842 DEBUG SQL:104 - 
    insert 
    into
        locations
        (name, id) 
    values
        (?, ?)
14:19:26,842 DEBUG SQL:104 - 
    insert 
    into
        locations
        (name, id) 
    values
        (?, ?)
14:19:26,842 DEBUG SQL:104 - 
    insert 
    into
        hives
        (location, id) 
    values
        (?, ?)
14:19:26,843 DEBUG SQL:104 - 
    insert 
    into
        aliens
        (ident, location, species, hive, bid) 
    values
        (?, ?, ?, ?, ?)
14:19:26,843 DEBUG SQL:104 - 
    insert 
    into
        humans
        (ident, location, sex, bid) 
    values
        (?, ?, ?, ?)
14:19:26,864 DEBUG SQL:104 - 
    select
        being0_.bid as bid0_,
        being0_.ident as ident0_,
        being0_.location as location0_,
        being0_.sex as sex6_,
        being0_.salary as salary4_,
        being0_.species as species2_,
        being0_.hive as hive2_,
        being0_.clazz_ as clazz_ 
    from
        ( select
            bid,
            ident,
            location,
            sex,
            salary,
            null as species,
            null as hive,
            2 as clazz_ 
        from
            employees 
        union
        all select
            bid,
            ident,
            location,
            sex,
            null as salary,
            null as species,
            null as hive,
            1 as clazz_ 
        from
            humans 
        union
        all select
            bid,
            ident,
            location,
            null as sex,
            null as salary,
            species,
            hive,
            3 as clazz_ 
        from
            aliens 
    ) being0_
14:19:26,887 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.unionsubclass.Being b where b.class = Alien
14:19:26,887 DEBUG HqlParser:378 - handleDotIdent() : new LT(2) token - [".",<15> previously: <15>,line=1,col=54,possibleID=false]
14:19:26,888 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  |  \-[IDENT] Node: 'test'
    |        |  |  \-[IDENT] Node: 'unionsubclass'
    |        |  \-[IDENT] Node: 'Being'
    |        \-[ALIAS] Node: 'b'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'b'
          |  \-[IDENT] Node: 'class'
          \-[IDENT] Node: 'Alien'

14:19:26,889 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:26,889 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Being (b) -> being0_
14:19:26,889 DEBUG FromReferenceNode:74 - Resolved : b -> being0_.bid
14:19:26,889 DEBUG DotNode:599 - getDataType() : class -> org.hibernate.type.IntegerType@42252fee
14:19:26,889 DEBUG FromReferenceNode:74 - Resolved : b.class -> clazz_
14:19:26,890 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_ ) ( where ( = ( clazz_ being0_.bid class ) 3 ) ) )
14:19:26,890 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:26,890 DEBUG JoinProcessor:175 - Using FROM fragment [( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_]
14:19:26,890 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Being,humans,aliens,employees)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'being0_.bid as bid0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ),tableAlias=being0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Being}}}
    |  \-[SQL_TOKEN] SqlFragment: 'being0_.ident as ident0_, being0_.location as location0_, being0_.sex as sex6_, being0_.salary as salary4_, being0_.species as species2_, being0_.hive as hive2_, being0_.clazz_ as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[being0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: '( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ),tableAlias=being0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Being}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'clazz_' {propertyName=class,dereferenceType=ALL,propertyPath=class,path=b.class,tableAlias=being0_,className=org.hibernate.test.unionsubclass.Being,classAlias=b}
          |  +-[ALIAS_REF] IdentNode: 'being0_.bid' {alias=b, className=org.hibernate.test.unionsubclass.Being, tableAlias=being0_}
          |  \-[IDENT] IdentNode: 'class' {originalText=class}
          \-[IDENT] IdentNode: '3' {originalText=Alien}

14:19:26,900 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:26,900 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.unionsubclass.Being b where b.class = Alien
14:19:26,900 DEBUG QueryTranslatorImpl:236 - SQL: select being0_.bid as bid0_, being0_.ident as ident0_, being0_.location as location0_, being0_.sex as sex6_, being0_.salary as salary4_, being0_.species as species2_, being0_.hive as hive2_, being0_.clazz_ as clazz_ from ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_ where clazz_=3
14:19:26,900 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:26,901 DEBUG SQL:104 - 
    select
        being0_.bid as bid0_,
        being0_.ident as ident0_,
        being0_.location as location0_,
        being0_.sex as sex6_,
        being0_.salary as salary4_,
        being0_.species as species2_,
        being0_.hive as hive2_,
        being0_.clazz_ as clazz_ 
    from
        ( select
            bid,
            ident,
            location,
            sex,
            salary,
            null as species,
            null as hive,
            2 as clazz_ 
        from
            employees 
        union
        all select
            bid,
            ident,
            location,
            sex,
            null as salary,
            null as species,
            null as hive,
            1 as clazz_ 
        from
            humans 
        union
        all select
            bid,
            ident,
            location,
            null as sex,
            null as salary,
            species,
            hive,
            3 as clazz_ 
        from
            aliens 
    ) being0_ 
where
    clazz_=3
14:19:26,916 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.unionsubclass.Being b where type(b) = :what
14:19:26,917 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  |  \-[IDENT] Node: 'test'
    |        |  |  \-[IDENT] Node: 'unionsubclass'
    |        |  \-[IDENT] Node: 'Being'
    |        \-[ALIAS] Node: 'b'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'type'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[IDENT] Node: 'b'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'what'

14:19:26,939 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:26,940 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Being (b) -> being0_
14:19:26,940 DEBUG FromReferenceNode:74 - Resolved : b -> being0_.bid
14:19:26,940 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_ ) ( where ( = ( clazz_ type ( exprList being0_.bid ) ) ? ) ) )
14:19:26,940 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:26,941 DEBUG JoinProcessor:175 - Using FROM fragment [( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_]
14:19:26,941 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Being,humans,aliens,employees)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'being0_.bid as bid0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ),tableAlias=being0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Being}}}
    |  \-[SQL_TOKEN] SqlFragment: 'being0_.ident as ident0_, being0_.location as location0_, being0_.sex as sex6_, being0_.salary as salary4_, being0_.species as species2_, being0_.hive as hive2_, being0_.clazz_ as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[being0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: '( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ),tableAlias=being0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Being}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[SQL_TOKEN] MethodNode: 'clazz_'
          |  +-[METHOD_NAME] IdentNode: 'type' {originalText=type}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[ALIAS_REF] IdentNode: 'being0_.bid' {alias=b, className=org.hibernate.test.unionsubclass.Being, tableAlias=being0_}
          \-[NAMED_PARAM] ParameterNode: '?' {name=what, expectedType=org.hibernate.persister.entity.DiscriminatorType@f906450}

14:19:26,952 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:26,952 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.unionsubclass.Being b where type(b) = :what
14:19:26,952 DEBUG QueryTranslatorImpl:236 - SQL: select being0_.bid as bid0_, being0_.ident as ident0_, being0_.location as location0_, being0_.sex as sex6_, being0_.salary as salary4_, being0_.species as species2_, being0_.hive as hive2_, being0_.clazz_ as clazz_ from ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_ where clazz_=?
14:19:26,952 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:26,953 DEBUG SQL:104 - 
    select
        being0_.bid as bid0_,
        being0_.ident as ident0_,
        being0_.location as location0_,
        being0_.sex as sex6_,
        being0_.salary as salary4_,
        being0_.species as species2_,
        being0_.hive as hive2_,
        being0_.clazz_ as clazz_ 
    from
        ( select
            bid,
            ident,
            location,
            sex,
            salary,
            null as species,
            null as hive,
            2 as clazz_ 
        from
            employees 
        union
        all select
            bid,
            ident,
            location,
            sex,
            null as salary,
            null as species,
            null as hive,
            1 as clazz_ 
        from
            humans 
        union
        all select
            bid,
            ident,
            location,
            null as sex,
            null as salary,
            species,
            hive,
            3 as clazz_ 
        from
            aliens 
    ) being0_ 
where
    clazz_=?
14:19:26,965 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.unionsubclass.Being b where type(b) in :what
14:19:26,966 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  |  \-[IDENT] Node: 'test'
    |        |  |  \-[IDENT] Node: 'unionsubclass'
    |        |  \-[IDENT] Node: 'Being'
    |        \-[ALIAS] Node: 'b'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'type'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[IDENT] Node: 'b'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'what'

14:19:26,977 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:26,977 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Being (b) -> being0_
14:19:26,978 DEBUG FromReferenceNode:74 - Resolved : b -> being0_.bid
14:19:26,978 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_ ) ( where ( in ( clazz_ type ( exprList being0_.bid ) ) ( inList ? ) ) ) )
14:19:26,978 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:26,978 DEBUG JoinProcessor:175 - Using FROM fragment [( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_]
14:19:26,978 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Being,humans,aliens,employees)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'being0_.bid as bid0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ),tableAlias=being0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Being}}}
    |  \-[SQL_TOKEN] SqlFragment: 'being0_.ident as ident0_, being0_.location as location0_, being0_.sex as sex6_, being0_.salary as salary4_, being0_.species as species2_, being0_.hive as hive2_, being0_.clazz_ as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[being0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: '( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ),tableAlias=being0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Being}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[SQL_TOKEN] MethodNode: 'clazz_'
          |  +-[METHOD_NAME] IdentNode: 'type' {originalText=type}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[ALIAS_REF] IdentNode: 'being0_.bid' {alias=b, className=org.hibernate.test.unionsubclass.Being, tableAlias=being0_}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=what, expectedType=org.hibernate.persister.entity.DiscriminatorType@6ad3d4b3}

14:19:27,003 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:27,004 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.unionsubclass.Being b where type(b) in :what
14:19:27,004 DEBUG QueryTranslatorImpl:236 - SQL: select being0_.bid as bid0_, being0_.ident as ident0_, being0_.location as location0_, being0_.sex as sex6_, being0_.salary as salary4_, being0_.species as species2_, being0_.hive as hive2_, being0_.clazz_ as clazz_ from ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_ where clazz_ in (?)
14:19:27,004 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:27,004 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.unionsubclass.Being b where type(b) in (:what0_, :what1_)
14:19:27,005 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  |  \-[IDENT] Node: 'test'
    |        |  |  \-[IDENT] Node: 'unionsubclass'
    |        |  \-[IDENT] Node: 'Being'
    |        \-[ALIAS] Node: 'b'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'type'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[IDENT] Node: 'b'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'what0_'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'what1_'

14:19:27,018 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:27,019 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Being (b) -> being0_
14:19:27,019 DEBUG FromReferenceNode:74 - Resolved : b -> being0_.bid
14:19:27,019 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_ ) ( where ( in ( clazz_ type ( exprList being0_.bid ) ) ( inList ? ? ) ) ) )
14:19:27,020 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:27,020 DEBUG JoinProcessor:175 - Using FROM fragment [( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_]
14:19:27,020 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Being,humans,aliens,employees)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'being0_.bid as bid0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ),tableAlias=being0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Being}}}
    |  \-[SQL_TOKEN] SqlFragment: 'being0_.ident as ident0_, being0_.location as location0_, being0_.sex as sex6_, being0_.salary as salary4_, being0_.species as species2_, being0_.hive as hive2_, being0_.clazz_ as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[b], fromElementByTableAlias=[being0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: '( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ),tableAlias=being0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Being}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[SQL_TOKEN] MethodNode: 'clazz_'
          |  +-[METHOD_NAME] IdentNode: 'type' {originalText=type}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[ALIAS_REF] IdentNode: 'being0_.bid' {alias=b, className=org.hibernate.test.unionsubclass.Being, tableAlias=being0_}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=what0_, expectedType=org.hibernate.persister.entity.DiscriminatorType@29e51b5d}
             \-[NAMED_PARAM] ParameterNode: '?' {name=what1_, expectedType=org.hibernate.persister.entity.DiscriminatorType@29e51b5d}

14:19:27,020 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:27,021 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.unionsubclass.Being b where type(b) in (:what0_, :what1_)
14:19:27,021 DEBUG QueryTranslatorImpl:236 - SQL: select being0_.bid as bid0_, being0_.ident as ident0_, being0_.location as location0_, being0_.sex as sex6_, being0_.salary as salary4_, being0_.species as species2_, being0_.hive as hive2_, being0_.clazz_ as clazz_ from ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_ where clazz_ in (? , ?)
14:19:27,021 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:27,022 DEBUG SQL:104 - 
    select
        being0_.bid as bid0_,
        being0_.ident as ident0_,
        being0_.location as location0_,
        being0_.sex as sex6_,
        being0_.salary as salary4_,
        being0_.species as species2_,
        being0_.hive as hive2_,
        being0_.clazz_ as clazz_ 
    from
        ( select
            bid,
            ident,
            location,
            sex,
            salary,
            null as species,
            null as hive,
            2 as clazz_ 
        from
            employees 
        union
        all select
            bid,
            ident,
            location,
            sex,
            null as salary,
            null as species,
            null as hive,
            1 as clazz_ 
        from
            humans 
        union
        all select
            bid,
            ident,
            location,
            null as sex,
            null as salary,
            species,
            hive,
            3 as clazz_ 
        from
            aliens 
    ) being0_ 
where
    clazz_ in (
        ? , ?
    )
14:19:27,050 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.unionsubclass.Alien
14:19:27,051 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'unionsubclass'
                \-[IDENT] Node: 'Alien'

14:19:27,051 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:27,051 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Alien (<no alias>) -> alien0_
14:19:27,051 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} aliens alien0_ ) )
14:19:27,051 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:27,051 DEBUG JoinProcessor:175 - Using FROM fragment [aliens alien0_]
14:19:27,052 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Being,aliens)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'alien0_.bid as bid0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=aliens,tableAlias=alien0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Alien}}}
    |  \-[SQL_TOKEN] SqlFragment: 'alien0_.ident as ident0_, alien0_.location as location0_, alien0_.species as species2_, alien0_.hive as hive2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[alien0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'aliens alien0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=aliens,tableAlias=alien0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Alien}}

14:19:27,052 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:27,052 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.unionsubclass.Alien
14:19:27,052 DEBUG QueryTranslatorImpl:236 - SQL: select alien0_.bid as bid0_, alien0_.ident as ident0_, alien0_.location as location0_, alien0_.species as species2_, alien0_.hive as hive2_ from aliens alien0_
14:19:27,052 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:27,053 DEBUG SQL:104 - 
    select
        alien0_.bid as bid0_,
        alien0_.ident as ident0_,
        alien0_.location as location0_,
        alien0_.species as species2_,
        alien0_.hive as hive2_ 
    from
        aliens alien0_
14:19:27,054 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.unionsubclass.Being b left join fetch b.location
14:19:27,083 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          +-[RANGE] Node: 'RANGE'
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[DOT] Node: '.'
          |  |  |  |  |  +-[IDENT] Node: 'org'
          |  |  |  |  |  \-[IDENT] Node: 'hibernate'
          |  |  |  |  \-[IDENT] Node: 'test'
          |  |  |  \-[IDENT] Node: 'unionsubclass'
          |  |  \-[IDENT] Node: 'Being'
          |  \-[ALIAS] Node: 'b'
          \-[JOIN] Node: 'join'
             +-[LEFT] Node: 'left'
             +-[FETCH] Node: 'fetch'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'b'
                \-[IDENT] Node: 'location'

14:19:27,084 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:27,084 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Being (b) -> being0_
14:19:27,084 DEBUG FromReferenceNode:74 - Resolved : b -> being0_.bid
14:19:27,084 DEBUG DotNode:599 - getDataType() : location -> org.hibernate.type.ManyToOneType(org.hibernate.test.unionsubclass.Location)
14:19:27,084 DEBUG DotNode:389 - dereferenceEntityJoin() : generating join for location in org.hibernate.test.unionsubclass.Being (<no alias>) parent = [ {null} ]
14:19:27,084 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Location (<no alias>) -> location1_
14:19:27,085 DEBUG FromClause:282 - addJoinByPathMap() : b.location -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=locations,tableAlias=location1_,origin=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_,columns={being0_.location ,className=org.hibernate.test.unionsubclass.Location}}
14:19:27,085 DEBUG FromReferenceNode:74 - Resolved : b.location -> being0_.location
14:19:27,096 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'locations location1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=locations,tableAlias=location1_,origin=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_,columns={being0_.location ,className=org.hibernate.test.unionsubclass.Location}}

14:19:27,097 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} ( ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_ locations location1_ ) ) )
14:19:27,097 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:27,097 DEBUG JoinProcessor:175 - Using FROM fragment [( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_]
14:19:27,097 DEBUG JoinProcessor:175 - Using FROM fragment [left outer join locations location1_ on being0_.location=location1_.id]
14:19:27,097 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (locations,Being,humans,aliens,employees)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'being0_.bid as bid0_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ),tableAlias=being0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Being}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'location1_.id as id7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=locations,tableAlias=location1_,origin=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_,columns={being0_.location ,className=org.hibernate.test.unionsubclass.Location}}}
    |  +-[SQL_TOKEN] SqlFragment: 'being0_.ident as ident0_0_, being0_.location as location0_0_, being0_.sex as sex6_0_, being0_.salary as salary4_0_, being0_.species as species2_0_, being0_.hive as hive2_0_, being0_.clazz_ as clazz_0_'
    |  \-[SQL_TOKEN] SqlFragment: 'location1_.name as name7_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[b], fromElementByTableAlias=[location1_, being0_], fromElementsByPath=[b.location], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: '( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ),tableAlias=being0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Being}}
          \-[JOIN_FRAGMENT] FromElement: 'left outer join locations location1_ on being0_.location=location1_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=locations,tableAlias=location1_,origin=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_,columns={being0_.location ,className=org.hibernate.test.unionsubclass.Location}}

14:19:27,098 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:27,098 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.unionsubclass.Being b left join fetch b.location
14:19:27,098 DEBUG QueryTranslatorImpl:236 - SQL: select being0_.bid as bid0_0_, location1_.id as id7_1_, being0_.ident as ident0_0_, being0_.location as location0_0_, being0_.sex as sex6_0_, being0_.salary as salary4_0_, being0_.species as species2_0_, being0_.hive as hive2_0_, being0_.clazz_ as clazz_0_, location1_.name as name7_1_ from ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_ left outer join locations location1_ on being0_.location=location1_.id
14:19:27,098 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:27,098 DEBUG SQL:104 - 
    select
        being0_.bid as bid0_0_,
        location1_.id as id7_1_,
        being0_.ident as ident0_0_,
        being0_.location as location0_0_,
        being0_.sex as sex6_0_,
        being0_.salary as salary4_0_,
        being0_.species as species2_0_,
        being0_.hive as hive2_0_,
        being0_.clazz_ as clazz_0_,
        location1_.name as name7_1_ 
    from
        ( select
            bid,
            ident,
            location,
            sex,
            salary,
            null as species,
            null as hive,
            2 as clazz_ 
        from
            employees 
        union
        all select
            bid,
            ident,
            location,
            sex,
            null as salary,
            null as species,
            null as hive,
            1 as clazz_ 
        from
            humans 
        union
        all select
            bid,
            ident,
            location,
            null as sex,
            null as salary,
            species,
            hive,
            3 as clazz_ 
        from
            aliens 
    ) being0_ 
left outer join
    locations location1_ 
        on being0_.location=location1_.id
14:19:27,115 DEBUG SQL:104 - 
    select
        being0_.bid as bid0_,
        being0_.ident as ident0_,
        being0_.location as location0_,
        being0_.sex as sex6_,
        being0_.salary as salary4_,
        being0_.species as species2_,
        being0_.hive as hive2_,
        being0_.clazz_ as clazz_ 
    from
        ( select
            bid,
            ident,
            location,
            sex,
            salary,
            null as species,
            null as hive,
            2 as clazz_ 
        from
            employees 
        union
        all select
            bid,
            ident,
            location,
            sex,
            null as salary,
            null as species,
            null as hive,
            1 as clazz_ 
        from
            humans 
        union
        all select
            bid,
            ident,
            location,
            null as sex,
            null as salary,
            species,
            hive,
            3 as clazz_ 
        from
            aliens 
    ) being0_
14:19:27,141 DEBUG SQL:104 - 
    select
        location0_.id as id7_0_,
        location0_.name as name7_0_ 
    from
        locations location0_ 
    where
        location0_.id=?
14:19:27,142 DEBUG SQL:104 - 
    select
        location0_.id as id7_0_,
        location0_.name as name7_0_ 
    from
        locations location0_ 
    where
        location0_.id=?
14:19:27,154 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.unionsubclass.Location
14:19:27,154 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'unionsubclass'
                \-[IDENT] Node: 'Location'

14:19:27,155 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:27,155 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Location (<no alias>) -> location0_
14:19:27,155 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} locations location0_ ) )
14:19:27,155 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:27,155 DEBUG JoinProcessor:175 - Using FROM fragment [locations location0_]
14:19:27,155 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (locations)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'location0_.id as id7_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=locations,tableAlias=location0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Location}}}
    |  \-[SQL_TOKEN] SqlFragment: 'location0_.name as name7_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[location0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'locations location0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=locations,tableAlias=location0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Location}}

14:19:27,155 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:27,156 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.unionsubclass.Location
14:19:27,156 DEBUG QueryTranslatorImpl:236 - SQL: select location0_.id as id7_, location0_.name as name7_ from locations location0_
14:19:27,156 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:27,156 DEBUG SQL:104 - 
    select
        location0_.id as id7_,
        location0_.name as name7_ 
    from
        locations location0_
14:19:27,157 DEBUG SQL:104 - 
    select
        beings0_.location as location7_1_,
        beings0_.bid as bid0_1_,
        beings0_.bid as bid0_0_,
        beings0_.ident as ident0_0_,
        beings0_.location as location0_0_,
        beings0_.sex as sex6_0_,
        beings0_.salary as salary4_0_,
        beings0_.species as species2_0_,
        beings0_.hive as hive2_0_,
        beings0_.clazz_ as clazz_0_ 
    from
        ( select
            bid,
            ident,
            location,
            sex,
            salary,
            null as species,
            null as hive,
            2 as clazz_ 
        from
            employees 
        union
        all select
            bid,
            ident,
            location,
            sex,
            null as salary,
            null as species,
            null as hive,
            1 as clazz_ 
        from
            humans 
        union
        all select
            bid,
            ident,
            location,
            null as sex,
            null as salary,
            species,
            hive,
            3 as clazz_ 
        from
            aliens 
    ) beings0_ 
where
    beings0_.location=?
14:19:27,185 DEBUG SQL:104 - 
    select
        beings0_.location as location7_1_,
        beings0_.bid as bid0_1_,
        beings0_.bid as bid0_0_,
        beings0_.ident as ident0_0_,
        beings0_.location as location0_0_,
        beings0_.sex as sex6_0_,
        beings0_.salary as salary4_0_,
        beings0_.species as species2_0_,
        beings0_.hive as hive2_0_,
        beings0_.clazz_ as clazz_0_ 
    from
        ( select
            bid,
            ident,
            location,
            sex,
            salary,
            null as species,
            null as hive,
            2 as clazz_ 
        from
            employees 
        union
        all select
            bid,
            ident,
            location,
            sex,
            null as salary,
            null as species,
            null as hive,
            1 as clazz_ 
        from
            humans 
        union
        all select
            bid,
            ident,
            location,
            null as sex,
            null as salary,
            species,
            hive,
            3 as clazz_ 
        from
            aliens 
    ) beings0_ 
where
    beings0_.location=?
14:19:27,212 DEBUG SQL:104 - 
    select
        beings0_.location as location7_1_,
        beings0_.bid as bid0_1_,
        beings0_.bid as bid0_0_,
        beings0_.ident as ident0_0_,
        beings0_.location as location0_0_,
        beings0_.sex as sex6_0_,
        beings0_.salary as salary4_0_,
        beings0_.species as species2_0_,
        beings0_.hive as hive2_0_,
        beings0_.clazz_ as clazz_0_ 
    from
        ( select
            bid,
            ident,
            location,
            sex,
            salary,
            null as species,
            null as hive,
            2 as clazz_ 
        from
            employees 
        union
        all select
            bid,
            ident,
            location,
            sex,
            null as salary,
            null as species,
            null as hive,
            1 as clazz_ 
        from
            humans 
        union
        all select
            bid,
            ident,
            location,
            null as sex,
            null as salary,
            species,
            hive,
            3 as clazz_ 
        from
            aliens 
    ) beings0_ 
where
    beings0_.location=?
14:19:27,240 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.unionsubclass.Location loc left join fetch loc.beings
14:19:27,241 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          +-[RANGE] Node: 'RANGE'
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[DOT] Node: '.'
          |  |  |  |  |  +-[IDENT] Node: 'org'
          |  |  |  |  |  \-[IDENT] Node: 'hibernate'
          |  |  |  |  \-[IDENT] Node: 'test'
          |  |  |  \-[IDENT] Node: 'unionsubclass'
          |  |  \-[IDENT] Node: 'Location'
          |  \-[ALIAS] Node: 'loc'
          \-[JOIN] Node: 'join'
             +-[LEFT] Node: 'left'
             +-[FETCH] Node: 'fetch'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'loc'
                \-[IDENT] Node: 'beings'

14:19:27,241 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:27,241 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Location (loc) -> location0_
14:19:27,242 DEBUG FromReferenceNode:74 - Resolved : loc -> location0_.id
14:19:27,250 DEBUG DotNode:599 - getDataType() : beings -> org.hibernate.type.BagType(org.hibernate.test.unionsubclass.Location.beings)
14:19:27,251 DEBUG FromElementFactory:376 - createEntityAssociation() : One to many - path = loc.beings role = org.hibernate.test.unionsubclass.Location.beings associatedEntityName = org.hibernate.test.unionsubclass.Being
14:19:27,251 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Being (<no alias>) -> beings1_
14:19:27,251 DEBUG FromClause:282 - addJoinByPathMap() : loc.beings -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ),tableAlias=beings1_,origin=locations location0_,columns={location0_.id ,className=org.hibernate.test.unionsubclass.Being}}
14:19:27,251 DEBUG DotNode:308 - dereferenceCollection() : Created new FROM element for loc.beings : ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) beings1_
14:19:27,252 DEBUG FromReferenceNode:74 - Resolved : loc.beings -> .
14:19:27,252 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: '( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) beings1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.unionsubclass.Location.beings,tableName=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ),tableAlias=beings1_,origin=locations location0_,columns={location0_.id ,className=org.hibernate.test.unionsubclass.Being}}

14:19:27,252 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} ( locations location0_ ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) beings1_ ) ) )
14:19:27,252 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:27,252 DEBUG JoinProcessor:175 - Using FROM fragment [locations location0_]
14:19:27,252 DEBUG JoinProcessor:175 - Using FROM fragment [left outer join ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) beings1_ on location0_.id=beings1_.location]
14:19:27,253 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (locations,Being,humans,aliens,employees)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'location0_.id as id7_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=loc,role=null,tableName=locations,tableAlias=location0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Location}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'beings1_.bid as bid0_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.unionsubclass.Location.beings,tableName=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ),tableAlias=beings1_,origin=locations location0_,columns={location0_.id ,className=org.hibernate.test.unionsubclass.Being}}}
    |  +-[SQL_TOKEN] SqlFragment: 'location0_.name as name7_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'beings1_.ident as ident0_1_, beings1_.location as location0_1_, beings1_.sex as sex6_1_, beings1_.salary as salary4_1_, beings1_.species as species2_1_, beings1_.hive as hive2_1_, beings1_.clazz_ as clazz_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'beings1_.location as location7_0__, beings1_.bid as bid0_0__'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[loc], fromElementByTableAlias=[beings1_, location0_], fromElementsByPath=[loc.beings], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'locations location0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=loc,role=null,tableName=locations,tableAlias=location0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Location}}
          \-[JOIN_FRAGMENT] FromElement: 'left outer join ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) beings1_ on location0_.id=beings1_.location' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.unionsubclass.Location.beings,tableName=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ),tableAlias=beings1_,origin=locations location0_,columns={location0_.id ,className=org.hibernate.test.unionsubclass.Being}}

14:19:27,253 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:27,253 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.unionsubclass.Location loc left join fetch loc.beings
14:19:27,253 DEBUG QueryTranslatorImpl:236 - SQL: select location0_.id as id7_0_, beings1_.bid as bid0_1_, location0_.name as name7_0_, beings1_.ident as ident0_1_, beings1_.location as location0_1_, beings1_.sex as sex6_1_, beings1_.salary as salary4_1_, beings1_.species as species2_1_, beings1_.hive as hive2_1_, beings1_.clazz_ as clazz_1_, beings1_.location as location7_0__, beings1_.bid as bid0_0__ from locations location0_ left outer join ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) beings1_ on location0_.id=beings1_.location
14:19:27,253 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:27,254 DEBUG SQL:104 - 
    select
        location0_.id as id7_0_,
        beings1_.bid as bid0_1_,
        location0_.name as name7_0_,
        beings1_.ident as ident0_1_,
        beings1_.location as location0_1_,
        beings1_.sex as sex6_1_,
        beings1_.salary as salary4_1_,
        beings1_.species as species2_1_,
        beings1_.hive as hive2_1_,
        beings1_.clazz_ as clazz_1_,
        beings1_.location as location7_0__,
        beings1_.bid as bid0_0__ 
    from
        locations location0_ 
    left outer join
        (
            select
                bid,
                ident,
                location,
                sex,
                salary,
                null as species,
                null as hive,
                2 as clazz_ 
            from
                employees 
            union
            all select
                bid,
                ident,
                location,
                sex,
                null as salary,
                null as species,
                null as hive,
                1 as clazz_ 
            from
                humans 
            union
            all select
                bid,
                ident,
                location,
                null as sex,
                null as salary,
                species,
                hive,
                3 as clazz_ 
            from
                aliens 
        ) beings1_ 
            on location0_.id=beings1_.location
14:19:27,286 DEBUG SQL:104 - 
    select
        human0_.bid as bid0_0_,
        human0_.ident as ident0_0_,
        human0_.location as location0_0_,
        human0_.sex as sex6_0_,
        human0_.salary as salary4_0_,
        human0_.clazz_ as clazz_0_ 
    from
        ( select
            bid,
            ident,
            location,
            sex,
            null as salary,
            1 as clazz_ 
        from
            humans 
        union
        all select
            bid,
            ident,
            location,
            sex,
            salary,
            2 as clazz_ 
        from
            employees 
    ) human0_ 
where
    human0_.bid=?
14:19:27,288 DEBUG SQL:104 - 
    select
        location0_.id as id7_0_,
        location0_.name as name7_0_ 
    from
        locations location0_ 
    where
        location0_.id=?
14:19:27,288 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.unionsubclass.Human h where h.location.name like '%GA'
14:19:27,289 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  |  \-[IDENT] Node: 'test'
    |        |  |  \-[IDENT] Node: 'unionsubclass'
    |        |  \-[IDENT] Node: 'Human'
    |        \-[ALIAS] Node: 'h'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'h'
          |  |  \-[IDENT] Node: 'location'
          |  \-[IDENT] Node: 'name'
          \-[QUOTED_STRING] Node: ''%GA''

14:19:27,307 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:27,307 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Human (h) -> human0_
14:19:27,308 DEBUG FromReferenceNode:74 - Resolved : h -> human0_.bid
14:19:27,308 DEBUG DotNode:599 - getDataType() : location -> org.hibernate.type.ManyToOneType(org.hibernate.test.unionsubclass.Location)
14:19:27,308 DEBUG DotNode:389 - dereferenceEntityJoin() : generating join for location in org.hibernate.test.unionsubclass.Human (<no alias>) parent = [  ( . ( . human0_.bid location ) name ) ]
14:19:27,308 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Location (<no alias>) -> location1_
14:19:27,308 DEBUG FromClause:282 - addJoinByPathMap() : h.location -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=locations,tableAlias=location1_,origin=( select bid, ident, location, sex, null as salary, 1 as clazz_ from humans union all select bid, ident, location, sex, salary, 2 as clazz_ from employees ) human0_,columns={human0_.location ,className=org.hibernate.test.unionsubclass.Location}}
14:19:27,308 DEBUG FromReferenceNode:74 - Resolved : h.location -> human0_.location
14:19:27,309 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:19:27,309 DEBUG FromReferenceNode:74 - Resolved : h.location.name -> location1_.name
14:19:27,309 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} ( select bid, ident, location, sex, null as salary, 1 as clazz_ from humans union all select bid, ident, location, sex, salary, 2 as clazz_ from employees ) human0_ locations location1_ ) ( where ( like ( location1_.name ( human0_.location human0_.bid location ) name ) '%GA' ) ) )
14:19:27,309 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:27,309 DEBUG JoinProcessor:175 - Using FROM fragment [( select bid, ident, location, sex, null as salary, 1 as clazz_ from humans union all select bid, ident, location, sex, salary, 2 as clazz_ from employees ) human0_]
14:19:27,309 DEBUG SyntheticAndFactory:92 - Using unprocessed WHERE-fragment [human0_.location=location1_.id]
14:19:27,309 DEBUG SyntheticAndFactory:124 - Using processed WHERE-fragment [human0_.location=location1_.id]
14:19:27,310 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (locations,Being,humans,employees)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'human0_.bid as bid0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=h,role=null,tableName=( select bid, ident, location, sex, null as salary, 1 as clazz_ from humans union all select bid, ident, location, sex, salary, 2 as clazz_ from employees ),tableAlias=human0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Human}}}
    |  \-[SQL_TOKEN] SqlFragment: 'human0_.ident as ident0_, human0_.location as location0_, human0_.sex as sex6_, human0_.salary as salary4_, human0_.clazz_ as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[h], fromElementByTableAlias=[human0_, location1_], fromElementsByPath=[h.location], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: '( select bid, ident, location, sex, null as salary, 1 as clazz_ from humans union all select bid, ident, location, sex, salary, 2 as clazz_ from employees ) human0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=h,role=null,tableName=( select bid, ident, location, sex, null as salary, 1 as clazz_ from humans union all select bid, ident, location, sex, salary, 2 as clazz_ from employees ),tableAlias=human0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Human}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: 'locations location1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=locations,tableAlias=location1_,origin=( select bid, ident, location, sex, null as salary, 1 as clazz_ from humans union all select bid, ident, location, sex, salary, 2 as clazz_ from employees ) human0_,columns={human0_.location ,className=org.hibernate.test.unionsubclass.Location}}
    \-[WHERE] SqlNode: 'where'
       +-[THETA_JOINS] SqlNode: '{theta joins}'
       |  \-[SQL_TOKEN] SqlFragment: 'human0_.location=location1_.id'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'location1_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=h.location.name,tableAlias=location1_,className=org.hibernate.test.unionsubclass.Location,classAlias=null}
          |  +-[DOT] DotNode: 'human0_.location' {propertyName=location,dereferenceType=EOF,propertyPath=location,path=h.location,tableAlias=location1_,className=org.hibernate.test.unionsubclass.Location,classAlias=null}
          |  |  +-[ALIAS_REF] IdentNode: 'human0_.bid' {alias=h, className=org.hibernate.test.unionsubclass.Human, tableAlias=human0_}
          |  |  \-[IDENT] IdentNode: 'location' {originalText=location}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[QUOTED_STRING] LiteralNode: ''%GA''

14:19:27,320 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:27,320 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.unionsubclass.Human h where h.location.name like '%GA'
14:19:27,320 DEBUG QueryTranslatorImpl:236 - SQL: select human0_.bid as bid0_, human0_.ident as ident0_, human0_.location as location0_, human0_.sex as sex6_, human0_.salary as salary4_, human0_.clazz_ as clazz_ from ( select bid, ident, location, sex, null as salary, 1 as clazz_ from humans union all select bid, ident, location, sex, salary, 2 as clazz_ from employees ) human0_ cross join locations location1_ where human0_.location=location1_.id and (location1_.name like '%GA')
14:19:27,320 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:27,321 DEBUG SQL:104 - 
    update
        humans 
    set
        ident=?,
        location=? 
    where
        bid=?
14:19:27,321 DEBUG SQL:104 - 
    select
        human0_.bid as bid0_,
        human0_.ident as ident0_,
        human0_.location as location0_,
        human0_.sex as sex6_,
        human0_.salary as salary4_,
        human0_.clazz_ as clazz_ 
    from
        ( select
            bid,
            ident,
            location,
            sex,
            null as salary,
            1 as clazz_ 
        from
            humans 
        union
        all select
            bid,
            ident,
            location,
            sex,
            salary,
            2 as clazz_ 
        from
            employees 
    ) human0_ cross 
join
    locations location1_ 
where
    human0_.location=location1_.id 
    and (
        location1_.name like '%GA'
    )
14:19:27,445 DEBUG SQL:104 - 
    select
        this_.bid as bid0_0_,
        this_.ident as ident0_0_,
        this_.location as location0_0_,
        this_.species as species2_0_,
        this_.hive as hive2_0_ 
    from
        aliens this_
14:19:27,445 DEBUG SQL:104 - 
    select
        hive0_.id as id5_0_,
        hive0_.location as location5_0_ 
    from
        hives hive0_ 
    where
        hive0_.id=?
14:19:27,446 DEBUG SQL:104 - 
    select
        members0_.hive as hive5_1_,
        members0_.bid as bid2_1_,
        members0_.bid as bid0_0_,
        members0_.ident as ident0_0_,
        members0_.location as location0_0_,
        members0_.species as species2_0_,
        members0_.hive as hive2_0_ 
    from
        aliens members0_ 
    where
        members0_.hive=?
14:19:27,477 DEBUG SQL:104 - 
    delete 
    from
        Being_info 
    where
        bid=?
14:19:27,477 DEBUG SQL:104 - 
    delete 
    from
        Being_info 
    where
        bid=?
14:19:27,478 DEBUG SQL:104 - 
    delete 
    from
        aliens_hivemates 
    where
        alien1=?
14:19:27,487 DEBUG SQL:104 - 
    delete 
    from
        humans 
    where
        bid=?
14:19:27,488 DEBUG SQL:104 - 
    delete 
    from
        aliens 
    where
        bid=?
14:19:27,489 DEBUG SQL:104 - 
    delete 
    from
        hives 
    where
        id=?
14:19:27,489 DEBUG SQL:104 - 
    select
        being0_.bid as bid0_,
        being0_.ident as ident0_,
        being0_.location as location0_,
        being0_.sex as sex6_,
        being0_.salary as salary4_,
        being0_.species as species2_,
        being0_.hive as hive2_,
        being0_.clazz_ as clazz_ 
    from
        ( select
            bid,
            ident,
            location,
            sex,
            salary,
            null as species,
            null as hive,
            2 as clazz_ 
        from
            employees 
        union
        all select
            bid,
            ident,
            location,
            sex,
            null as salary,
            null as species,
            null as hive,
            1 as clazz_ 
        from
            humans 
        union
        all select
            bid,
            ident,
            location,
            null as sex,
            null as salary,
            species,
            hive,
            3 as clazz_ 
        from
            aliens 
    ) being0_
14:19:27,564 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete from org.hibernate.test.unionsubclass.Location
14:19:27,564 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'unionsubclass'
             \-[IDENT] Node: 'Location'

14:19:27,577 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:27,577 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Location (<no alias>) -> location0_
14:19:27,577 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (locations)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[location0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'locations' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=locations,tableAlias=location0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Location}}

14:19:27,577 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:27,578 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:27,579 DEBUG SQL:104 - 
    delete 
    from
        locations
14:19:27,580  INFO CustomRunner:139 - Test: testUnionSubclassCollection
14:19:27,582 DEBUG SQL:104 - 
    insert 
    into
        locations
        (name, id) 
    values
        (?, ?)
14:19:27,582 DEBUG SQL:104 - 
    insert 
    into
        humans
        (ident, location, sex, bid) 
    values
        (?, ?, ?, ?)
14:19:27,583 DEBUG SQL:104 - 
    insert 
    into
        Being_info
        (bid, attribute, "value") 
    values
        (?, ?, ?)
14:19:27,583 DEBUG SQL:104 - 
    insert 
    into
        Being_info
        (bid, attribute, "value") 
    values
        (?, ?, ?)
14:19:27,583 DEBUG SQL:104 - 
    select
        this_.bid as bid0_0_,
        this_.ident as ident0_0_,
        this_.location as location0_0_,
        this_.sex as sex6_0_,
        this_.salary as salary4_0_,
        this_.clazz_ as clazz_0_ 
    from
        ( select
            bid,
            ident,
            location,
            sex,
            null as salary,
            1 as clazz_ 
        from
            humans 
        union
        all select
            bid,
            ident,
            location,
            sex,
            salary,
            2 as clazz_ 
        from
            employees 
    ) this_
14:19:28,064 DEBUG SQL:104 - 
    select
        info0_.bid as bid0_0_,
        info0_."value" as value2_1_0_,
        info0_.attribute as attribute0_ 
    from
        Being_info info0_ 
    where
        info0_.bid=?
14:19:28,065 DEBUG SQL:104 - 
    select
        location0_.id as id7_0_,
        location0_.name as name7_0_ 
    from
        locations location0_ 
    where
        location0_.id=?
14:19:28,065 DEBUG SQL:104 - 
    select
        beings0_.location as location7_1_,
        beings0_.bid as bid0_1_,
        beings0_.bid as bid0_0_,
        beings0_.ident as ident0_0_,
        beings0_.location as location0_0_,
        beings0_.sex as sex6_0_,
        beings0_.salary as salary4_0_,
        beings0_.species as species2_0_,
        beings0_.hive as hive2_0_,
        beings0_.clazz_ as clazz_0_ 
    from
        ( select
            bid,
            ident,
            location,
            sex,
            salary,
            null as species,
            null as hive,
            2 as clazz_ 
        from
            employees 
        union
        all select
            bid,
            ident,
            location,
            sex,
            null as salary,
            null as species,
            null as hive,
            1 as clazz_ 
        from
            humans 
        union
        all select
            bid,
            ident,
            location,
            null as sex,
            null as salary,
            species,
            hive,
            3 as clazz_ 
        from
            aliens 
    ) beings0_ 
where
    beings0_.location=?
14:19:28,067 DEBUG SQL:104 - 
    delete 
    from
        Being_info 
    where
        bid=?
14:19:28,067 DEBUG SQL:104 - 
    delete 
    from
        humans 
    where
        bid=?
14:19:28,067 DEBUG SQL:104 - 
    delete 
    from
        locations 
    where
        id=?
14:19:28,068  INFO CustomRunner:139 - Test: testUnionSubclassFetchMode
14:19:28,070 DEBUG SQL:104 - 
    insert 
    into
        locations
        (name, id) 
    values
        (?, ?)
14:19:28,071 DEBUG SQL:104 - 
    insert 
    into
        humans
        (ident, location, sex, bid) 
    values
        (?, ?, ?, ?)
14:19:28,071 DEBUG SQL:104 - 
    select
        this_.bid as bid0_2_,
        this_.ident as ident0_2_,
        this_.location as location0_2_,
        this_.sex as sex6_2_,
        this_.salary as salary4_2_,
        this_.clazz_ as clazz_2_,
        location2_.id as id7_0_,
        location2_.name as name7_0_,
        beings3_.location as location7_4_,
        beings3_.bid as bid0_4_,
        beings3_.bid as bid0_1_,
        beings3_.ident as ident0_1_,
        beings3_.location as location0_1_,
        beings3_.sex as sex6_1_,
        beings3_.salary as salary4_1_,
        beings3_.species as species2_1_,
        beings3_.hive as hive2_1_,
        beings3_.clazz_ as clazz_1_ 
    from
        ( select
            bid,
            ident,
            location,
            sex,
            null as salary,
            1 as clazz_ 
        from
            humans 
        union
        all select
            bid,
            ident,
            location,
            sex,
            salary,
            2 as clazz_ 
        from
            employees 
    ) this_ 
inner join
    locations location2_ 
        on this_.location=location2_.id 
left outer join
    (
        select
            bid,
            ident,
            location,
            sex,
            salary,
            null as species,
            null as hive,
            2 as clazz_ 
        from
            employees 
        union
        all select
            bid,
            ident,
            location,
            sex,
            null as salary,
            null as species,
            null as hive,
            1 as clazz_ 
        from
            humans 
        union
        all select
            bid,
            ident,
            location,
            null as sex,
            null as salary,
            species,
            hive,
            3 as clazz_ 
        from
            aliens 
    ) beings3_ 
        on location2_.id=beings3_.location
14:19:28,105 DEBUG SQL:104 - 
    delete 
    from
        Being_info 
    where
        bid=?
14:19:28,106 DEBUG SQL:104 - 
    delete 
    from
        humans 
    where
        bid=?
14:19:28,106 DEBUG SQL:104 - 
    delete 
    from
        locations 
    where
        id=?
14:19:28,106  INFO CustomRunner:139 - Test: testUnionSubclassManyToOne
14:19:28,108 DEBUG SQL:104 - 
    select
        max(id) 
    from
        things
14:19:28,108 DEBUG SQL:104 - 
    insert 
    into
        locations
        (name, id) 
    values
        (?, ?)
14:19:28,109 DEBUG SQL:104 - 
    insert 
    into
        locations
        (name, id) 
    values
        (?, ?)
14:19:28,109 DEBUG SQL:104 - 
    insert 
    into
        hives
        (location, id) 
    values
        (?, ?)
14:19:28,109 DEBUG SQL:104 - 
    insert 
    into
        aliens
        (ident, location, species, hive, bid) 
    values
        (?, ?, ?, ?, ?)
14:19:28,109 DEBUG SQL:104 - 
    insert 
    into
        things
        (description, owner, id) 
    values
        (?, ?, ?)
14:19:28,110 DEBUG SQL:104 - 
    insert 
    into
        humans
        (ident, location, sex, bid) 
    values
        (?, ?, ?, ?)
14:19:28,110 DEBUG SQL:104 - 
    update
        things 
    set
        description=?,
        owner=? 
    where
        id=?
14:19:28,130 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.unionsubclass.Thing t left join fetch t.owner
14:19:28,131 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          +-[RANGE] Node: 'RANGE'
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[DOT] Node: '.'
          |  |  |  |  |  +-[IDENT] Node: 'org'
          |  |  |  |  |  \-[IDENT] Node: 'hibernate'
          |  |  |  |  \-[IDENT] Node: 'test'
          |  |  |  \-[IDENT] Node: 'unionsubclass'
          |  |  \-[IDENT] Node: 'Thing'
          |  \-[ALIAS] Node: 't'
          \-[JOIN] Node: 'join'
             +-[LEFT] Node: 'left'
             +-[FETCH] Node: 'fetch'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 't'
                \-[IDENT] Node: 'owner'

14:19:28,142 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,142 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Thing (t) -> thing0_
14:19:28,143 DEBUG FromReferenceNode:74 - Resolved : t -> thing0_.id
14:19:28,143 DEBUG DotNode:599 - getDataType() : owner -> org.hibernate.type.ManyToOneType(org.hibernate.test.unionsubclass.Being)
14:19:28,143 DEBUG DotNode:389 - dereferenceEntityJoin() : generating join for owner in org.hibernate.test.unionsubclass.Thing (<no alias>) parent = [ {null} ]
14:19:28,143 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Being (<no alias>) -> being1_
14:19:28,143 DEBUG FromClause:282 - addJoinByPathMap() : t.owner -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ),tableAlias=being1_,origin=things thing0_,columns={thing0_.owner ,className=org.hibernate.test.unionsubclass.Being}}
14:19:28,143 DEBUG FromReferenceNode:74 - Resolved : t.owner -> thing0_.owner
14:19:28,144 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: '( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ),tableAlias=being1_,origin=things thing0_,columns={thing0_.owner ,className=org.hibernate.test.unionsubclass.Being}}

14:19:28,144 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} ( things thing0_ ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being1_ ) ) )
14:19:28,144 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:28,144 DEBUG JoinProcessor:175 - Using FROM fragment [things thing0_]
14:19:28,144 DEBUG JoinProcessor:175 - Using FROM fragment [left outer join ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being1_ on thing0_.owner=being1_.bid]
14:19:28,145 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Being,humans,things,aliens,employees)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'thing0_.id as id8_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=things,tableAlias=thing0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Thing}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'being1_.bid as bid0_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ),tableAlias=being1_,origin=things thing0_,columns={thing0_.owner ,className=org.hibernate.test.unionsubclass.Being}}}
    |  +-[SQL_TOKEN] SqlFragment: 'thing0_.description as descript2_8_0_, thing0_.owner as owner8_0_'
    |  \-[SQL_TOKEN] SqlFragment: 'being1_.ident as ident0_1_, being1_.location as location0_1_, being1_.sex as sex6_1_, being1_.salary as salary4_1_, being1_.species as species2_1_, being1_.hive as hive2_1_, being1_.clazz_ as clazz_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[t], fromElementByTableAlias=[thing0_, being1_], fromElementsByPath=[t.owner], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'things thing0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=things,tableAlias=thing0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Thing}}
          \-[JOIN_FRAGMENT] FromElement: 'left outer join ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being1_ on thing0_.owner=being1_.bid' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ),tableAlias=being1_,origin=things thing0_,columns={thing0_.owner ,className=org.hibernate.test.unionsubclass.Being}}

14:19:28,145 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,145 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.unionsubclass.Thing t left join fetch t.owner
14:19:28,145 DEBUG QueryTranslatorImpl:236 - SQL: select thing0_.id as id8_0_, being1_.bid as bid0_1_, thing0_.description as descript2_8_0_, thing0_.owner as owner8_0_, being1_.ident as ident0_1_, being1_.location as location0_1_, being1_.sex as sex6_1_, being1_.salary as salary4_1_, being1_.species as species2_1_, being1_.hive as hive2_1_, being1_.clazz_ as clazz_1_ from things thing0_ left outer join ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being1_ on thing0_.owner=being1_.bid
14:19:28,145 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,145 DEBUG SQL:104 - 
    select
        thing0_.id as id8_0_,
        being1_.bid as bid0_1_,
        thing0_.description as descript2_8_0_,
        thing0_.owner as owner8_0_,
        being1_.ident as ident0_1_,
        being1_.location as location0_1_,
        being1_.sex as sex6_1_,
        being1_.salary as salary4_1_,
        being1_.species as species2_1_,
        being1_.hive as hive2_1_,
        being1_.clazz_ as clazz_1_ 
    from
        things thing0_ 
    left outer join
        (
            select
                bid,
                ident,
                location,
                sex,
                salary,
                null as species,
                null as hive,
                2 as clazz_ 
            from
                employees 
            union
            all select
                bid,
                ident,
                location,
                sex,
                null as salary,
                null as species,
                null as hive,
                1 as clazz_ 
            from
                humans 
            union
            all select
                bid,
                ident,
                location,
                null as sex,
                null as salary,
                species,
                hive,
                3 as clazz_ 
            from
                aliens 
        ) being1_ 
            on thing0_.owner=being1_.bid
14:19:28,169 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select t from org.hibernate.test.unionsubclass.Thing t left join t.owner where t.owner.identity='gavin'
14:19:28,171 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |  |  |  |  |  \-[IDENT] Node: 'test'
    |  |  |  |  |  \-[IDENT] Node: 'unionsubclass'
    |  |  |  |  \-[IDENT] Node: 'Thing'
    |  |  |  \-[ALIAS] Node: 't'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     \-[DOT] Node: '.'
    |  |        +-[IDENT] Node: 't'
    |  |        \-[IDENT] Node: 'owner'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 't'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 't'
          |  |  \-[IDENT] Node: 'owner'
          |  \-[IDENT] Node: 'identity'
          \-[QUOTED_STRING] Node: ''gavin''

14:19:28,193 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,193 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Thing (t) -> thing0_
14:19:28,194 DEBUG FromReferenceNode:74 - Resolved : t -> thing0_.id
14:19:28,194 DEBUG DotNode:599 - getDataType() : owner -> org.hibernate.type.ManyToOneType(org.hibernate.test.unionsubclass.Being)
14:19:28,194 DEBUG DotNode:389 - dereferenceEntityJoin() : generating join for owner in org.hibernate.test.unionsubclass.Thing (<no alias>) parent = [ {null} ]
14:19:28,194 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Being (<no alias>) -> being1_
14:19:28,194 DEBUG FromClause:282 - addJoinByPathMap() : t.owner -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ),tableAlias=being1_,origin=things thing0_,columns={thing0_.owner ,className=org.hibernate.test.unionsubclass.Being}}
14:19:28,194 DEBUG FromReferenceNode:74 - Resolved : t.owner -> thing0_.owner
14:19:28,194 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: '( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ),tableAlias=being1_,origin=things thing0_,columns={thing0_.owner ,className=org.hibernate.test.unionsubclass.Being}}

14:19:28,195 DEBUG FromReferenceNode:74 - Resolved : t -> thing0_.id
14:19:28,195 DEBUG FromReferenceNode:74 - Resolved : t -> thing0_.id
14:19:28,195 DEBUG DotNode:599 - getDataType() : owner -> org.hibernate.type.ManyToOneType(org.hibernate.test.unionsubclass.Being)
14:19:28,195 DEBUG DotNode:389 - dereferenceEntityJoin() : generating join for owner in org.hibernate.test.unionsubclass.Thing (<no alias>) parent = [  ( . ( . thing0_.id owner ) identity ) ]
14:19:28,195 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Being (<no alias>) -> being2_
14:19:28,195 DEBUG FromClause:282 - addJoinByPathMap() : t.owner -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ),tableAlias=being2_,origin=things thing0_,columns={thing0_.owner ,className=org.hibernate.test.unionsubclass.Being}}
14:19:28,195 DEBUG FromElementFactory:257 - createEntityJoin() : Implied multi-table entity join
14:19:28,195 DEBUG FromReferenceNode:74 - Resolved : t.owner -> thing0_.owner
14:19:28,196 DEBUG DotNode:599 - getDataType() : identity -> org.hibernate.type.StringType@2dc8de40
14:19:28,196 DEBUG FromReferenceNode:74 - Resolved : t.owner.identity -> being2_.ident
14:19:28,196 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} thing0_.id ) ( FromClause{level=1} ( things thing0_ ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being1_ ) ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being2_ ) ( where ( = ( being2_.ident ( thing0_.owner thing0_.id owner ) identity ) 'gavin' ) ) )
14:19:28,196 DEBUG JoinProcessor:175 - Using FROM fragment [things thing0_]
14:19:28,196 DEBUG JoinProcessor:175 - Using FROM fragment [left outer join ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being1_ on thing0_.owner=being1_.bid]
14:19:28,197 DEBUG JoinProcessor:175 - Using FROM fragment [( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being2_]
14:19:28,197 DEBUG SyntheticAndFactory:92 - Using unprocessed WHERE-fragment [thing0_.owner=being2_.bid]
14:19:28,197 DEBUG SyntheticAndFactory:124 - Using processed WHERE-fragment [thing0_.owner=being2_.bid]
14:19:28,197 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Being,humans,things,aliens,employees)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'thing0_.id as id8_' {alias=t, className=org.hibernate.test.unionsubclass.Thing, tableAlias=thing0_}
    |  \-[SQL_TOKEN] SqlFragment: 'thing0_.description as descript2_8_, thing0_.owner as owner8_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[t], fromElementByTableAlias=[thing0_, being1_, being2_], fromElementsByPath=[t.owner], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'things thing0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=things,tableAlias=thing0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Thing}}
    |  |  \-[JOIN_FRAGMENT] FromElement: 'left outer join ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being1_ on thing0_.owner=being1_.bid' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ),tableAlias=being1_,origin=things thing0_,columns={thing0_.owner ,className=org.hibernate.test.unionsubclass.Being}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: '( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being2_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ),tableAlias=being2_,origin=things thing0_,columns={thing0_.owner ,className=org.hibernate.test.unionsubclass.Being}}
    \-[WHERE] SqlNode: 'where'
       +-[THETA_JOINS] SqlNode: '{theta joins}'
       |  \-[SQL_TOKEN] SqlFragment: 'thing0_.owner=being2_.bid'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'being2_.ident' {propertyName=identity,dereferenceType=ALL,propertyPath=identity,path=t.owner.identity,tableAlias=being2_,className=org.hibernate.test.unionsubclass.Being,classAlias=null}
          |  +-[DOT] DotNode: 'thing0_.owner' {propertyName=owner,dereferenceType=EOF,propertyPath=owner,path=t.owner,tableAlias=being2_,className=org.hibernate.test.unionsubclass.Being,classAlias=null}
          |  |  +-[ALIAS_REF] IdentNode: 'thing0_.id' {alias=t, className=org.hibernate.test.unionsubclass.Thing, tableAlias=thing0_}
          |  |  \-[IDENT] IdentNode: 'owner' {originalText=owner}
          |  \-[IDENT] IdentNode: 'identity' {originalText=identity}
          \-[QUOTED_STRING] LiteralNode: ''gavin''

14:19:28,197 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,197 DEBUG QueryTranslatorImpl:235 - HQL: select t from org.hibernate.test.unionsubclass.Thing t left join t.owner where t.owner.identity='gavin'
14:19:28,197 DEBUG QueryTranslatorImpl:236 - SQL: select thing0_.id as id8_, thing0_.description as descript2_8_, thing0_.owner as owner8_ from things thing0_ left outer join ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being1_ on thing0_.owner=being1_.bid cross join ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being2_ where thing0_.owner=being2_.bid and being2_.ident='gavin'
14:19:28,198 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,198 DEBUG SQL:104 - 
    select
        thing0_.id as id8_,
        thing0_.description as descript2_8_,
        thing0_.owner as owner8_ 
    from
        things thing0_ 
    left outer join
        (
            select
                bid,
                ident,
                location,
                sex,
                salary,
                null as species,
                null as hive,
                2 as clazz_ 
            from
                employees 
            union
            all select
                bid,
                ident,
                location,
                sex,
                null as salary,
                null as species,
                null as hive,
                1 as clazz_ 
            from
                humans 
            union
            all select
                bid,
                ident,
                location,
                null as sex,
                null as salary,
                species,
                hive,
                3 as clazz_ 
            from
                aliens 
        ) being1_ 
            on thing0_.owner=being1_.bid cross 
    join
        (
            select
                bid,
                ident,
                location,
                sex,
                salary,
                null as species,
                null as hive,
                2 as clazz_ 
            from
                employees 
            union
            all select
                bid,
                ident,
                location,
                sex,
                null as salary,
                null as species,
                null as hive,
                1 as clazz_ 
            from
                humans 
            union
            all select
                bid,
                ident,
                location,
                null as sex,
                null as salary,
                species,
                hive,
                3 as clazz_ 
            from
                aliens 
        ) being2_ 
    where
        thing0_.owner=being2_.bid 
        and being2_.ident='gavin'
14:19:28,255 DEBUG SQL:104 - 
    select
        being0_.bid as bid0_0_,
        being0_.ident as ident0_0_,
        being0_.location as location0_0_,
        being0_.sex as sex6_0_,
        being0_.salary as salary4_0_,
        being0_.species as species2_0_,
        being0_.hive as hive2_0_,
        being0_.clazz_ as clazz_0_ 
    from
        ( select
            bid,
            ident,
            location,
            sex,
            salary,
            null as species,
            null as hive,
            2 as clazz_ 
        from
            employees 
        union
        all select
            bid,
            ident,
            location,
            sex,
            null as salary,
            null as species,
            null as hive,
            1 as clazz_ 
        from
            humans 
        union
        all select
            bid,
            ident,
            location,
            null as sex,
            null as salary,
            species,
            hive,
            3 as clazz_ 
        from
            aliens 
    ) being0_ 
where
    being0_.bid=?
14:19:28,270 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.unionsubclass.Human h left join fetch h.things
14:19:28,271 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          +-[RANGE] Node: 'RANGE'
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[DOT] Node: '.'
          |  |  |  |  |  +-[IDENT] Node: 'org'
          |  |  |  |  |  \-[IDENT] Node: 'hibernate'
          |  |  |  |  \-[IDENT] Node: 'test'
          |  |  |  \-[IDENT] Node: 'unionsubclass'
          |  |  \-[IDENT] Node: 'Human'
          |  \-[ALIAS] Node: 'h'
          \-[JOIN] Node: 'join'
             +-[LEFT] Node: 'left'
             +-[FETCH] Node: 'fetch'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'h'
                \-[IDENT] Node: 'things'

14:19:28,283 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,284 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Human (h) -> human0_
14:19:28,284 DEBUG FromReferenceNode:74 - Resolved : h -> human0_.bid
14:19:28,284 DEBUG DotNode:599 - getDataType() : things -> org.hibernate.type.BagType(org.hibernate.test.unionsubclass.Being.things)
14:19:28,284 DEBUG FromElementFactory:376 - createEntityAssociation() : One to many - path = h.things role = org.hibernate.test.unionsubclass.Being.things associatedEntityName = org.hibernate.test.unionsubclass.Thing
14:19:28,285 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Thing (<no alias>) -> things1_
14:19:28,285 DEBUG FromClause:282 - addJoinByPathMap() : h.things -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=things,tableAlias=things1_,origin=( select bid, ident, location, sex, null as salary, 1 as clazz_ from humans union all select bid, ident, location, sex, salary, 2 as clazz_ from employees ) human0_,columns={human0_.bid ,className=org.hibernate.test.unionsubclass.Thing}}
14:19:28,285 DEBUG DotNode:308 - dereferenceCollection() : Created new FROM element for h.things : things things1_
14:19:28,285 DEBUG FromReferenceNode:74 - Resolved : h.things -> .
14:19:28,285 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'things things1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.unionsubclass.Being.things,tableName=things,tableAlias=things1_,origin=( select bid, ident, location, sex, null as salary, 1 as clazz_ from humans union all select bid, ident, location, sex, salary, 2 as clazz_ from employees ) human0_,columns={human0_.bid ,className=org.hibernate.test.unionsubclass.Thing}}

14:19:28,296 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} ( ( select bid, ident, location, sex, null as salary, 1 as clazz_ from humans union all select bid, ident, location, sex, salary, 2 as clazz_ from employees ) human0_ things things1_ ) ) )
14:19:28,297 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:28,297 DEBUG JoinProcessor:175 - Using FROM fragment [( select bid, ident, location, sex, null as salary, 1 as clazz_ from humans union all select bid, ident, location, sex, salary, 2 as clazz_ from employees ) human0_]
14:19:28,297 DEBUG JoinProcessor:175 - Using FROM fragment [left outer join things things1_ on human0_.bid=things1_.owner]
14:19:28,297 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (things,Being,humans,employees)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'human0_.bid as bid0_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=h,role=null,tableName=( select bid, ident, location, sex, null as salary, 1 as clazz_ from humans union all select bid, ident, location, sex, salary, 2 as clazz_ from employees ),tableAlias=human0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Human}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'things1_.id as id8_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.unionsubclass.Being.things,tableName=things,tableAlias=things1_,origin=( select bid, ident, location, sex, null as salary, 1 as clazz_ from humans union all select bid, ident, location, sex, salary, 2 as clazz_ from employees ) human0_,columns={human0_.bid ,className=org.hibernate.test.unionsubclass.Thing}}}
    |  +-[SQL_TOKEN] SqlFragment: 'human0_.ident as ident0_0_, human0_.location as location0_0_, human0_.sex as sex6_0_, human0_.salary as salary4_0_, human0_.clazz_ as clazz_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'things1_.description as descript2_8_1_, things1_.owner as owner8_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'things1_.owner as owner0_0__, things1_.id as id8_0__'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[h], fromElementByTableAlias=[human0_, things1_], fromElementsByPath=[h.things], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: '( select bid, ident, location, sex, null as salary, 1 as clazz_ from humans union all select bid, ident, location, sex, salary, 2 as clazz_ from employees ) human0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=h,role=null,tableName=( select bid, ident, location, sex, null as salary, 1 as clazz_ from humans union all select bid, ident, location, sex, salary, 2 as clazz_ from employees ),tableAlias=human0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Human}}
          \-[JOIN_FRAGMENT] FromElement: 'left outer join things things1_ on human0_.bid=things1_.owner' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.unionsubclass.Being.things,tableName=things,tableAlias=things1_,origin=( select bid, ident, location, sex, null as salary, 1 as clazz_ from humans union all select bid, ident, location, sex, salary, 2 as clazz_ from employees ) human0_,columns={human0_.bid ,className=org.hibernate.test.unionsubclass.Thing}}

14:19:28,297 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,298 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.unionsubclass.Human h left join fetch h.things
14:19:28,298 DEBUG QueryTranslatorImpl:236 - SQL: select human0_.bid as bid0_0_, things1_.id as id8_1_, human0_.ident as ident0_0_, human0_.location as location0_0_, human0_.sex as sex6_0_, human0_.salary as salary4_0_, human0_.clazz_ as clazz_0_, things1_.description as descript2_8_1_, things1_.owner as owner8_1_, things1_.owner as owner0_0__, things1_.id as id8_0__ from ( select bid, ident, location, sex, null as salary, 1 as clazz_ from humans union all select bid, ident, location, sex, salary, 2 as clazz_ from employees ) human0_ left outer join things things1_ on human0_.bid=things1_.owner
14:19:28,298 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,298 DEBUG SQL:104 - 
    select
        human0_.bid as bid0_0_,
        things1_.id as id8_1_,
        human0_.ident as ident0_0_,
        human0_.location as location0_0_,
        human0_.sex as sex6_0_,
        human0_.salary as salary4_0_,
        human0_.clazz_ as clazz_0_,
        things1_.description as descript2_8_1_,
        things1_.owner as owner8_1_,
        things1_.owner as owner0_0__,
        things1_.id as id8_0__ 
    from
        ( select
            bid,
            ident,
            location,
            sex,
            null as salary,
            1 as clazz_ 
        from
            humans 
        union
        all select
            bid,
            ident,
            location,
            sex,
            salary,
            2 as clazz_ 
        from
            employees 
    ) human0_ 
left outer join
    things things1_ 
        on human0_.bid=things1_.owner
14:19:28,310 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.unionsubclass.Being b left join fetch b.things
14:19:28,311 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          +-[RANGE] Node: 'RANGE'
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[DOT] Node: '.'
          |  |  |  |  |  +-[IDENT] Node: 'org'
          |  |  |  |  |  \-[IDENT] Node: 'hibernate'
          |  |  |  |  \-[IDENT] Node: 'test'
          |  |  |  \-[IDENT] Node: 'unionsubclass'
          |  |  \-[IDENT] Node: 'Being'
          |  \-[ALIAS] Node: 'b'
          \-[JOIN] Node: 'join'
             +-[LEFT] Node: 'left'
             +-[FETCH] Node: 'fetch'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'b'
                \-[IDENT] Node: 'things'

14:19:28,324 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,324 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Being (b) -> being0_
14:19:28,324 DEBUG FromReferenceNode:74 - Resolved : b -> being0_.bid
14:19:28,324 DEBUG DotNode:599 - getDataType() : things -> org.hibernate.type.BagType(org.hibernate.test.unionsubclass.Being.things)
14:19:28,325 DEBUG FromElementFactory:376 - createEntityAssociation() : One to many - path = b.things role = org.hibernate.test.unionsubclass.Being.things associatedEntityName = org.hibernate.test.unionsubclass.Thing
14:19:28,325 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Thing (<no alias>) -> things1_
14:19:28,325 DEBUG FromClause:282 - addJoinByPathMap() : b.things -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=things,tableAlias=things1_,origin=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_,columns={being0_.bid ,className=org.hibernate.test.unionsubclass.Thing}}
14:19:28,325 DEBUG DotNode:308 - dereferenceCollection() : Created new FROM element for b.things : things things1_
14:19:28,325 DEBUG FromReferenceNode:74 - Resolved : b.things -> .
14:19:28,325 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'things things1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.unionsubclass.Being.things,tableName=things,tableAlias=things1_,origin=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_,columns={being0_.bid ,className=org.hibernate.test.unionsubclass.Thing}}

14:19:28,325 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} ( ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_ things things1_ ) ) )
14:19:28,326 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:28,326 DEBUG JoinProcessor:175 - Using FROM fragment [( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_]
14:19:28,326 DEBUG JoinProcessor:175 - Using FROM fragment [left outer join things things1_ on being0_.bid=things1_.owner]
14:19:28,326 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (things,Being,humans,aliens,employees)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'being0_.bid as bid0_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ),tableAlias=being0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Being}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'things1_.id as id8_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.unionsubclass.Being.things,tableName=things,tableAlias=things1_,origin=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_,columns={being0_.bid ,className=org.hibernate.test.unionsubclass.Thing}}}
    |  +-[SQL_TOKEN] SqlFragment: 'being0_.ident as ident0_0_, being0_.location as location0_0_, being0_.sex as sex6_0_, being0_.salary as salary4_0_, being0_.species as species2_0_, being0_.hive as hive2_0_, being0_.clazz_ as clazz_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'things1_.description as descript2_8_1_, things1_.owner as owner8_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'things1_.owner as owner0_0__, things1_.id as id8_0__'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[b], fromElementByTableAlias=[things1_, being0_], fromElementsByPath=[b.things], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: '( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ),tableAlias=being0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Being}}
          \-[JOIN_FRAGMENT] FromElement: 'left outer join things things1_ on being0_.bid=things1_.owner' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.unionsubclass.Being.things,tableName=things,tableAlias=things1_,origin=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_,columns={being0_.bid ,className=org.hibernate.test.unionsubclass.Thing}}

14:19:28,326 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,326 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.unionsubclass.Being b left join fetch b.things
14:19:28,326 DEBUG QueryTranslatorImpl:236 - SQL: select being0_.bid as bid0_0_, things1_.id as id8_1_, being0_.ident as ident0_0_, being0_.location as location0_0_, being0_.sex as sex6_0_, being0_.salary as salary4_0_, being0_.species as species2_0_, being0_.hive as hive2_0_, being0_.clazz_ as clazz_0_, things1_.description as descript2_8_1_, things1_.owner as owner8_1_, things1_.owner as owner0_0__, things1_.id as id8_0__ from ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_ left outer join things things1_ on being0_.bid=things1_.owner
14:19:28,327 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,327 DEBUG SQL:104 - 
    select
        being0_.bid as bid0_0_,
        things1_.id as id8_1_,
        being0_.ident as ident0_0_,
        being0_.location as location0_0_,
        being0_.sex as sex6_0_,
        being0_.salary as salary4_0_,
        being0_.species as species2_0_,
        being0_.hive as hive2_0_,
        being0_.clazz_ as clazz_0_,
        things1_.description as descript2_8_1_,
        things1_.owner as owner8_1_,
        things1_.owner as owner0_0__,
        things1_.id as id8_0__ 
    from
        ( select
            bid,
            ident,
            location,
            sex,
            salary,
            null as species,
            null as hive,
            2 as clazz_ 
        from
            employees 
        union
        all select
            bid,
            ident,
            location,
            sex,
            null as salary,
            null as species,
            null as hive,
            1 as clazz_ 
        from
            humans 
        union
        all select
            bid,
            ident,
            location,
            null as sex,
            null as salary,
            species,
            hive,
            3 as clazz_ 
        from
            aliens 
    ) being0_ 
left outer join
    things things1_ 
        on being0_.bid=things1_.owner
14:19:28,358 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.unionsubclass.Being b join fetch b.things
14:19:28,359 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          +-[RANGE] Node: 'RANGE'
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[DOT] Node: '.'
          |  |  |  |  |  +-[IDENT] Node: 'org'
          |  |  |  |  |  \-[IDENT] Node: 'hibernate'
          |  |  |  |  \-[IDENT] Node: 'test'
          |  |  |  \-[IDENT] Node: 'unionsubclass'
          |  |  \-[IDENT] Node: 'Being'
          |  \-[ALIAS] Node: 'b'
          \-[JOIN] Node: 'join'
             +-[FETCH] Node: 'fetch'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'b'
                \-[IDENT] Node: 'things'

14:19:28,359 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,359 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Being (b) -> being0_
14:19:28,359 DEBUG FromReferenceNode:74 - Resolved : b -> being0_.bid
14:19:28,359 DEBUG DotNode:599 - getDataType() : things -> org.hibernate.type.BagType(org.hibernate.test.unionsubclass.Being.things)
14:19:28,360 DEBUG FromElementFactory:376 - createEntityAssociation() : One to many - path = b.things role = org.hibernate.test.unionsubclass.Being.things associatedEntityName = org.hibernate.test.unionsubclass.Thing
14:19:28,360 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Thing (<no alias>) -> things1_
14:19:28,360 DEBUG FromClause:282 - addJoinByPathMap() : b.things -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=things,tableAlias=things1_,origin=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_,columns={being0_.bid ,className=org.hibernate.test.unionsubclass.Thing}}
14:19:28,360 DEBUG DotNode:308 - dereferenceCollection() : Created new FROM element for b.things : things things1_
14:19:28,384 DEBUG FromReferenceNode:74 - Resolved : b.things -> .
14:19:28,385 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'things things1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.unionsubclass.Being.things,tableName=things,tableAlias=things1_,origin=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_,columns={being0_.bid ,className=org.hibernate.test.unionsubclass.Thing}}

14:19:28,385 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} ( ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_ things things1_ ) ) )
14:19:28,385 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:28,385 DEBUG JoinProcessor:175 - Using FROM fragment [( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_]
14:19:28,386 DEBUG JoinProcessor:175 - Using FROM fragment [inner join things things1_ on being0_.bid=things1_.owner]
14:19:28,386 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (things,Being,humans,aliens,employees)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'being0_.bid as bid0_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ),tableAlias=being0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Being}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'things1_.id as id8_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.unionsubclass.Being.things,tableName=things,tableAlias=things1_,origin=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_,columns={being0_.bid ,className=org.hibernate.test.unionsubclass.Thing}}}
    |  +-[SQL_TOKEN] SqlFragment: 'being0_.ident as ident0_0_, being0_.location as location0_0_, being0_.sex as sex6_0_, being0_.salary as salary4_0_, being0_.species as species2_0_, being0_.hive as hive2_0_, being0_.clazz_ as clazz_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'things1_.description as descript2_8_1_, things1_.owner as owner8_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'things1_.owner as owner0_0__, things1_.id as id8_0__'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[b], fromElementByTableAlias=[things1_, being0_], fromElementsByPath=[b.things], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: '( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ),tableAlias=being0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Being}}
          \-[JOIN_FRAGMENT] FromElement: 'inner join things things1_ on being0_.bid=things1_.owner' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.unionsubclass.Being.things,tableName=things,tableAlias=things1_,origin=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_,columns={being0_.bid ,className=org.hibernate.test.unionsubclass.Thing}}

14:19:28,386 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,386 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.unionsubclass.Being b join fetch b.things
14:19:28,386 DEBUG QueryTranslatorImpl:236 - SQL: select being0_.bid as bid0_0_, things1_.id as id8_1_, being0_.ident as ident0_0_, being0_.location as location0_0_, being0_.sex as sex6_0_, being0_.salary as salary4_0_, being0_.species as species2_0_, being0_.hive as hive2_0_, being0_.clazz_ as clazz_0_, things1_.description as descript2_8_1_, things1_.owner as owner8_1_, things1_.owner as owner0_0__, things1_.id as id8_0__ from ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_ inner join things things1_ on being0_.bid=things1_.owner
14:19:28,386 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,387 DEBUG SQL:104 - 
    select
        being0_.bid as bid0_0_,
        things1_.id as id8_1_,
        being0_.ident as ident0_0_,
        being0_.location as location0_0_,
        being0_.sex as sex6_0_,
        being0_.salary as salary4_0_,
        being0_.species as species2_0_,
        being0_.hive as hive2_0_,
        being0_.clazz_ as clazz_0_,
        things1_.description as descript2_8_1_,
        things1_.owner as owner8_1_,
        things1_.owner as owner0_0__,
        things1_.id as id8_0__ 
    from
        ( select
            bid,
            ident,
            location,
            sex,
            salary,
            null as species,
            null as hive,
            2 as clazz_ 
        from
            employees 
        union
        all select
            bid,
            ident,
            location,
            sex,
            null as salary,
            null as species,
            null as hive,
            1 as clazz_ 
        from
            humans 
        union
        all select
            bid,
            ident,
            location,
            null as sex,
            null as salary,
            species,
            hive,
            3 as clazz_ 
        from
            aliens 
    ) being0_ 
inner join
    things things1_ 
        on being0_.bid=things1_.owner
14:19:28,411 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select h from org.hibernate.test.unionsubclass.Human h join h.things t where t.description='some thing'
14:19:28,412 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |  |  |  |  |  \-[IDENT] Node: 'test'
    |  |  |  |  |  \-[IDENT] Node: 'unionsubclass'
    |  |  |  |  \-[IDENT] Node: 'Human'
    |  |  |  \-[ALIAS] Node: 'h'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'h'
    |  |     |  \-[IDENT] Node: 'things'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'h'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 't'
          |  \-[IDENT] Node: 'description'
          \-[QUOTED_STRING] Node: ''some thing''

14:19:28,421 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,421 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Human (h) -> human0_
14:19:28,422 DEBUG FromReferenceNode:74 - Resolved : h -> human0_.bid
14:19:28,422 DEBUG DotNode:599 - getDataType() : things -> org.hibernate.type.BagType(org.hibernate.test.unionsubclass.Being.things)
14:19:28,422 DEBUG FromElementFactory:376 - createEntityAssociation() : One to many - path = h.things role = org.hibernate.test.unionsubclass.Being.things associatedEntityName = org.hibernate.test.unionsubclass.Thing
14:19:28,422 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Thing (t) -> things1_
14:19:28,422 DEBUG FromClause:282 - addJoinByPathMap() : h.things -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=things,tableAlias=things1_,origin=( select bid, ident, location, sex, null as salary, 1 as clazz_ from humans union all select bid, ident, location, sex, salary, 2 as clazz_ from employees ) human0_,columns={human0_.bid ,className=org.hibernate.test.unionsubclass.Thing}}
14:19:28,422 DEBUG DotNode:308 - dereferenceCollection() : Created new FROM element for h.things : things things1_
14:19:28,422 DEBUG FromReferenceNode:74 - Resolved : h.things -> .
14:19:28,422 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'things things1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=org.hibernate.test.unionsubclass.Being.things,tableName=things,tableAlias=things1_,origin=( select bid, ident, location, sex, null as salary, 1 as clazz_ from humans union all select bid, ident, location, sex, salary, 2 as clazz_ from employees ) human0_,columns={human0_.bid ,className=org.hibernate.test.unionsubclass.Thing}}

14:19:28,434 DEBUG FromReferenceNode:74 - Resolved : h -> human0_.bid
14:19:28,434 DEBUG FromReferenceNode:74 - Resolved : t -> things1_.id
14:19:28,434 DEBUG DotNode:599 - getDataType() : description -> org.hibernate.type.StringType@2dc8de40
14:19:28,435 DEBUG FromReferenceNode:74 - Resolved : t.description -> things1_.description
14:19:28,435 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} human0_.bid ) ( FromClause{level=1} ( ( select bid, ident, location, sex, null as salary, 1 as clazz_ from humans union all select bid, ident, location, sex, salary, 2 as clazz_ from employees ) human0_ things things1_ ) ) ( where ( = ( things1_.description things1_.id description ) 'some thing' ) ) )
14:19:28,435 DEBUG JoinProcessor:175 - Using FROM fragment [( select bid, ident, location, sex, null as salary, 1 as clazz_ from humans union all select bid, ident, location, sex, salary, 2 as clazz_ from employees ) human0_]
14:19:28,435 DEBUG JoinProcessor:175 - Using FROM fragment [inner join things things1_ on human0_.bid=things1_.owner]
14:19:28,435 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (things,Being,humans,employees)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'human0_.bid as bid0_' {alias=h, className=org.hibernate.test.unionsubclass.Human, tableAlias=human0_}
    |  \-[SQL_TOKEN] SqlFragment: 'human0_.ident as ident0_, human0_.location as location0_, human0_.sex as sex6_, human0_.salary as salary4_, human0_.clazz_ as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[t, h], fromElementByTableAlias=[human0_, things1_], fromElementsByPath=[h.things], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: '( select bid, ident, location, sex, null as salary, 1 as clazz_ from humans union all select bid, ident, location, sex, salary, 2 as clazz_ from employees ) human0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=h,role=null,tableName=( select bid, ident, location, sex, null as salary, 1 as clazz_ from humans union all select bid, ident, location, sex, salary, 2 as clazz_ from employees ),tableAlias=human0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Human}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join things things1_ on human0_.bid=things1_.owner' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=org.hibernate.test.unionsubclass.Being.things,tableName=things,tableAlias=things1_,origin=( select bid, ident, location, sex, null as salary, 1 as clazz_ from humans union all select bid, ident, location, sex, salary, 2 as clazz_ from employees ) human0_,columns={human0_.bid ,className=org.hibernate.test.unionsubclass.Thing}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'things1_.description' {propertyName=description,dereferenceType=ALL,propertyPath=description,path=t.description,tableAlias=things1_,className=org.hibernate.test.unionsubclass.Thing,classAlias=t}
          |  +-[ALIAS_REF] IdentNode: 'things1_.id' {alias=t, className=org.hibernate.test.unionsubclass.Thing, tableAlias=things1_}
          |  \-[IDENT] IdentNode: 'description' {originalText=description}
          \-[QUOTED_STRING] LiteralNode: ''some thing''

14:19:28,435 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,436 DEBUG QueryTranslatorImpl:235 - HQL: select h from org.hibernate.test.unionsubclass.Human h join h.things t where t.description='some thing'
14:19:28,436 DEBUG QueryTranslatorImpl:236 - SQL: select human0_.bid as bid0_, human0_.ident as ident0_, human0_.location as location0_, human0_.sex as sex6_, human0_.salary as salary4_, human0_.clazz_ as clazz_ from ( select bid, ident, location, sex, null as salary, 1 as clazz_ from humans union all select bid, ident, location, sex, salary, 2 as clazz_ from employees ) human0_ inner join things things1_ on human0_.bid=things1_.owner where things1_.description='some thing'
14:19:28,436 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,436 DEBUG SQL:104 - 
    select
        human0_.bid as bid0_,
        human0_.ident as ident0_,
        human0_.location as location0_,
        human0_.sex as sex6_,
        human0_.salary as salary4_,
        human0_.clazz_ as clazz_ 
    from
        ( select
            bid,
            ident,
            location,
            sex,
            null as salary,
            1 as clazz_ 
        from
            humans 
        union
        all select
            bid,
            ident,
            location,
            sex,
            salary,
            2 as clazz_ 
        from
            employees 
    ) human0_ 
inner join
    things things1_ 
        on human0_.bid=things1_.owner 
where
    things1_.description='some thing'
14:19:28,447 DEBUG SQL:104 - 
    select
        things0_.owner as owner0_1_,
        things0_.id as id8_1_,
        things0_.id as id8_0_,
        things0_.description as descript2_8_0_,
        things0_.owner as owner8_0_ 
    from
        things things0_ 
    where
        things0_.owner=?
14:19:28,499 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select b from org.hibernate.test.unionsubclass.Being b join b.things t where t.description='some thing'
14:19:28,501 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |  |  |  |  |  \-[IDENT] Node: 'test'
    |  |  |  |  |  \-[IDENT] Node: 'unionsubclass'
    |  |  |  |  \-[IDENT] Node: 'Being'
    |  |  |  \-[ALIAS] Node: 'b'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'b'
    |  |     |  \-[IDENT] Node: 'things'
    |  |     \-[ALIAS] Node: 't'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'b'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 't'
          |  \-[IDENT] Node: 'description'
          \-[QUOTED_STRING] Node: ''some thing''

14:19:28,501 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,502 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Being (b) -> being0_
14:19:28,502 DEBUG FromReferenceNode:74 - Resolved : b -> being0_.bid
14:19:28,502 DEBUG DotNode:599 - getDataType() : things -> org.hibernate.type.BagType(org.hibernate.test.unionsubclass.Being.things)
14:19:28,502 DEBUG FromElementFactory:376 - createEntityAssociation() : One to many - path = b.things role = org.hibernate.test.unionsubclass.Being.things associatedEntityName = org.hibernate.test.unionsubclass.Thing
14:19:28,502 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Thing (t) -> things1_
14:19:28,502 DEBUG FromClause:282 - addJoinByPathMap() : b.things -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=null,tableName=things,tableAlias=things1_,origin=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_,columns={being0_.bid ,className=org.hibernate.test.unionsubclass.Thing}}
14:19:28,503 DEBUG DotNode:308 - dereferenceCollection() : Created new FROM element for b.things : things things1_
14:19:28,503 DEBUG FromReferenceNode:74 - Resolved : b.things -> .
14:19:28,503 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'things things1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=org.hibernate.test.unionsubclass.Being.things,tableName=things,tableAlias=things1_,origin=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_,columns={being0_.bid ,className=org.hibernate.test.unionsubclass.Thing}}

14:19:28,503 DEBUG FromReferenceNode:74 - Resolved : b -> being0_.bid
14:19:28,503 DEBUG FromReferenceNode:74 - Resolved : t -> things1_.id
14:19:28,503 DEBUG DotNode:599 - getDataType() : description -> org.hibernate.type.StringType@2dc8de40
14:19:28,503 DEBUG FromReferenceNode:74 - Resolved : t.description -> things1_.description
14:19:28,504 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} being0_.bid ) ( FromClause{level=1} ( ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_ things things1_ ) ) ( where ( = ( things1_.description things1_.id description ) 'some thing' ) ) )
14:19:28,504 DEBUG JoinProcessor:175 - Using FROM fragment [( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_]
14:19:28,504 DEBUG JoinProcessor:175 - Using FROM fragment [inner join things things1_ on being0_.bid=things1_.owner]
14:19:28,504 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (things,Being,humans,aliens,employees)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'being0_.bid as bid0_' {alias=b, className=org.hibernate.test.unionsubclass.Being, tableAlias=being0_}
    |  \-[SQL_TOKEN] SqlFragment: 'being0_.ident as ident0_, being0_.location as location0_, being0_.sex as sex6_, being0_.salary as salary4_, being0_.species as species2_, being0_.hive as hive2_, being0_.clazz_ as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[t, b], fromElementByTableAlias=[things1_, being0_], fromElementsByPath=[b.things], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: '( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=b,role=null,tableName=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ),tableAlias=being0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Being}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join things things1_ on being0_.bid=things1_.owner' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=t,role=org.hibernate.test.unionsubclass.Being.things,tableName=things,tableAlias=things1_,origin=( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_,columns={being0_.bid ,className=org.hibernate.test.unionsubclass.Thing}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'things1_.description' {propertyName=description,dereferenceType=ALL,propertyPath=description,path=t.description,tableAlias=things1_,className=org.hibernate.test.unionsubclass.Thing,classAlias=t}
          |  +-[ALIAS_REF] IdentNode: 'things1_.id' {alias=t, className=org.hibernate.test.unionsubclass.Thing, tableAlias=things1_}
          |  \-[IDENT] IdentNode: 'description' {originalText=description}
          \-[QUOTED_STRING] LiteralNode: ''some thing''

14:19:28,504 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,504 DEBUG QueryTranslatorImpl:235 - HQL: select b from org.hibernate.test.unionsubclass.Being b join b.things t where t.description='some thing'
14:19:28,504 DEBUG QueryTranslatorImpl:236 - SQL: select being0_.bid as bid0_, being0_.ident as ident0_, being0_.location as location0_, being0_.sex as sex6_, being0_.salary as salary4_, being0_.species as species2_, being0_.hive as hive2_, being0_.clazz_ as clazz_ from ( select bid, ident, location, sex, salary, null as species, null as hive, 2 as clazz_ from employees union all select bid, ident, location, sex, null as salary, null as species, null as hive, 1 as clazz_ from humans union all select bid, ident, location, null as sex, null as salary, species, hive, 3 as clazz_ from aliens ) being0_ inner join things things1_ on being0_.bid=things1_.owner where things1_.description='some thing'
14:19:28,505 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,505 DEBUG SQL:104 - 
    select
        being0_.bid as bid0_,
        being0_.ident as ident0_,
        being0_.location as location0_,
        being0_.sex as sex6_,
        being0_.salary as salary4_,
        being0_.species as species2_,
        being0_.hive as hive2_,
        being0_.clazz_ as clazz_ 
    from
        ( select
            bid,
            ident,
            location,
            sex,
            salary,
            null as species,
            null as hive,
            2 as clazz_ 
        from
            employees 
        union
        all select
            bid,
            ident,
            location,
            sex,
            null as salary,
            null as species,
            null as hive,
            1 as clazz_ 
        from
            humans 
        union
        all select
            bid,
            ident,
            location,
            null as sex,
            null as salary,
            species,
            hive,
            3 as clazz_ 
        from
            aliens 
    ) being0_ 
inner join
    things things1_ 
        on being0_.bid=things1_.owner 
where
    things1_.description='some thing'
14:19:28,507 DEBUG SQL:104 - 
    select
        things0_.owner as owner0_1_,
        things0_.id as id8_1_,
        things0_.id as id8_0_,
        things0_.description as descript2_8_0_,
        things0_.owner as owner8_0_ 
    from
        things things0_ 
    where
        things0_.owner=?
14:19:28,508 DEBUG SQL:104 - 
    select
        thing0_.id as id8_0_,
        thing0_.description as descript2_8_0_,
        thing0_.owner as owner8_0_ 
    from
        things thing0_ 
    where
        thing0_.id=?
14:19:28,531 DEBUG SQL:104 - 
    select
        being0_.bid as bid0_0_,
        being0_.ident as ident0_0_,
        being0_.location as location0_0_,
        being0_.sex as sex6_0_,
        being0_.salary as salary4_0_,
        being0_.species as species2_0_,
        being0_.hive as hive2_0_,
        being0_.clazz_ as clazz_0_ 
    from
        ( select
            bid,
            ident,
            location,
            sex,
            salary,
            null as species,
            null as hive,
            2 as clazz_ 
        from
            employees 
        union
        all select
            bid,
            ident,
            location,
            sex,
            null as salary,
            null as species,
            null as hive,
            1 as clazz_ 
        from
            humans 
        union
        all select
            bid,
            ident,
            location,
            null as sex,
            null as salary,
            species,
            hive,
            3 as clazz_ 
        from
            aliens 
    ) being0_ 
where
    being0_.bid=?
14:19:28,547 DEBUG SQL:104 - 
    select
        things0_.owner as owner0_1_,
        things0_.id as id8_1_,
        things0_.id as id8_0_,
        things0_.description as descript2_8_0_,
        things0_.owner as owner8_0_ 
    from
        things things0_ 
    where
        things0_.owner=?
14:19:28,559 DEBUG SQL:104 - 
    update
        things 
    set
        description=?,
        owner=? 
    where
        id=?
14:19:28,559 DEBUG SQL:104 - 
    select
        thing0_.id as id8_0_,
        thing0_.description as descript2_8_0_,
        thing0_.owner as owner8_0_ 
    from
        things thing0_ 
    where
        thing0_.id=?
14:19:28,560 DEBUG SQL:104 - 
    select
        being0_.bid as bid0_0_,
        being0_.ident as ident0_0_,
        being0_.location as location0_0_,
        being0_.sex as sex6_0_,
        being0_.salary as salary4_0_,
        being0_.species as species2_0_,
        being0_.hive as hive2_0_,
        being0_.clazz_ as clazz_0_ 
    from
        ( select
            bid,
            ident,
            location,
            sex,
            salary,
            null as species,
            null as hive,
            2 as clazz_ 
        from
            employees 
        union
        all select
            bid,
            ident,
            location,
            sex,
            null as salary,
            null as species,
            null as hive,
            1 as clazz_ 
        from
            humans 
        union
        all select
            bid,
            ident,
            location,
            null as sex,
            null as salary,
            species,
            hive,
            3 as clazz_ 
        from
            aliens 
    ) being0_ 
where
    being0_.bid=?
14:19:28,586 DEBUG SQL:104 - 
    select
        this_.bid as bid0_0_,
        this_.ident as ident0_0_,
        this_.location as location0_0_,
        this_.species as species2_0_,
        this_.hive as hive2_0_ 
    from
        aliens this_
14:19:28,587  WARN StatefulPersistenceContext:716 - HHH000179: Narrowing proxy to class org.hibernate.test.unionsubclass.Alien - this operation breaks ==
14:19:28,600 DEBUG SQL:104 - 
    select
        hive0_.id as id5_0_,
        hive0_.location as location5_0_ 
    from
        hives hive0_ 
    where
        hive0_.id=?
14:19:28,604 DEBUG SQL:104 - 
    select
        members0_.hive as hive5_1_,
        members0_.bid as bid2_1_,
        members0_.bid as bid0_0_,
        members0_.ident as ident0_0_,
        members0_.location as location0_0_,
        members0_.species as species2_0_,
        members0_.hive as hive2_0_ 
    from
        aliens members0_ 
    where
        members0_.hive=?
14:19:28,606 DEBUG SQL:104 - 
    select
        location0_.id as id7_0_,
        location0_.name as name7_0_ 
    from
        locations location0_ 
    where
        location0_.id=?
14:19:28,607 DEBUG SQL:104 - 
    select
        beings0_.location as location7_1_,
        beings0_.bid as bid0_1_,
        beings0_.bid as bid0_0_,
        beings0_.ident as ident0_0_,
        beings0_.location as location0_0_,
        beings0_.sex as sex6_0_,
        beings0_.salary as salary4_0_,
        beings0_.species as species2_0_,
        beings0_.hive as hive2_0_,
        beings0_.clazz_ as clazz_0_ 
    from
        ( select
            bid,
            ident,
            location,
            sex,
            salary,
            null as species,
            null as hive,
            2 as clazz_ 
        from
            employees 
        union
        all select
            bid,
            ident,
            location,
            sex,
            null as salary,
            null as species,
            null as hive,
            1 as clazz_ 
        from
            humans 
        union
        all select
            bid,
            ident,
            location,
            null as sex,
            null as salary,
            species,
            hive,
            3 as clazz_ 
        from
            aliens 
    ) beings0_ 
where
    beings0_.location=?
14:19:28,623 DEBUG SQL:104 - 
    select
        location0_.id as id7_0_,
        location0_.name as name7_0_ 
    from
        locations location0_ 
    where
        location0_.id=?
14:19:28,624 DEBUG SQL:104 - 
    select
        beings0_.location as location7_1_,
        beings0_.bid as bid0_1_,
        beings0_.bid as bid0_0_,
        beings0_.ident as ident0_0_,
        beings0_.location as location0_0_,
        beings0_.sex as sex6_0_,
        beings0_.salary as salary4_0_,
        beings0_.species as species2_0_,
        beings0_.hive as hive2_0_,
        beings0_.clazz_ as clazz_0_ 
    from
        ( select
            bid,
            ident,
            location,
            sex,
            salary,
            null as species,
            null as hive,
            2 as clazz_ 
        from
            employees 
        union
        all select
            bid,
            ident,
            location,
            sex,
            null as salary,
            null as species,
            null as hive,
            1 as clazz_ 
        from
            humans 
        union
        all select
            bid,
            ident,
            location,
            null as sex,
            null as salary,
            species,
            hive,
            3 as clazz_ 
        from
            aliens 
    ) beings0_ 
where
    beings0_.location=?
14:19:28,664 DEBUG SQL:104 - 
    delete 
    from
        Being_info 
    where
        bid=?
14:19:28,664 DEBUG SQL:104 - 
    delete 
    from
        aliens_hivemates 
    where
        alien1=?
14:19:28,665 DEBUG SQL:104 - 
    delete 
    from
        Being_info 
    where
        bid=?
14:19:28,665 DEBUG SQL:104 - 
    delete 
    from
        things 
    where
        id=?
14:19:28,674 DEBUG SQL:104 - 
    delete 
    from
        aliens 
    where
        bid=?
14:19:28,674 DEBUG SQL:104 - 
    delete 
    from
        hives 
    where
        id=?
14:19:28,674 DEBUG SQL:104 - 
    delete 
    from
        humans 
    where
        bid=?
14:19:28,675 DEBUG SQL:104 - 
    delete 
    from
        locations 
    where
        id=?
14:19:28,675 DEBUG SQL:104 - 
    delete 
    from
        locations 
    where
        id=?
14:19:28,684 DEBUG SQL:104 - 
    select
        being0_.bid as bid0_,
        being0_.ident as ident0_,
        being0_.location as location0_,
        being0_.sex as sex6_,
        being0_.salary as salary4_,
        being0_.species as species2_,
        being0_.hive as hive2_,
        being0_.clazz_ as clazz_ 
    from
        ( select
            bid,
            ident,
            location,
            sex,
            salary,
            null as species,
            null as hive,
            2 as clazz_ 
        from
            employees 
        union
        all select
            bid,
            ident,
            location,
            sex,
            null as salary,
            null as species,
            null as hive,
            1 as clazz_ 
        from
            humans 
        union
        all select
            bid,
            ident,
            location,
            null as sex,
            null as salary,
            species,
            hive,
            3 as clazz_ 
        from
            aliens 
    ) being0_
14:19:28,695  INFO CustomRunner:139 - Test: testUnionSubclassOneToMany
14:19:28,697 DEBUG SQL:104 - 
    insert 
    into
        locations
        (name, id) 
    values
        (?, ?)
14:19:28,703 DEBUG SQL:104 - 
    insert 
    into
        locations
        (name, id) 
    values
        (?, ?)
14:19:28,703 DEBUG SQL:104 - 
    insert 
    into
        hives
        (location, id) 
    values
        (?, ?)
14:19:28,703 DEBUG SQL:104 - 
    insert 
    into
        aliens
        (ident, location, species, hive, bid) 
    values
        (?, ?, ?, ?, ?)
14:19:28,703 DEBUG SQL:104 - 
    insert 
    into
        aliens
        (ident, location, species, hive, bid) 
    values
        (?, ?, ?, ?, ?)
14:19:28,713 DEBUG SQL:104 - 
    insert 
    into
        humans
        (ident, location, sex, bid) 
    values
        (?, ?, ?, ?)
14:19:28,713 DEBUG SQL:104 - 
    insert 
    into
        aliens_hivemates
        (alien1, alien2) 
    values
        (?, ?)
14:19:28,714 DEBUG SQL:104 - 
    insert 
    into
        aliens_hivemates
        (alien1, alien2) 
    values
        (?, ?)
14:19:28,714 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.unionsubclass.Hive h
14:19:28,715 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[IDENT] Node: 'org'
             |  |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  |  \-[IDENT] Node: 'test'
             |  |  \-[IDENT] Node: 'unionsubclass'
             |  \-[IDENT] Node: 'Hive'
             \-[ALIAS] Node: 'h'

14:19:28,724 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,724 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Hive (h) -> hive0_
14:19:28,724 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} hives hive0_ ) )
14:19:28,724 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:28,725 DEBUG JoinProcessor:175 - Using FROM fragment [hives hive0_]
14:19:28,725 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (hives)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'hive0_.id as id5_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=h,role=null,tableName=hives,tableAlias=hive0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Hive}}}
    |  \-[SQL_TOKEN] SqlFragment: 'hive0_.location as location5_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[h], fromElementByTableAlias=[hive0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'hives hive0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=h,role=null,tableName=hives,tableAlias=hive0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Hive}}

14:19:28,725 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,725 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.unionsubclass.Hive h
14:19:28,725 DEBUG QueryTranslatorImpl:236 - SQL: select hive0_.id as id5_, hive0_.location as location5_ from hives hive0_
14:19:28,725 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,725 DEBUG SQL:104 - 
    select
        hive0_.id as id5_,
        hive0_.location as location5_ 
    from
        hives hive0_
14:19:28,726 DEBUG SQL:104 - 
    select
        members0_.hive as hive5_1_,
        members0_.bid as bid2_1_,
        members0_.bid as bid0_0_,
        members0_.ident as ident0_0_,
        members0_.location as location0_0_,
        members0_.species as species2_0_,
        members0_.hive as hive2_0_ 
    from
        aliens members0_ 
    where
        members0_.hive=?
14:19:28,727 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.unionsubclass.Hive h left join fetch h.location left join fetch h.members
14:19:28,728 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          +-[RANGE] Node: 'RANGE'
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[DOT] Node: '.'
          |  |  |  |  |  +-[IDENT] Node: 'org'
          |  |  |  |  |  \-[IDENT] Node: 'hibernate'
          |  |  |  |  \-[IDENT] Node: 'test'
          |  |  |  \-[IDENT] Node: 'unionsubclass'
          |  |  \-[IDENT] Node: 'Hive'
          |  \-[ALIAS] Node: 'h'
          +-[JOIN] Node: 'join'
          |  +-[LEFT] Node: 'left'
          |  +-[FETCH] Node: 'fetch'
          |  \-[DOT] Node: '.'
          |     +-[IDENT] Node: 'h'
          |     \-[IDENT] Node: 'location'
          \-[JOIN] Node: 'join'
             +-[LEFT] Node: 'left'
             +-[FETCH] Node: 'fetch'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'h'
                \-[IDENT] Node: 'members'

14:19:28,738 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,738 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Hive (h) -> hive0_
14:19:28,738 DEBUG FromReferenceNode:74 - Resolved : h -> hive0_.id
14:19:28,738 DEBUG DotNode:599 - getDataType() : location -> org.hibernate.type.ManyToOneType(org.hibernate.test.unionsubclass.Location)
14:19:28,738 DEBUG DotNode:389 - dereferenceEntityJoin() : generating join for location in org.hibernate.test.unionsubclass.Hive (<no alias>) parent = [ {null} ]
14:19:28,739 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Location (<no alias>) -> location1_
14:19:28,739 DEBUG FromClause:282 - addJoinByPathMap() : h.location -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=locations,tableAlias=location1_,origin=hives hive0_,columns={hive0_.location ,className=org.hibernate.test.unionsubclass.Location}}
14:19:28,739 DEBUG FromReferenceNode:74 - Resolved : h.location -> hive0_.location
14:19:28,739 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'locations location1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=locations,tableAlias=location1_,origin=hives hive0_,columns={hive0_.location ,className=org.hibernate.test.unionsubclass.Location}}

14:19:28,747 DEBUG FromReferenceNode:74 - Resolved : h -> hive0_.id
14:19:28,748 DEBUG DotNode:599 - getDataType() : members -> org.hibernate.type.BagType(org.hibernate.test.unionsubclass.Hive.members)
14:19:28,748 DEBUG FromElementFactory:376 - createEntityAssociation() : One to many - path = h.members role = org.hibernate.test.unionsubclass.Hive.members associatedEntityName = org.hibernate.test.unionsubclass.Alien
14:19:28,748 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Alien (<no alias>) -> members2_
14:19:28,748 DEBUG FromClause:282 - addJoinByPathMap() : h.members -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=aliens,tableAlias=members2_,origin=hives hive0_,columns={hive0_.id ,className=org.hibernate.test.unionsubclass.Alien}}
14:19:28,748 DEBUG DotNode:308 - dereferenceCollection() : Created new FROM element for h.members : aliens members2_
14:19:28,748 DEBUG FromReferenceNode:74 - Resolved : h.members -> .
14:19:28,748 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'aliens members2_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.unionsubclass.Hive.members,tableName=aliens,tableAlias=members2_,origin=hives hive0_,columns={hive0_.id ,className=org.hibernate.test.unionsubclass.Alien}}

14:19:28,748 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} ( hives hive0_ locations location1_ aliens members2_ ) ) )
14:19:28,749 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:28,749 DEBUG JoinProcessor:175 - Using FROM fragment [hives hive0_]
14:19:28,749 DEBUG JoinProcessor:175 - Using FROM fragment [left outer join locations location1_ on hive0_.location=location1_.id]
14:19:28,749 DEBUG JoinProcessor:175 - Using FROM fragment [left outer join aliens members2_ on hive0_.id=members2_.hive]
14:19:28,749 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (hives,locations,Being,aliens)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'hive0_.id as id5_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=h,role=null,tableName=hives,tableAlias=hive0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Hive}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'location1_.id as id7_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=locations,tableAlias=location1_,origin=hives hive0_,columns={hive0_.location ,className=org.hibernate.test.unionsubclass.Location}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'members2_.bid as bid0_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.unionsubclass.Hive.members,tableName=aliens,tableAlias=members2_,origin=hives hive0_,columns={hive0_.id ,className=org.hibernate.test.unionsubclass.Alien}}}
    |  +-[SQL_TOKEN] SqlFragment: 'hive0_.location as location5_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'location1_.name as name7_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'members2_.ident as ident0_2_, members2_.location as location0_2_, members2_.species as species2_2_, members2_.hive as hive2_2_'
    |  \-[SQL_TOKEN] SqlFragment: 'members2_.hive as hive5_0__, members2_.bid as bid2_0__'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[h], fromElementByTableAlias=[hive0_, location1_, members2_], fromElementsByPath=[h.location, h.members], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'hives hive0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=h,role=null,tableName=hives,tableAlias=hive0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Hive}}
          +-[JOIN_FRAGMENT] FromElement: 'left outer join locations location1_ on hive0_.location=location1_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=locations,tableAlias=location1_,origin=hives hive0_,columns={hive0_.location ,className=org.hibernate.test.unionsubclass.Location}}
          \-[JOIN_FRAGMENT] FromElement: 'left outer join aliens members2_ on hive0_.id=members2_.hive' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.unionsubclass.Hive.members,tableName=aliens,tableAlias=members2_,origin=hives hive0_,columns={hive0_.id ,className=org.hibernate.test.unionsubclass.Alien}}

14:19:28,749 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,750 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.unionsubclass.Hive h left join fetch h.location left join fetch h.members
14:19:28,750 DEBUG QueryTranslatorImpl:236 - SQL: select hive0_.id as id5_0_, location1_.id as id7_1_, members2_.bid as bid0_2_, hive0_.location as location5_0_, location1_.name as name7_1_, members2_.ident as ident0_2_, members2_.location as location0_2_, members2_.species as species2_2_, members2_.hive as hive2_2_, members2_.hive as hive5_0__, members2_.bid as bid2_0__ from hives hive0_ left outer join locations location1_ on hive0_.location=location1_.id left outer join aliens members2_ on hive0_.id=members2_.hive
14:19:28,750 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,750 DEBUG SQL:104 - 
    select
        hive0_.id as id5_0_,
        location1_.id as id7_1_,
        members2_.bid as bid0_2_,
        hive0_.location as location5_0_,
        location1_.name as name7_1_,
        members2_.ident as ident0_2_,
        members2_.location as location0_2_,
        members2_.species as species2_2_,
        members2_.hive as hive2_2_,
        members2_.hive as hive5_0__,
        members2_.bid as bid2_0__ 
    from
        hives hive0_ 
    left outer join
        locations location1_ 
            on hive0_.location=location1_.id 
    left outer join
        aliens members2_ 
            on hive0_.id=members2_.hive
14:19:28,771 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.unionsubclass.Alien a left join fetch a.hivemates where a.identity like 'x%'
14:19:28,773 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     +-[RANGE] Node: 'RANGE'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  |  +-[IDENT] Node: 'org'
    |     |  |  |  |  |  \-[IDENT] Node: 'hibernate'
    |     |  |  |  |  \-[IDENT] Node: 'test'
    |     |  |  |  \-[IDENT] Node: 'unionsubclass'
    |     |  |  \-[IDENT] Node: 'Alien'
    |     |  \-[ALIAS] Node: 'a'
    |     \-[JOIN] Node: 'join'
    |        +-[LEFT] Node: 'left'
    |        +-[FETCH] Node: 'fetch'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'a'
    |           \-[IDENT] Node: 'hivemates'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'a'
          |  \-[IDENT] Node: 'identity'
          \-[QUOTED_STRING] Node: ''x%''

14:19:28,781 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,782 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Alien (a) -> alien0_
14:19:28,782 DEBUG FromReferenceNode:74 - Resolved : a -> alien0_.bid
14:19:28,782 DEBUG DotNode:599 - getDataType() : hivemates -> org.hibernate.type.BagType(org.hibernate.test.unionsubclass.Alien.hivemates)
14:19:28,782 DEBUG FromElementFactory:385 - createManyToMany() : path = a.hivemates role = org.hibernate.test.unionsubclass.Alien.hivemates associatedEntityName = org.hibernate.test.unionsubclass.Alien
14:19:28,782 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Alien (<no alias>) -> alien2_
14:19:28,782 DEBUG FromClause:282 - addJoinByPathMap() : a.hivemates -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=aliens,tableAlias=alien2_,origin=aliens alien0_,columns={alien0_.bid ,className=org.hibernate.test.unionsubclass.Alien}}
14:19:28,783 DEBUG DotNode:308 - dereferenceCollection() : Created new FROM element for a.hivemates : aliens_hivemates alien2_
14:19:28,783 DEBUG FromReferenceNode:74 - Resolved : a.hivemates -> .
14:19:28,783 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'aliens_hivemates alien2_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.unionsubclass.Alien.hivemates,tableName=aliens,tableAlias=alien2_,origin=aliens alien0_,columns={alien0_.bid ,className=org.hibernate.test.unionsubclass.Alien}}

14:19:28,783 DEBUG FromReferenceNode:74 - Resolved : a -> alien0_.bid
14:19:28,783 DEBUG DotNode:599 - getDataType() : identity -> org.hibernate.type.StringType@2dc8de40
14:19:28,783 DEBUG FromReferenceNode:74 - Resolved : a.identity -> alien0_.ident
14:19:28,783 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} ( aliens alien0_ aliens_hivemates alien2_ ) ) ( where ( like ( alien0_.ident alien0_.bid identity ) 'x%' ) ) )
14:19:28,790 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:28,791 DEBUG JoinProcessor:175 - Using FROM fragment [aliens alien0_]
14:19:28,791 DEBUG JoinProcessor:175 - Using FROM fragment [left outer join aliens_hivemates hivemates1_ on alien0_.bid=hivemates1_.alien1 left outer join aliens alien2_ on hivemates1_.alien2=alien2_.bid]
14:19:28,792 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (aliens_hivemates,Being,aliens)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'alien0_.bid as bid0_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=aliens,tableAlias=alien0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Alien}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'alien2_.bid as bid0_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.unionsubclass.Alien.hivemates,tableName=aliens,tableAlias=alien2_,origin=aliens alien0_,columns={alien0_.bid ,className=org.hibernate.test.unionsubclass.Alien}}}
    |  +-[SQL_TOKEN] SqlFragment: 'alien0_.ident as ident0_0_, alien0_.location as location0_0_, alien0_.species as species2_0_, alien0_.hive as hive2_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'alien2_.ident as ident0_1_, alien2_.location as location0_1_, alien2_.species as species2_1_, alien2_.hive as hive2_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'hivemates1_.alien1 as alien1_0_0__, hivemates1_.alien2 as alien2_3_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[a], fromElementByTableAlias=[alien2_, alien0_], fromElementsByPath=[a.hivemates], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'aliens alien0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=aliens,tableAlias=alien0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Alien}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join aliens_hivemates hivemates1_ on alien0_.bid=hivemates1_.alien1 left outer join aliens alien2_ on hivemates1_.alien2=alien2_.bid' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.unionsubclass.Alien.hivemates,tableName=aliens,tableAlias=alien2_,origin=aliens alien0_,columns={alien0_.bid ,className=org.hibernate.test.unionsubclass.Alien}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'alien0_.ident' {propertyName=identity,dereferenceType=ALL,propertyPath=identity,path=a.identity,tableAlias=alien0_,className=org.hibernate.test.unionsubclass.Alien,classAlias=a}
          |  +-[ALIAS_REF] IdentNode: 'alien0_.bid' {alias=a, className=org.hibernate.test.unionsubclass.Alien, tableAlias=alien0_}
          |  \-[IDENT] IdentNode: 'identity' {originalText=identity}
          \-[QUOTED_STRING] LiteralNode: ''x%''

14:19:28,792 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,793 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.unionsubclass.Alien a left join fetch a.hivemates where a.identity like 'x%'
14:19:28,793 DEBUG QueryTranslatorImpl:236 - SQL: select alien0_.bid as bid0_0_, alien2_.bid as bid0_1_, alien0_.ident as ident0_0_, alien0_.location as location0_0_, alien0_.species as species2_0_, alien0_.hive as hive2_0_, alien2_.ident as ident0_1_, alien2_.location as location0_1_, alien2_.species as species2_1_, alien2_.hive as hive2_1_, hivemates1_.alien1 as alien1_0_0__, hivemates1_.alien2 as alien2_3_0__ from aliens alien0_ left outer join aliens_hivemates hivemates1_ on alien0_.bid=hivemates1_.alien1 left outer join aliens alien2_ on hivemates1_.alien2=alien2_.bid where alien0_.ident like 'x%'
14:19:28,793 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,793 DEBUG SQL:104 - 
    select
        alien0_.bid as bid0_0_,
        alien2_.bid as bid0_1_,
        alien0_.ident as ident0_0_,
        alien0_.location as location0_0_,
        alien0_.species as species2_0_,
        alien0_.hive as hive2_0_,
        alien2_.ident as ident0_1_,
        alien2_.location as location0_1_,
        alien2_.species as species2_1_,
        alien2_.hive as hive2_1_,
        hivemates1_.alien1 as alien1_0_0__,
        hivemates1_.alien2 as alien2_3_0__ 
    from
        aliens alien0_ 
    left outer join
        aliens_hivemates hivemates1_ 
            on alien0_.bid=hivemates1_.alien1 
    left outer join
        aliens alien2_ 
            on hivemates1_.alien2=alien2_.bid 
    where
        alien0_.ident like 'x%'
14:19:28,808 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.unionsubclass.Alien a where a.identity like 'x%'
14:19:28,809 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  |  \-[IDENT] Node: 'test'
    |        |  |  \-[IDENT] Node: 'unionsubclass'
    |        |  \-[IDENT] Node: 'Alien'
    |        \-[ALIAS] Node: 'a'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'a'
          |  \-[IDENT] Node: 'identity'
          \-[QUOTED_STRING] Node: ''x%''

14:19:28,814 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,815 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.unionsubclass.Alien (a) -> alien0_
14:19:28,815 DEBUG FromReferenceNode:74 - Resolved : a -> alien0_.bid
14:19:28,815 DEBUG DotNode:599 - getDataType() : identity -> org.hibernate.type.StringType@2dc8de40
14:19:28,815 DEBUG FromReferenceNode:74 - Resolved : a.identity -> alien0_.ident
14:19:28,815 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} aliens alien0_ ) ( where ( like ( alien0_.ident alien0_.bid identity ) 'x%' ) ) )
14:19:28,816 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:28,816 DEBUG JoinProcessor:175 - Using FROM fragment [aliens alien0_]
14:19:28,816 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Being,aliens)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'alien0_.bid as bid0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=aliens,tableAlias=alien0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Alien}}}
    |  \-[SQL_TOKEN] SqlFragment: 'alien0_.ident as ident0_, alien0_.location as location0_, alien0_.species as species2_, alien0_.hive as hive2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[alien0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'aliens alien0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=aliens,tableAlias=alien0_,origin=null,columns={,className=org.hibernate.test.unionsubclass.Alien}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'alien0_.ident' {propertyName=identity,dereferenceType=ALL,propertyPath=identity,path=a.identity,tableAlias=alien0_,className=org.hibernate.test.unionsubclass.Alien,classAlias=a}
          |  +-[ALIAS_REF] IdentNode: 'alien0_.bid' {alias=a, className=org.hibernate.test.unionsubclass.Alien, tableAlias=alien0_}
          |  \-[IDENT] IdentNode: 'identity' {originalText=identity}
          \-[QUOTED_STRING] LiteralNode: ''x%''

14:19:28,825 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,826 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.unionsubclass.Alien a where a.identity like 'x%'
14:19:28,826 DEBUG QueryTranslatorImpl:236 - SQL: select alien0_.bid as bid0_, alien0_.ident as ident0_, alien0_.location as location0_, alien0_.species as species2_, alien0_.hive as hive2_ from aliens alien0_ where alien0_.ident like 'x%'
14:19:28,826 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:28,826 DEBUG SQL:104 - 
    select
        alien0_.bid as bid0_,
        alien0_.ident as ident0_,
        alien0_.location as location0_,
        alien0_.species as species2_,
        alien0_.hive as hive2_ 
    from
        aliens alien0_ 
    where
        alien0_.ident like 'x%'
14:19:28,828 DEBUG SQL:104 - 
    select
        hivemates0_.alien1 as alien1_0_1_,
        hivemates0_.alien2 as alien2_3_1_,
        alien1_.bid as bid0_0_,
        alien1_.ident as ident0_0_,
        alien1_.location as location0_0_,
        alien1_.species as species2_0_,
        alien1_.hive as hive2_0_ 
    from
        aliens_hivemates hivemates0_ 
    inner join
        aliens alien1_ 
            on hivemates0_.alien2=alien1_.bid 
    where
        hivemates0_.alien1=?
14:19:28,837 DEBUG SQL:104 - 
    select
        this_.bid as bid0_0_,
        this_.ident as ident0_0_,
        this_.location as location0_0_,
        this_.species as species2_0_,
        this_.hive as hive2_0_ 
    from
        aliens this_ 
    order by
        this_.ident asc
14:19:28,839 DEBUG SQL:104 - 
    select
        hive0_.id as id5_0_,
        hive0_.location as location5_0_ 
    from
        hives hive0_ 
    where
        hive0_.id=?
14:19:28,839 DEBUG SQL:104 - 
    select
        members0_.hive as hive5_1_,
        members0_.bid as bid2_1_,
        members0_.bid as bid0_0_,
        members0_.ident as ident0_0_,
        members0_.location as location0_0_,
        members0_.species as species2_0_,
        members0_.hive as hive2_0_ 
    from
        aliens members0_ 
    where
        members0_.hive=?
14:19:28,848 DEBUG SQL:104 - 
    select
        location0_.id as id7_0_,
        location0_.name as name7_0_ 
    from
        locations location0_ 
    where
        location0_.id=?
14:19:28,849 DEBUG SQL:104 - 
    select
        beings0_.location as location7_1_,
        beings0_.bid as bid0_1_,
        beings0_.bid as bid0_0_,
        beings0_.ident as ident0_0_,
        beings0_.location as location0_0_,
        beings0_.sex as sex6_0_,
        beings0_.salary as salary4_0_,
        beings0_.species as species2_0_,
        beings0_.hive as hive2_0_,
        beings0_.clazz_ as clazz_0_ 
    from
        ( select
            bid,
            ident,
            location,
            sex,
            salary,
            null as species,
            null as hive,
            2 as clazz_ 
        from
            employees 
        union
        all select
            bid,
            ident,
            location,
            sex,
            null as salary,
            null as species,
            null as hive,
            1 as clazz_ 
        from
            humans 
        union
        all select
            bid,
            ident,
            location,
            null as sex,
            null as salary,
            species,
            hive,
            3 as clazz_ 
        from
            aliens 
    ) beings0_ 
where
    beings0_.location=?
14:19:28,860 DEBUG SQL:104 - 
    select
        location0_.id as id7_0_,
        location0_.name as name7_0_ 
    from
        locations location0_ 
    where
        location0_.id=?
14:19:28,861 DEBUG SQL:104 - 
    select
        beings0_.location as location7_1_,
        beings0_.bid as bid0_1_,
        beings0_.bid as bid0_0_,
        beings0_.ident as ident0_0_,
        beings0_.location as location0_0_,
        beings0_.sex as sex6_0_,
        beings0_.salary as salary4_0_,
        beings0_.species as species2_0_,
        beings0_.hive as hive2_0_,
        beings0_.clazz_ as clazz_0_ 
    from
        ( select
            bid,
            ident,
            location,
            sex,
            salary,
            null as species,
            null as hive,
            2 as clazz_ 
        from
            employees 
        union
        all select
            bid,
            ident,
            location,
            sex,
            null as salary,
            null as species,
            null as hive,
            1 as clazz_ 
        from
            humans 
        union
        all select
            bid,
            ident,
            location,
            null as sex,
            null as salary,
            species,
            hive,
            3 as clazz_ 
        from
            aliens 
    ) beings0_ 
where
    beings0_.location=?
14:19:28,884 DEBUG SQL:104 - 
    delete 
    from
        Being_info 
    where
        bid=?
14:19:28,885 DEBUG SQL:104 - 
    delete 
    from
        aliens_hivemates 
    where
        alien1=?
14:19:28,885 DEBUG SQL:104 - 
    delete 
    from
        Being_info 
    where
        bid=?
14:19:28,885 DEBUG SQL:104 - 
    delete 
    from
        aliens_hivemates 
    where
        alien1=?
14:19:28,885 DEBUG SQL:104 - 
    delete 
    from
        Being_info 
    where
        bid=?
14:19:28,886 DEBUG SQL:104 - 
    delete 
    from
        aliens 
    where
        bid=?
14:19:28,886 DEBUG SQL:104 - 
    delete 
    from
        aliens 
    where
        bid=?
14:19:28,904 DEBUG SQL:104 - 
    delete 
    from
        hives 
    where
        id=?
14:19:28,905 DEBUG SQL:104 - 
    delete 
    from
        humans 
    where
        bid=?
14:19:28,905 DEBUG SQL:104 - 
    delete 
    from
        locations 
    where
        id=?
14:19:28,905 DEBUG SQL:104 - 
    delete 
    from
        locations 
    where
        id=?
14:19:28,905 DEBUG SQL:104 - 
    select
        being0_.bid as bid0_,
        being0_.ident as ident0_,
        being0_.location as location0_,
        being0_.sex as sex6_,
        being0_.salary as salary4_,
        being0_.species as species2_,
        being0_.hive as hive2_,
        being0_.clazz_ as clazz_ 
    from
        ( select
            bid,
            ident,
            location,
            sex,
            salary,
            null as species,
            null as hive,
            2 as clazz_ 
        from
            employees 
        union
        all select
            bid,
            ident,
            location,
            sex,
            null as salary,
            null as species,
            null as hive,
            1 as clazz_ 
        from
            humans 
        union
        all select
            bid,
            ident,
            location,
            null as sex,
            null as salary,
            species,
            hive,
            3 as clazz_ 
        from
            aliens 
    ) being0_
14:19:28,925  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:19:28,926 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:19:28,926 DEBUG SQL:104 - 
    alter table aliens 
        drop constraint FKABA9428CA4F57E3D
14:19:28,926 DEBUG SQL:104 - 
    alter table aliens 
        drop constraint FK3D1909F8E5A0847aba9428c
14:19:28,926 DEBUG SQL:104 - 
    alter table aliens_hivemates 
        drop constraint FKE2A09EAB9F170555
14:19:28,926 DEBUG SQL:104 - 
    alter table aliens_hivemates 
        drop constraint FKE2A09EAB9F170554
14:19:28,927 DEBUG SQL:104 - 
    alter table employees 
        drop constraint FK3D1909F8E5A0847b81bc4e69d39ef85
14:19:28,934 DEBUG SQL:104 - 
    alter table hives 
        drop constraint FK5EB0F038E5A0847
14:19:28,934 DEBUG SQL:104 - 
    alter table humans 
        drop constraint FK3D1909F8E5A0847b81bc4e6
14:19:28,934 DEBUG SQL:104 - 
    drop table Being_info if exists
14:19:28,935 DEBUG SQL:104 - 
    drop table aliens if exists
14:19:28,935 DEBUG SQL:104 - 
    drop table aliens_hivemates if exists
14:19:28,935 DEBUG SQL:104 - 
    drop table employees if exists
14:19:28,935 DEBUG SQL:104 - 
    drop table hives if exists
14:19:28,935 DEBUG SQL:104 - 
    drop table humans if exists
14:19:28,936 DEBUG SQL:104 - 
    drop table locations if exists
14:19:28,936 DEBUG SQL:104 - 
    drop table things if exists
14:19:28,936  INFO SchemaExport:405 - HHH000230: Schema export complete
14:19:28,937  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
