<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" hostname="dhcp-10.15.208.168.stl.redhat.com" name="org.hibernate.test.jpa.ql.JPAQLComplianceTest" tests="5" time="0.309" timestamp="2013-02-28T20:14:51">
  <properties />
  <testcase classname="org.hibernate.test.jpa.ql.JPAQLComplianceTest" name="testAliasNameSameAsUnqualifiedEntityName" time="0.031" />
  <testcase classname="org.hibernate.test.jpa.ql.JPAQLComplianceTest" name="testGeneratedSubquery" time="0.022" />
  <testcase classname="org.hibernate.test.jpa.ql.JPAQLComplianceTest" name="testIdentifierCaseSensitive" time="0.093" />
  <testcase classname="org.hibernate.test.jpa.ql.JPAQLComplianceTest" name="testIdentifierCasesensitivityAndDuplicateFromElements" time="0.035" />
  <testcase classname="org.hibernate.test.jpa.ql.JPAQLComplianceTest" name="testOrderByAlias" time="0.069" />
  <system-out><![CDATA[14:14:51,589  INFO CustomRunner:132 - BeforeClass: org.hibernate.test.jpa.ql.JPAQLComplianceTest
14:14:51,590  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/jpa/Part.hbm.xml
14:14:51,595  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/jpa/Item.hbm.xml
14:14:51,601  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/jpa/MyEntity.hbm.xml
14:14:51,607  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:14:51,607  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:14:51,608  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:14:51,608  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:14:51,608  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:14:51,609  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:14:51,609  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:14:51,610  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:14:51,610  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:14:51,617  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:14:51,617 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:14:51,618 DEBUG SQL:104 - 
    alter table EJB3_PART 
        drop constraint FKFD4B66FC2A89F363
14:14:51,618 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table EJB3_PART drop constraint FKFD4B66FC2A89F363
14:14:51,618 ERROR SchemaExport:426 - Table "EJB3_PART" not found; SQL statement:

    alter table EJB3_PART 
        drop constraint FKFD4B66FC2A89F363 [42102-145]
14:14:51,618 DEBUG SQL:104 - 
    alter table JPA_MYENTITY 
        drop constraint FKE9D28493C4B8BDC8
14:14:51,619 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table JPA_MYENTITY drop constraint FKE9D28493C4B8BDC8
14:14:51,619 ERROR SchemaExport:426 - Table "JPA_MYENTITY" not found; SQL statement:

    alter table JPA_MYENTITY 
        drop constraint FKE9D28493C4B8BDC8 [42102-145]
14:14:51,619 DEBUG SQL:104 - 
    drop table EJB3_ITEM if exists
14:14:51,619 DEBUG SQL:104 - 
    drop table EJB3_PART if exists
14:14:51,619 DEBUG SQL:104 - 
    drop table JPA_MYENTITY if exists
14:14:51,619 DEBUG SQL:104 - 
    create table EJB3_ITEM (
        ITEM_ID bigint not null,
        VERS bigint not null,
        NAME varchar(255) not null,
        primary key (ITEM_ID)
    )
14:14:51,620 DEBUG SQL:104 - 
    create table EJB3_PART (
        PART_ID bigint not null,
        ITEM_ID bigint not null,
        NAME varchar(255) not null,
        STOCK_NUM varchar(255) not null,
        UNIT_PRICE decimal(19,2) not null,
        primary key (PART_ID)
    )
14:14:51,620 DEBUG SQL:104 - 
    create table JPA_MYENTITY (
        ID bigint not null,
        "TYPE" varchar(255) not null,
        name varchar(255),
        other bigint,
        someSubProperty varchar(255),
        primary key (ID)
    )
14:14:51,620 DEBUG SQL:104 - 
    alter table EJB3_PART 
        add constraint FKFD4B66FC2A89F363 
        foreign key (ITEM_ID) 
        references EJB3_ITEM
14:14:51,639 DEBUG SQL:104 - 
    alter table JPA_MYENTITY 
        add constraint FKE9D28493C4B8BDC8 
        foreign key (other) 
        references JPA_MYENTITY
14:14:51,640  INFO SchemaExport:405 - HHH000230: Schema export complete
14:14:51,640  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:14:51,641  INFO CustomRunner:139 - Test: testAliasNameSameAsUnqualifiedEntityName
14:14:51,642 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select item from org.hibernate.test.jpa.Item item
14:14:51,642 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'org'
       |     |  |  |  |  \-[IDENT] Node: 'hibernate'
       |     |  |  |  \-[IDENT] Node: 'test'
       |     |  |  \-[IDENT] Node: 'jpa'
       |     |  \-[IDENT] Node: 'Item'
       |     \-[ALIAS] Node: 'item'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'item'

14:14:51,643 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:51,643 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.jpa.Item (item) -> item0_
14:14:51,648 DEBUG FromReferenceNode:74 - Resolved : item -> item0_.ITEM_ID
14:14:51,648 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} item0_.ITEM_ID ) ( FromClause{level=1} EJB3_ITEM item0_ ) )
14:14:51,649 DEBUG JoinProcessor:175 - Using FROM fragment [EJB3_ITEM item0_]
14:14:51,649 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EJB3_ITEM)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'item0_.ITEM_ID as ITEM1_0_' {alias=item, className=org.hibernate.test.jpa.Item, tableAlias=item0_}
    |  \-[SQL_TOKEN] SqlFragment: 'item0_.VERS as VERS0_, item0_.NAME as NAME0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[item], fromElementByTableAlias=[item0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'EJB3_ITEM item0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=item,role=null,tableName=EJB3_ITEM,tableAlias=item0_,origin=null,columns={,className=org.hibernate.test.jpa.Item}}

14:14:51,649 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:51,649 DEBUG QueryTranslatorImpl:235 - HQL: select item from org.hibernate.test.jpa.Item item
14:14:51,649 DEBUG QueryTranslatorImpl:236 - SQL: select item0_.ITEM_ID as ITEM1_0_, item0_.VERS as VERS0_, item0_.NAME as NAME0_ from EJB3_ITEM item0_
14:14:51,649 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:51,650 DEBUG SQL:104 - 
    select
        item0_.ITEM_ID as ITEM1_0_,
        item0_.VERS as VERS0_,
        item0_.NAME as NAME0_ 
    from
        EJB3_ITEM item0_
14:14:51,650 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select item from org.hibernate.test.jpa.Item item where item.name = 'a'
14:14:51,651 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Item'
    |  |     \-[ALIAS] Node: 'item'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'item'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'item'
          |  \-[IDENT] Node: 'name'
          \-[QUOTED_STRING] Node: ''a''

14:14:51,659 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:51,659 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.jpa.Item (item) -> item0_
14:14:51,660 DEBUG FromReferenceNode:74 - Resolved : item -> item0_.ITEM_ID
14:14:51,660 DEBUG FromReferenceNode:74 - Resolved : item -> item0_.ITEM_ID
14:14:51,660 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:14:51,660 DEBUG FromReferenceNode:74 - Resolved : item.name -> item0_.NAME
14:14:51,660 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} item0_.ITEM_ID ) ( FromClause{level=1} EJB3_ITEM item0_ ) ( where ( = ( item0_.NAME item0_.ITEM_ID name ) 'a' ) ) )
14:14:51,660 DEBUG JoinProcessor:175 - Using FROM fragment [EJB3_ITEM item0_]
14:14:51,660 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EJB3_ITEM)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'item0_.ITEM_ID as ITEM1_0_' {alias=item, className=org.hibernate.test.jpa.Item, tableAlias=item0_}
    |  \-[SQL_TOKEN] SqlFragment: 'item0_.VERS as VERS0_, item0_.NAME as NAME0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[item], fromElementByTableAlias=[item0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'EJB3_ITEM item0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=item,role=null,tableName=EJB3_ITEM,tableAlias=item0_,origin=null,columns={,className=org.hibernate.test.jpa.Item}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'item0_.NAME' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=item.name,tableAlias=item0_,className=org.hibernate.test.jpa.Item,classAlias=item}
          |  +-[ALIAS_REF] IdentNode: 'item0_.ITEM_ID' {alias=item, className=org.hibernate.test.jpa.Item, tableAlias=item0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[QUOTED_STRING] LiteralNode: ''a''

14:14:51,670 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:51,671 DEBUG QueryTranslatorImpl:235 - HQL: select item from org.hibernate.test.jpa.Item item where item.name = 'a'
14:14:51,671 DEBUG QueryTranslatorImpl:236 - SQL: select item0_.ITEM_ID as ITEM1_0_, item0_.VERS as VERS0_, item0_.NAME as NAME0_ from EJB3_ITEM item0_ where item0_.NAME='a'
14:14:51,671 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:51,671 DEBUG SQL:104 - 
    select
        item0_.ITEM_ID as ITEM1_0_,
        item0_.VERS as VERS0_,
        item0_.NAME as NAME0_ 
    from
        EJB3_ITEM item0_ 
    where
        item0_.NAME='a'
14:14:51,672  INFO CustomRunner:139 - Test: testGeneratedSubquery
14:14:51,673 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select c FROM org.hibernate.test.jpa.Item c WHERE c.parts IS EMPTY
14:14:51,674 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Item'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[NOT] Node: 'not'
          \-[EXISTS] Node: 'exists'
             \-[QUERY] Node: 'QUERY'
                \-[SELECT_FROM] Node: 'SELECT_FROM'
                   \-[FROM] Node: 'from'
                      \-[RANGE] Node: 'RANGE'
                         \-[DOT] Node: '.'
                            +-[IDENT] Node: 'c'
                            \-[IDENT] Node: 'parts'

14:14:51,681 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:51,681 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.jpa.Item (c) -> item0_
14:14:51,681 DEBUG FromReferenceNode:74 - Resolved : c -> item0_.ITEM_ID
14:14:51,682 DEBUG FromElementFactory:129 - createFromElementInSubselect() : path = c.parts
14:14:51,682 DEBUG PathHelper:68 - parsePath() : c.parts -> [  ( . c parts ) ]
14:14:51,682 DEBUG FromReferenceNode:74 - Resolved : c -> item0_.ITEM_ID
14:14:51,690 DEBUG DotNode:599 - getDataType() : parts -> org.hibernate.type.SetType(org.hibernate.test.jpa.Item.parts)
14:14:51,691 DEBUG FromElementFactory:376 - createEntityAssociation() : One to many - path = c.parts role = org.hibernate.test.jpa.Item.parts associatedEntityName = org.hibernate.test.jpa.Part
14:14:51,691 DEBUG FromElement:157 - FromClause{level=2} : org.hibernate.test.jpa.Part (<no alias>) -> parts1_
14:14:51,691 DEBUG FromClause:282 - addJoinByPathMap() : c.parts -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=EJB3_PART,tableAlias=parts1_,origin=EJB3_ITEM item0_,columns={item0_.ITEM_ID ,className=org.hibernate.test.jpa.Part}}
14:14:51,691 DEBUG DotNode:308 - dereferenceCollection() : Created new FROM element for c.parts : EJB3_PART parts1_
14:14:51,691 DEBUG FromReferenceNode:74 - Resolved : c.parts -> .
14:14:51,691 DEBUG FromElementFactory:158 - createFromElementInSubselect() : c.parts -> EJB3_PART parts1_
14:14:51,691 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=2} EJB3_PART parts1_ ) )
14:14:51,692 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:14:51,692 DEBUG SyntheticAndFactory:92 - Using unprocessed WHERE-fragment [item0_.ITEM_ID=parts1_.ITEM_ID]
14:14:51,692 DEBUG SyntheticAndFactory:124 - Using processed WHERE-fragment [item0_.ITEM_ID=parts1_.ITEM_ID]
14:14:51,692 DEBUG QueryNode:73 - getWhereClause() : Creating a new WHERE clause...
14:14:51,692 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} item0_.ITEM_ID ) ( FromClause{level=1} EJB3_ITEM item0_ ) ( WHERE ( not ( exists ( SELECT ( {derived select clause} parts1_.PART_ID ) ( FromClause{level=2} EJB3_PART parts1_ ) ( WHERE ( {theta joins} item0_.ITEM_ID=parts1_.ITEM_ID ) ) ) ) ) ) )
14:14:51,692 DEBUG JoinProcessor:175 - Using FROM fragment [EJB3_ITEM item0_]
14:14:51,692 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EJB3_ITEM,EJB3_PART)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'item0_.ITEM_ID as ITEM1_0_' {alias=c, className=org.hibernate.test.jpa.Item, tableAlias=item0_}
    |  \-[SQL_TOKEN] SqlFragment: 'item0_.VERS as VERS0_, item0_.NAME as NAME0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[item0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'EJB3_ITEM item0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=EJB3_ITEM,tableAlias=item0_,origin=null,columns={,className=org.hibernate.test.jpa.Item}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[NOT] SqlNode: 'not'
          \-[EXISTS] UnaryLogicOperatorNode: 'exists'
             \-[SELECT] QueryNode: 'SELECT'  querySpaces (EJB3_ITEM,EJB3_PART)
                +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
                |  \-[SELECT_EXPR] SelectExpressionImpl: 'parts1_.PART_ID' {ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.jpa.Item.parts,tableName=EJB3_PART,tableAlias=parts1_,origin=EJB3_ITEM item0_,columns={item0_.ITEM_ID ,className=org.hibernate.test.jpa.Part}}}
                +-[FROM] FromClause: 'from' FromClause{level=2, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[parts1_], fromElementsByPath=[c.parts], collectionJoinFromElementsByPath=[], impliedElements=[]}
                |  \-[FROM_FRAGMENT] ImpliedFromElement: 'EJB3_PART parts1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.jpa.Item.parts,tableName=EJB3_PART,tableAlias=parts1_,origin=EJB3_ITEM item0_,columns={item0_.ITEM_ID ,className=org.hibernate.test.jpa.Part}}
                \-[WHERE] SqlNode: 'WHERE'
                   \-[THETA_JOINS] SqlNode: '{theta joins}'
                      \-[SQL_TOKEN] SqlFragment: 'item0_.ITEM_ID=parts1_.ITEM_ID'

14:14:51,693 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:51,693 DEBUG QueryTranslatorImpl:235 - HQL: select c FROM org.hibernate.test.jpa.Item c WHERE c.parts IS EMPTY
14:14:51,693 DEBUG QueryTranslatorImpl:236 - SQL: select item0_.ITEM_ID as ITEM1_0_, item0_.VERS as VERS0_, item0_.NAME as NAME0_ from EJB3_ITEM item0_ where  not (exists (select parts1_.PART_ID from EJB3_PART parts1_ where item0_.ITEM_ID=parts1_.ITEM_ID))
14:14:51,693 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:51,693 DEBUG SQL:104 - 
    select
        item0_.ITEM_ID as ITEM1_0_,
        item0_.VERS as VERS0_,
        item0_.NAME as NAME0_ 
    from
        EJB3_ITEM item0_ 
    where
        not (exists (select
            parts1_.PART_ID 
        from
            EJB3_PART parts1_ 
        where
            item0_.ITEM_ID=parts1_.ITEM_ID))
14:14:51,694  INFO CustomRunner:139 - Test: testIdentifierCaseSensitive
14:14:51,695 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.jpa.MyEntity e where e.class = MySubclassEntity
14:14:51,695 DEBUG HqlParser:378 - handleDotIdent() : new LT(2) token - [".",<15> previously: <15>,line=1,col=47,possibleID=false]
14:14:51,696 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  |  \-[IDENT] Node: 'test'
    |        |  |  \-[IDENT] Node: 'jpa'
    |        |  \-[IDENT] Node: 'MyEntity'
    |        \-[ALIAS] Node: 'e'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'class'
          \-[IDENT] Node: 'MySubclassEntity'

14:14:51,705 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:51,705 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.jpa.MyEntity (e) -> myentity0_
14:14:51,706 DEBUG FromReferenceNode:74 - Resolved : e -> myentity0_.ID
14:14:51,706 DEBUG DotNode:599 - getDataType() : class -> org.hibernate.type.StringType@2dc8de40
14:14:51,706 DEBUG FromReferenceNode:74 - Resolved : e.class -> myentity0_."TYPE"
14:14:51,706 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} JPA_MYENTITY myentity0_ ) ( where ( = ( myentity0_."TYPE" myentity0_.ID class ) 'S' ) ) )
14:14:51,707 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:14:51,707 DEBUG JoinProcessor:175 - Using FROM fragment [JPA_MYENTITY myentity0_]
14:14:51,707 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (JPA_MYENTITY)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'myentity0_.ID as ID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=JPA_MYENTITY,tableAlias=myentity0_,origin=null,columns={,className=org.hibernate.test.jpa.MyEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'myentity0_.name as name2_, myentity0_.other as other2_, myentity0_.someSubProperty as someSubP5_2_, myentity0_."TYPE" as TYPE2_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[myentity0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'JPA_MYENTITY myentity0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=JPA_MYENTITY,tableAlias=myentity0_,origin=null,columns={,className=org.hibernate.test.jpa.MyEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'myentity0_."TYPE"' {propertyName=class,dereferenceType=ALL,propertyPath=class,path=e.class,tableAlias=myentity0_,className=org.hibernate.test.jpa.MyEntity,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'myentity0_.ID' {alias=e, className=org.hibernate.test.jpa.MyEntity, tableAlias=myentity0_}
          |  \-[IDENT] IdentNode: 'class' {originalText=class}
          \-[IDENT] IdentNode: ''S'' {originalText=MySubclassEntity}

14:14:51,715 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:51,715 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.jpa.MyEntity e where e.class = MySubclassEntity
14:14:51,715 DEBUG QueryTranslatorImpl:236 - SQL: select myentity0_.ID as ID2_, myentity0_.name as name2_, myentity0_.other as other2_, myentity0_.someSubProperty as someSubP5_2_, myentity0_."TYPE" as TYPE2_2_ from JPA_MYENTITY myentity0_ where myentity0_."TYPE"='S'
14:14:51,715 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:51,716 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.jpa.MyEntity e where e.other.class = MySubclassEntity
14:14:51,716 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  |  \-[IDENT] Node: 'test'
    |        |  |  \-[IDENT] Node: 'jpa'
    |        |  \-[IDENT] Node: 'MyEntity'
    |        \-[ALIAS] Node: 'e'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'e'
          |  |  \-[IDENT] Node: 'other'
          |  \-[CLASS] Node: 'class'
          \-[IDENT] Node: 'MySubclassEntity'

14:14:51,717 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:51,717 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.jpa.MyEntity (e) -> myentity0_
14:14:51,717 DEBUG FromReferenceNode:74 - Resolved : e -> myentity0_.ID
14:14:51,717 DEBUG DotNode:599 - getDataType() : other -> org.hibernate.type.ManyToOneType(org.hibernate.test.jpa.MyEntity)
14:14:51,717 DEBUG DotNode:389 - dereferenceEntityJoin() : generating join for other in org.hibernate.test.jpa.MyEntity (<no alias>) parent = [  ( . ( . myentity0_.ID other ) class ) ]
14:14:51,743 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.jpa.MyEntity (<no alias>) -> myentity1_
14:14:51,743 DEBUG FromClause:282 - addJoinByPathMap() : e.other -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=JPA_MYENTITY,tableAlias=myentity1_,origin=JPA_MYENTITY myentity0_,columns={myentity0_.other ,className=org.hibernate.test.jpa.MyEntity}}
14:14:51,744 DEBUG FromReferenceNode:74 - Resolved : e.other -> myentity0_.other
14:14:51,744 DEBUG DotNode:599 - getDataType() : class -> org.hibernate.type.StringType@2dc8de40
14:14:51,744 DEBUG FromReferenceNode:74 - Resolved : e.other.class -> myentity1_."TYPE"
14:14:51,744 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} JPA_MYENTITY myentity0_ JPA_MYENTITY myentity1_ ) ( where ( = ( myentity1_."TYPE" ( myentity0_.other myentity0_.ID other ) class ) 'S' ) ) )
14:14:51,745 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:14:51,745 DEBUG JoinProcessor:175 - Using FROM fragment [JPA_MYENTITY myentity0_]
14:14:51,745 DEBUG SyntheticAndFactory:92 - Using unprocessed WHERE-fragment [myentity0_.other=myentity1_.ID]
14:14:51,745 DEBUG SyntheticAndFactory:124 - Using processed WHERE-fragment [myentity0_.other=myentity1_.ID]
14:14:51,745 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (JPA_MYENTITY)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'myentity0_.ID as ID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=JPA_MYENTITY,tableAlias=myentity0_,origin=null,columns={,className=org.hibernate.test.jpa.MyEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'myentity0_.name as name2_, myentity0_.other as other2_, myentity0_.someSubProperty as someSubP5_2_, myentity0_."TYPE" as TYPE2_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[e], fromElementByTableAlias=[myentity1_, myentity0_], fromElementsByPath=[e.other], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'JPA_MYENTITY myentity0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=JPA_MYENTITY,tableAlias=myentity0_,origin=null,columns={,className=org.hibernate.test.jpa.MyEntity}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: 'JPA_MYENTITY myentity1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=JPA_MYENTITY,tableAlias=myentity1_,origin=JPA_MYENTITY myentity0_,columns={myentity0_.other ,className=org.hibernate.test.jpa.MyEntity}}
    \-[WHERE] SqlNode: 'where'
       +-[THETA_JOINS] SqlNode: '{theta joins}'
       |  \-[SQL_TOKEN] SqlFragment: 'myentity0_.other=myentity1_.ID'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'myentity1_."TYPE"' {propertyName=class,dereferenceType=ALL,propertyPath=class,path=e.other.class,tableAlias=myentity1_,className=org.hibernate.test.jpa.MyEntity,classAlias=null}
          |  +-[DOT] DotNode: 'myentity0_.other' {propertyName=other,dereferenceType=EOF,propertyPath=other,path=e.other,tableAlias=myentity1_,className=org.hibernate.test.jpa.MyEntity,classAlias=null}
          |  |  +-[ALIAS_REF] IdentNode: 'myentity0_.ID' {alias=e, className=org.hibernate.test.jpa.MyEntity, tableAlias=myentity0_}
          |  |  \-[IDENT] IdentNode: 'other' {originalText=other}
          |  \-[CLASS] SqlNode: 'class'
          \-[IDENT] IdentNode: ''S'' {originalText=MySubclassEntity}

14:14:51,745 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:51,753 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.jpa.MyEntity e where e.other.class = MySubclassEntity
14:14:51,753 DEBUG QueryTranslatorImpl:236 - SQL: select myentity0_.ID as ID2_, myentity0_.name as name2_, myentity0_.other as other2_, myentity0_.someSubProperty as someSubP5_2_, myentity0_."TYPE" as TYPE2_2_ from JPA_MYENTITY myentity0_ cross join JPA_MYENTITY myentity1_ where myentity0_.other=myentity1_.ID and myentity1_."TYPE"='S'
14:14:51,753 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:51,754 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.jpa.MyEntity where other.class = MySubclassEntity
14:14:51,754 DEBUG HqlParser:378 - handleDotIdent() : new LT(2) token - [".",<15> previously: <15>,line=1,col=49,possibleID=false]
14:14:51,755 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'org'
    |           |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  \-[IDENT] Node: 'test'
    |           |  \-[IDENT] Node: 'jpa'
    |           \-[IDENT] Node: 'MyEntity'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'other'
          |  \-[IDENT] Node: 'class'
          \-[IDENT] Node: 'MySubclassEntity'

14:14:51,755 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:51,755 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.jpa.MyEntity (<no alias>) -> myentity0_
14:14:51,755 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:14:51,755 DEBUG DotNode:599 - getDataType() : other -> org.hibernate.type.ManyToOneType(org.hibernate.test.jpa.MyEntity)
14:14:51,765 DEBUG DotNode:389 - dereferenceEntityJoin() : generating join for other in org.hibernate.test.jpa.MyEntity (<no alias>) parent = [  ( . ( {non-qualified-property-ref} {synthetic-alias} other ) class ) ]
14:14:51,765 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.jpa.MyEntity (<no alias>) -> myentity1_
14:14:51,765 DEBUG FromClause:282 - addJoinByPathMap() : {synthetic-alias}.other -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=JPA_MYENTITY,tableAlias=myentity1_,origin=JPA_MYENTITY myentity0_,columns={myentity0_.other ,className=org.hibernate.test.jpa.MyEntity}}
14:14:51,765 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.other -> myentity0_.other
14:14:51,765 DEBUG DotNode:599 - getDataType() : class -> org.hibernate.type.StringType@2dc8de40
14:14:51,765 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.other.class -> myentity1_."TYPE"
14:14:51,766 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} JPA_MYENTITY myentity0_ JPA_MYENTITY myentity1_ ) ( where ( = ( myentity1_."TYPE" ( myentity0_.other {synthetic-alias} other ) class ) 'S' ) ) )
14:14:51,766 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:14:51,766 DEBUG JoinProcessor:175 - Using FROM fragment [JPA_MYENTITY myentity0_]
14:14:51,766 DEBUG SyntheticAndFactory:92 - Using unprocessed WHERE-fragment [myentity0_.other=myentity1_.ID]
14:14:51,766 DEBUG SyntheticAndFactory:124 - Using processed WHERE-fragment [myentity0_.other=myentity1_.ID]
14:14:51,767 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (JPA_MYENTITY)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'myentity0_.ID as ID2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=JPA_MYENTITY,tableAlias=myentity0_,origin=null,columns={,className=org.hibernate.test.jpa.MyEntity}}}
    |  \-[SQL_TOKEN] SqlFragment: 'myentity0_.name as name2_, myentity0_.other as other2_, myentity0_.someSubProperty as someSubP5_2_, myentity0_."TYPE" as TYPE2_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[], fromElementByTableAlias=[myentity1_, myentity0_], fromElementsByPath=[{synthetic-alias}.other], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'JPA_MYENTITY myentity0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=JPA_MYENTITY,tableAlias=myentity0_,origin=null,columns={,className=org.hibernate.test.jpa.MyEntity}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: 'JPA_MYENTITY myentity1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=JPA_MYENTITY,tableAlias=myentity1_,origin=JPA_MYENTITY myentity0_,columns={myentity0_.other ,className=org.hibernate.test.jpa.MyEntity}}
    \-[WHERE] SqlNode: 'where'
       +-[THETA_JOINS] SqlNode: '{theta joins}'
       |  \-[SQL_TOKEN] SqlFragment: 'myentity0_.other=myentity1_.ID'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'myentity1_."TYPE"' {propertyName=class,dereferenceType=ALL,propertyPath=class,path={synthetic-alias}.other.class,tableAlias=myentity1_,className=org.hibernate.test.jpa.MyEntity,classAlias=null}
          |  +-[DOT] DotNode: 'myentity0_.other' {propertyName=other,dereferenceType=EOF,propertyPath=other,path={synthetic-alias}.other,tableAlias=myentity1_,className=org.hibernate.test.jpa.MyEntity,classAlias=null}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'other' {originalText=other}
          |  \-[IDENT] IdentNode: 'class' {originalText=class}
          \-[IDENT] IdentNode: ''S'' {originalText=MySubclassEntity}

14:14:51,775 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:51,776 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.jpa.MyEntity where other.class = MySubclassEntity
14:14:51,776 DEBUG QueryTranslatorImpl:236 - SQL: select myentity0_.ID as ID2_, myentity0_.name as name2_, myentity0_.other as other2_, myentity0_.someSubProperty as someSubP5_2_, myentity0_."TYPE" as TYPE2_2_ from JPA_MYENTITY myentity0_ cross join JPA_MYENTITY myentity1_ where myentity0_.other=myentity1_.ID and myentity1_."TYPE"='S'
14:14:51,776 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:51,776 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select object(I) from org.hibernate.test.jpa.Item i
14:14:51,777 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'org'
       |     |  |  |  |  \-[IDENT] Node: 'hibernate'
       |     |  |  |  \-[IDENT] Node: 'test'
       |     |  |  \-[IDENT] Node: 'jpa'
       |     |  \-[IDENT] Node: 'Item'
       |     \-[ALIAS] Node: 'i'
       \-[SELECT] Node: 'select'
          \-[OBJECT] Node: 'object'
             \-[IDENT] Node: 'I'

14:14:51,777 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:51,777 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.jpa.Item (i) -> item0_
14:14:51,777 DEBUG FromReferenceNode:74 - Resolved : I -> item0_.ITEM_ID
14:14:51,777 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} item0_.ITEM_ID ) ( FromClause{level=1} EJB3_ITEM item0_ ) )
14:14:51,778 DEBUG JoinProcessor:175 - Using FROM fragment [EJB3_ITEM item0_]
14:14:51,786 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EJB3_ITEM)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'item0_.ITEM_ID as ITEM1_0_' {alias=I, className=org.hibernate.test.jpa.Item, tableAlias=item0_}
    |  \-[SQL_TOKEN] SqlFragment: 'item0_.VERS as VERS0_, item0_.NAME as NAME0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[i], fromElementByTableAlias=[item0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'EJB3_ITEM item0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=i,role=null,tableName=EJB3_ITEM,tableAlias=item0_,origin=null,columns={,className=org.hibernate.test.jpa.Item}}

14:14:51,786 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:51,786 DEBUG QueryTranslatorImpl:235 - HQL: select object(I) from org.hibernate.test.jpa.Item i
14:14:51,786 DEBUG QueryTranslatorImpl:236 - SQL: select item0_.ITEM_ID as ITEM1_0_, item0_.VERS as VERS0_, item0_.NAME as NAME0_ from EJB3_ITEM item0_
14:14:51,786 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:51,787 DEBUG SQL:104 - 
    select
        item0_.ITEM_ID as ITEM1_0_,
        item0_.VERS as VERS0_,
        item0_.NAME as NAME0_ 
    from
        EJB3_ITEM item0_
14:14:51,788  INFO CustomRunner:139 - Test: testIdentifierCasesensitivityAndDuplicateFromElements
14:14:51,789 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select e from org.hibernate.test.jpa.MyEntity e where exists (select 1 from org.hibernate.test.jpa.MyEntity e2 where e2.other.name  = 'something' and e2.other.other = e)
14:14:51,790 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'MyEntity'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'where'
       \-[EXISTS] Node: 'exists'
          \-[QUERY] Node: 'query'
             +-[SELECT_FROM] Node: 'SELECT_FROM'
             |  +-[FROM] Node: 'from'
             |  |  \-[RANGE] Node: 'RANGE'
             |  |     +-[DOT] Node: '.'
             |  |     |  +-[DOT] Node: '.'
             |  |     |  |  +-[DOT] Node: '.'
             |  |     |  |  |  +-[DOT] Node: '.'
             |  |     |  |  |  |  +-[IDENT] Node: 'org'
             |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
             |  |     |  |  |  \-[IDENT] Node: 'test'
             |  |     |  |  \-[IDENT] Node: 'jpa'
             |  |     |  \-[IDENT] Node: 'MyEntity'
             |  |     \-[ALIAS] Node: 'e2'
             |  \-[SELECT] Node: 'select'
             |     \-[NUM_INT] Node: '1'
             \-[WHERE] Node: 'where'
                \-[AND] Node: 'and'
                   +-[EQ] Node: '='
                   |  +-[DOT] Node: '.'
                   |  |  +-[DOT] Node: '.'
                   |  |  |  +-[IDENT] Node: 'e2'
                   |  |  |  \-[IDENT] Node: 'other'
                   |  |  \-[IDENT] Node: 'name'
                   |  \-[QUOTED_STRING] Node: ''something''
                   \-[EQ] Node: '='
                      +-[DOT] Node: '.'
                      |  +-[DOT] Node: '.'
                      |  |  +-[IDENT] Node: 'e2'
                      |  |  \-[IDENT] Node: 'other'
                      |  \-[IDENT] Node: 'other'
                      \-[IDENT] Node: 'e'

14:14:51,809 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:51,810 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.jpa.MyEntity (e) -> myentity0_
14:14:51,810 DEBUG FromReferenceNode:74 - Resolved : e -> myentity0_.ID
14:14:51,810 DEBUG FromElement:157 - FromClause{level=2} : org.hibernate.test.jpa.MyEntity (e2) -> myentity1_
14:14:51,810 DEBUG FromReferenceNode:74 - Resolved : e2 -> myentity1_.ID
14:14:51,810 DEBUG DotNode:599 - getDataType() : other -> org.hibernate.type.ManyToOneType(org.hibernate.test.jpa.MyEntity)
14:14:51,811 DEBUG DotNode:389 - dereferenceEntityJoin() : generating join for other in org.hibernate.test.jpa.MyEntity (<no alias>) parent = [  ( . ( . myentity1_.ID other ) name ) ]
14:14:51,811 DEBUG FromElement:157 - FromClause{level=2} : org.hibernate.test.jpa.MyEntity (<no alias>) -> myentity2_
14:14:51,811 DEBUG FromClause:282 - addJoinByPathMap() : e2.other -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=JPA_MYENTITY,tableAlias=myentity2_,origin=JPA_MYENTITY myentity1_,columns={myentity1_.other ,className=org.hibernate.test.jpa.MyEntity}}
14:14:51,811 DEBUG FromReferenceNode:74 - Resolved : e2.other -> myentity1_.other
14:14:51,811 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:14:51,811 DEBUG FromReferenceNode:74 - Resolved : e2.other.name -> myentity2_.name
14:14:51,811 DEBUG FromReferenceNode:74 - Resolved : e2 -> myentity1_.ID
14:14:51,812 DEBUG DotNode:599 - getDataType() : other -> org.hibernate.type.ManyToOneType(org.hibernate.test.jpa.MyEntity)
14:14:51,812 DEBUG DotNode:389 - dereferenceEntityJoin() : generating join for other in org.hibernate.test.jpa.MyEntity (<no alias>) parent = [  ( . ( . myentity1_.ID other ) other ) ]
14:14:51,820 DEBUG FromReferenceNode:74 - Resolved : e2.other -> myentity1_.other
14:14:51,821 DEBUG DotNode:599 - getDataType() : other -> org.hibernate.type.ManyToOneType(org.hibernate.test.jpa.MyEntity)
14:14:51,821 DEBUG DotNode:562 - dereferenceShortcut() : property other in org.hibernate.test.jpa.MyEntity does not require a join.
14:14:51,821 DEBUG DotNode:588 - Terminal propertyPath = [other]
14:14:51,821 DEBUG FromReferenceNode:74 - Resolved : e2.other.other -> myentity2_.other
14:14:51,821 DEBUG FromReferenceNode:74 - Resolved : e -> myentity0_.ID
14:14:51,821 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} 1 ) ( FromClause{level=2} JPA_MYENTITY myentity1_ JPA_MYENTITY myentity2_ ) ( where ( and ( = ( myentity2_.name ( myentity1_.other myentity1_.ID other ) name ) 'something' ) ( = ( myentity2_.other ( myentity1_.other myentity1_.ID other ) other ) myentity0_.ID ) ) ) )
14:14:51,822 DEBUG JoinProcessor:175 - Using FROM fragment [JPA_MYENTITY myentity1_]
14:14:51,822 DEBUG SyntheticAndFactory:92 - Using unprocessed WHERE-fragment [myentity1_.other=myentity2_.ID]
14:14:51,822 DEBUG SyntheticAndFactory:124 - Using processed WHERE-fragment [myentity1_.other=myentity2_.ID]
14:14:51,822 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} myentity0_.ID ) ( FromClause{level=1} JPA_MYENTITY myentity0_ ) ( where ( exists ( SELECT ( {select clause} 1 ) ( FromClause{level=2} JPA_MYENTITY myentity1_ JPA_MYENTITY myentity2_ ) ( where ( {theta joins} myentity1_.other=myentity2_.ID ) ( and ( = ( myentity2_.name ( myentity1_.other myentity1_.ID other ) name ) 'something' ) ( = ( myentity2_.other ( myentity1_.other myentity1_.ID other ) other ) myentity0_.ID ) ) ) ) ) ) )
14:14:51,822 DEBUG JoinProcessor:175 - Using FROM fragment [JPA_MYENTITY myentity0_]
14:14:51,822 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (JPA_MYENTITY)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'myentity0_.ID as ID2_' {alias=e, className=org.hibernate.test.jpa.MyEntity, tableAlias=myentity0_}
    |  \-[SQL_TOKEN] SqlFragment: 'myentity0_.name as name2_, myentity0_.other as other2_, myentity0_.someSubProperty as someSubP5_2_, myentity0_."TYPE" as TYPE2_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[myentity0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'JPA_MYENTITY myentity0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=JPA_MYENTITY,tableAlias=myentity0_,origin=null,columns={,className=org.hibernate.test.jpa.MyEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EXISTS] UnaryLogicOperatorNode: 'exists'
          \-[SELECT] QueryNode: 'SELECT'  querySpaces (JPA_MYENTITY)
             +-[SELECT_CLAUSE] SelectClause: '{select clause}'
             |  \-[NUM_INT] LiteralNode: '1'
             +-[FROM] FromClause: 'from' FromClause{level=2, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[e2], fromElementByTableAlias=[myentity2_, myentity1_], fromElementsByPath=[e2.other], collectionJoinFromElementsByPath=[], impliedElements=[]}
             |  +-[FROM_FRAGMENT] FromElement: 'JPA_MYENTITY myentity1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e2,role=null,tableName=JPA_MYENTITY,tableAlias=myentity1_,origin=null,columns={,className=org.hibernate.test.jpa.MyEntity}}
             |  \-[FROM_FRAGMENT] ImpliedFromElement: 'JPA_MYENTITY myentity2_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=JPA_MYENTITY,tableAlias=myentity2_,origin=JPA_MYENTITY myentity1_,columns={myentity1_.other ,className=org.hibernate.test.jpa.MyEntity}}
             \-[WHERE] SqlNode: 'where'
                +-[THETA_JOINS] SqlNode: '{theta joins}'
                |  \-[SQL_TOKEN] SqlFragment: 'myentity1_.other=myentity2_.ID'
                \-[AND] SqlNode: 'and'
                   +-[EQ] BinaryLogicOperatorNode: '='
                   |  +-[DOT] DotNode: 'myentity2_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=e2.other.name,tableAlias=myentity2_,className=org.hibernate.test.jpa.MyEntity,classAlias=null}
                   |  |  +-[DOT] DotNode: 'myentity1_.other' {propertyName=other,dereferenceType=EOF,propertyPath=other,path=e2.other,tableAlias=myentity2_,className=org.hibernate.test.jpa.MyEntity,classAlias=null}
                   |  |  |  +-[ALIAS_REF] IdentNode: 'myentity1_.ID' {alias=e2, className=org.hibernate.test.jpa.MyEntity, tableAlias=myentity1_}
                   |  |  |  \-[IDENT] IdentNode: 'other' {originalText=other}
                   |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
                   |  \-[QUOTED_STRING] LiteralNode: ''something''
                   \-[EQ] BinaryLogicOperatorNode: '='
                      +-[DOT] DotNode: 'myentity2_.other' {propertyName=other,dereferenceType=0,propertyPath=other,path=e2.other.other,tableAlias=myentity2_,className=org.hibernate.test.jpa.MyEntity,classAlias=null}
                      |  +-[DOT] DotNode: 'myentity1_.other' {propertyName=other,dereferenceType=EOF,propertyPath=other,path=e2.other,tableAlias=myentity2_,className=org.hibernate.test.jpa.MyEntity,classAlias=null}
                      |  |  +-[ALIAS_REF] IdentNode: 'myentity1_.ID' {alias=e2, className=org.hibernate.test.jpa.MyEntity, tableAlias=myentity1_}
                      |  |  \-[IDENT] IdentNode: 'other' {originalText=other}
                      |  \-[IDENT] IdentNode: 'other' {originalText=other}
                      \-[ALIAS_REF] IdentNode: 'myentity0_.ID' {alias=e, className=org.hibernate.test.jpa.MyEntity, tableAlias=myentity0_}

14:14:51,823 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:51,823 DEBUG QueryTranslatorImpl:235 - HQL: select e from org.hibernate.test.jpa.MyEntity e where exists (select 1 from org.hibernate.test.jpa.MyEntity e2 where e2.other.name  = 'something' and e2.other.other = e)
14:14:51,823 DEBUG QueryTranslatorImpl:236 - SQL: select myentity0_.ID as ID2_, myentity0_.name as name2_, myentity0_.other as other2_, myentity0_.someSubProperty as someSubP5_2_, myentity0_."TYPE" as TYPE2_2_ from JPA_MYENTITY myentity0_ where exists (select 1 from JPA_MYENTITY myentity1_ cross join JPA_MYENTITY myentity2_ where myentity1_.other=myentity2_.ID and myentity2_.name='something' and myentity2_.other=myentity0_.ID)
14:14:51,823 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:51,823  INFO CustomRunner:139 - Test: testOrderByAlias
14:14:51,824 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select c.name as myname FROM org.hibernate.test.jpa.Item c ORDER BY myname
14:14:51,825 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Item'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'select'
    |     \-[AS] Node: 'as'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'c'
    |        |  \-[IDENT] Node: 'name'
    |        \-[IDENT] Node: 'myname'
    \-[ORDER] Node: 'ORDER'
       \-[IDENT] Node: 'myname'

14:14:51,835 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:51,835 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.jpa.Item (c) -> item0_
14:14:51,835 DEBUG FromReferenceNode:74 - Resolved : c -> item0_.ITEM_ID
14:14:51,835 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:14:51,835 DEBUG FromReferenceNode:74 - Resolved : c.name -> item0_.NAME
14:14:51,836 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( item0_.NAME item0_.ITEM_ID name ) ) ( FromClause{level=1} EJB3_ITEM item0_ ) ( ORDER myname ) )
14:14:51,836 DEBUG JoinProcessor:175 - Using FROM fragment [EJB3_ITEM item0_]
14:14:51,836 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EJB3_ITEM)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'item0_.NAME' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=c.name,tableAlias=item0_,className=org.hibernate.test.jpa.Item,classAlias=c}
    |  |  +-[ALIAS_REF] IdentNode: 'item0_.ITEM_ID' {alias=c, className=org.hibernate.test.jpa.Item, tableAlias=item0_}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[item0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'EJB3_ITEM item0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=EJB3_ITEM,tableAlias=item0_,origin=null,columns={,className=org.hibernate.test.jpa.Item}}
    \-[ORDER] OrderByClause: 'ORDER'
       \-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'myname'

14:14:51,836 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:51,836 DEBUG QueryTranslatorImpl:235 - HQL: select c.name as myname FROM org.hibernate.test.jpa.Item c ORDER BY myname
14:14:51,836 DEBUG QueryTranslatorImpl:236 - SQL: select item0_.NAME as col_0_0_ from EJB3_ITEM item0_ order by col_0_0_
14:14:51,836 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:51,837 DEBUG SQL:104 - 
    select
        item0_.NAME as col_0_0_ 
    from
        EJB3_ITEM item0_ 
    order by
        col_0_0_
14:14:51,848 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select p.name as name, p.stockNumber as stockNo, p.unitPrice as uPrice FROM org.hibernate.test.jpa.Part p ORDER BY name, abs( p.unitPrice ), stockNo
14:14:51,850 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'jpa'
    |  |     |  \-[IDENT] Node: 'Part'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'select'
    |     +-[AS] Node: 'as'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'p'
    |     |  |  \-[IDENT] Node: 'name'
    |     |  \-[IDENT] Node: 'name'
    |     +-[AS] Node: 'as'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'p'
    |     |  |  \-[IDENT] Node: 'stockNumber'
    |     |  \-[IDENT] Node: 'stockNo'
    |     \-[AS] Node: 'as'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'p'
    |        |  \-[IDENT] Node: 'unitPrice'
    |        \-[IDENT] Node: 'uPrice'
    \-[ORDER] Node: 'ORDER'
       +-[IDENT] Node: 'name'
       +-[METHOD_CALL] Node: '('
       |  +-[IDENT] Node: 'abs'
       |  \-[EXPR_LIST] Node: 'exprList'
       |     \-[DOT] Node: '.'
       |        +-[IDENT] Node: 'p'
       |        \-[IDENT] Node: 'unitPrice'
       \-[IDENT] Node: 'stockNo'

14:14:51,868 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:51,868 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.jpa.Part (p) -> part0_
14:14:51,868 DEBUG FromReferenceNode:74 - Resolved : p -> part0_.PART_ID
14:14:51,868 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:14:51,868 DEBUG FromReferenceNode:74 - Resolved : p.name -> part0_.NAME
14:14:51,869 DEBUG FromReferenceNode:74 - Resolved : p -> part0_.PART_ID
14:14:51,869 DEBUG DotNode:599 - getDataType() : stockNumber -> org.hibernate.type.StringType@2dc8de40
14:14:51,869 DEBUG FromReferenceNode:74 - Resolved : p.stockNumber -> part0_.STOCK_NUM
14:14:51,869 DEBUG FromReferenceNode:74 - Resolved : p -> part0_.PART_ID
14:14:51,869 DEBUG DotNode:599 - getDataType() : unitPrice -> org.hibernate.type.BigDecimalType@3bb4a749
14:14:51,869 DEBUG FromReferenceNode:74 - Resolved : p.unitPrice -> part0_.UNIT_PRICE
14:14:51,869 DEBUG FromReferenceNode:74 - Resolved : p -> part0_.PART_ID
14:14:51,869 DEBUG DotNode:599 - getDataType() : unitPrice -> org.hibernate.type.BigDecimalType@3bb4a749
14:14:51,870 DEBUG FromReferenceNode:74 - Resolved : p.unitPrice -> part0_.UNIT_PRICE
14:14:51,870 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( part0_.NAME part0_.PART_ID name ) ( part0_.STOCK_NUM part0_.PART_ID stockNumber ) ( part0_.UNIT_PRICE part0_.PART_ID unitPrice ) ) ( FromClause{level=1} EJB3_PART part0_ ) ( ORDER name ( ( abs ( exprList ( part0_.UNIT_PRICE part0_.PART_ID unitPrice ) ) ) stockNo ) )
14:14:51,870 DEBUG JoinProcessor:175 - Using FROM fragment [EJB3_PART part0_]
14:14:51,870 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (EJB3_PART)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'part0_.NAME' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=p.name,tableAlias=part0_,className=org.hibernate.test.jpa.Part,classAlias=p}
    |  |  +-[ALIAS_REF] IdentNode: 'part0_.PART_ID' {alias=p, className=org.hibernate.test.jpa.Part, tableAlias=part0_}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'part0_.STOCK_NUM' {propertyName=stockNumber,dereferenceType=ALL,propertyPath=stockNumber,path=p.stockNumber,tableAlias=part0_,className=org.hibernate.test.jpa.Part,classAlias=p}
    |  |  +-[ALIAS_REF] IdentNode: 'part0_.PART_ID' {alias=p, className=org.hibernate.test.jpa.Part, tableAlias=part0_}
    |  |  \-[IDENT] IdentNode: 'stockNumber' {originalText=stockNumber}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[DOT] DotNode: 'part0_.UNIT_PRICE' {propertyName=unitPrice,dereferenceType=ALL,propertyPath=unitPrice,path=p.unitPrice,tableAlias=part0_,className=org.hibernate.test.jpa.Part,classAlias=p}
    |  |  +-[ALIAS_REF] IdentNode: 'part0_.PART_ID' {alias=p, className=org.hibernate.test.jpa.Part, tableAlias=part0_}
    |  |  \-[IDENT] IdentNode: 'unitPrice' {originalText=unitPrice}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_2_0_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[part0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'EJB3_PART part0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=EJB3_PART,tableAlias=part0_,origin=null,columns={,className=org.hibernate.test.jpa.Part}}
    \-[ORDER] OrderByClause: 'ORDER'
       +-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'name'
       +-[METHOD_CALL] MethodNode: '('
       |  +-[METHOD_NAME] IdentNode: 'abs' {originalText=abs}
       |  \-[EXPR_LIST] SqlNode: 'exprList'
       |     \-[DOT] DotNode: 'part0_.UNIT_PRICE' {propertyName=unitPrice,dereferenceType=ALL,propertyPath=unitPrice,path=p.unitPrice,tableAlias=part0_,className=org.hibernate.test.jpa.Part,classAlias=p}
       |        +-[ALIAS_REF] IdentNode: 'part0_.PART_ID' {alias=p, className=org.hibernate.test.jpa.Part, tableAlias=part0_}
       |        \-[IDENT] IdentNode: 'unitPrice' {originalText=unitPrice}
       \-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'stockNo'

14:14:51,878 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:51,878 DEBUG QueryTranslatorImpl:235 - HQL: select p.name as name, p.stockNumber as stockNo, p.unitPrice as uPrice FROM org.hibernate.test.jpa.Part p ORDER BY name, abs( p.unitPrice ), stockNo
14:14:51,878 DEBUG QueryTranslatorImpl:236 - SQL: select part0_.NAME as col_0_0_, part0_.STOCK_NUM as col_1_0_, part0_.UNIT_PRICE as col_2_0_ from EJB3_PART part0_ order by col_0_0_, abs(part0_.UNIT_PRICE), col_1_0_
14:14:51,878 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:51,879 DEBUG SQL:104 - 
    select
        part0_.NAME as col_0_0_,
        part0_.STOCK_NUM as col_1_0_,
        part0_.UNIT_PRICE as col_2_0_ 
    from
        EJB3_PART part0_ 
    order by
        col_0_0_,
        abs(part0_.UNIT_PRICE),
        col_1_0_
14:14:51,893  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:14:51,894 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:14:51,894 DEBUG SQL:104 - 
    alter table EJB3_PART 
        drop constraint FKFD4B66FC2A89F363
14:14:51,895 DEBUG SQL:104 - 
    alter table JPA_MYENTITY 
        drop constraint FKE9D28493C4B8BDC8
14:14:51,895 DEBUG SQL:104 - 
    drop table EJB3_ITEM if exists
14:14:51,895 DEBUG SQL:104 - 
    drop table EJB3_PART if exists
14:14:51,895 DEBUG SQL:104 - 
    drop table JPA_MYENTITY if exists
14:14:51,895  INFO SchemaExport:405 - HHH000230: Schema export complete
14:14:51,896  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
