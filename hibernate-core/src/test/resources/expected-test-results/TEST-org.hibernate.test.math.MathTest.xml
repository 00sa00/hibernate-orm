<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" hostname="dhcp-10.15.208.168.stl.redhat.com" name="org.hibernate.test.math.MathTest" tests="1" time="0.149" timestamp="2013-02-28T20:17:30">
  <properties />
  <testcase classname="org.hibernate.test.math.MathTest" name="testBitAnd" time="0.034" />
  <system-out><![CDATA[14:17:30,310  INFO CustomRunner:132 - BeforeClass: org.hibernate.test.math.MathTest
14:17:30,313  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/math/Math.hbm.xml
14:17:30,367  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:17:30,368  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:17:30,368  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:17:30,368  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:17:30,369  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:17:30,370  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:17:30,370  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:17:30,371  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:17:30,371  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:17:30,372  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:17:30,379  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:17:30,399 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:17:30,399 DEBUG SQL:104 - 
    drop table MathEntity if exists
14:17:30,399 DEBUG SQL:104 - 
    create table MathEntity (
        id bigint generated by default as identity,
        value integer not null,
        primary key (id)
    )
14:17:30,400  INFO SchemaExport:405 - HHH000230: Schema export complete
14:17:30,401  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:17:30,401  INFO CustomRunner:139 - Test: testBitAnd
14:17:30,403 DEBUG SQL:104 - 
    insert 
    into
        MathEntity
        (id, value) 
    values
        (null, ?)
14:17:30,404 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select bitand(m.value,0) from org.hibernate.test.math.MathEntity m where m.id=1
14:17:30,407 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'math'
    |  |     |  \-[IDENT] Node: 'MathEntity'
    |  |     \-[ALIAS] Node: 'm'
    |  \-[SELECT] Node: 'select'
    |     \-[METHOD_CALL] Node: '('
    |        +-[IDENT] Node: 'bitand'
    |        \-[EXPR_LIST] Node: 'exprList'
    |           +-[DOT] Node: '.'
    |           |  +-[IDENT] Node: 'm'
    |           |  \-[IDENT] Node: 'value'
    |           \-[NUM_INT] Node: '0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'm'
          |  \-[IDENT] Node: 'id'
          \-[NUM_INT] Node: '1'

14:17:30,408 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:30,417 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.math.MathEntity (m) -> mathentity0_
14:17:30,417 DEBUG FromReferenceNode:74 - Resolved : m -> mathentity0_.id
14:17:30,418 DEBUG DotNode:599 - getDataType() : value -> org.hibernate.type.IntegerType@42252fee
14:17:30,418 DEBUG FromReferenceNode:74 - Resolved : m.value -> mathentity0_.value
14:17:30,418 DEBUG FromReferenceNode:74 - Resolved : m -> mathentity0_.id
14:17:30,418 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.LongType@4bf3f9d
14:17:30,418 DEBUG FromReferenceNode:74 - Resolved : m.id -> mathentity0_.id
14:17:30,419 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( ( bitand ( exprList ( mathentity0_.value mathentity0_.id value ) 0 ) ) ) ( FromClause{level=1} MathEntity mathentity0_ ) ( where ( = ( mathentity0_.id mathentity0_.id id ) 1 ) ) )
14:17:30,419 DEBUG JoinProcessor:175 - Using FROM fragment [MathEntity mathentity0_]
14:17:30,420 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (MathEntity)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[METHOD_CALL] MethodNode: '('
    |  |  +-[METHOD_NAME] IdentNode: 'bitand' {originalText=bitand}
    |  |  \-[EXPR_LIST] SqlNode: 'exprList'
    |  |     +-[DOT] DotNode: 'mathentity0_.value' {propertyName=value,dereferenceType=ALL,propertyPath=value,path=m.value,tableAlias=mathentity0_,className=org.hibernate.test.math.MathEntity,classAlias=m}
    |  |     |  +-[ALIAS_REF] IdentNode: 'mathentity0_.id' {alias=m, className=org.hibernate.test.math.MathEntity, tableAlias=mathentity0_}
    |  |     |  \-[IDENT] IdentNode: 'value' {originalText=value}
    |  |     \-[NUM_INT] LiteralNode: '0'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[m], fromElementByTableAlias=[mathentity0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'MathEntity mathentity0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=m,role=null,tableName=MathEntity,tableAlias=mathentity0_,origin=null,columns={,className=org.hibernate.test.math.MathEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'mathentity0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path=m.id,tableAlias=mathentity0_,className=org.hibernate.test.math.MathEntity,classAlias=m}
          |  +-[ALIAS_REF] IdentNode: 'mathentity0_.id' {alias=m, className=org.hibernate.test.math.MathEntity, tableAlias=mathentity0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_INT] LiteralNode: '1'

14:17:30,420 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:30,427 DEBUG QueryTranslatorImpl:235 - HQL: select bitand(m.value,0) from org.hibernate.test.math.MathEntity m where m.id=1
14:17:30,428 DEBUG QueryTranslatorImpl:236 - SQL: select bitand(mathentity0_.value, 0) as col_0_0_ from MathEntity mathentity0_ where mathentity0_.id=1
14:17:30,428 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:30,428 DEBUG SQL:104 - 
    select
        bitand(mathentity0_.value,
        0) as col_0_0_ 
    from
        MathEntity mathentity0_ 
    where
        mathentity0_.id=1
14:17:30,429 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select bitand(m.value,2) from org.hibernate.test.math.MathEntity m where m.id=1
14:17:30,430 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'math'
    |  |     |  \-[IDENT] Node: 'MathEntity'
    |  |     \-[ALIAS] Node: 'm'
    |  \-[SELECT] Node: 'select'
    |     \-[METHOD_CALL] Node: '('
    |        +-[IDENT] Node: 'bitand'
    |        \-[EXPR_LIST] Node: 'exprList'
    |           +-[DOT] Node: '.'
    |           |  +-[IDENT] Node: 'm'
    |           |  \-[IDENT] Node: 'value'
    |           \-[NUM_INT] Node: '2'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'm'
          |  \-[IDENT] Node: 'id'
          \-[NUM_INT] Node: '1'

14:17:30,430 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:30,430 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.math.MathEntity (m) -> mathentity0_
14:17:30,430 DEBUG FromReferenceNode:74 - Resolved : m -> mathentity0_.id
14:17:30,431 DEBUG DotNode:599 - getDataType() : value -> org.hibernate.type.IntegerType@42252fee
14:17:30,431 DEBUG FromReferenceNode:74 - Resolved : m.value -> mathentity0_.value
14:17:30,431 DEBUG FromReferenceNode:74 - Resolved : m -> mathentity0_.id
14:17:30,431 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.LongType@4bf3f9d
14:17:30,431 DEBUG FromReferenceNode:74 - Resolved : m.id -> mathentity0_.id
14:17:30,431 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( ( bitand ( exprList ( mathentity0_.value mathentity0_.id value ) 2 ) ) ) ( FromClause{level=1} MathEntity mathentity0_ ) ( where ( = ( mathentity0_.id mathentity0_.id id ) 1 ) ) )
14:17:30,431 DEBUG JoinProcessor:175 - Using FROM fragment [MathEntity mathentity0_]
14:17:30,432 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (MathEntity)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[METHOD_CALL] MethodNode: '('
    |  |  +-[METHOD_NAME] IdentNode: 'bitand' {originalText=bitand}
    |  |  \-[EXPR_LIST] SqlNode: 'exprList'
    |  |     +-[DOT] DotNode: 'mathentity0_.value' {propertyName=value,dereferenceType=ALL,propertyPath=value,path=m.value,tableAlias=mathentity0_,className=org.hibernate.test.math.MathEntity,classAlias=m}
    |  |     |  +-[ALIAS_REF] IdentNode: 'mathentity0_.id' {alias=m, className=org.hibernate.test.math.MathEntity, tableAlias=mathentity0_}
    |  |     |  \-[IDENT] IdentNode: 'value' {originalText=value}
    |  |     \-[NUM_INT] LiteralNode: '2'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[m], fromElementByTableAlias=[mathentity0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'MathEntity mathentity0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=m,role=null,tableName=MathEntity,tableAlias=mathentity0_,origin=null,columns={,className=org.hibernate.test.math.MathEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'mathentity0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path=m.id,tableAlias=mathentity0_,className=org.hibernate.test.math.MathEntity,classAlias=m}
          |  +-[ALIAS_REF] IdentNode: 'mathentity0_.id' {alias=m, className=org.hibernate.test.math.MathEntity, tableAlias=mathentity0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_INT] LiteralNode: '1'

14:17:30,432 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:30,432 DEBUG QueryTranslatorImpl:235 - HQL: select bitand(m.value,2) from org.hibernate.test.math.MathEntity m where m.id=1
14:17:30,432 DEBUG QueryTranslatorImpl:236 - SQL: select bitand(mathentity0_.value, 2) as col_0_0_ from MathEntity mathentity0_ where mathentity0_.id=1
14:17:30,432 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:30,432 DEBUG SQL:104 - 
    select
        bitand(mathentity0_.value,
        2) as col_0_0_ 
    from
        MathEntity mathentity0_ 
    where
        mathentity0_.id=1
14:17:30,433 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select bitand(m.value,3) from org.hibernate.test.math.MathEntity m where m.id=1
14:17:30,434 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'math'
    |  |     |  \-[IDENT] Node: 'MathEntity'
    |  |     \-[ALIAS] Node: 'm'
    |  \-[SELECT] Node: 'select'
    |     \-[METHOD_CALL] Node: '('
    |        +-[IDENT] Node: 'bitand'
    |        \-[EXPR_LIST] Node: 'exprList'
    |           +-[DOT] Node: '.'
    |           |  +-[IDENT] Node: 'm'
    |           |  \-[IDENT] Node: 'value'
    |           \-[NUM_INT] Node: '3'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'm'
          |  \-[IDENT] Node: 'id'
          \-[NUM_INT] Node: '1'

14:17:30,434 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:30,434 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.math.MathEntity (m) -> mathentity0_
14:17:30,434 DEBUG FromReferenceNode:74 - Resolved : m -> mathentity0_.id
14:17:30,434 DEBUG DotNode:599 - getDataType() : value -> org.hibernate.type.IntegerType@42252fee
14:17:30,434 DEBUG FromReferenceNode:74 - Resolved : m.value -> mathentity0_.value
14:17:30,434 DEBUG FromReferenceNode:74 - Resolved : m -> mathentity0_.id
14:17:30,435 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.LongType@4bf3f9d
14:17:30,435 DEBUG FromReferenceNode:74 - Resolved : m.id -> mathentity0_.id
14:17:30,435 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( ( bitand ( exprList ( mathentity0_.value mathentity0_.id value ) 3 ) ) ) ( FromClause{level=1} MathEntity mathentity0_ ) ( where ( = ( mathentity0_.id mathentity0_.id id ) 1 ) ) )
14:17:30,435 DEBUG JoinProcessor:175 - Using FROM fragment [MathEntity mathentity0_]
14:17:30,435 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (MathEntity)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[METHOD_CALL] MethodNode: '('
    |  |  +-[METHOD_NAME] IdentNode: 'bitand' {originalText=bitand}
    |  |  \-[EXPR_LIST] SqlNode: 'exprList'
    |  |     +-[DOT] DotNode: 'mathentity0_.value' {propertyName=value,dereferenceType=ALL,propertyPath=value,path=m.value,tableAlias=mathentity0_,className=org.hibernate.test.math.MathEntity,classAlias=m}
    |  |     |  +-[ALIAS_REF] IdentNode: 'mathentity0_.id' {alias=m, className=org.hibernate.test.math.MathEntity, tableAlias=mathentity0_}
    |  |     |  \-[IDENT] IdentNode: 'value' {originalText=value}
    |  |     \-[NUM_INT] LiteralNode: '3'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[m], fromElementByTableAlias=[mathentity0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'MathEntity mathentity0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=m,role=null,tableName=MathEntity,tableAlias=mathentity0_,origin=null,columns={,className=org.hibernate.test.math.MathEntity}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'mathentity0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path=m.id,tableAlias=mathentity0_,className=org.hibernate.test.math.MathEntity,classAlias=m}
          |  +-[ALIAS_REF] IdentNode: 'mathentity0_.id' {alias=m, className=org.hibernate.test.math.MathEntity, tableAlias=mathentity0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_INT] LiteralNode: '1'

14:17:30,435 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:30,435 DEBUG QueryTranslatorImpl:235 - HQL: select bitand(m.value,3) from org.hibernate.test.math.MathEntity m where m.id=1
14:17:30,435 DEBUG QueryTranslatorImpl:236 - SQL: select bitand(mathentity0_.value, 3) as col_0_0_ from MathEntity mathentity0_ where mathentity0_.id=1
14:17:30,436 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:30,436 DEBUG SQL:104 - 
    select
        bitand(mathentity0_.value,
        3) as col_0_0_ 
    from
        MathEntity mathentity0_ 
    where
        mathentity0_.id=1
14:17:30,436  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:17:30,438 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:17:30,438 DEBUG SQL:104 - 
    drop table MathEntity if exists
14:17:30,438  INFO SchemaExport:405 - HHH000230: Schema export complete
14:17:30,438  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
