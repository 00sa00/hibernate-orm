<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" hostname="dhcp-10.15.208.168.stl.redhat.com" name="org.hibernate.test.joinedsubclass.JoinedSubclassTest" tests="5" time="0.892" timestamp="2013-02-28T20:14:49">
  <properties />
  <testcase classname="org.hibernate.test.joinedsubclass.JoinedSubclassTest" name="testAccessAsIncorrectSubclass" time="0.004" />
  <testcase classname="org.hibernate.test.joinedsubclass.JoinedSubclassTest" name="testCustomColumnReadAndWrite" time="0.199" />
  <testcase classname="org.hibernate.test.joinedsubclass.JoinedSubclassTest" name="testJoinedSubclass" time="0.388" />
  <testcase classname="org.hibernate.test.joinedsubclass.JoinedSubclassTest" name="testLockingJoinedSubclass" time="0.028" />
  <testcase classname="org.hibernate.test.joinedsubclass.JoinedSubclassTest" name="testQuerySubclassAttribute" time="0.118" />
  <system-out><![CDATA[14:14:49,273  INFO CustomRunner:132 - BeforeClass: org.hibernate.test.joinedsubclass.JoinedSubclassTest
14:14:49,275  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/joinedsubclass/Person.hbm.xml
14:14:49,309  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:14:49,310  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:14:49,310  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:14:49,310  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:14:49,311  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:14:49,312  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:14:49,312  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:14:49,313  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:14:49,313  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:14:49,313  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:14:49,347  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:14:49,348 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:14:49,348 DEBUG SQL:104 - 
    alter table JEmployee 
        drop constraint FK26C5611884240E51
14:14:49,349 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table JEmployee drop constraint FK26C5611884240E51
14:14:49,349 ERROR SchemaExport:426 - Table "JEMPLOYEE" not found; SQL statement:

    alter table JEmployee 
        drop constraint FK26C5611884240E51 [42102-145]
14:14:49,349 DEBUG SQL:104 - 
    alter table JEmployee 
        drop constraint FK26C56118833E7D52
14:14:49,349 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table JEmployee drop constraint FK26C56118833E7D52
14:14:49,349 ERROR SchemaExport:426 - Table "JEMPLOYEE" not found; SQL statement:

    alter table JEmployee 
        drop constraint FK26C56118833E7D52 [42102-145]
14:14:49,350 DEBUG SQL:104 - 
    alter table JManager 
        drop constraint FK9C18A00384240E51
14:14:49,350 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table JManager drop constraint FK9C18A00384240E51
14:14:49,350 ERROR SchemaExport:426 - Table "JMANAGER" not found; SQL statement:

    alter table JManager 
        drop constraint FK9C18A00384240E51 [42102-145]
14:14:49,350 DEBUG SQL:104 - 
    alter table JManager 
        drop constraint FK9C18A003D50B5906
14:14:49,350 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table JManager drop constraint FK9C18A003D50B5906
14:14:49,350 ERROR SchemaExport:426 - Table "JMANAGER" not found; SQL statement:

    alter table JManager 
        drop constraint FK9C18A003D50B5906 [42102-145]
14:14:49,351 DEBUG SQL:104 - 
    drop table JEmployee if exists
14:14:49,351 DEBUG SQL:104 - 
    drop table JManager if exists
14:14:49,351 DEBUG SQL:104 - 
    drop table JPerson if exists
14:14:49,351 DEBUG SQL:104 - 
    create table JEmployee (
        person_id bigint not null,
        "title" varchar(20) not null,
        salary decimal(19,2),
        pwd_expiry_weeks double not null,
        manager bigint,
        primary key (person_id)
    )
14:14:49,352 DEBUG SQL:104 - 
    create table JManager (
        person_id bigint not null,
        comments varchar(255),
        salesperson bigint,
        primary key (person_id)
    )
14:14:49,352 DEBUG SQL:104 - 
    create table JPerson (
        person_id bigint generated by default as identity,
        version integer not null,
        name varchar(80) not null,
        sex char(255) not null,
        height_centimeters double not null,
        address varchar(255),
        zip varchar(255),
        country varchar(255),
        primary key (person_id)
    )
14:14:49,353 DEBUG SQL:104 - 
    alter table JEmployee 
        add constraint FK26C5611884240E51 
        foreign key (person_id) 
        references JPerson
14:14:49,353 DEBUG SQL:104 - 
    alter table JEmployee 
        add constraint FK26C56118833E7D52 
        foreign key (manager) 
        references JEmployee
14:14:49,354 DEBUG SQL:104 - 
    alter table JManager 
        add constraint FK9C18A00384240E51 
        foreign key (person_id) 
        references JPerson
14:14:49,354 DEBUG SQL:104 - 
    alter table JManager 
        add constraint FK9C18A003D50B5906 
        foreign key (salesperson) 
        references JEmployee
14:14:49,355  INFO SchemaExport:405 - HHH000230: Schema export complete
14:14:49,355  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:14:49,355  INFO CustomRunner:139 - Test: testAccessAsIncorrectSubclass
14:14:49,357 DEBUG SQL:104 - 
    insert 
    into
        JPerson
        (person_id, version, name, sex, height_centimeters, address, zip, country) 
    values
        (null, ?, ?, ?, ? * 2.54E0, ?, ?, ?)
14:14:49,357 DEBUG SQL:104 - 
    insert 
    into
        JEmployee
        ("title", salary, pwd_expiry_weeks, manager, person_id) 
    values
        (?, ?, ? / 7.0E0, ?, ?)
14:14:49,358 DEBUG SQL:104 - 
    select
        customer0_.person_id as person1_2_0_,
        customer0_1_.version as version2_0_,
        customer0_1_.name as name2_0_,
        customer0_1_.sex as sex2_0_,
        customer0_1_.height_centimeters / 2.54E0 as height5_2_0_,
        customer0_1_.address as address2_0_,
        customer0_1_.zip as zip2_0_,
        customer0_1_.country as country2_0_,
        customer0_.comments as comments1_0_,
        customer0_.salesperson as salesper3_1_0_ 
    from
        JManager customer0_ 
    inner join
        JPerson customer0_1_ 
            on customer0_.person_id=customer0_1_.person_id 
    where
        customer0_.person_id=?
14:14:49,358 DEBUG SQL:104 - 
    select
        employee0_.person_id as person1_2_0_,
        employee0_1_.version as version2_0_,
        employee0_1_.name as name2_0_,
        employee0_1_.sex as sex2_0_,
        employee0_1_.height_centimeters / 2.54E0 as height5_2_0_,
        employee0_1_.address as address2_0_,
        employee0_1_.zip as zip2_0_,
        employee0_1_.country as country2_0_,
        employee0_."title" as title2_0_0_,
        employee0_.salary as salary0_0_,
        employee0_.pwd_expiry_weeks * 7.0E0 as pwd4_0_0_,
        employee0_.manager as manager0_0_ 
    from
        JEmployee employee0_ 
    inner join
        JPerson employee0_1_ 
            on employee0_.person_id=employee0_1_.person_id 
    where
        employee0_.person_id=?
14:14:49,359 DEBUG SQL:104 - 
    delete 
    from
        JEmployee 
    where
        person_id=?
14:14:49,359 DEBUG SQL:104 - 
    delete 
    from
        JPerson 
    where
        person_id=? 
        and version=?
14:14:49,360  INFO CustomRunner:139 - Test: testCustomColumnReadAndWrite
14:14:49,361 DEBUG SQL:104 - 
    insert 
    into
        JPerson
        (person_id, version, name, sex, height_centimeters, address, zip, country) 
    values
        (null, ?, ?, ?, ? * 2.54E0, ?, ?, ?)
14:14:49,362 DEBUG SQL:104 - 
    insert 
    into
        JPerson
        (person_id, version, name, sex, height_centimeters, address, zip, country) 
    values
        (null, ?, ?, ?, ? * 2.54E0, ?, ?, ?)
14:14:49,362 DEBUG SQL:104 - 
    insert 
    into
        JEmployee
        ("title", salary, pwd_expiry_weeks, manager, person_id) 
    values
        (?, ?, ? / 7.0E0, ?, ?)
14:14:49,362 DEBUG SQL:104 - 
    select
        height_centimeters 
    from
        JPerson 
    where
        name='Emmanuel'
14:14:49,379 DEBUG SQL:104 - 
    select
        pwd_expiry_weeks 
    from
        JEmployee 
    where
        person_id=?
14:14:49,380 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select p.heightInches from org.hibernate.test.joinedsubclass.Person p where p.name = 'Emmanuel'
14:14:49,381 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'joinedsubclass'
    |  |     |  \-[IDENT] Node: 'Person'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'p'
    |        \-[IDENT] Node: 'heightInches'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'name'
          \-[QUOTED_STRING] Node: ''Emmanuel''

14:14:49,381 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,382 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.joinedsubclass.Person (p) -> person0_
14:14:49,382 DEBUG FromReferenceNode:74 - Resolved : p -> person0_.person_id
14:14:49,382 DEBUG DotNode:599 - getDataType() : heightInches -> org.hibernate.type.DoubleType@26e7f2ac
14:14:49,382 DEBUG FromReferenceNode:74 - Resolved : p.heightInches -> person0_.height_centimeters / 2.54E0
14:14:49,382 DEBUG FromReferenceNode:74 - Resolved : p -> person0_.person_id
14:14:49,382 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:14:49,382 DEBUG FromReferenceNode:74 - Resolved : p.name -> person0_.name
14:14:49,382 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( person0_.height_centimeters / 2.54E0 person0_.person_id heightInches ) ) ( FromClause{level=1} JPerson person0_ ) ( where ( = ( person0_.name person0_.person_id name ) 'Emmanuel' ) ) )
14:14:49,383 DEBUG JoinProcessor:175 - Using FROM fragment [JPerson person0_]
14:14:49,383 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (JPerson)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'person0_.height_centimeters / 2.54E0' {propertyName=heightInches,dereferenceType=ALL,propertyPath=heightInches,path=p.heightInches,tableAlias=person0_,className=org.hibernate.test.joinedsubclass.Person,classAlias=p}
    |  |  +-[ALIAS_REF] IdentNode: 'person0_.person_id' {alias=p, className=org.hibernate.test.joinedsubclass.Person, tableAlias=person0_}
    |  |  \-[IDENT] IdentNode: 'heightInches' {originalText=heightInches}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[person0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'JPerson person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=JPerson,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.joinedsubclass.Person}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'person0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=p.name,tableAlias=person0_,className=org.hibernate.test.joinedsubclass.Person,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'person0_.person_id' {alias=p, className=org.hibernate.test.joinedsubclass.Person, tableAlias=person0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[QUOTED_STRING] LiteralNode: ''Emmanuel''

14:14:49,383 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,383 DEBUG QueryTranslatorImpl:235 - HQL: select p.heightInches from org.hibernate.test.joinedsubclass.Person p where p.name = 'Emmanuel'
14:14:49,383 DEBUG QueryTranslatorImpl:236 - SQL: select person0_.height_centimeters / 2.54E0 as col_0_0_ from JPerson person0_ where person0_.name='Emmanuel'
14:14:49,383 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,384 DEBUG SQL:104 - 
    select
        person0_.height_centimeters / 2.54E0 as col_0_0_ 
    from
        JPerson person0_ 
    where
        person0_.name='Emmanuel'
14:14:49,384 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select e.passwordExpiryDays from org.hibernate.test.joinedsubclass.Employee e where e.name = 'Steve'
14:14:49,385 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'joinedsubclass'
    |  |     |  \-[IDENT] Node: 'Employee'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'e'
    |        \-[IDENT] Node: 'passwordExpiryDays'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'name'
          \-[QUOTED_STRING] Node: ''Steve''

14:14:49,385 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,386 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.joinedsubclass.Employee (e) -> employee0_
14:14:49,386 DEBUG FromReferenceNode:74 - Resolved : e -> employee0_.person_id
14:14:49,386 DEBUG DotNode:599 - getDataType() : passwordExpiryDays -> org.hibernate.type.DoubleType@26e7f2ac
14:14:49,386 DEBUG FromReferenceNode:74 - Resolved : e.passwordExpiryDays -> employee0_.pwd_expiry_weeks * 7.0E0
14:14:49,386 DEBUG FromReferenceNode:74 - Resolved : e -> employee0_.person_id
14:14:49,386 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:14:49,386 DEBUG FromReferenceNode:74 - Resolved : e.name -> employee0_1_.name
14:14:49,387 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( employee0_.pwd_expiry_weeks * 7.0E0 employee0_.person_id passwordExpiryDays ) ) ( FromClause{level=1} JEmployee employee0_ ) ( where ( = ( employee0_1_.name employee0_.person_id name ) 'Steve' ) ) )
14:14:49,387 DEBUG JoinProcessor:175 - Using FROM fragment [JEmployee employee0_ inner join JPerson employee0_1_ on employee0_.person_id=employee0_1_.person_id]
14:14:49,387 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (JPerson,JEmployee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'employee0_.pwd_expiry_weeks * 7.0E0' {propertyName=passwordExpiryDays,dereferenceType=ALL,propertyPath=passwordExpiryDays,path=e.passwordExpiryDays,tableAlias=employee0_,className=org.hibernate.test.joinedsubclass.Employee,classAlias=e}
    |  |  +-[ALIAS_REF] IdentNode: 'employee0_.person_id' {alias=e, className=org.hibernate.test.joinedsubclass.Employee, tableAlias=employee0_}
    |  |  \-[IDENT] IdentNode: 'passwordExpiryDays' {originalText=passwordExpiryDays}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'JEmployee employee0_ inner join JPerson employee0_1_ on employee0_.person_id=employee0_1_.person_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=JEmployee,tableAlias=employee0_,origin=null,columns={,className=org.hibernate.test.joinedsubclass.Employee}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'employee0_1_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=e.name,tableAlias=employee0_,className=org.hibernate.test.joinedsubclass.Employee,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'employee0_.person_id' {alias=e, className=org.hibernate.test.joinedsubclass.Employee, tableAlias=employee0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[QUOTED_STRING] LiteralNode: ''Steve''

14:14:49,387 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,387 DEBUG QueryTranslatorImpl:235 - HQL: select e.passwordExpiryDays from org.hibernate.test.joinedsubclass.Employee e where e.name = 'Steve'
14:14:49,387 DEBUG QueryTranslatorImpl:236 - SQL: select employee0_.pwd_expiry_weeks * 7.0E0 as col_0_0_ from JEmployee employee0_ inner join JPerson employee0_1_ on employee0_.person_id=employee0_1_.person_id where employee0_1_.name='Steve'
14:14:49,387 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,388 DEBUG SQL:104 - 
    select
        employee0_.pwd_expiry_weeks * 7.0E0 as col_0_0_ 
    from
        JEmployee employee0_ 
    inner join
        JPerson employee0_1_ 
            on employee0_.person_id=employee0_1_.person_id 
    where
        employee0_1_.name='Steve'
14:14:49,388 DEBUG SQL:104 - 
    select
        this_.person_id as person1_2_0_,
        this_.version as version2_0_,
        this_.name as name2_0_,
        this_.sex as sex2_0_,
        this_.height_centimeters / 2.54E0 as height5_2_0_,
        this_.address as address2_0_,
        this_.zip as zip2_0_,
        this_.country as country2_0_,
        this_1_."title" as title2_0_0_,
        this_1_.salary as salary0_0_,
        this_1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_0_,
        this_1_.manager as manager0_0_,
        this_2_.comments as comments1_0_,
        this_2_.salesperson as salesper3_1_0_,
        case 
            when this_1_.person_id is not null then 1 
            when this_2_.person_id is not null then 2 
            when this_.person_id is not null then 0 
        end as clazz_0_ 
    from
        JPerson this_ 
    left outer join
        JEmployee this_1_ 
            on this_.person_id=this_1_.person_id 
    left outer join
        JManager this_2_ 
            on this_.person_id=this_2_.person_id 
    where
        this_.height_centimeters / 2.54E0 between ? and ?
14:14:49,396 DEBUG SQL:104 - 
    select
        this_.person_id as person1_2_0_,
        this_1_.version as version2_0_,
        this_1_.name as name2_0_,
        this_1_.sex as sex2_0_,
        this_1_.height_centimeters / 2.54E0 as height5_2_0_,
        this_1_.address as address2_0_,
        this_1_.zip as zip2_0_,
        this_1_.country as country2_0_,
        this_."title" as title2_0_0_,
        this_.salary as salary0_0_,
        this_.pwd_expiry_weeks * 7.0E0 as pwd4_0_0_,
        this_.manager as manager0_0_ 
    from
        JEmployee this_ 
    inner join
        JPerson this_1_ 
            on this_.person_id=this_1_.person_id 
    where
        this_.pwd_expiry_weeks * 7.0E0 between ? and ?
14:14:49,396 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.joinedsubclass.Person p where p.heightInches between ? and ?
14:14:49,397 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  |  \-[IDENT] Node: 'test'
    |        |  |  \-[IDENT] Node: 'joinedsubclass'
    |        |  \-[IDENT] Node: 'Person'
    |        \-[ALIAS] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'heightInches'
          +-[PARAM] Node: '?'
          \-[PARAM] Node: '?'

14:14:49,441 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,442 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.joinedsubclass.Person (p) -> person0_
14:14:49,442 DEBUG FromReferenceNode:74 - Resolved : p -> person0_.person_id
14:14:49,442 DEBUG DotNode:599 - getDataType() : heightInches -> org.hibernate.type.DoubleType@26e7f2ac
14:14:49,442 DEBUG FromReferenceNode:74 - Resolved : p.heightInches -> person0_.height_centimeters / 2.54E0
14:14:49,443  WARN HqlSqlWalker:929 - [DEPRECATION] Encountered positional parameter near line 1, column 78.  Positional parameter are considered deprecated; use named parameters or JPA-style positional parameters instead.
14:14:49,443  WARN HqlSqlWalker:929 - [DEPRECATION] Encountered positional parameter near line 1, column 84.  Positional parameter are considered deprecated; use named parameters or JPA-style positional parameters instead.
14:14:49,443 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} JPerson person0_ ) ( where ( between ( person0_.height_centimeters / 2.54E0 person0_.person_id heightInches ) ? ? ) ) )
14:14:49,454 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:14:49,455 DEBUG JoinProcessor:175 - Using FROM fragment [JPerson person0_ left outer join JEmployee person0_1_ on person0_.person_id=person0_1_.person_id left outer join JManager person0_2_ on person0_.person_id=person0_2_.person_id]
14:14:49,455 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (JPerson)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'person0_.person_id as person1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=JPerson,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.joinedsubclass.Person}}}
    |  \-[SQL_TOKEN] SqlFragment: 'person0_.version as version2_, person0_.name as name2_, person0_.sex as sex2_, person0_.height_centimeters / 2.54E0 as height5_2_, person0_.address as address2_, person0_.zip as zip2_, person0_.country as country2_, person0_1_."title" as title2_0_, person0_1_.salary as salary0_, person0_1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_, person0_1_.manager as manager0_, person0_2_.comments as comments1_, person0_2_.salesperson as salesper3_1_, case when person0_1_.person_id is not null then 1 when person0_2_.person_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[person0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'JPerson person0_ left outer join JEmployee person0_1_ on person0_.person_id=person0_1_.person_id left outer join JManager person0_2_ on person0_.person_id=person0_2_.person_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=JPerson,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.joinedsubclass.Person}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'person0_.height_centimeters / 2.54E0' {propertyName=heightInches,dereferenceType=ALL,propertyPath=heightInches,path=p.heightInches,tableAlias=person0_,className=org.hibernate.test.joinedsubclass.Person,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'person0_.person_id' {alias=p, className=org.hibernate.test.joinedsubclass.Person, tableAlias=person0_}
          |  \-[IDENT] IdentNode: 'heightInches' {originalText=heightInches}
          +-[PARAM] ParameterNode: '?' {ordinal=0, expectedType=org.hibernate.type.DoubleType@26e7f2ac}
          \-[PARAM] ParameterNode: '?' {ordinal=1, expectedType=org.hibernate.type.DoubleType@26e7f2ac}

14:14:49,455 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,455 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.joinedsubclass.Person p where p.heightInches between ? and ?
14:14:49,455 DEBUG QueryTranslatorImpl:236 - SQL: select person0_.person_id as person1_2_, person0_.version as version2_, person0_.name as name2_, person0_.sex as sex2_, person0_.height_centimeters / 2.54E0 as height5_2_, person0_.address as address2_, person0_.zip as zip2_, person0_.country as country2_, person0_1_."title" as title2_0_, person0_1_.salary as salary0_, person0_1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_, person0_1_.manager as manager0_, person0_2_.comments as comments1_, person0_2_.salesperson as salesper3_1_, case when person0_1_.person_id is not null then 1 when person0_2_.person_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_ from JPerson person0_ left outer join JEmployee person0_1_ on person0_.person_id=person0_1_.person_id left outer join JManager person0_2_ on person0_.person_id=person0_2_.person_id where person0_.height_centimeters / 2.54E0 between ? and ?
14:14:49,455 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,456 DEBUG SQL:104 - 
    select
        person0_.person_id as person1_2_,
        person0_.version as version2_,
        person0_.name as name2_,
        person0_.sex as sex2_,
        person0_.height_centimeters / 2.54E0 as height5_2_,
        person0_.address as address2_,
        person0_.zip as zip2_,
        person0_.country as country2_,
        person0_1_."title" as title2_0_,
        person0_1_.salary as salary0_,
        person0_1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_,
        person0_1_.manager as manager0_,
        person0_2_.comments as comments1_,
        person0_2_.salesperson as salesper3_1_,
        case 
            when person0_1_.person_id is not null then 1 
            when person0_2_.person_id is not null then 2 
            when person0_.person_id is not null then 0 
        end as clazz_ 
    from
        JPerson person0_ 
    left outer join
        JEmployee person0_1_ 
            on person0_.person_id=person0_1_.person_id 
    left outer join
        JManager person0_2_ 
            on person0_.person_id=person0_2_.person_id 
    where
        person0_.height_centimeters / 2.54E0 between ? and ?
14:14:49,457 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.joinedsubclass.Employee e where e.passwordExpiryDays between ? and ?
14:14:49,458 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  |  \-[IDENT] Node: 'test'
    |        |  |  \-[IDENT] Node: 'joinedsubclass'
    |        |  \-[IDENT] Node: 'Employee'
    |        \-[ALIAS] Node: 'e'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'passwordExpiryDays'
          +-[PARAM] Node: '?'
          \-[PARAM] Node: '?'

14:14:49,477 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,490 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.joinedsubclass.Employee (e) -> employee0_
14:14:49,491 DEBUG FromReferenceNode:74 - Resolved : e -> employee0_.person_id
14:14:49,491 DEBUG DotNode:599 - getDataType() : passwordExpiryDays -> org.hibernate.type.DoubleType@26e7f2ac
14:14:49,491 DEBUG FromReferenceNode:74 - Resolved : e.passwordExpiryDays -> employee0_.pwd_expiry_weeks * 7.0E0
14:14:49,491  WARN HqlSqlWalker:929 - [DEPRECATION] Encountered positional parameter near line 1, column 86.  Positional parameter are considered deprecated; use named parameters or JPA-style positional parameters instead.
14:14:49,491  WARN HqlSqlWalker:929 - [DEPRECATION] Encountered positional parameter near line 1, column 92.  Positional parameter are considered deprecated; use named parameters or JPA-style positional parameters instead.
14:14:49,491 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} JEmployee employee0_ ) ( where ( between ( employee0_.pwd_expiry_weeks * 7.0E0 employee0_.person_id passwordExpiryDays ) ? ? ) ) )
14:14:49,491 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:14:49,492 DEBUG JoinProcessor:175 - Using FROM fragment [JEmployee employee0_ inner join JPerson employee0_1_ on employee0_.person_id=employee0_1_.person_id]
14:14:49,492 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (JPerson,JEmployee)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'employee0_.person_id as person1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=JEmployee,tableAlias=employee0_,origin=null,columns={,className=org.hibernate.test.joinedsubclass.Employee}}}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_1_.version as version2_, employee0_1_.name as name2_, employee0_1_.sex as sex2_, employee0_1_.height_centimeters / 2.54E0 as height5_2_, employee0_1_.address as address2_, employee0_1_.zip as zip2_, employee0_1_.country as country2_, employee0_."title" as title2_0_, employee0_.salary as salary0_, employee0_.pwd_expiry_weeks * 7.0E0 as pwd4_0_, employee0_.manager as manager0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'JEmployee employee0_ inner join JPerson employee0_1_ on employee0_.person_id=employee0_1_.person_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=JEmployee,tableAlias=employee0_,origin=null,columns={,className=org.hibernate.test.joinedsubclass.Employee}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'employee0_.pwd_expiry_weeks * 7.0E0' {propertyName=passwordExpiryDays,dereferenceType=ALL,propertyPath=passwordExpiryDays,path=e.passwordExpiryDays,tableAlias=employee0_,className=org.hibernate.test.joinedsubclass.Employee,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'employee0_.person_id' {alias=e, className=org.hibernate.test.joinedsubclass.Employee, tableAlias=employee0_}
          |  \-[IDENT] IdentNode: 'passwordExpiryDays' {originalText=passwordExpiryDays}
          +-[PARAM] ParameterNode: '?' {ordinal=0, expectedType=org.hibernate.type.DoubleType@26e7f2ac}
          \-[PARAM] ParameterNode: '?' {ordinal=1, expectedType=org.hibernate.type.DoubleType@26e7f2ac}

14:14:49,511 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,511 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.joinedsubclass.Employee e where e.passwordExpiryDays between ? and ?
14:14:49,511 DEBUG QueryTranslatorImpl:236 - SQL: select employee0_.person_id as person1_2_, employee0_1_.version as version2_, employee0_1_.name as name2_, employee0_1_.sex as sex2_, employee0_1_.height_centimeters / 2.54E0 as height5_2_, employee0_1_.address as address2_, employee0_1_.zip as zip2_, employee0_1_.country as country2_, employee0_."title" as title2_0_, employee0_.salary as salary0_, employee0_.pwd_expiry_weeks * 7.0E0 as pwd4_0_, employee0_.manager as manager0_ from JEmployee employee0_ inner join JPerson employee0_1_ on employee0_.person_id=employee0_1_.person_id where employee0_.pwd_expiry_weeks * 7.0E0 between ? and ?
14:14:49,511 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,512 DEBUG SQL:104 - 
    select
        employee0_.person_id as person1_2_,
        employee0_1_.version as version2_,
        employee0_1_.name as name2_,
        employee0_1_.sex as sex2_,
        employee0_1_.height_centimeters / 2.54E0 as height5_2_,
        employee0_1_.address as address2_,
        employee0_1_.zip as zip2_,
        employee0_1_.country as country2_,
        employee0_."title" as title2_0_,
        employee0_.salary as salary0_,
        employee0_.pwd_expiry_weeks * 7.0E0 as pwd4_0_,
        employee0_.manager as manager0_ 
    from
        JEmployee employee0_ 
    inner join
        JPerson employee0_1_ 
            on employee0_.person_id=employee0_1_.person_id 
    where
        employee0_.pwd_expiry_weeks * 7.0E0 between ? and ?
14:14:49,513 DEBUG SQL:104 - 
    update
        JPerson 
    set
        version=?,
        name=?,
        height_centimeters=? * 2.54E0,
        address=?,
        zip=?,
        country=? 
    where
        person_id=? 
        and version=?
14:14:49,546 DEBUG SQL:104 - 
    update
        JPerson 
    set
        version=?,
        name=?,
        height_centimeters=? * 2.54E0,
        address=?,
        zip=?,
        country=? 
    where
        person_id=? 
        and version=?
14:14:49,546 DEBUG SQL:104 - 
    update
        JEmployee 
    set
        "title"=?,
        salary=?,
        pwd_expiry_weeks=? / 7.0E0,
        manager=? 
    where
        person_id=?
14:14:49,547 DEBUG SQL:104 - 
    select
        height_centimeters 
    from
        JPerson 
    where
        name='Emmanuel'
14:14:49,557 DEBUG SQL:104 - 
    select
        pwd_expiry_weeks 
    from
        JEmployee 
    where
        person_id=?
14:14:49,558 DEBUG SQL:104 - 
    delete 
    from
        JPerson 
    where
        person_id=? 
        and version=?
14:14:49,558 DEBUG SQL:104 - 
    delete 
    from
        JEmployee 
    where
        person_id=?
14:14:49,558 DEBUG SQL:104 - 
    delete 
    from
        JPerson 
    where
        person_id=? 
        and version=?
14:14:49,559  INFO CustomRunner:139 - Test: testJoinedSubclass
14:14:49,572 DEBUG SQL:104 - 
    insert 
    into
        JPerson
        (person_id, version, name, sex, height_centimeters, address, zip, country) 
    values
        (null, ?, ?, ?, ? * 2.54E0, ?, ?, ?)
14:14:49,573 DEBUG SQL:104 - 
    insert 
    into
        JPerson
        (person_id, version, name, sex, height_centimeters, address, zip, country) 
    values
        (null, ?, ?, ?, ? * 2.54E0, ?, ?, ?)
14:14:49,573 DEBUG SQL:104 - 
    insert 
    into
        JEmployee
        ("title", salary, pwd_expiry_weeks, manager, person_id) 
    values
        (?, ?, ? / 7.0E0, ?, ?)
14:14:49,574 DEBUG SQL:104 - 
    insert 
    into
        JPerson
        (person_id, version, name, sex, height_centimeters, address, zip, country) 
    values
        (null, ?, ?, ?, ? * 2.54E0, ?, ?, ?)
14:14:49,574 DEBUG SQL:104 - 
    insert 
    into
        JManager
        (comments, salesperson, person_id) 
    values
        (?, ?, ?)
14:14:49,587  WARN QuerySplitter:128 - HHH000183: no persistent classes found for query class: from java.io.Serializable
14:14:49,588 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.joinedsubclass.Person
14:14:49,589 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'joinedsubclass'
                \-[IDENT] Node: 'Person'

14:14:49,589 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,589 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.joinedsubclass.Person (<no alias>) -> person0_
14:14:49,589 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} JPerson person0_ ) )
14:14:49,589 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:14:49,589 DEBUG JoinProcessor:175 - Using FROM fragment [JPerson person0_ left outer join JEmployee person0_1_ on person0_.person_id=person0_1_.person_id left outer join JManager person0_2_ on person0_.person_id=person0_2_.person_id]
14:14:49,590 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (JPerson)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'person0_.person_id as person1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=JPerson,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.joinedsubclass.Person}}}
    |  \-[SQL_TOKEN] SqlFragment: 'person0_.version as version2_, person0_.name as name2_, person0_.sex as sex2_, person0_.height_centimeters / 2.54E0 as height5_2_, person0_.address as address2_, person0_.zip as zip2_, person0_.country as country2_, person0_1_."title" as title2_0_, person0_1_.salary as salary0_, person0_1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_, person0_1_.manager as manager0_, person0_2_.comments as comments1_, person0_2_.salesperson as salesper3_1_, case when person0_1_.person_id is not null then 1 when person0_2_.person_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[person0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'JPerson person0_ left outer join JEmployee person0_1_ on person0_.person_id=person0_1_.person_id left outer join JManager person0_2_ on person0_.person_id=person0_2_.person_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=JPerson,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.joinedsubclass.Person}}

14:14:49,590 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,590 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.joinedsubclass.Person
14:14:49,590 DEBUG QueryTranslatorImpl:236 - SQL: select person0_.person_id as person1_2_, person0_.version as version2_, person0_.name as name2_, person0_.sex as sex2_, person0_.height_centimeters / 2.54E0 as height5_2_, person0_.address as address2_, person0_.zip as zip2_, person0_.country as country2_, person0_1_."title" as title2_0_, person0_1_.salary as salary0_, person0_1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_, person0_1_.manager as manager0_, person0_2_.comments as comments1_, person0_2_.salesperson as salesper3_1_, case when person0_1_.person_id is not null then 1 when person0_2_.person_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_ from JPerson person0_ left outer join JEmployee person0_1_ on person0_.person_id=person0_1_.person_id left outer join JManager person0_2_ on person0_.person_id=person0_2_.person_id
14:14:49,590 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,591 DEBUG SQL:104 - 
    select
        person0_.person_id as person1_2_,
        person0_.version as version2_,
        person0_.name as name2_,
        person0_.sex as sex2_,
        person0_.height_centimeters / 2.54E0 as height5_2_,
        person0_.address as address2_,
        person0_.zip as zip2_,
        person0_.country as country2_,
        person0_1_."title" as title2_0_,
        person0_1_.salary as salary0_,
        person0_1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_,
        person0_1_.manager as manager0_,
        person0_2_.comments as comments1_,
        person0_2_.salesperson as salesper3_1_,
        case 
            when person0_1_.person_id is not null then 1 
            when person0_2_.person_id is not null then 2 
            when person0_.person_id is not null then 0 
        end as clazz_ 
    from
        JPerson person0_ 
    left outer join
        JEmployee person0_1_ 
            on person0_.person_id=person0_1_.person_id 
    left outer join
        JManager person0_2_ 
            on person0_.person_id=person0_2_.person_id
14:14:49,615 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.joinedsubclass.Person p where p.class = Customer
14:14:49,616 DEBUG HqlParser:378 - handleDotIdent() : new LT(2) token - [".",<15> previously: <15>,line=1,col=56,possibleID=false]
14:14:49,617 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  |  \-[IDENT] Node: 'test'
    |        |  |  \-[IDENT] Node: 'joinedsubclass'
    |        |  \-[IDENT] Node: 'Person'
    |        \-[ALIAS] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'class'
          \-[IDENT] Node: 'Customer'

14:14:49,617 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,617 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.joinedsubclass.Person (p) -> person0_
14:14:49,617 DEBUG FromReferenceNode:74 - Resolved : p -> person0_.person_id
14:14:49,617 DEBUG DotNode:599 - getDataType() : class -> org.hibernate.type.IntegerType@42252fee
14:14:49,617 DEBUG FromReferenceNode:74 - Resolved : p.class -> case when person0_1_.person_id is not null then 1 when person0_2_.person_id is not null then 2 when person0_.person_id is not null then 0 end
14:14:49,618 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} JPerson person0_ ) ( where ( = ( case when person0_1_.person_id is not null then 1 when person0_2_.person_id is not null then 2 when person0_.person_id is not null then 0 end person0_.person_id class ) 2 ) ) )
14:14:49,618 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:14:49,618 DEBUG JoinProcessor:175 - Using FROM fragment [JPerson person0_ left outer join JEmployee person0_1_ on person0_.person_id=person0_1_.person_id left outer join JManager person0_2_ on person0_.person_id=person0_2_.person_id]
14:14:49,618 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (JPerson)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'person0_.person_id as person1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=JPerson,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.joinedsubclass.Person}}}
    |  \-[SQL_TOKEN] SqlFragment: 'person0_.version as version2_, person0_.name as name2_, person0_.sex as sex2_, person0_.height_centimeters / 2.54E0 as height5_2_, person0_.address as address2_, person0_.zip as zip2_, person0_.country as country2_, person0_1_."title" as title2_0_, person0_1_.salary as salary0_, person0_1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_, person0_1_.manager as manager0_, person0_2_.comments as comments1_, person0_2_.salesperson as salesper3_1_, case when person0_1_.person_id is not null then 1 when person0_2_.person_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[person0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'JPerson person0_ left outer join JEmployee person0_1_ on person0_.person_id=person0_1_.person_id left outer join JManager person0_2_ on person0_.person_id=person0_2_.person_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=JPerson,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.joinedsubclass.Person}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'case when person0_1_.person_id is not null then 1 when person0_2_.person_id is not null then 2 when person0_.person_id is not null then 0 end' {propertyName=class,dereferenceType=ALL,propertyPath=class,path=p.class,tableAlias=person0_,className=org.hibernate.test.joinedsubclass.Person,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'person0_.person_id' {alias=p, className=org.hibernate.test.joinedsubclass.Person, tableAlias=person0_}
          |  \-[IDENT] IdentNode: 'class' {originalText=class}
          \-[IDENT] IdentNode: '2' {originalText=Customer}

14:14:49,618 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,618 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.joinedsubclass.Person p where p.class = Customer
14:14:49,619 DEBUG QueryTranslatorImpl:236 - SQL: select person0_.person_id as person1_2_, person0_.version as version2_, person0_.name as name2_, person0_.sex as sex2_, person0_.height_centimeters / 2.54E0 as height5_2_, person0_.address as address2_, person0_.zip as zip2_, person0_.country as country2_, person0_1_."title" as title2_0_, person0_1_.salary as salary0_, person0_1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_, person0_1_.manager as manager0_, person0_2_.comments as comments1_, person0_2_.salesperson as salesper3_1_, case when person0_1_.person_id is not null then 1 when person0_2_.person_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_ from JPerson person0_ left outer join JEmployee person0_1_ on person0_.person_id=person0_1_.person_id left outer join JManager person0_2_ on person0_.person_id=person0_2_.person_id where case when person0_1_.person_id is not null then 1 when person0_2_.person_id is not null then 2 when person0_.person_id is not null then 0 end=2
14:14:49,619 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,619 DEBUG SQL:104 - 
    select
        person0_.person_id as person1_2_,
        person0_.version as version2_,
        person0_.name as name2_,
        person0_.sex as sex2_,
        person0_.height_centimeters / 2.54E0 as height5_2_,
        person0_.address as address2_,
        person0_.zip as zip2_,
        person0_.country as country2_,
        person0_1_."title" as title2_0_,
        person0_1_.salary as salary0_,
        person0_1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_,
        person0_1_.manager as manager0_,
        person0_2_.comments as comments1_,
        person0_2_.salesperson as salesper3_1_,
        case 
            when person0_1_.person_id is not null then 1 
            when person0_2_.person_id is not null then 2 
            when person0_.person_id is not null then 0 
        end as clazz_ 
    from
        JPerson person0_ 
    left outer join
        JEmployee person0_1_ 
            on person0_.person_id=person0_1_.person_id 
    left outer join
        JManager person0_2_ 
            on person0_.person_id=person0_2_.person_id 
    where
        case 
            when person0_1_.person_id is not null then 1 
            when person0_2_.person_id is not null then 2 
            when person0_.person_id is not null then 0 
        end=2
14:14:49,646 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.joinedsubclass.Person p where p.class = Person
14:14:49,646 DEBUG HqlParser:378 - handleDotIdent() : new LT(2) token - [".",<15> previously: <15>,line=1,col=56,possibleID=false]
14:14:49,648 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  |  \-[IDENT] Node: 'test'
    |        |  |  \-[IDENT] Node: 'joinedsubclass'
    |        |  \-[IDENT] Node: 'Person'
    |        \-[ALIAS] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'class'
          \-[IDENT] Node: 'Person'

14:14:49,660 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,661 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.joinedsubclass.Person (p) -> person0_
14:14:49,661 DEBUG FromReferenceNode:74 - Resolved : p -> person0_.person_id
14:14:49,661 DEBUG DotNode:599 - getDataType() : class -> org.hibernate.type.IntegerType@42252fee
14:14:49,661 DEBUG FromReferenceNode:74 - Resolved : p.class -> case when person0_1_.person_id is not null then 1 when person0_2_.person_id is not null then 2 when person0_.person_id is not null then 0 end
14:14:49,661 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} JPerson person0_ ) ( where ( = ( case when person0_1_.person_id is not null then 1 when person0_2_.person_id is not null then 2 when person0_.person_id is not null then 0 end person0_.person_id class ) 0 ) ) )
14:14:49,662 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:14:49,662 DEBUG JoinProcessor:175 - Using FROM fragment [JPerson person0_ left outer join JEmployee person0_1_ on person0_.person_id=person0_1_.person_id left outer join JManager person0_2_ on person0_.person_id=person0_2_.person_id]
14:14:49,662 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (JPerson)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'person0_.person_id as person1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=JPerson,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.joinedsubclass.Person}}}
    |  \-[SQL_TOKEN] SqlFragment: 'person0_.version as version2_, person0_.name as name2_, person0_.sex as sex2_, person0_.height_centimeters / 2.54E0 as height5_2_, person0_.address as address2_, person0_.zip as zip2_, person0_.country as country2_, person0_1_."title" as title2_0_, person0_1_.salary as salary0_, person0_1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_, person0_1_.manager as manager0_, person0_2_.comments as comments1_, person0_2_.salesperson as salesper3_1_, case when person0_1_.person_id is not null then 1 when person0_2_.person_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[person0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'JPerson person0_ left outer join JEmployee person0_1_ on person0_.person_id=person0_1_.person_id left outer join JManager person0_2_ on person0_.person_id=person0_2_.person_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=JPerson,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.joinedsubclass.Person}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'case when person0_1_.person_id is not null then 1 when person0_2_.person_id is not null then 2 when person0_.person_id is not null then 0 end' {propertyName=class,dereferenceType=ALL,propertyPath=class,path=p.class,tableAlias=person0_,className=org.hibernate.test.joinedsubclass.Person,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'person0_.person_id' {alias=p, className=org.hibernate.test.joinedsubclass.Person, tableAlias=person0_}
          |  \-[IDENT] IdentNode: 'class' {originalText=class}
          \-[IDENT] IdentNode: '0' {originalText=Person}

14:14:49,674 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,675 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.joinedsubclass.Person p where p.class = Person
14:14:49,675 DEBUG QueryTranslatorImpl:236 - SQL: select person0_.person_id as person1_2_, person0_.version as version2_, person0_.name as name2_, person0_.sex as sex2_, person0_.height_centimeters / 2.54E0 as height5_2_, person0_.address as address2_, person0_.zip as zip2_, person0_.country as country2_, person0_1_."title" as title2_0_, person0_1_.salary as salary0_, person0_1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_, person0_1_.manager as manager0_, person0_2_.comments as comments1_, person0_2_.salesperson as salesper3_1_, case when person0_1_.person_id is not null then 1 when person0_2_.person_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_ from JPerson person0_ left outer join JEmployee person0_1_ on person0_.person_id=person0_1_.person_id left outer join JManager person0_2_ on person0_.person_id=person0_2_.person_id where case when person0_1_.person_id is not null then 1 when person0_2_.person_id is not null then 2 when person0_.person_id is not null then 0 end=0
14:14:49,675 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,676 DEBUG SQL:104 - 
    select
        person0_.person_id as person1_2_,
        person0_.version as version2_,
        person0_.name as name2_,
        person0_.sex as sex2_,
        person0_.height_centimeters / 2.54E0 as height5_2_,
        person0_.address as address2_,
        person0_.zip as zip2_,
        person0_.country as country2_,
        person0_1_."title" as title2_0_,
        person0_1_.salary as salary0_,
        person0_1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_,
        person0_1_.manager as manager0_,
        person0_2_.comments as comments1_,
        person0_2_.salesperson as salesper3_1_,
        case 
            when person0_1_.person_id is not null then 1 
            when person0_2_.person_id is not null then 2 
            when person0_.person_id is not null then 0 
        end as clazz_ 
    from
        JPerson person0_ 
    left outer join
        JEmployee person0_1_ 
            on person0_.person_id=person0_1_.person_id 
    left outer join
        JManager person0_2_ 
            on person0_.person_id=person0_2_.person_id 
    where
        case 
            when person0_1_.person_id is not null then 1 
            when person0_2_.person_id is not null then 2 
            when person0_.person_id is not null then 0 
        end=0
14:14:49,693 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.joinedsubclass.Person p where type(p) in :who
14:14:49,694 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  |  \-[IDENT] Node: 'test'
    |        |  |  \-[IDENT] Node: 'joinedsubclass'
    |        |  \-[IDENT] Node: 'Person'
    |        \-[ALIAS] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'type'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[IDENT] Node: 'p'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'who'

14:14:49,694 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,694 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.joinedsubclass.Person (p) -> person0_
14:14:49,695 DEBUG FromReferenceNode:74 - Resolved : p -> person0_.person_id
14:14:49,695 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} JPerson person0_ ) ( where ( in ( case when person0_1_.person_id is not null then 1 when person0_2_.person_id is not null then 2 when person0_.person_id is not null then 0 end type ( exprList person0_.person_id ) ) ( inList ? ) ) ) )
14:14:49,695 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:14:49,695 DEBUG JoinProcessor:175 - Using FROM fragment [JPerson person0_ left outer join JEmployee person0_1_ on person0_.person_id=person0_1_.person_id left outer join JManager person0_2_ on person0_.person_id=person0_2_.person_id]
14:14:49,695 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (JPerson)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'person0_.person_id as person1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=JPerson,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.joinedsubclass.Person}}}
    |  \-[SQL_TOKEN] SqlFragment: 'person0_.version as version2_, person0_.name as name2_, person0_.sex as sex2_, person0_.height_centimeters / 2.54E0 as height5_2_, person0_.address as address2_, person0_.zip as zip2_, person0_.country as country2_, person0_1_."title" as title2_0_, person0_1_.salary as salary0_, person0_1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_, person0_1_.manager as manager0_, person0_2_.comments as comments1_, person0_2_.salesperson as salesper3_1_, case when person0_1_.person_id is not null then 1 when person0_2_.person_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[person0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'JPerson person0_ left outer join JEmployee person0_1_ on person0_.person_id=person0_1_.person_id left outer join JManager person0_2_ on person0_.person_id=person0_2_.person_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=JPerson,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.joinedsubclass.Person}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[SQL_TOKEN] MethodNode: 'case when person0_1_.person_id is not null then 1 when person0_2_.person_id is not null then 2 when person0_.person_id is not null then 0 end'
          |  +-[METHOD_NAME] IdentNode: 'type' {originalText=type}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[ALIAS_REF] IdentNode: 'person0_.person_id' {alias=p, className=org.hibernate.test.joinedsubclass.Person, tableAlias=person0_}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=who, expectedType=org.hibernate.persister.entity.DiscriminatorType@705032e8}

14:14:49,696 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,696 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.joinedsubclass.Person p where type(p) in :who
14:14:49,696 DEBUG QueryTranslatorImpl:236 - SQL: select person0_.person_id as person1_2_, person0_.version as version2_, person0_.name as name2_, person0_.sex as sex2_, person0_.height_centimeters / 2.54E0 as height5_2_, person0_.address as address2_, person0_.zip as zip2_, person0_.country as country2_, person0_1_."title" as title2_0_, person0_1_.salary as salary0_, person0_1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_, person0_1_.manager as manager0_, person0_2_.comments as comments1_, person0_2_.salesperson as salesper3_1_, case when person0_1_.person_id is not null then 1 when person0_2_.person_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_ from JPerson person0_ left outer join JEmployee person0_1_ on person0_.person_id=person0_1_.person_id left outer join JManager person0_2_ on person0_.person_id=person0_2_.person_id where case when person0_1_.person_id is not null then 1 when person0_2_.person_id is not null then 2 when person0_.person_id is not null then 0 end in (?)
14:14:49,696 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,697 DEBUG SQL:104 - 
    select
        person0_.person_id as person1_2_,
        person0_.version as version2_,
        person0_.name as name2_,
        person0_.sex as sex2_,
        person0_.height_centimeters / 2.54E0 as height5_2_,
        person0_.address as address2_,
        person0_.zip as zip2_,
        person0_.country as country2_,
        person0_1_."title" as title2_0_,
        person0_1_.salary as salary0_,
        person0_1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_,
        person0_1_.manager as manager0_,
        person0_2_.comments as comments1_,
        person0_2_.salesperson as salesper3_1_,
        case 
            when person0_1_.person_id is not null then 1 
            when person0_2_.person_id is not null then 2 
            when person0_.person_id is not null then 0 
        end as clazz_ 
    from
        JPerson person0_ 
    left outer join
        JEmployee person0_1_ 
            on person0_.person_id=person0_1_.person_id 
    left outer join
        JManager person0_2_ 
            on person0_.person_id=person0_2_.person_id 
    where
        case 
            when person0_1_.person_id is not null then 1 
            when person0_2_.person_id is not null then 2 
            when person0_.person_id is not null then 0 
        end in (
            ?
        )
14:14:49,726 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.joinedsubclass.Person p where type(p) in (:who0_, :who1_)
14:14:49,727 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  |  \-[IDENT] Node: 'test'
    |        |  |  \-[IDENT] Node: 'joinedsubclass'
    |        |  \-[IDENT] Node: 'Person'
    |        \-[ALIAS] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'type'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[IDENT] Node: 'p'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'who0_'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'who1_'

14:14:49,727 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,728 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.joinedsubclass.Person (p) -> person0_
14:14:49,728 DEBUG FromReferenceNode:74 - Resolved : p -> person0_.person_id
14:14:49,728 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} JPerson person0_ ) ( where ( in ( case when person0_1_.person_id is not null then 1 when person0_2_.person_id is not null then 2 when person0_.person_id is not null then 0 end type ( exprList person0_.person_id ) ) ( inList ? ? ) ) ) )
14:14:49,728 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:14:49,742 DEBUG JoinProcessor:175 - Using FROM fragment [JPerson person0_ left outer join JEmployee person0_1_ on person0_.person_id=person0_1_.person_id left outer join JManager person0_2_ on person0_.person_id=person0_2_.person_id]
14:14:49,743 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (JPerson)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'person0_.person_id as person1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=JPerson,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.joinedsubclass.Person}}}
    |  \-[SQL_TOKEN] SqlFragment: 'person0_.version as version2_, person0_.name as name2_, person0_.sex as sex2_, person0_.height_centimeters / 2.54E0 as height5_2_, person0_.address as address2_, person0_.zip as zip2_, person0_.country as country2_, person0_1_."title" as title2_0_, person0_1_.salary as salary0_, person0_1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_, person0_1_.manager as manager0_, person0_2_.comments as comments1_, person0_2_.salesperson as salesper3_1_, case when person0_1_.person_id is not null then 1 when person0_2_.person_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[person0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'JPerson person0_ left outer join JEmployee person0_1_ on person0_.person_id=person0_1_.person_id left outer join JManager person0_2_ on person0_.person_id=person0_2_.person_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=JPerson,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.joinedsubclass.Person}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[SQL_TOKEN] MethodNode: 'case when person0_1_.person_id is not null then 1 when person0_2_.person_id is not null then 2 when person0_.person_id is not null then 0 end'
          |  +-[METHOD_NAME] IdentNode: 'type' {originalText=type}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[ALIAS_REF] IdentNode: 'person0_.person_id' {alias=p, className=org.hibernate.test.joinedsubclass.Person, tableAlias=person0_}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=who0_, expectedType=org.hibernate.persister.entity.DiscriminatorType@32d87f1b}
             \-[NAMED_PARAM] ParameterNode: '?' {name=who1_, expectedType=org.hibernate.persister.entity.DiscriminatorType@32d87f1b}

14:14:49,743 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,743 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.joinedsubclass.Person p where type(p) in (:who0_, :who1_)
14:14:49,743 DEBUG QueryTranslatorImpl:236 - SQL: select person0_.person_id as person1_2_, person0_.version as version2_, person0_.name as name2_, person0_.sex as sex2_, person0_.height_centimeters / 2.54E0 as height5_2_, person0_.address as address2_, person0_.zip as zip2_, person0_.country as country2_, person0_1_."title" as title2_0_, person0_1_.salary as salary0_, person0_1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_, person0_1_.manager as manager0_, person0_2_.comments as comments1_, person0_2_.salesperson as salesper3_1_, case when person0_1_.person_id is not null then 1 when person0_2_.person_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_ from JPerson person0_ left outer join JEmployee person0_1_ on person0_.person_id=person0_1_.person_id left outer join JManager person0_2_ on person0_.person_id=person0_2_.person_id where case when person0_1_.person_id is not null then 1 when person0_2_.person_id is not null then 2 when person0_.person_id is not null then 0 end in (? , ?)
14:14:49,743 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,744 DEBUG SQL:104 - 
    select
        person0_.person_id as person1_2_,
        person0_.version as version2_,
        person0_.name as name2_,
        person0_.sex as sex2_,
        person0_.height_centimeters / 2.54E0 as height5_2_,
        person0_.address as address2_,
        person0_.zip as zip2_,
        person0_.country as country2_,
        person0_1_."title" as title2_0_,
        person0_1_.salary as salary0_,
        person0_1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_,
        person0_1_.manager as manager0_,
        person0_2_.comments as comments1_,
        person0_2_.salesperson as salesper3_1_,
        case 
            when person0_1_.person_id is not null then 1 
            when person0_2_.person_id is not null then 2 
            when person0_.person_id is not null then 0 
        end as clazz_ 
    from
        JPerson person0_ 
    left outer join
        JEmployee person0_1_ 
            on person0_.person_id=person0_1_.person_id 
    left outer join
        JManager person0_2_ 
            on person0_.person_id=person0_2_.person_id 
    where
        case 
            when person0_1_.person_id is not null then 1 
            when person0_2_.person_id is not null then 2 
            when person0_.person_id is not null then 0 
        end in (
            ? , ?
        )
14:14:49,759 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.joinedsubclass.Customer c left join fetch c.salesperson
14:14:49,760 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          +-[RANGE] Node: 'RANGE'
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[DOT] Node: '.'
          |  |  |  |  |  +-[IDENT] Node: 'org'
          |  |  |  |  |  \-[IDENT] Node: 'hibernate'
          |  |  |  |  \-[IDENT] Node: 'test'
          |  |  |  \-[IDENT] Node: 'joinedsubclass'
          |  |  \-[IDENT] Node: 'Customer'
          |  \-[ALIAS] Node: 'c'
          \-[JOIN] Node: 'join'
             +-[LEFT] Node: 'left'
             +-[FETCH] Node: 'fetch'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'c'
                \-[IDENT] Node: 'salesperson'

14:14:49,786 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,787 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.joinedsubclass.Customer (c) -> customer0_
14:14:49,787 DEBUG FromReferenceNode:74 - Resolved : c -> customer0_.person_id
14:14:49,787 DEBUG DotNode:599 - getDataType() : salesperson -> org.hibernate.type.ManyToOneType(org.hibernate.test.joinedsubclass.Employee)
14:14:49,787 DEBUG DotNode:389 - dereferenceEntityJoin() : generating join for salesperson in org.hibernate.test.joinedsubclass.Customer (<no alias>) parent = [ {null} ]
14:14:49,787 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.joinedsubclass.Employee (<no alias>) -> employee1_
14:14:49,787 DEBUG FromClause:282 - addJoinByPathMap() : c.salesperson -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=JEmployee,tableAlias=employee1_,origin=JManager customer0_,columns={customer0_.salesperson ,className=org.hibernate.test.joinedsubclass.Employee}}
14:14:49,788 DEBUG FromReferenceNode:74 - Resolved : c.salesperson -> customer0_.salesperson
14:14:49,788 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'JEmployee employee1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=JEmployee,tableAlias=employee1_,origin=JManager customer0_,columns={customer0_.salesperson ,className=org.hibernate.test.joinedsubclass.Employee}}

14:14:49,788 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} ( JManager customer0_ JEmployee employee1_ ) ) )
14:14:49,788 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:14:49,788 DEBUG JoinProcessor:175 - Using FROM fragment [JManager customer0_ inner join JPerson customer0_1_ on customer0_.person_id=customer0_1_.person_id]
14:14:49,788 DEBUG JoinProcessor:175 - Using FROM fragment [left outer join JEmployee employee1_ on customer0_.salesperson=employee1_.person_id left outer join JPerson employee1_1_ on employee1_.person_id=employee1_1_.person_id]
14:14:49,789 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (JPerson,JManager,JEmployee)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customer0_.person_id as person1_2_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=JManager,tableAlias=customer0_,origin=null,columns={,className=org.hibernate.test.joinedsubclass.Customer}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'employee1_.person_id as person1_2_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=JEmployee,tableAlias=employee1_,origin=JManager customer0_ inner join JPerson customer0_1_ on customer0_.person_id=customer0_1_.person_id,columns={customer0_.salesperson ,className=org.hibernate.test.joinedsubclass.Employee}}}
    |  +-[SQL_TOKEN] SqlFragment: 'customer0_1_.version as version2_0_, customer0_1_.name as name2_0_, customer0_1_.sex as sex2_0_, customer0_1_.height_centimeters / 2.54E0 as height5_2_0_, customer0_1_.address as address2_0_, customer0_1_.zip as zip2_0_, customer0_1_.country as country2_0_, customer0_.comments as comments1_0_, customer0_.salesperson as salesper3_1_0_'
    |  \-[SQL_TOKEN] SqlFragment: 'employee1_1_.version as version2_1_, employee1_1_.name as name2_1_, employee1_1_.sex as sex2_1_, employee1_1_.height_centimeters / 2.54E0 as height5_2_1_, employee1_1_.address as address2_1_, employee1_1_.zip as zip2_1_, employee1_1_.country as country2_1_, employee1_."title" as title2_0_1_, employee1_.salary as salary0_1_, employee1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_1_, employee1_.manager as manager0_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[c], fromElementByTableAlias=[customer0_, employee1_], fromElementsByPath=[c.salesperson], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'JManager customer0_ inner join JPerson customer0_1_ on customer0_.person_id=customer0_1_.person_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=JManager,tableAlias=customer0_,origin=null,columns={,className=org.hibernate.test.joinedsubclass.Customer}}
          \-[JOIN_FRAGMENT] FromElement: 'left outer join JEmployee employee1_ on customer0_.salesperson=employee1_.person_id left outer join JPerson employee1_1_ on employee1_.person_id=employee1_1_.person_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=JEmployee,tableAlias=employee1_,origin=JManager customer0_ inner join JPerson customer0_1_ on customer0_.person_id=customer0_1_.person_id,columns={customer0_.salesperson ,className=org.hibernate.test.joinedsubclass.Employee}}

14:14:49,798 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,798 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.joinedsubclass.Customer c left join fetch c.salesperson
14:14:49,798 DEBUG QueryTranslatorImpl:236 - SQL: select customer0_.person_id as person1_2_0_, employee1_.person_id as person1_2_1_, customer0_1_.version as version2_0_, customer0_1_.name as name2_0_, customer0_1_.sex as sex2_0_, customer0_1_.height_centimeters / 2.54E0 as height5_2_0_, customer0_1_.address as address2_0_, customer0_1_.zip as zip2_0_, customer0_1_.country as country2_0_, customer0_.comments as comments1_0_, customer0_.salesperson as salesper3_1_0_, employee1_1_.version as version2_1_, employee1_1_.name as name2_1_, employee1_1_.sex as sex2_1_, employee1_1_.height_centimeters / 2.54E0 as height5_2_1_, employee1_1_.address as address2_1_, employee1_1_.zip as zip2_1_, employee1_1_.country as country2_1_, employee1_."title" as title2_0_1_, employee1_.salary as salary0_1_, employee1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_1_, employee1_.manager as manager0_1_ from JManager customer0_ inner join JPerson customer0_1_ on customer0_.person_id=customer0_1_.person_id left outer join JEmployee employee1_ on customer0_.salesperson=employee1_.person_id left outer join JPerson employee1_1_ on employee1_.person_id=employee1_1_.person_id
14:14:49,799 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,799 DEBUG SQL:104 - 
    select
        customer0_.person_id as person1_2_0_,
        employee1_.person_id as person1_2_1_,
        customer0_1_.version as version2_0_,
        customer0_1_.name as name2_0_,
        customer0_1_.sex as sex2_0_,
        customer0_1_.height_centimeters / 2.54E0 as height5_2_0_,
        customer0_1_.address as address2_0_,
        customer0_1_.zip as zip2_0_,
        customer0_1_.country as country2_0_,
        customer0_.comments as comments1_0_,
        customer0_.salesperson as salesper3_1_0_,
        employee1_1_.version as version2_1_,
        employee1_1_.name as name2_1_,
        employee1_1_.sex as sex2_1_,
        employee1_1_.height_centimeters / 2.54E0 as height5_2_1_,
        employee1_1_.address as address2_1_,
        employee1_1_.zip as zip2_1_,
        employee1_1_.country as country2_1_,
        employee1_."title" as title2_0_1_,
        employee1_.salary as salary0_1_,
        employee1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_1_,
        employee1_.manager as manager0_1_ 
    from
        JManager customer0_ 
    inner join
        JPerson customer0_1_ 
            on customer0_.person_id=customer0_1_.person_id 
    left outer join
        JEmployee employee1_ 
            on customer0_.salesperson=employee1_.person_id 
    left outer join
        JPerson employee1_1_ 
            on employee1_.person_id=employee1_1_.person_id
14:14:49,811 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.joinedsubclass.Customer
14:14:49,812 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'joinedsubclass'
                \-[IDENT] Node: 'Customer'

14:14:49,832 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,833 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.joinedsubclass.Customer (<no alias>) -> customer0_
14:14:49,833 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} JManager customer0_ ) )
14:14:49,833 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:14:49,833 DEBUG JoinProcessor:175 - Using FROM fragment [JManager customer0_ inner join JPerson customer0_1_ on customer0_.person_id=customer0_1_.person_id]
14:14:49,834 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (JPerson,JManager)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customer0_.person_id as person1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=JManager,tableAlias=customer0_,origin=null,columns={,className=org.hibernate.test.joinedsubclass.Customer}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_1_.version as version2_, customer0_1_.name as name2_, customer0_1_.sex as sex2_, customer0_1_.height_centimeters / 2.54E0 as height5_2_, customer0_1_.address as address2_, customer0_1_.zip as zip2_, customer0_1_.country as country2_, customer0_.comments as comments1_, customer0_.salesperson as salesper3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'JManager customer0_ inner join JPerson customer0_1_ on customer0_.person_id=customer0_1_.person_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=JManager,tableAlias=customer0_,origin=null,columns={,className=org.hibernate.test.joinedsubclass.Customer}}

14:14:49,834 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,834 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.joinedsubclass.Customer
14:14:49,834 DEBUG QueryTranslatorImpl:236 - SQL: select customer0_.person_id as person1_2_, customer0_1_.version as version2_, customer0_1_.name as name2_, customer0_1_.sex as sex2_, customer0_1_.height_centimeters / 2.54E0 as height5_2_, customer0_1_.address as address2_, customer0_1_.zip as zip2_, customer0_1_.country as country2_, customer0_.comments as comments1_, customer0_.salesperson as salesper3_1_ from JManager customer0_ inner join JPerson customer0_1_ on customer0_.person_id=customer0_1_.person_id
14:14:49,834 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,834 DEBUG SQL:104 - 
    select
        customer0_.person_id as person1_2_,
        customer0_1_.version as version2_,
        customer0_1_.name as name2_,
        customer0_1_.sex as sex2_,
        customer0_1_.height_centimeters / 2.54E0 as height5_2_,
        customer0_1_.address as address2_,
        customer0_1_.zip as zip2_,
        customer0_1_.country as country2_,
        customer0_.comments as comments1_,
        customer0_.salesperson as salesper3_1_ 
    from
        JManager customer0_ 
    inner join
        JPerson customer0_1_ 
            on customer0_.person_id=customer0_1_.person_id
14:14:49,846 DEBUG SQL:104 - 
    select
        employee0_.person_id as person1_2_0_,
        employee0_1_.version as version2_0_,
        employee0_1_.name as name2_0_,
        employee0_1_.sex as sex2_0_,
        employee0_1_.height_centimeters / 2.54E0 as height5_2_0_,
        employee0_1_.address as address2_0_,
        employee0_1_.zip as zip2_0_,
        employee0_1_.country as country2_0_,
        employee0_."title" as title2_0_0_,
        employee0_.salary as salary0_0_,
        employee0_.pwd_expiry_weeks * 7.0E0 as pwd4_0_0_,
        employee0_.manager as manager0_0_ 
    from
        JEmployee employee0_ 
    inner join
        JPerson employee0_1_ 
            on employee0_.person_id=employee0_1_.person_id 
    where
        employee0_.person_id=?
14:14:49,846 DEBUG SQL:104 - 
    select
        employee0_.person_id as person1_2_0_,
        employee0_1_.version as version2_0_,
        employee0_1_.name as name2_0_,
        employee0_1_.sex as sex2_0_,
        employee0_1_.height_centimeters / 2.54E0 as height5_2_0_,
        employee0_1_.address as address2_0_,
        employee0_1_.zip as zip2_0_,
        employee0_1_.country as country2_0_,
        employee0_."title" as title2_0_0_,
        employee0_.salary as salary0_0_,
        employee0_.pwd_expiry_weeks * 7.0E0 as pwd4_0_0_,
        employee0_.manager as manager0_0_ 
    from
        JEmployee employee0_ 
    inner join
        JPerson employee0_1_ 
            on employee0_.person_id=employee0_1_.person_id 
    where
        employee0_.person_id=?
14:14:49,861 DEBUG SQL:104 - 
    select
        customer0_.person_id as person1_2_0_,
        customer0_1_.version as version2_0_,
        customer0_1_.name as name2_0_,
        customer0_1_.sex as sex2_0_,
        customer0_1_.height_centimeters / 2.54E0 as height5_2_0_,
        customer0_1_.address as address2_0_,
        customer0_1_.zip as zip2_0_,
        customer0_1_.country as country2_0_,
        customer0_.comments as comments1_0_,
        customer0_.salesperson as salesper3_1_0_ 
    from
        JManager customer0_ 
    inner join
        JPerson customer0_1_ 
            on customer0_.person_id=customer0_1_.person_id 
    where
        customer0_.person_id=?
14:14:49,862 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.joinedsubclass.Person p where p.address.zip = '30306'
14:14:49,863 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  |  \-[IDENT] Node: 'test'
    |        |  |  \-[IDENT] Node: 'joinedsubclass'
    |        |  \-[IDENT] Node: 'Person'
    |        \-[ALIAS] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'p'
          |  |  \-[IDENT] Node: 'address'
          |  \-[IDENT] Node: 'zip'
          \-[QUOTED_STRING] Node: ''30306''

14:14:49,874 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,875 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.joinedsubclass.Person (p) -> person0_
14:14:49,875 DEBUG FromReferenceNode:74 - Resolved : p -> person0_.person_id
14:14:49,875 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@57f8ba35
14:14:49,875 DEBUG DotNode:585 - Unresolved property path is now 'address.zip'
14:14:49,875 DEBUG FromReferenceNode:74 - Resolved : p.address -> person0_.zip
14:14:49,875 DEBUG DotNode:599 - getDataType() : address.zip -> org.hibernate.type.StringType@2dc8de40
14:14:49,875 DEBUG FromReferenceNode:74 - Resolved : p.address.zip -> person0_.zip
14:14:49,875 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} JPerson person0_ ) ( where ( = ( person0_.zip ( person0_.zip person0_.person_id address ) zip ) '30306' ) ) )
14:14:49,876 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:14:49,876 DEBUG JoinProcessor:175 - Using FROM fragment [JPerson person0_ left outer join JEmployee person0_1_ on person0_.person_id=person0_1_.person_id left outer join JManager person0_2_ on person0_.person_id=person0_2_.person_id]
14:14:49,876 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (JPerson)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'person0_.person_id as person1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=JPerson,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.joinedsubclass.Person}}}
    |  \-[SQL_TOKEN] SqlFragment: 'person0_.version as version2_, person0_.name as name2_, person0_.sex as sex2_, person0_.height_centimeters / 2.54E0 as height5_2_, person0_.address as address2_, person0_.zip as zip2_, person0_.country as country2_, person0_1_."title" as title2_0_, person0_1_.salary as salary0_, person0_1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_, person0_1_.manager as manager0_, person0_2_.comments as comments1_, person0_2_.salesperson as salesper3_1_, case when person0_1_.person_id is not null then 1 when person0_2_.person_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[person0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'JPerson person0_ left outer join JEmployee person0_1_ on person0_.person_id=person0_1_.person_id left outer join JManager person0_2_ on person0_.person_id=person0_2_.person_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=JPerson,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.joinedsubclass.Person}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'person0_.zip' {propertyName=zip,dereferenceType=ALL,propertyPath=address.zip,path=p.address.zip,tableAlias=person0_,className=org.hibernate.test.joinedsubclass.Person,classAlias=p}
          |  +-[DOT] DotNode: 'person0_.zip' {propertyName=zip,dereferenceType=2,propertyPath=address.zip,path=p.address,tableAlias=person0_,className=org.hibernate.test.joinedsubclass.Person,classAlias=p}
          |  |  +-[ALIAS_REF] IdentNode: 'person0_.person_id' {alias=p, className=org.hibernate.test.joinedsubclass.Person, tableAlias=person0_}
          |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
          |  \-[IDENT] IdentNode: 'zip' {originalText=zip}
          \-[QUOTED_STRING] LiteralNode: ''30306''

14:14:49,886 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,887 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.joinedsubclass.Person p where p.address.zip = '30306'
14:14:49,887 DEBUG QueryTranslatorImpl:236 - SQL: select person0_.person_id as person1_2_, person0_.version as version2_, person0_.name as name2_, person0_.sex as sex2_, person0_.height_centimeters / 2.54E0 as height5_2_, person0_.address as address2_, person0_.zip as zip2_, person0_.country as country2_, person0_1_."title" as title2_0_, person0_1_.salary as salary0_, person0_1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_, person0_1_.manager as manager0_, person0_2_.comments as comments1_, person0_2_.salesperson as salesper3_1_, case when person0_1_.person_id is not null then 1 when person0_2_.person_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_ from JPerson person0_ left outer join JEmployee person0_1_ on person0_.person_id=person0_1_.person_id left outer join JManager person0_2_ on person0_.person_id=person0_2_.person_id where person0_.zip='30306'
14:14:49,887 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:49,887 DEBUG SQL:104 - 
    update
        JPerson 
    set
        version=?,
        name=?,
        height_centimeters=? * 2.54E0,
        address=?,
        zip=?,
        country=? 
    where
        person_id=? 
        and version=?
14:14:49,888 DEBUG SQL:104 - 
    select
        person0_.person_id as person1_2_,
        person0_.version as version2_,
        person0_.name as name2_,
        person0_.sex as sex2_,
        person0_.height_centimeters / 2.54E0 as height5_2_,
        person0_.address as address2_,
        person0_.zip as zip2_,
        person0_.country as country2_,
        person0_1_."title" as title2_0_,
        person0_1_.salary as salary0_,
        person0_1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_,
        person0_1_.manager as manager0_,
        person0_2_.comments as comments1_,
        person0_2_.salesperson as salesper3_1_,
        case 
            when person0_1_.person_id is not null then 1 
            when person0_2_.person_id is not null then 2 
            when person0_.person_id is not null then 0 
        end as clazz_ 
    from
        JPerson person0_ 
    left outer join
        JEmployee person0_1_ 
            on person0_.person_id=person0_1_.person_id 
    left outer join
        JManager person0_2_ 
            on person0_.person_id=person0_2_.person_id 
    where
        person0_.zip='30306'
14:14:49,915 DEBUG SQL:104 - 
    select
        this_.person_id as person1_2_0_,
        this_.version as version2_0_,
        this_.name as name2_0_,
        this_.sex as sex2_0_,
        this_.height_centimeters / 2.54E0 as height5_2_0_,
        this_.address as address2_0_,
        this_.zip as zip2_0_,
        this_.country as country2_0_,
        this_1_."title" as title2_0_0_,
        this_1_.salary as salary0_0_,
        this_1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_0_,
        this_1_.manager as manager0_0_,
        this_2_.comments as comments1_0_,
        this_2_.salesperson as salesper3_1_0_,
        case 
            when this_1_.person_id is not null then 1 
            when this_2_.person_id is not null then 2 
            when this_.person_id is not null then 0 
        end as clazz_0_ 
    from
        JPerson this_ 
    left outer join
        JEmployee this_1_ 
            on this_.person_id=this_1_.person_id 
    left outer join
        JManager this_2_ 
            on this_.person_id=this_2_.person_id 
    where
        (
            (
                this_.address = ? 
                and this_.zip = ? 
                and this_.country= ? 
            ) 
            or  (
                this_.address = ? 
                and this_.zip = ? 
                and this_.country= ? 
            )  
        ) 
14:14:49,926 DEBUG SQL:104 - 
    update
        JPerson 
    set
        version=?,
        name=?,
        height_centimeters=? * 2.54E0,
        address=?,
        zip=?,
        country=? 
    where
        person_id=? 
        and version=?
14:14:49,936 DEBUG SQL:104 - 
    update
        JManager 
    set
        comments=?,
        salesperson=? 
    where
        person_id=?
14:14:49,937 DEBUG SQL:104 - 
    delete 
    from
        JEmployee 
    where
        person_id=?
14:14:49,937 DEBUG SQL:104 - 
    delete 
    from
        JPerson 
    where
        person_id=? 
        and version=?
14:14:49,937 DEBUG SQL:104 - 
    delete 
    from
        JManager 
    where
        person_id=?
14:14:49,937 DEBUG SQL:104 - 
    delete 
    from
        JPerson 
    where
        person_id=? 
        and version=?
14:14:49,947 DEBUG SQL:104 - 
    delete 
    from
        JPerson 
    where
        person_id=? 
        and version=?
14:14:49,948 DEBUG SQL:104 - 
    select
        person0_.person_id as person1_2_,
        person0_.version as version2_,
        person0_.name as name2_,
        person0_.sex as sex2_,
        person0_.height_centimeters / 2.54E0 as height5_2_,
        person0_.address as address2_,
        person0_.zip as zip2_,
        person0_.country as country2_,
        person0_1_."title" as title2_0_,
        person0_1_.salary as salary0_,
        person0_1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_,
        person0_1_.manager as manager0_,
        person0_2_.comments as comments1_,
        person0_2_.salesperson as salesper3_1_,
        case 
            when person0_1_.person_id is not null then 1 
            when person0_2_.person_id is not null then 2 
            when person0_.person_id is not null then 0 
        end as clazz_ 
    from
        JPerson person0_ 
    left outer join
        JEmployee person0_1_ 
            on person0_.person_id=person0_1_.person_id 
    left outer join
        JManager person0_2_ 
            on person0_.person_id=person0_2_.person_id
14:14:49,959  INFO CustomRunner:139 - Test: testLockingJoinedSubclass
14:14:49,960 DEBUG SQL:104 - 
    insert 
    into
        JPerson
        (person_id, version, name, sex, height_centimeters, address, zip, country) 
    values
        (null, ?, ?, ?, ? * 2.54E0, ?, ?, ?)
14:14:49,962 DEBUG SQL:104 - 
    insert 
    into
        JPerson
        (person_id, version, name, sex, height_centimeters, address, zip, country) 
    values
        (null, ?, ?, ?, ? * 2.54E0, ?, ?, ?)
14:14:49,974 DEBUG SQL:104 - 
    insert 
    into
        JEmployee
        ("title", salary, pwd_expiry_weeks, manager, person_id) 
    values
        (?, ?, ? / 7.0E0, ?, ?)
14:14:49,975 DEBUG SQL:104 - 
    select
        person_id 
    from
        JPerson 
    where
        person_id =? 
        and version =? for update
            
14:14:49,975 DEBUG SQL:104 - 
    select
        person_id 
    from
        JPerson 
    where
        person_id =? 
        and version =? for update
            
14:14:49,975 DEBUG SQL:104 - 
    delete 
    from
        JPerson 
    where
        person_id=? 
        and version=?
14:14:49,987 DEBUG SQL:104 - 
    delete 
    from
        JEmployee 
    where
        person_id=?
14:14:49,987 DEBUG SQL:104 - 
    delete 
    from
        JPerson 
    where
        person_id=? 
        and version=?
14:14:49,988  INFO CustomRunner:139 - Test: testQuerySubclassAttribute
14:14:49,989 DEBUG SQL:104 - 
    insert 
    into
        JPerson
        (person_id, version, name, sex, height_centimeters, address, zip, country) 
    values
        (null, ?, ?, ?, ? * 2.54E0, ?, ?, ?)
14:14:49,990 DEBUG SQL:104 - 
    insert 
    into
        JPerson
        (person_id, version, name, sex, height_centimeters, address, zip, country) 
    values
        (null, ?, ?, ?, ? * 2.54E0, ?, ?, ?)
14:14:50,001 DEBUG SQL:104 - 
    insert 
    into
        JEmployee
        ("title", salary, pwd_expiry_weeks, manager, person_id) 
    values
        (?, ?, ? / 7.0E0, ?, ?)
14:14:50,002 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.joinedsubclass.Person where salary > 100
14:14:50,002 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'org'
    |           |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  \-[IDENT] Node: 'test'
    |           |  \-[IDENT] Node: 'joinedsubclass'
    |           \-[IDENT] Node: 'Person'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[IDENT] Node: 'salary'
          \-[NUM_INT] Node: '100'

14:14:50,003 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:50,003 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.joinedsubclass.Person (<no alias>) -> person0_
14:14:50,003 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:14:50,003 DEBUG DotNode:599 - getDataType() : salary -> org.hibernate.type.BigDecimalType@3bb4a749
14:14:50,003 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.salary -> person0_1_.salary
14:14:50,003 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} JPerson person0_ ) ( where ( > ( person0_1_.salary {synthetic-alias} salary ) 100 ) ) )
14:14:50,004 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:14:50,004 DEBUG JoinProcessor:175 - Using FROM fragment [JPerson person0_ left outer join JEmployee person0_1_ on person0_.person_id=person0_1_.person_id left outer join JManager person0_2_ on person0_.person_id=person0_2_.person_id]
14:14:50,004 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (JPerson)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'person0_.person_id as person1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=JPerson,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.joinedsubclass.Person}}}
    |  \-[SQL_TOKEN] SqlFragment: 'person0_.version as version2_, person0_.name as name2_, person0_.sex as sex2_, person0_.height_centimeters / 2.54E0 as height5_2_, person0_.address as address2_, person0_.zip as zip2_, person0_.country as country2_, person0_1_."title" as title2_0_, person0_1_.salary as salary0_, person0_1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_, person0_1_.manager as manager0_, person0_2_.comments as comments1_, person0_2_.salesperson as salesper3_1_, case when person0_1_.person_id is not null then 1 when person0_2_.person_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[person0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'JPerson person0_ left outer join JEmployee person0_1_ on person0_.person_id=person0_1_.person_id left outer join JManager person0_2_ on person0_.person_id=person0_2_.person_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=JPerson,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.joinedsubclass.Person}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'person0_1_.salary' {propertyName=salary,dereferenceType=ALL,propertyPath=salary,path={synthetic-alias}.salary,tableAlias=person0_,className=org.hibernate.test.joinedsubclass.Person,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'salary' {originalText=salary}
          \-[NUM_INT] LiteralNode: '100'

14:14:50,004 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:50,004 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.joinedsubclass.Person where salary > 100
14:14:50,005 DEBUG QueryTranslatorImpl:236 - SQL: select person0_.person_id as person1_2_, person0_.version as version2_, person0_.name as name2_, person0_.sex as sex2_, person0_.height_centimeters / 2.54E0 as height5_2_, person0_.address as address2_, person0_.zip as zip2_, person0_.country as country2_, person0_1_."title" as title2_0_, person0_1_.salary as salary0_, person0_1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_, person0_1_.manager as manager0_, person0_2_.comments as comments1_, person0_2_.salesperson as salesper3_1_, case when person0_1_.person_id is not null then 1 when person0_2_.person_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_ from JPerson person0_ left outer join JEmployee person0_1_ on person0_.person_id=person0_1_.person_id left outer join JManager person0_2_ on person0_.person_id=person0_2_.person_id where person0_1_.salary>100
14:14:50,005 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:50,015 DEBUG SQL:104 - 
    select
        person0_.person_id as person1_2_,
        person0_.version as version2_,
        person0_.name as name2_,
        person0_.sex as sex2_,
        person0_.height_centimeters / 2.54E0 as height5_2_,
        person0_.address as address2_,
        person0_.zip as zip2_,
        person0_.country as country2_,
        person0_1_."title" as title2_0_,
        person0_1_.salary as salary0_,
        person0_1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_,
        person0_1_.manager as manager0_,
        person0_2_.comments as comments1_,
        person0_2_.salesperson as salesper3_1_,
        case 
            when person0_1_.person_id is not null then 1 
            when person0_2_.person_id is not null then 2 
            when person0_.person_id is not null then 0 
        end as clazz_ 
    from
        JPerson person0_ 
    left outer join
        JEmployee person0_1_ 
            on person0_.person_id=person0_1_.person_id 
    left outer join
        JManager person0_2_ 
            on person0_.person_id=person0_2_.person_id 
    where
        person0_1_.salary>100
14:14:50,030 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.joinedsubclass.Person where salary > 100 or name like 'E%'
14:14:50,031 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'org'
    |           |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  \-[IDENT] Node: 'test'
    |           |  \-[IDENT] Node: 'joinedsubclass'
    |           \-[IDENT] Node: 'Person'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[GT] Node: '>'
          |  +-[IDENT] Node: 'salary'
          |  \-[NUM_INT] Node: '100'
          \-[LIKE] Node: 'like'
             +-[IDENT] Node: 'name'
             \-[QUOTED_STRING] Node: ''E%''

14:14:50,032 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:50,032 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.joinedsubclass.Person (<no alias>) -> person0_
14:14:50,033 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:14:50,033 DEBUG DotNode:599 - getDataType() : salary -> org.hibernate.type.BigDecimalType@3bb4a749
14:14:50,033 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.salary -> person0_1_.salary
14:14:50,033 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:14:50,033 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:14:50,033 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> person0_.name
14:14:50,033 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} JPerson person0_ ) ( where ( or ( > ( person0_1_.salary {synthetic-alias} salary ) 100 ) ( like ( person0_.name {synthetic-alias} name ) 'E%' ) ) ) )
14:14:50,034 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:14:50,034 DEBUG JoinProcessor:175 - Using FROM fragment [JPerson person0_ left outer join JEmployee person0_1_ on person0_.person_id=person0_1_.person_id left outer join JManager person0_2_ on person0_.person_id=person0_2_.person_id]
14:14:50,034 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (JPerson)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'person0_.person_id as person1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=JPerson,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.joinedsubclass.Person}}}
    |  \-[SQL_TOKEN] SqlFragment: 'person0_.version as version2_, person0_.name as name2_, person0_.sex as sex2_, person0_.height_centimeters / 2.54E0 as height5_2_, person0_.address as address2_, person0_.zip as zip2_, person0_.country as country2_, person0_1_."title" as title2_0_, person0_1_.salary as salary0_, person0_1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_, person0_1_.manager as manager0_, person0_2_.comments as comments1_, person0_2_.salesperson as salesper3_1_, case when person0_1_.person_id is not null then 1 when person0_2_.person_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[person0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'JPerson person0_ left outer join JEmployee person0_1_ on person0_.person_id=person0_1_.person_id left outer join JManager person0_2_ on person0_.person_id=person0_2_.person_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=JPerson,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.joinedsubclass.Person}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[GT] BinaryLogicOperatorNode: '>'
          |  +-[DOT] DotNode: 'person0_1_.salary' {propertyName=salary,dereferenceType=ALL,propertyPath=salary,path={synthetic-alias}.salary,tableAlias=person0_,className=org.hibernate.test.joinedsubclass.Person,classAlias=null}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'salary' {originalText=salary}
          |  \-[NUM_INT] LiteralNode: '100'
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'person0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=person0_,className=org.hibernate.test.joinedsubclass.Person,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'name' {originalText=name}
             \-[QUOTED_STRING] LiteralNode: ''E%''

14:14:50,069 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:50,070 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.joinedsubclass.Person where salary > 100 or name like 'E%'
14:14:50,070 DEBUG QueryTranslatorImpl:236 - SQL: select person0_.person_id as person1_2_, person0_.version as version2_, person0_.name as name2_, person0_.sex as sex2_, person0_.height_centimeters / 2.54E0 as height5_2_, person0_.address as address2_, person0_.zip as zip2_, person0_.country as country2_, person0_1_."title" as title2_0_, person0_1_.salary as salary0_, person0_1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_, person0_1_.manager as manager0_, person0_2_.comments as comments1_, person0_2_.salesperson as salesper3_1_, case when person0_1_.person_id is not null then 1 when person0_2_.person_id is not null then 2 when person0_.person_id is not null then 0 end as clazz_ from JPerson person0_ left outer join JEmployee person0_1_ on person0_.person_id=person0_1_.person_id left outer join JManager person0_2_ on person0_.person_id=person0_2_.person_id where person0_1_.salary>100 or person0_.name like 'E%'
14:14:50,070 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:50,070 DEBUG SQL:104 - 
    select
        person0_.person_id as person1_2_,
        person0_.version as version2_,
        person0_.name as name2_,
        person0_.sex as sex2_,
        person0_.height_centimeters / 2.54E0 as height5_2_,
        person0_.address as address2_,
        person0_.zip as zip2_,
        person0_.country as country2_,
        person0_1_."title" as title2_0_,
        person0_1_.salary as salary0_,
        person0_1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_,
        person0_1_.manager as manager0_,
        person0_2_.comments as comments1_,
        person0_2_.salesperson as salesper3_1_,
        case 
            when person0_1_.person_id is not null then 1 
            when person0_2_.person_id is not null then 2 
            when person0_.person_id is not null then 0 
        end as clazz_ 
    from
        JPerson person0_ 
    left outer join
        JEmployee person0_1_ 
            on person0_.person_id=person0_1_.person_id 
    left outer join
        JManager person0_2_ 
            on person0_.person_id=person0_2_.person_id 
    where
        person0_1_.salary>100 
        or person0_.name like 'E%'
14:14:50,084 DEBUG SQL:104 - 
    select
        this_.person_id as person1_2_0_,
        this_.version as version2_0_,
        this_.name as name2_0_,
        this_.sex as sex2_0_,
        this_.height_centimeters / 2.54E0 as height5_2_0_,
        this_.address as address2_0_,
        this_.zip as zip2_0_,
        this_.country as country2_0_,
        this_1_."title" as title2_0_0_,
        this_1_.salary as salary0_0_,
        this_1_.pwd_expiry_weeks * 7.0E0 as pwd4_0_0_,
        this_1_.manager as manager0_0_,
        this_2_.comments as comments1_0_,
        this_2_.salesperson as salesper3_1_0_,
        case 
            when this_1_.person_id is not null then 1 
            when this_2_.person_id is not null then 2 
            when this_.person_id is not null then 0 
        end as clazz_0_ 
    from
        JPerson this_ 
    left outer join
        JEmployee this_1_ 
            on this_.person_id=this_1_.person_id 
    left outer join
        JManager this_2_ 
            on this_.person_id=this_2_.person_id 
    where
        this_1_.salary>?
14:14:50,094 DEBUG SQL:104 - 
    delete 
    from
        JPerson 
    where
        person_id=? 
        and version=?
14:14:50,105 DEBUG SQL:104 - 
    delete 
    from
        JEmployee 
    where
        person_id=?
14:14:50,105 DEBUG SQL:104 - 
    delete 
    from
        JPerson 
    where
        person_id=? 
        and version=?
14:14:50,106  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:14:50,106 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:14:50,107 DEBUG SQL:104 - 
    alter table JEmployee 
        drop constraint FK26C5611884240E51
14:14:50,107 DEBUG SQL:104 - 
    alter table JEmployee 
        drop constraint FK26C56118833E7D52
14:14:50,107 DEBUG SQL:104 - 
    alter table JManager 
        drop constraint FK9C18A00384240E51
14:14:50,107 DEBUG SQL:104 - 
    alter table JManager 
        drop constraint FK9C18A003D50B5906
14:14:50,118 DEBUG SQL:104 - 
    drop table JEmployee if exists
14:14:50,118 DEBUG SQL:104 - 
    drop table JManager if exists
14:14:50,119 DEBUG SQL:104 - 
    drop table JPerson if exists
14:14:50,119  INFO SchemaExport:405 - HHH000230: Schema export complete
14:14:50,119  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
