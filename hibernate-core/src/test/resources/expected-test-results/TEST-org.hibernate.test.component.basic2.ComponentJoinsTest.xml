<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" hostname="dhcp-10.15.208.168.stl.redhat.com" name="org.hibernate.test.component.basic2.ComponentJoinsTest" tests="2" time="0.38" timestamp="2013-02-28T20:12:00">
  <properties />
  <testcase classname="org.hibernate.test.component.basic2.ComponentJoinsTest" name="testComponentJoins" time="0.235" />
  <testcase classname="org.hibernate.test.component.basic2.ComponentJoinsTest" name="testComponentJoinsHHH7849" time="0.071" />
  <system-out><![CDATA[14:12:00,230  INFO CustomRunner:132 - BeforeClass: org.hibernate.test.component.basic2.ComponentJoinsTest
14:12:00,240  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:12:00,240  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:12:00,241  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:12:00,241  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:12:00,241  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:12:00,242  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:12:00,243  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:12:00,243  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:12:00,243  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:12:00,244  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:12:00,257  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:12:00,257 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:12:00,258 DEBUG SQL:104 - 
    alter table Component_Component$Emb$Stuff 
        drop constraint FKD03977E1BA76763B
14:12:00,258 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Component_Component$Emb$Stuff drop constraint FKD03977E1BA76763B
14:12:00,258 ERROR SchemaExport:426 - Table "COMPONENT_COMPONENT$EMB$STUFF" not found; SQL statement:

    alter table Component_Component$Emb$Stuff 
        drop constraint FKD03977E1BA76763B [42102-145]
14:12:00,258 DEBUG SQL:104 - 
    alter table Component_Component$Emb$Stuff 
        drop constraint FKD03977E158B29057
14:12:00,258 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Component_Component$Emb$Stuff drop constraint FKD03977E158B29057
14:12:00,258 ERROR SchemaExport:426 - Table "COMPONENT_COMPONENT$EMB$STUFF" not found; SQL statement:

    alter table Component_Component$Emb$Stuff 
        drop constraint FKD03977E158B29057 [42102-145]
14:12:00,259 DEBUG SQL:104 - 
    drop table Component if exists
14:12:00,259 DEBUG SQL:104 - 
    drop table Component$Emb$Stuff if exists
14:12:00,259 DEBUG SQL:104 - 
    drop table Component_Component$Emb$Stuff if exists
14:12:00,260 DEBUG SQL:104 - 
    drop table Person if exists
14:12:00,260 DEBUG SQL:104 - 
    create table Component (
        id bigint not null,
        primary key (id)
    )
14:12:00,260 DEBUG SQL:104 - 
    create table Component$Emb$Stuff (
        id bigint not null,
        primary key (id)
    )
14:12:00,260 DEBUG SQL:104 - 
    create table Component_Component$Emb$Stuff (
        Component_id bigint not null,
        stuffs_id bigint not null,
        primary key (Component_id, stuffs_id)
    )
14:12:00,261 DEBUG SQL:104 - 
    create table Person (
        id integer not null,
        FIRST_NAME varchar(255) not null,
        LAST_NAME varchar(255) not null,
        primary key (id)
    )
14:12:00,261 DEBUG SQL:104 - 
    alter table Component_Component$Emb$Stuff 
        add constraint UK_D03977E18DE0AC5B unique (stuffs_id)
14:12:00,261 DEBUG SQL:104 - 
    alter table Component_Component$Emb$Stuff 
        add constraint FKD03977E1BA76763B 
        foreign key (stuffs_id) 
        references Component$Emb$Stuff
14:12:00,262 DEBUG SQL:104 - 
    alter table Component_Component$Emb$Stuff 
        add constraint FKD03977E158B29057 
        foreign key (Component_id) 
        references Component
14:12:00,263  INFO SchemaExport:405 - HHH000230: Schema export complete
14:12:00,263  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:12:00,263  INFO CustomRunner:139 - Test: testComponentJoins
14:12:00,266 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select p from org.hibernate.test.component.basic2.Person p join p.name as n where n.lastName like '%'
14:12:00,268 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'test'
    |  |  |  |  |  |  \-[IDENT] Node: 'component'
    |  |  |  |  |  \-[IDENT] Node: 'basic2'
    |  |  |  |  \-[IDENT] Node: 'Person'
    |  |  |  \-[ALIAS] Node: 'p'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'p'
    |  |     |  \-[IDENT] Node: 'name'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'n'
          |  \-[IDENT] Node: 'lastName'
          \-[QUOTED_STRING] Node: ''%''

14:12:00,268 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:00,268 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.component.basic2.Person (p) -> person0_
14:12:00,269 DEBUG FromReferenceNode:74 - Resolved : p -> person0_.id
14:12:00,269 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.ComponentType@2f99b6c2
14:12:00,269 DEBUG DotNode:588 - Terminal propertyPath = [name]
14:12:00,282 DEBUG FromReferenceNode:74 - Resolved : p.name -> person0_.FIRST_NAME, person0_.LAST_NAME
14:12:00,282 DEBUG FromClause:282 - addJoinByPathMap() : name -> ComponentJoin{path=name, type=class org.hibernate.test.component.basic2.Name}
14:12:00,283 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[0] ComponentJoin: '{text:null}' ComponentJoin{path=name, type=class org.hibernate.test.component.basic2.Name}

14:12:00,283 DEBUG FromReferenceNode:74 - Resolved : p -> person0_.id
14:12:00,283 DEBUG FromReferenceNode:74 - Resolved : n -> (person0_.FIRST_NAME, person0_.LAST_NAME)
14:12:00,283 DEBUG DotNode:599 - getDataType() : lastName -> org.hibernate.type.StringType@2dc8de40
14:12:00,283 DEBUG FromReferenceNode:74 - Resolved : n.lastName -> person0_.LAST_NAME
14:12:00,284 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} person0_.id ) ( FromClause{level=1} Person person0_ ) ( where ( like ( person0_.LAST_NAME (person0_.FIRST_NAME, person0_.LAST_NAME) lastName ) '%' ) ) )
14:12:00,284 DEBUG JoinProcessor:175 - Using FROM fragment [Person person0_]
14:12:00,284 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Person)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'person0_.id as id3_' {alias=p, className=org.hibernate.test.component.basic2.Person, tableAlias=person0_}
    |  \-[SQL_TOKEN] SqlFragment: 'person0_.FIRST_NAME as FIRST2_3_, person0_.LAST_NAME as LAST3_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=2, fromElementByClassAlias=[p, n], fromElementByTableAlias=[person0_], fromElementsByPath=[name], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Person person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=Person,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.component.basic2.Person}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'person0_.LAST_NAME' {propertyName=lastName,dereferenceType=ALL,propertyPath=lastName,path=n.lastName,tableAlias=person0_,className=null,classAlias=n}
          |  +-[ALIAS_REF] IdentNode: '(person0_.FIRST_NAME, person0_.LAST_NAME)' {alias=n, className=null, tableAlias=person0_}
          |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          \-[QUOTED_STRING] LiteralNode: ''%''

14:12:00,285 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:00,285 DEBUG QueryTranslatorImpl:235 - HQL: select p from org.hibernate.test.component.basic2.Person p join p.name as n where n.lastName like '%'
14:12:00,285 DEBUG QueryTranslatorImpl:236 - SQL: select person0_.id as id3_, person0_.FIRST_NAME as FIRST2_3_, person0_.LAST_NAME as LAST3_3_ from Person person0_ where person0_.LAST_NAME like '%'
14:12:00,285 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:00,286 DEBUG SQL:104 - 
    select
        person0_.id as id3_,
        person0_.FIRST_NAME as FIRST2_3_,
        person0_.LAST_NAME as LAST3_3_ 
    from
        Person person0_ 
    where
        person0_.LAST_NAME like '%'
14:12:00,287 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select n.lastName from org.hibernate.test.component.basic2.Person p join p.name as n
14:12:00,289 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  +-[RANGE] Node: 'RANGE'
       |  |  +-[DOT] Node: '.'
       |  |  |  +-[DOT] Node: '.'
       |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  |  |  +-[IDENT] Node: 'org'
       |  |  |  |  |  |  |  \-[IDENT] Node: 'hibernate'
       |  |  |  |  |  |  \-[IDENT] Node: 'test'
       |  |  |  |  |  \-[IDENT] Node: 'component'
       |  |  |  |  \-[IDENT] Node: 'basic2'
       |  |  |  \-[IDENT] Node: 'Person'
       |  |  \-[ALIAS] Node: 'p'
       |  \-[JOIN] Node: 'join'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'p'
       |     |  \-[IDENT] Node: 'name'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'lastName'

14:12:00,321 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:00,321 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.component.basic2.Person (p) -> person0_
14:12:00,321 DEBUG FromReferenceNode:74 - Resolved : p -> person0_.id
14:12:00,322 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.ComponentType@2f99b6c2
14:12:00,322 DEBUG DotNode:588 - Terminal propertyPath = [name]
14:12:00,322 DEBUG FromReferenceNode:74 - Resolved : p.name -> person0_.FIRST_NAME, person0_.LAST_NAME
14:12:00,322 DEBUG FromClause:282 - addJoinByPathMap() : name -> ComponentJoin{path=name, type=class org.hibernate.test.component.basic2.Name}
14:12:00,339 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[0] ComponentJoin: '{text:null}' ComponentJoin{path=name, type=class org.hibernate.test.component.basic2.Name}

14:12:00,340 DEBUG FromReferenceNode:74 - Resolved : n -> (person0_.FIRST_NAME, person0_.LAST_NAME)
14:12:00,340 DEBUG DotNode:599 - getDataType() : lastName -> org.hibernate.type.StringType@2dc8de40
14:12:00,340 DEBUG FromReferenceNode:74 - Resolved : n.lastName -> person0_.LAST_NAME
14:12:00,340 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( person0_.LAST_NAME (person0_.FIRST_NAME, person0_.LAST_NAME) lastName ) ) ( FromClause{level=1} Person person0_ ) )
14:12:00,340 DEBUG JoinProcessor:175 - Using FROM fragment [Person person0_]
14:12:00,341 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Person)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'person0_.LAST_NAME' {propertyName=lastName,dereferenceType=ALL,propertyPath=lastName,path=n.lastName,tableAlias=person0_,className=null,classAlias=n}
    |  |  +-[ALIAS_REF] IdentNode: '(person0_.FIRST_NAME, person0_.LAST_NAME)' {alias=n, className=null, tableAlias=person0_}
    |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=2, fromElementByClassAlias=[p, n], fromElementByTableAlias=[person0_], fromElementsByPath=[name], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Person person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=Person,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.component.basic2.Person}}

14:12:00,341 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:00,341 DEBUG QueryTranslatorImpl:235 - HQL: select n.lastName from org.hibernate.test.component.basic2.Person p join p.name as n
14:12:00,341 DEBUG QueryTranslatorImpl:236 - SQL: select person0_.LAST_NAME as col_0_0_ from Person person0_
14:12:00,341 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:00,341 DEBUG SQL:104 - 
    select
        person0_.LAST_NAME as col_0_0_ 
    from
        Person person0_
14:12:00,342 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select n from org.hibernate.test.component.basic2.Person p join p.name as n
14:12:00,344 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  +-[RANGE] Node: 'RANGE'
       |  |  +-[DOT] Node: '.'
       |  |  |  +-[DOT] Node: '.'
       |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  |  |  +-[IDENT] Node: 'org'
       |  |  |  |  |  |  |  \-[IDENT] Node: 'hibernate'
       |  |  |  |  |  |  \-[IDENT] Node: 'test'
       |  |  |  |  |  \-[IDENT] Node: 'component'
       |  |  |  |  \-[IDENT] Node: 'basic2'
       |  |  |  \-[IDENT] Node: 'Person'
       |  |  \-[ALIAS] Node: 'p'
       |  \-[JOIN] Node: 'join'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'p'
       |     |  \-[IDENT] Node: 'name'
       |     \-[ALIAS] Node: 'n'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'n'

14:12:00,357 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:00,358 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.component.basic2.Person (p) -> person0_
14:12:00,358 DEBUG FromReferenceNode:74 - Resolved : p -> person0_.id
14:12:00,358 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.ComponentType@2f99b6c2
14:12:00,358 DEBUG DotNode:588 - Terminal propertyPath = [name]
14:12:00,358 DEBUG FromReferenceNode:74 - Resolved : p.name -> person0_.FIRST_NAME, person0_.LAST_NAME
14:12:00,358 DEBUG FromClause:282 - addJoinByPathMap() : name -> ComponentJoin{path=name, type=class org.hibernate.test.component.basic2.Name}
14:12:00,359 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[0] ComponentJoin: '{text:null}' ComponentJoin{path=name, type=class org.hibernate.test.component.basic2.Name}

14:12:00,359 DEBUG FromReferenceNode:74 - Resolved : n -> (person0_.FIRST_NAME, person0_.LAST_NAME)
14:12:00,359 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} (person0_.FIRST_NAME, person0_.LAST_NAME) ) ( FromClause{level=1} Person person0_ ) )
14:12:00,359 DEBUG JoinProcessor:175 - Using FROM fragment [Person person0_]
14:12:00,359 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Person)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  \-[ALIAS_REF] IdentNode: 'person0_.FIRST_NAME as col_0_0_, person0_.LAST_NAME as col_0_1_' {alias=n, className=null, tableAlias=person0_}
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=2, fromElementByClassAlias=[p, n], fromElementByTableAlias=[person0_], fromElementsByPath=[name], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Person person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=Person,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.component.basic2.Person}}

14:12:00,359 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:00,360 DEBUG QueryTranslatorImpl:235 - HQL: select n from org.hibernate.test.component.basic2.Person p join p.name as n
14:12:00,360 DEBUG QueryTranslatorImpl:236 - SQL: select person0_.FIRST_NAME as col_0_0_, person0_.LAST_NAME as col_0_1_ from Person person0_
14:12:00,360 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:00,360 DEBUG SQL:104 - 
    select
        person0_.FIRST_NAME as col_0_0_,
        person0_.LAST_NAME as col_0_1_ 
    from
        Person person0_
14:12:00,361 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select n from org.hibernate.test.component.basic2.Person p join p.name as n order by n.lastName
14:12:00,363 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'test'
    |  |  |  |  |  |  \-[IDENT] Node: 'component'
    |  |  |  |  |  \-[IDENT] Node: 'basic2'
    |  |  |  |  \-[IDENT] Node: 'Person'
    |  |  |  \-[ALIAS] Node: 'p'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'p'
    |  |     |  \-[IDENT] Node: 'name'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'n'
    \-[ORDER] Node: 'order'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'n'
          \-[IDENT] Node: 'lastName'

14:12:00,372 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:00,372 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.component.basic2.Person (p) -> person0_
14:12:00,373 DEBUG FromReferenceNode:74 - Resolved : p -> person0_.id
14:12:00,373 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.ComponentType@2f99b6c2
14:12:00,396 DEBUG DotNode:588 - Terminal propertyPath = [name]
14:12:00,397 DEBUG FromReferenceNode:74 - Resolved : p.name -> person0_.FIRST_NAME, person0_.LAST_NAME
14:12:00,397 DEBUG FromClause:282 - addJoinByPathMap() : name -> ComponentJoin{path=name, type=class org.hibernate.test.component.basic2.Name}
14:12:00,397 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[0] ComponentJoin: '{text:null}' ComponentJoin{path=name, type=class org.hibernate.test.component.basic2.Name}

14:12:00,397 DEBUG FromReferenceNode:74 - Resolved : n -> (person0_.FIRST_NAME, person0_.LAST_NAME)
14:12:00,398 DEBUG FromReferenceNode:74 - Resolved : n -> person0_.FIRST_NAME, person0_.LAST_NAME
14:12:00,398 DEBUG DotNode:599 - getDataType() : lastName -> org.hibernate.type.StringType@2dc8de40
14:12:00,398 DEBUG FromReferenceNode:74 - Resolved : n.lastName -> person0_.LAST_NAME
14:12:00,398 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} (person0_.FIRST_NAME, person0_.LAST_NAME) ) ( FromClause{level=1} Person person0_ ) ( order ( person0_.LAST_NAME person0_.FIRST_NAME, person0_.LAST_NAME lastName ) ) )
14:12:00,398 DEBUG JoinProcessor:175 - Using FROM fragment [Person person0_]
14:12:00,399 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Person)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  \-[ALIAS_REF] IdentNode: 'person0_.FIRST_NAME as col_0_0_, person0_.LAST_NAME as col_0_1_' {alias=n, className=null, tableAlias=person0_}
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=2, fromElementByClassAlias=[p, n], fromElementByTableAlias=[person0_], fromElementsByPath=[name], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Person person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=Person,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.component.basic2.Person}}
    \-[ORDER] OrderByClause: 'order'
       \-[DOT] DotNode: 'person0_.LAST_NAME' {propertyName=lastName,dereferenceType=ALL,propertyPath=lastName,path=n.lastName,tableAlias=person0_,className=null,classAlias=n}
          +-[ALIAS_REF] IdentNode: 'person0_.FIRST_NAME, person0_.LAST_NAME' {alias=n, className=null, tableAlias=person0_}
          \-[IDENT] IdentNode: 'lastName' {originalText=lastName}

14:12:00,399 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:00,399 DEBUG QueryTranslatorImpl:235 - HQL: select n from org.hibernate.test.component.basic2.Person p join p.name as n order by n.lastName
14:12:00,399 DEBUG QueryTranslatorImpl:236 - SQL: select person0_.FIRST_NAME as col_0_0_, person0_.LAST_NAME as col_0_1_ from Person person0_ order by person0_.LAST_NAME
14:12:00,399 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:00,399 DEBUG SQL:104 - 
    select
        person0_.FIRST_NAME as col_0_0_,
        person0_.LAST_NAME as col_0_1_ 
    from
        Person person0_ 
    order by
        person0_.LAST_NAME
14:12:00,400 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select n from org.hibernate.test.component.basic2.Person p join p.name as n order by p
14:12:00,402 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'test'
    |  |  |  |  |  |  \-[IDENT] Node: 'component'
    |  |  |  |  |  \-[IDENT] Node: 'basic2'
    |  |  |  |  \-[IDENT] Node: 'Person'
    |  |  |  \-[ALIAS] Node: 'p'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'p'
    |  |     |  \-[IDENT] Node: 'name'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'n'
    \-[ORDER] Node: 'order'
       \-[IDENT] Node: 'p'

14:12:00,454 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:00,454 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.component.basic2.Person (p) -> person0_
14:12:00,454 DEBUG FromReferenceNode:74 - Resolved : p -> person0_.id
14:12:00,455 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.ComponentType@2f99b6c2
14:12:00,455 DEBUG DotNode:588 - Terminal propertyPath = [name]
14:12:00,455 DEBUG FromReferenceNode:74 - Resolved : p.name -> person0_.FIRST_NAME, person0_.LAST_NAME
14:12:00,455 DEBUG FromClause:282 - addJoinByPathMap() : name -> ComponentJoin{path=name, type=class org.hibernate.test.component.basic2.Name}
14:12:00,455 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[0] ComponentJoin: '{text:null}' ComponentJoin{path=name, type=class org.hibernate.test.component.basic2.Name}

14:12:00,455 DEBUG FromReferenceNode:74 - Resolved : n -> (person0_.FIRST_NAME, person0_.LAST_NAME)
14:12:00,456 DEBUG FromReferenceNode:74 - Resolved : p -> person0_.id
14:12:00,456 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} (person0_.FIRST_NAME, person0_.LAST_NAME) ) ( FromClause{level=1} Person person0_ ) ( order person0_.id ) )
14:12:00,456 DEBUG JoinProcessor:175 - Using FROM fragment [Person person0_]
14:12:00,456 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Person)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  \-[ALIAS_REF] IdentNode: 'person0_.FIRST_NAME as col_0_0_, person0_.LAST_NAME as col_0_1_' {alias=n, className=null, tableAlias=person0_}
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=2, fromElementByClassAlias=[p, n], fromElementByTableAlias=[person0_], fromElementsByPath=[name], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Person person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=Person,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.component.basic2.Person}}
    \-[ORDER] OrderByClause: 'order'
       \-[ALIAS_REF] IdentNode: 'person0_.id' {alias=p, className=org.hibernate.test.component.basic2.Person, tableAlias=person0_}

14:12:00,456 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:00,456 DEBUG QueryTranslatorImpl:235 - HQL: select n from org.hibernate.test.component.basic2.Person p join p.name as n order by p
14:12:00,456 DEBUG QueryTranslatorImpl:236 - SQL: select person0_.FIRST_NAME as col_0_0_, person0_.LAST_NAME as col_0_1_ from Person person0_ order by person0_.id
14:12:00,456 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:00,457 DEBUG SQL:104 - 
    select
        person0_.FIRST_NAME as col_0_0_,
        person0_.LAST_NAME as col_0_1_ 
    from
        Person person0_ 
    order by
        person0_.id
14:12:00,457 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select n from org.hibernate.test.component.basic2.Person p join p.name as n order by n
14:12:00,459 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'test'
    |  |  |  |  |  |  \-[IDENT] Node: 'component'
    |  |  |  |  |  \-[IDENT] Node: 'basic2'
    |  |  |  |  \-[IDENT] Node: 'Person'
    |  |  |  \-[ALIAS] Node: 'p'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'p'
    |  |     |  \-[IDENT] Node: 'name'
    |  |     \-[ALIAS] Node: 'n'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'n'
    \-[ORDER] Node: 'order'
       \-[IDENT] Node: 'n'

14:12:00,471 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:00,471 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.component.basic2.Person (p) -> person0_
14:12:00,471 DEBUG FromReferenceNode:74 - Resolved : p -> person0_.id
14:12:00,472 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.ComponentType@2f99b6c2
14:12:00,472 DEBUG DotNode:588 - Terminal propertyPath = [name]
14:12:00,472 DEBUG FromReferenceNode:74 - Resolved : p.name -> person0_.FIRST_NAME, person0_.LAST_NAME
14:12:00,472 DEBUG FromClause:282 - addJoinByPathMap() : name -> ComponentJoin{path=name, type=class org.hibernate.test.component.basic2.Name}
14:12:00,472 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[0] ComponentJoin: '{text:null}' ComponentJoin{path=name, type=class org.hibernate.test.component.basic2.Name}

14:12:00,472 DEBUG FromReferenceNode:74 - Resolved : n -> (person0_.FIRST_NAME, person0_.LAST_NAME)
14:12:00,472 DEBUG FromReferenceNode:74 - Resolved : n -> person0_.FIRST_NAME, person0_.LAST_NAME
14:12:00,473 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} (person0_.FIRST_NAME, person0_.LAST_NAME) ) ( FromClause{level=1} Person person0_ ) ( order person0_.FIRST_NAME, person0_.LAST_NAME ) )
14:12:00,473 DEBUG JoinProcessor:175 - Using FROM fragment [Person person0_]
14:12:00,473 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Person)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  \-[ALIAS_REF] IdentNode: 'person0_.FIRST_NAME as col_0_0_, person0_.LAST_NAME as col_0_1_' {alias=n, className=null, tableAlias=person0_}
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=2, fromElementByClassAlias=[p, n], fromElementByTableAlias=[person0_], fromElementsByPath=[name], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Person person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=Person,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.component.basic2.Person}}
    \-[ORDER] OrderByClause: 'order'
       \-[ALIAS_REF] IdentNode: 'person0_.FIRST_NAME, person0_.LAST_NAME' {alias=n, className=null, tableAlias=person0_}

14:12:00,473 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:00,497 DEBUG QueryTranslatorImpl:235 - HQL: select n from org.hibernate.test.component.basic2.Person p join p.name as n order by n
14:12:00,497 DEBUG QueryTranslatorImpl:236 - SQL: select person0_.FIRST_NAME as col_0_0_, person0_.LAST_NAME as col_0_1_ from Person person0_ order by person0_.FIRST_NAME, person0_.LAST_NAME
14:12:00,498 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:00,498 DEBUG SQL:104 - 
    select
        person0_.FIRST_NAME as col_0_0_,
        person0_.LAST_NAME as col_0_1_ 
    from
        Person person0_ 
    order by
        person0_.FIRST_NAME,
        person0_.LAST_NAME
14:12:00,499  INFO CustomRunner:139 - Test: testComponentJoinsHHH7849
14:12:00,501 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select c from org.hibernate.test.component.basic2.Component c join c.emb as e where e.stuffs is empty 
14:12:00,504 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'test'
    |  |  |  |  |  |  \-[IDENT] Node: 'component'
    |  |  |  |  |  \-[IDENT] Node: 'basic2'
    |  |  |  |  \-[IDENT] Node: 'Component'
    |  |  |  \-[ALIAS] Node: 'c'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'c'
    |  |     |  \-[IDENT] Node: 'emb'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'where'
       \-[NOT] Node: 'not'
          \-[EXISTS] Node: 'exists'
             \-[QUERY] Node: 'QUERY'
                \-[SELECT_FROM] Node: 'SELECT_FROM'
                   \-[FROM] Node: 'from'
                      \-[RANGE] Node: 'RANGE'
                         \-[DOT] Node: '.'
                            +-[IDENT] Node: 'e'
                            \-[IDENT] Node: 'stuffs'

14:12:00,511 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:00,511 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.component.basic2.Component (c) -> component0_
14:12:00,511 DEBUG FromReferenceNode:74 - Resolved : c -> component0_.id
14:12:00,511 DEBUG DotNode:599 - getDataType() : emb -> org.hibernate.type.ComponentType@3ee56b08
14:12:00,512 DEBUG DotNode:588 - Terminal propertyPath = [emb]
14:12:00,512 DEBUG FromReferenceNode:74 - Resolved : c.emb -> 
14:12:00,512 DEBUG FromClause:282 - addJoinByPathMap() : emb -> ComponentJoin{path=emb, type=class org.hibernate.test.component.basic2.Component$Emb}
14:12:00,512 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[0] ComponentJoin: '{text:null}' ComponentJoin{path=emb, type=class org.hibernate.test.component.basic2.Component$Emb}

14:12:00,512 DEBUG FromReferenceNode:74 - Resolved : c -> component0_.id
14:12:00,542 DEBUG FromElementFactory:129 - createFromElementInSubselect() : path = e.stuffs
14:12:00,543 DEBUG PathHelper:68 - parsePath() : e.stuffs -> [  ( . e stuffs ) ]
14:12:00,543 DEBUG DotNode:599 - getDataType() : stuffs -> org.hibernate.type.SetType(org.hibernate.test.component.basic2.Component.emb.stuffs)
14:12:00,543 DEBUG FromElementFactory:385 - createManyToMany() : path = e.stuffs role = org.hibernate.test.component.basic2.Component.emb.stuffs associatedEntityName = org.hibernate.test.component.basic2.Component$Emb$Stuff
14:12:00,544 DEBUG FromElement:157 - FromClause{level=2} : org.hibernate.test.component.basic2.Component$Emb$Stuff (<no alias>) -> component_2_
14:12:00,544 DEBUG FromClause:282 - addJoinByPathMap() : e.stuffs -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Component$Emb$Stuff,tableAlias=component_2_,origin=Component component0_,columns={component0_.id ,className=org.hibernate.test.component.basic2.Component$Emb$Stuff}}
14:12:00,544 DEBUG DotNode:308 - dereferenceCollection() : Created new FROM element for e.stuffs : Component_Component$Emb$Stuff component_2_
14:12:00,544 DEBUG FromReferenceNode:74 - Resolved : e.stuffs -> .
14:12:00,544 DEBUG FromElementFactory:158 - createFromElementInSubselect() : e.stuffs -> Component_Component$Emb$Stuff component_2_
14:12:00,544 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=2} Component_Component$Emb$Stuff component_2_ ) )
14:12:00,544 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:12:00,544 DEBUG JoinProcessor:175 - Using FROM fragment [Component_Component$Emb$Stuff stuffs1_, Component$Emb$Stuff component_2_]
14:12:00,545 DEBUG SyntheticAndFactory:92 - Using unprocessed WHERE-fragment [component0_.id=stuffs1_.Component_id and stuffs1_.stuffs_id=component_2_.id]
14:12:00,555 DEBUG SyntheticAndFactory:124 - Using processed WHERE-fragment [component0_.id=stuffs1_.Component_id and stuffs1_.stuffs_id=component_2_.id]
14:12:00,555 DEBUG QueryNode:73 - getWhereClause() : Creating a new WHERE clause...
14:12:00,555 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} component0_.id ) ( FromClause{level=1} Component component0_ ) ( where ( not ( exists ( SELECT ( {derived select clause} component_2_.id ) ( FromClause{level=2} Component_Component$Emb$Stuff stuffs1_, Component$Emb$Stuff component_2_ ) ( WHERE ( {theta joins} component0_.id=stuffs1_.Component_id and stuffs1_.stuffs_id=component_2_.id ) ) ) ) ) ) )
14:12:00,555 DEBUG JoinProcessor:175 - Using FROM fragment [Component component0_]
14:12:00,556 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Component_Component$Emb$Stuff,Component$Emb$Stuff,Component)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  \-[ALIAS_REF] IdentNode: 'component0_.id as id0_' {alias=c, className=org.hibernate.test.component.basic2.Component, tableAlias=component0_}
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=2, fromElementByClassAlias=[e, c], fromElementByTableAlias=[component0_], fromElementsByPath=[emb], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Component component0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Component,tableAlias=component0_,origin=null,columns={,className=org.hibernate.test.component.basic2.Component}}
    \-[WHERE] SqlNode: 'where'
       \-[NOT] SqlNode: 'not'
          \-[EXISTS] UnaryLogicOperatorNode: 'exists'
             \-[SELECT] QueryNode: 'SELECT'  querySpaces (Component_Component$Emb$Stuff,Component$Emb$Stuff,Component)
                +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
                |  \-[SELECT_EXPR] SelectExpressionImpl: 'component_2_.id' {ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.component.basic2.Component.emb.stuffs,tableName=Component$Emb$Stuff,tableAlias=component_2_,origin=Component component0_,columns={component0_.id ,className=org.hibernate.test.component.basic2.Component$Emb$Stuff}}}
                +-[FROM] FromClause: 'from' FromClause{level=2, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[component_2_], fromElementsByPath=[e.stuffs], collectionJoinFromElementsByPath=[], impliedElements=[]}
                |  \-[FROM_FRAGMENT] ImpliedFromElement: 'Component_Component$Emb$Stuff stuffs1_, Component$Emb$Stuff component_2_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.component.basic2.Component.emb.stuffs,tableName=Component$Emb$Stuff,tableAlias=component_2_,origin=Component component0_,columns={component0_.id ,className=org.hibernate.test.component.basic2.Component$Emb$Stuff}}
                \-[WHERE] SqlNode: 'WHERE'
                   \-[THETA_JOINS] SqlNode: '{theta joins}'
                      \-[SQL_TOKEN] SqlFragment: 'component0_.id=stuffs1_.Component_id and stuffs1_.stuffs_id=component_2_.id'

14:12:00,556 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:00,556 DEBUG QueryTranslatorImpl:235 - HQL: select c from org.hibernate.test.component.basic2.Component c join c.emb as e where e.stuffs is empty 
14:12:00,556 DEBUG QueryTranslatorImpl:236 - SQL: select component0_.id as id0_ from Component component0_ where  not (exists (select component_2_.id from Component_Component$Emb$Stuff stuffs1_, Component$Emb$Stuff component_2_ where component0_.id=stuffs1_.Component_id and stuffs1_.stuffs_id=component_2_.id))
14:12:00,556 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:00,556 DEBUG SQL:104 - 
    select
        component0_.id as id0_ 
    from
        Component component0_ 
    where
        not (exists (select
            component_2_.id 
        from
            Component_Component$Emb$Stuff stuffs1_,
            Component$Emb$Stuff component_2_ 
        where
            component0_.id=stuffs1_.Component_id 
            and stuffs1_.stuffs_id=component_2_.id))
14:12:00,571  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:12:00,572 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:12:00,572 DEBUG SQL:104 - 
    alter table Component_Component$Emb$Stuff 
        drop constraint FKD03977E1BA76763B
14:12:00,573 DEBUG SQL:104 - 
    alter table Component_Component$Emb$Stuff 
        drop constraint FKD03977E158B29057
14:12:00,573 DEBUG SQL:104 - 
    drop table Component if exists
14:12:00,573 DEBUG SQL:104 - 
    drop table Component$Emb$Stuff if exists
14:12:00,573 DEBUG SQL:104 - 
    drop table Component_Component$Emb$Stuff if exists
14:12:00,573 DEBUG SQL:104 - 
    drop table Person if exists
14:12:00,574  INFO SchemaExport:405 - HHH000230: Schema export complete
14:12:00,574  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
