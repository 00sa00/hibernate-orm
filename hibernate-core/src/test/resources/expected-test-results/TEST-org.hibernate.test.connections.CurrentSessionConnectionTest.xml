<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" hostname="dhcp-10.15.208.168.stl.redhat.com" name="org.hibernate.test.connections.CurrentSessionConnectionTest" tests="13" time="0.341" timestamp="2013-02-28T20:12:01">
  <properties />
  <testcase classname="org.hibernate.test.connections.CurrentSessionConnectionTest" name="testBasicSessionUsage" time="0.019" />
  <testcase classname="org.hibernate.test.connections.CurrentSessionConnectionTest" name="testConnectedSerialization" time="0.004" />
  <testcase classname="org.hibernate.test.connections.CurrentSessionConnectionTest" name="testConnectionMaintanenceDuringFlush" time="0.169" />
  <testcase classname="org.hibernate.test.connections.CurrentSessionConnectionTest" name="testEnabledFilterSerialization" time="0.002" />
  <testcase classname="org.hibernate.test.connections.CurrentSessionConnectionTest" name="testManualDisconnectChain" time="0.002" />
  <testcase classname="org.hibernate.test.connections.CurrentSessionConnectionTest" name="testManualDisconnectWithOpenResources" time="0.019" />
  <testcase classname="org.hibernate.test.connections.CurrentSessionConnectionTest" name="testManualDisconnectedSerialization" time="0.001" />
  <testcase classname="org.hibernate.test.connections.CurrentSessionConnectionTest" name="testQueryIteration" time="0.028" />
  <testcase classname="org.hibernate.test.connections.CurrentSessionConnectionTest" name="testQueryScrolling" time="0.039" />
  <testcase classname="org.hibernate.test.connections.CurrentSessionConnectionTest" name="testSerializationFailsOnAfterStatementAggressiveReleaseWithOpenResources" time="0.003" />
  <testcase classname="org.hibernate.test.connections.CurrentSessionConnectionTest" name="testSerializationOnAfterStatementAggressiveRelease" time="0.003" />
  <testcase classname="org.hibernate.test.connections.CurrentSessionConnectionTest" name="testSessionClosedProtections" time="0.001" />
  <testcase classname="org.hibernate.test.connections.CurrentSessionConnectionTest" name="testSuppliedConnection" time="0.006" />
  <system-out><![CDATA[14:12:01,792  INFO CustomRunner:132 - BeforeClass: org.hibernate.test.connections.CurrentSessionConnectionTest
14:12:01,793  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/connections/Silly.hbm.xml
14:12:01,800  INFO ConnectionProviderInitiator:188 - HHH000130: Instantiating explicit connection provider: org.hibernate.testing.jta.JtaAwareConnectionProviderImpl
14:12:01,801  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:12:01,801  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 20
14:12:01,801  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:12:01,802  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:12:01,802  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa, autocommit=false, release_mode=AFTER_STATEMENT}
14:12:01,803  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:12:01,804  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:12:01,804  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:12:01,804  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:12:01,810  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:12:01,810 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:12:01,811 DEBUG SQL:104 - 
    alter table Silly 
        drop constraint FK4C2FCC34CE24B1
14:12:01,811 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Silly drop constraint FK4C2FCC34CE24B1
14:12:01,811 ERROR SchemaExport:426 - Table "SILLY" not found; SQL statement:

    alter table Silly 
        drop constraint FK4C2FCC34CE24B1 [42102-145]
14:12:01,811 DEBUG SQL:104 - 
    drop table Other if exists
14:12:01,811 DEBUG SQL:104 - 
    drop table Silly if exists
14:12:01,811 DEBUG SQL:104 - 
    create table Other (
        id bigint not null,
        name varchar(255),
        primary key (id)
    )
14:12:01,812 DEBUG SQL:104 - 
    create table Silly (
        id bigint not null,
        name varchar(255),
        other bigint,
        primary key (id)
    )
14:12:01,812 DEBUG SQL:104 - 
    alter table Silly 
        add constraint FK4C2FCC34CE24B1 
        foreign key (other) 
        references Other
14:12:01,813  INFO SchemaExport:405 - HHH000230: Schema export complete
14:12:01,813  INFO CustomRunner:139 - Test: testBasicSessionUsage
14:12:01,829 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.connections.Silly
14:12:01,830 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'connections'
                \-[IDENT] Node: 'Silly'

14:12:01,830 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:01,831 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.connections.Silly (<no alias>) -> silly0_
14:12:01,831 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Silly silly0_ ) )
14:12:01,831 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:12:01,831 DEBUG JoinProcessor:175 - Using FROM fragment [Silly silly0_]
14:12:01,831 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Silly)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'silly0_.id as id1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Silly,tableAlias=silly0_,origin=null,columns={,className=org.hibernate.test.connections.Silly}}}
    |  \-[SQL_TOKEN] SqlFragment: 'silly0_.name as name1_, silly0_.other as other1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[silly0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Silly silly0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Silly,tableAlias=silly0_,origin=null,columns={,className=org.hibernate.test.connections.Silly}}

14:12:01,831 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:01,832 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.connections.Silly
14:12:01,832 DEBUG QueryTranslatorImpl:236 - SQL: select silly0_.id as id1_, silly0_.name as name1_, silly0_.other as other1_ from Silly silly0_
14:12:01,832 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:01,832 DEBUG SQL:104 - 
    select
        silly0_.id as id1_,
        silly0_.name as name1_,
        silly0_.other as other1_ 
    from
        Silly silly0_
14:12:01,833  INFO CustomRunner:139 - Test: testConnectedSerialization
14:12:01,835 DEBUG SQL:104 - 
    select
        silly0_.id as id1_,
        silly0_.name as name1_,
        silly0_.other as other1_ 
    from
        Silly silly0_
14:12:01,836  INFO JdbcCoordinatorImpl:269 - HHH000106: Forcing container resource cleanup on transaction completion
14:12:01,837  INFO CustomRunner:139 - Test: testConnectionMaintanenceDuringFlush
14:12:01,838 DEBUG SQL:104 - 
    select
        max(id) 
    from
        Silly
14:12:01,877 DEBUG SQL:104 - 
    select
        max(id) 
    from
        Other
14:12:01,880 DEBUG SQL:104 - 
    insert 
    into
        Other
        (name, id) 
    values
        (?, ?)
14:12:01,881 DEBUG SQL:104 - 
    insert 
    into
        Silly
        (name, other, id) 
    values
        (?, ?, ?)
14:12:01,881 DEBUG SQL:104 - 
    insert 
    into
        Other
        (name, id) 
    values
        (?, ?)
14:12:01,888 DEBUG SQL:104 - 
    insert 
    into
        Silly
        (name, other, id) 
    values
        (?, ?, ?)
14:12:01,889 DEBUG SQL:104 - 
    insert 
    into
        Other
        (name, id) 
    values
        (?, ?)
14:12:01,889 DEBUG SQL:104 - 
    insert 
    into
        Silly
        (name, other, id) 
    values
        (?, ?, ?)
14:12:01,890 DEBUG SQL:104 - 
    insert 
    into
        Other
        (name, id) 
    values
        (?, ?)
14:12:01,890 DEBUG SQL:104 - 
    insert 
    into
        Silly
        (name, other, id) 
    values
        (?, ?, ?)
14:12:01,901 DEBUG SQL:104 - 
    insert 
    into
        Other
        (name, id) 
    values
        (?, ?)
14:12:01,901 DEBUG SQL:104 - 
    insert 
    into
        Silly
        (name, other, id) 
    values
        (?, ?, ?)
14:12:01,901 DEBUG SQL:104 - 
    insert 
    into
        Other
        (name, id) 
    values
        (?, ?)
14:12:01,901 DEBUG SQL:104 - 
    insert 
    into
        Silly
        (name, other, id) 
    values
        (?, ?, ?)
14:12:01,913 DEBUG SQL:104 - 
    insert 
    into
        Other
        (name, id) 
    values
        (?, ?)
14:12:01,913 DEBUG SQL:104 - 
    insert 
    into
        Silly
        (name, other, id) 
    values
        (?, ?, ?)
14:12:01,914 DEBUG SQL:104 - 
    insert 
    into
        Other
        (name, id) 
    values
        (?, ?)
14:12:01,914 DEBUG SQL:104 - 
    insert 
    into
        Silly
        (name, other, id) 
    values
        (?, ?, ?)
14:12:01,914 DEBUG SQL:104 - 
    insert 
    into
        Other
        (name, id) 
    values
        (?, ?)
14:12:01,914 DEBUG SQL:104 - 
    insert 
    into
        Silly
        (name, other, id) 
    values
        (?, ?, ?)
14:12:01,915 DEBUG SQL:104 - 
    insert 
    into
        Other
        (name, id) 
    values
        (?, ?)
14:12:01,915 DEBUG SQL:104 - 
    insert 
    into
        Silly
        (name, other, id) 
    values
        (?, ?, ?)
14:12:01,916 DEBUG SQL:104 - 
    update
        Silly 
    set
        name=?,
        other=? 
    where
        id=?
14:12:01,928 DEBUG SQL:104 - 
    update
        Other 
    set
        name=? 
    where
        id=?
14:12:01,928 DEBUG SQL:104 - 
    update
        Silly 
    set
        name=?,
        other=? 
    where
        id=?
14:12:01,929 DEBUG SQL:104 - 
    update
        Other 
    set
        name=? 
    where
        id=?
14:12:01,929 DEBUG SQL:104 - 
    update
        Silly 
    set
        name=?,
        other=? 
    where
        id=?
14:12:01,939 DEBUG SQL:104 - 
    update
        Other 
    set
        name=? 
    where
        id=?
14:12:01,939 DEBUG SQL:104 - 
    update
        Silly 
    set
        name=?,
        other=? 
    where
        id=?
14:12:01,939 DEBUG SQL:104 - 
    update
        Other 
    set
        name=? 
    where
        id=?
14:12:01,940 DEBUG SQL:104 - 
    update
        Silly 
    set
        name=?,
        other=? 
    where
        id=?
14:12:01,940 DEBUG SQL:104 - 
    update
        Other 
    set
        name=? 
    where
        id=?
14:12:01,940 DEBUG SQL:104 - 
    update
        Silly 
    set
        name=?,
        other=? 
    where
        id=?
14:12:01,963 DEBUG SQL:104 - 
    update
        Other 
    set
        name=? 
    where
        id=?
14:12:01,964 DEBUG SQL:104 - 
    update
        Silly 
    set
        name=?,
        other=? 
    where
        id=?
14:12:01,965 DEBUG SQL:104 - 
    update
        Other 
    set
        name=? 
    where
        id=?
14:12:01,965 DEBUG SQL:104 - 
    update
        Silly 
    set
        name=?,
        other=? 
    where
        id=?
14:12:01,967 DEBUG SQL:104 - 
    update
        Other 
    set
        name=? 
    where
        id=?
14:12:01,967 DEBUG SQL:104 - 
    update
        Silly 
    set
        name=?,
        other=? 
    where
        id=?
14:12:01,968 DEBUG SQL:104 - 
    update
        Other 
    set
        name=? 
    where
        id=?
14:12:01,968 DEBUG SQL:104 - 
    update
        Silly 
    set
        name=?,
        other=? 
    where
        id=?
14:12:01,968 DEBUG SQL:104 - 
    update
        Other 
    set
        name=? 
    where
        id=?
14:12:01,969 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete from org.hibernate.test.connections.Silly
14:12:01,988 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'connections'
             \-[IDENT] Node: 'Silly'

14:12:01,993 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:01,993 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.connections.Silly (<no alias>) -> silly0_
14:12:01,994 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Silly)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[silly0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Silly' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Silly,tableAlias=silly0_,origin=null,columns={,className=org.hibernate.test.connections.Silly}}

14:12:01,994 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:01,994 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:01,995 DEBUG SQL:104 - 
    delete 
    from
        Silly
14:12:01,996 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete from org.hibernate.test.connections.Other
14:12:01,996 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'connections'
             \-[IDENT] Node: 'Other'

14:12:02,002 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:02,002 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.connections.Other (<no alias>) -> other0_
14:12:02,003 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Other)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[other0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Other' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Other,tableAlias=other0_,origin=null,columns={,className=org.hibernate.test.connections.Other}}

14:12:02,003 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:02,003 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:02,004 DEBUG SQL:104 - 
    delete 
    from
        Other
14:12:02,006  INFO CustomRunner:139 - Test: testEnabledFilterSerialization
14:12:02,015  INFO CustomRunner:139 - Test: testManualDisconnectChain
14:12:02,017  INFO CustomRunner:139 - Test: testManualDisconnectWithOpenResources
14:12:02,018 DEBUG SQL:104 - 
    insert 
    into
        Silly
        (name, other, id) 
    values
        (?, ?, ?)
14:12:02,020 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.connections.Silly
14:12:02,020 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'connections'
                \-[IDENT] Node: 'Silly'

14:12:02,027 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:02,027 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.connections.Silly (<no alias>) -> silly0_
14:12:02,027 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Silly silly0_ ) )
14:12:02,028 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:12:02,028 DEBUG JoinProcessor:175 - Using FROM fragment [Silly silly0_]
14:12:02,028 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Silly)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  \-[SELECT_EXPR] SelectExpressionImpl: 'silly0_.id as col_0_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Silly,tableAlias=silly0_,origin=null,columns={,className=org.hibernate.test.connections.Silly}}}
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[silly0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Silly silly0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Silly,tableAlias=silly0_,origin=null,columns={,className=org.hibernate.test.connections.Silly}}

14:12:02,028 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:02,028 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.connections.Silly
14:12:02,028 DEBUG QueryTranslatorImpl:236 - SQL: select silly0_.id as col_0_0_ from Silly silly0_
14:12:02,029 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:02,029 DEBUG SQL:104 - 
    select
        silly0_.id as col_0_0_ 
    from
        Silly silly0_
14:12:02,030 DEBUG SQL:104 - 
    select
        silly0_.id as id1_,
        silly0_.name as name1_,
        silly0_.other as other1_ 
    from
        Silly silly0_
14:12:02,030 DEBUG SQL:104 - 
    delete 
    from
        Silly 
    where
        id=?
14:12:02,036  INFO CustomRunner:139 - Test: testManualDisconnectedSerialization
14:12:02,038  INFO CustomRunner:139 - Test: testQueryIteration
14:12:02,039 DEBUG SQL:104 - 
    insert 
    into
        Silly
        (name, other, id) 
    values
        (?, ?, ?)
14:12:02,040 DEBUG SQL:104 - 
    select
        silly0_.id as col_0_0_ 
    from
        Silly silly0_
14:12:02,041 DEBUG SQL:104 - 
    select
        silly0_.id as col_0_0_ 
    from
        Silly silly0_
14:12:02,041 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.connections.Silly where name = 'silly'
14:12:02,042 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'org'
    |           |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  \-[IDENT] Node: 'test'
    |           |  \-[IDENT] Node: 'connections'
    |           \-[IDENT] Node: 'Silly'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'name'
          \-[QUOTED_STRING] Node: ''silly''

14:12:02,042 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:02,043 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.connections.Silly (<no alias>) -> silly0_
14:12:02,043 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:12:02,043 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:02,043 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> silly0_.name
14:12:02,043 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Silly silly0_ ) ( where ( = ( silly0_.name {synthetic-alias} name ) 'silly' ) ) )
14:12:02,043 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:12:02,043 DEBUG JoinProcessor:175 - Using FROM fragment [Silly silly0_]
14:12:02,044 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Silly)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'silly0_.id as id1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Silly,tableAlias=silly0_,origin=null,columns={,className=org.hibernate.test.connections.Silly}}}
    |  \-[SQL_TOKEN] SqlFragment: 'silly0_.name as name1_, silly0_.other as other1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[silly0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Silly silly0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Silly,tableAlias=silly0_,origin=null,columns={,className=org.hibernate.test.connections.Silly}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'silly0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=silly0_,className=org.hibernate.test.connections.Silly,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[QUOTED_STRING] LiteralNode: ''silly''

14:12:02,052 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:02,052 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.connections.Silly where name = 'silly'
14:12:02,052 DEBUG QueryTranslatorImpl:236 - SQL: select silly0_.id as id1_, silly0_.name as name1_, silly0_.other as other1_ from Silly silly0_ where silly0_.name='silly'
14:12:02,052 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:02,052 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.connections.Silly where name = 'silly'
14:12:02,053 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'org'
    |           |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  \-[IDENT] Node: 'test'
    |           |  \-[IDENT] Node: 'connections'
    |           \-[IDENT] Node: 'Silly'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'name'
          \-[QUOTED_STRING] Node: ''silly''

14:12:02,062 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:02,063 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.connections.Silly (<no alias>) -> silly0_
14:12:02,063 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:12:02,063 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:02,063 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> silly0_.name
14:12:02,063 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Silly silly0_ ) ( where ( = ( silly0_.name {synthetic-alias} name ) 'silly' ) ) )
14:12:02,064 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:12:02,064 DEBUG JoinProcessor:175 - Using FROM fragment [Silly silly0_]
14:12:02,064 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Silly)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  \-[SELECT_EXPR] SelectExpressionImpl: 'silly0_.id as col_0_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Silly,tableAlias=silly0_,origin=null,columns={,className=org.hibernate.test.connections.Silly}}}
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[silly0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Silly silly0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Silly,tableAlias=silly0_,origin=null,columns={,className=org.hibernate.test.connections.Silly}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'silly0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=silly0_,className=org.hibernate.test.connections.Silly,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[QUOTED_STRING] LiteralNode: ''silly''

14:12:02,064 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:02,064 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.connections.Silly where name = 'silly'
14:12:02,064 DEBUG QueryTranslatorImpl:236 - SQL: select silly0_.id as col_0_0_ from Silly silly0_ where silly0_.name='silly'
14:12:02,064 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:02,065 DEBUG SQL:104 - 
    select
        silly0_.id as col_0_0_ 
    from
        Silly silly0_ 
    where
        silly0_.name='silly'
14:12:02,065 DEBUG SQL:104 - 
    delete 
    from
        Silly 
    where
        id=?
14:12:02,066  INFO CustomRunner:139 - Test: testQueryScrolling
14:12:02,067 DEBUG SQL:104 - 
    insert 
    into
        Silly
        (name, other, id) 
    values
        (?, ?, ?)
14:12:02,091 DEBUG SQL:104 - 
    select
        silly0_.id as id1_,
        silly0_.name as name1_,
        silly0_.other as other1_ 
    from
        Silly silly0_
14:12:02,092 DEBUG SQL:104 - 
    select
        silly0_.id as id1_,
        silly0_.name as name1_,
        silly0_.other as other1_ 
    from
        Silly silly0_
14:12:02,092 DEBUG SQL:104 - 
    select
        silly0_.id as id1_,
        silly0_.name as name1_,
        silly0_.other as other1_ 
    from
        Silly silly0_ 
    where
        silly0_.name='silly'
14:12:02,093 DEBUG SQL:104 - 
    delete 
    from
        Silly 
    where
        id=?
14:12:02,107  INFO CustomRunner:139 - Test: testSerializationFailsOnAfterStatementAggressiveReleaseWithOpenResources
14:12:02,108 DEBUG SQL:104 - 
    insert 
    into
        Silly
        (name, other, id) 
    values
        (?, ?, ?)
14:12:02,109 DEBUG SQL:104 - 
    select
        silly0_.id as id1_,
        silly0_.name as name1_,
        silly0_.other as other1_ 
    from
        Silly silly0_
14:12:02,110 DEBUG SQL:104 - 
    delete 
    from
        Silly 
    where
        id=?
14:12:02,111  INFO CustomRunner:139 - Test: testSerializationOnAfterStatementAggressiveRelease
14:12:02,118 DEBUG SQL:104 - 
    insert 
    into
        Silly
        (name, other, id) 
    values
        (?, ?, ?)
14:12:02,119 DEBUG SQL:104 - 
    delete 
    from
        Silly 
    where
        id=?
14:12:02,120  INFO CustomRunner:139 - Test: testSessionClosedProtections
14:12:02,121  INFO CustomRunner:139 - Test: testSuppliedConnection
14:12:02,122 DEBUG SQL:104 - 
    insert 
    into
        Silly
        (name, other, id) 
    values
        (?, ?, ?)
14:12:02,123 DEBUG SQL:104 - 
    delete 
    from
        Silly 
    where
        id=?
14:12:02,127  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:12:02,128 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:12:02,128 DEBUG SQL:104 - 
    alter table Silly 
        drop constraint FK4C2FCC34CE24B1
14:12:02,129 DEBUG SQL:104 - 
    drop table Other if exists
14:12:02,129 DEBUG SQL:104 - 
    drop table Silly if exists
14:12:02,129  INFO SchemaExport:405 - HHH000230: Schema export complete
14:12:02,129  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
