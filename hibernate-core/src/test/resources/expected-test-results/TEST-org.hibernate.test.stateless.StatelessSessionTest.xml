<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" hostname="dhcp-10.15.208.168.stl.redhat.com" name="org.hibernate.test.stateless.StatelessSessionTest" tests="4" time="0.055" timestamp="2013-02-28T20:19:20">
  <properties />
  <testcase classname="org.hibernate.test.stateless.StatelessSessionTest" name="testCreateUpdateReadDelete" time="0.01" />
  <testcase classname="org.hibernate.test.stateless.StatelessSessionTest" name="testHqlBulk" time="0.009" />
  <testcase classname="org.hibernate.test.stateless.StatelessSessionTest" name="testInitId" time="0.003" />
  <testcase classname="org.hibernate.test.stateless.StatelessSessionTest" name="testRefresh" time="0.002" />
  <system-out><![CDATA[14:19:20,959  INFO CustomRunner:132 - BeforeClass: org.hibernate.test.stateless.StatelessSessionTest
14:19:20,961  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/stateless/Document.hbm.xml
14:19:20,968  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:19:20,969  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:19:20,969  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:19:20,969  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:19:20,969  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:19:20,971  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:19:20,972  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:19:20,972  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:19:20,973  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:19:20,973  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:19:20,980  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:19:20,981 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:19:20,981 DEBUG SQL:104 - 
    drop table Document if exists
14:19:20,981 DEBUG SQL:104 - 
    drop table Paper if exists
14:19:20,981 DEBUG SQL:104 - 
    create table Document (
        name varchar(255) not null,
        lastModified timestamp not null,
        text varchar(255),
        primary key (name)
    )
14:19:20,982 DEBUG SQL:104 - 
    create table Paper (
        id integer generated by default as identity,
        color varchar(255),
        primary key (id)
    )
14:19:20,983  INFO SchemaExport:405 - HHH000230: Schema export complete
14:19:20,983  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:19:20,983  INFO CustomRunner:139 - Test: testCreateUpdateReadDelete
14:19:20,984 DEBUG SQL:104 - 
    insert 
    into
        Document
        (lastModified, text, name) 
    values
        (?, ?, ?)
14:19:20,985 DEBUG SQL:104 - 
    update
        Document 
    set
        lastModified=?,
        text=? 
    where
        name=? 
        and lastModified=?
14:19:20,985 DEBUG SQL:104 - 
    update
        Document 
    set
        lastModified=?,
        text=? 
    where
        name=? 
        and lastModified=?
14:19:20,985 DEBUG SQL:104 - 
    select
        document0_.name as name0_0_,
        document0_.lastModified as lastModi2_0_0_,
        document0_.text as text0_0_ 
    from
        Document document0_ 
    where
        document0_.name=?
14:19:20,986 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.stateless.Document where text is not null
14:19:20,987 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'org'
    |           |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  \-[IDENT] Node: 'test'
    |           |  \-[IDENT] Node: 'stateless'
    |           \-[IDENT] Node: 'Document'
    \-[WHERE] Node: 'where'
       \-[IS_NOT_NULL] Node: 'is not null'
          \-[IDENT] Node: 'text'

14:19:20,987 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:20,987 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.stateless.Document (<no alias>) -> document0_
14:19:20,987 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:19:20,987 DEBUG DotNode:599 - getDataType() : text -> org.hibernate.type.StringType@2dc8de40
14:19:20,987 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.text -> document0_.text
14:19:20,987 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Document document0_ ) ( where ( is not null ( document0_.text {synthetic-alias} text ) ) ) )
14:19:20,988 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:20,988 DEBUG JoinProcessor:175 - Using FROM fragment [Document document0_]
14:19:20,988 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Document)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'document0_.name as name0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Document,tableAlias=document0_,origin=null,columns={,className=org.hibernate.test.stateless.Document}}}
    |  \-[SQL_TOKEN] SqlFragment: 'document0_.lastModified as lastModi2_0_, document0_.text as text0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[document0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Document document0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Document,tableAlias=document0_,origin=null,columns={,className=org.hibernate.test.stateless.Document}}
    \-[WHERE] SqlNode: 'where'
       \-[IS_NOT_NULL] IsNotNullLogicOperatorNode: 'is not null'
          \-[DOT] DotNode: 'document0_.text' {propertyName=text,dereferenceType=ALL,propertyPath=text,path={synthetic-alias}.text,tableAlias=document0_,className=org.hibernate.test.stateless.Document,classAlias=null}
             +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             \-[IDENT] IdentNode: 'text' {originalText=text}

14:19:20,988 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:20,988 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.stateless.Document where text is not null
14:19:20,988 DEBUG QueryTranslatorImpl:236 - SQL: select document0_.name as name0_, document0_.lastModified as lastModi2_0_, document0_.text as text0_ from Document document0_ where document0_.text is not null
14:19:20,988 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:20,989 DEBUG SQL:104 - 
    select
        document0_.name as name0_,
        document0_.lastModified as lastModi2_0_,
        document0_.text as text0_ 
    from
        Document document0_ 
    where
        document0_.text is not null
14:19:20,989 DEBUG SQL:104 - 
    select
        document0_.name as name0_,
        document0_.lastModified as lastModi2_0_,
        document0_.text as text0_ 
    from
        Document document0_ 
    where
        document0_.text is not null
14:19:20,990 DEBUG SQL:104 - 
    select
        * 
    from
        Document
14:19:20,990 DEBUG SQL:104 - 
    select
        this_.name as name0_0_,
        this_.lastModified as lastModi2_0_0_,
        this_.text as text0_0_ 
    from
        Document this_
14:19:20,990 DEBUG SQL:104 - 
    select
        this_.name as name0_0_,
        this_.lastModified as lastModi2_0_0_,
        this_.text as text0_0_ 
    from
        Document this_
14:19:20,991 DEBUG SQL:104 - 
    delete 
    from
        Document 
    where
        name=? 
        and lastModified=?
14:19:20,993  INFO CustomRunner:139 - Test: testHqlBulk
14:19:20,994 DEBUG SQL:104 - 
    insert 
    into
        Document
        (lastModified, text, name) 
    values
        (?, ?, ?)
14:19:20,995 DEBUG SQL:104 - 
    insert 
    into
        Paper
        (id, color) 
    values
        (null, ?)
14:19:20,995 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update org.hibernate.test.stateless.Document set name = :newName where name = :oldName
14:19:20,996 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'stateless'
    |        \-[IDENT] Node: 'Document'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[IDENT] Node: 'name'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'newName'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'oldName'

14:19:20,996 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:20,996 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.stateless.Document (<no alias>) -> document0_
14:19:20,996 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:19:20,996 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:19:20,997 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> name
14:19:20,997 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:19:20,997 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:19:20,997 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> name
14:19:20,997 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (Document)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[document0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Document' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Document,tableAlias=document0_,origin=null,columns={,className=org.hibernate.test.stateless.Document}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=document0_,className=org.hibernate.test.stateless.Document,classAlias=null}
    |     |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=newName, expectedType=org.hibernate.type.StringType@2dc8de40}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=document0_,className=org.hibernate.test.stateless.Document,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=oldName, expectedType=org.hibernate.type.StringType@2dc8de40}

14:19:20,997 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:20,997 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:20,998 DEBUG SQL:104 - 
    update
        Document 
    set
        name=? 
    where
        name=?
14:19:20,998 DEBUG QueryTranslatorImpl:265 - parse() - HQL: update org.hibernate.test.stateless.Paper set color = :newColor
14:19:20,999 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'stateless'
    |        \-[IDENT] Node: 'Paper'
    \-[SET] Node: 'set'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'color'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'newColor'

14:19:20,999 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:20,999 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.stateless.Paper (<no alias>) -> paper0_
14:19:20,999 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:19:20,999 DEBUG DotNode:599 - getDataType() : color -> org.hibernate.type.StringType@2dc8de40
14:19:20,999 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.color -> color
14:19:21,000 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (Paper)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[paper0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Paper' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Paper,tableAlias=paper0_,origin=null,columns={,className=org.hibernate.test.stateless.Paper}}
    \-[SET] SqlNode: 'set'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'color' {propertyName=color,dereferenceType=ALL,propertyPath=color,path={synthetic-alias}.color,tableAlias=paper0_,className=org.hibernate.test.stateless.Paper,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'color' {originalText=color}
          \-[NAMED_PARAM] ParameterNode: '?' {name=newColor, expectedType=org.hibernate.type.StringType@2dc8de40}

14:19:21,000 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,000 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,000 DEBUG SQL:104 - 
    update
        Paper 
    set
        color=?
14:19:21,000 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.stateless.Document
14:19:21,001 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'stateless'
             \-[IDENT] Node: 'Document'

14:19:21,001 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,001 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.stateless.Document (<no alias>) -> document0_
14:19:21,001 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Document)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[document0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Document' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Document,tableAlias=document0_,origin=null,columns={,className=org.hibernate.test.stateless.Document}}

14:19:21,001 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,001 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,002 DEBUG SQL:104 - 
    delete 
    from
        Document
14:19:21,002 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.stateless.Paper
14:19:21,002 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'stateless'
             \-[IDENT] Node: 'Paper'

14:19:21,002 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,003 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.stateless.Paper (<no alias>) -> paper0_
14:19:21,003 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Paper)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[paper0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Paper' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Paper,tableAlias=paper0_,origin=null,columns={,className=org.hibernate.test.stateless.Paper}}

14:19:21,003 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,003 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,003 DEBUG SQL:104 - 
    delete 
    from
        Paper
14:19:21,004  INFO CustomRunner:139 - Test: testInitId
14:19:21,005 DEBUG SQL:104 - 
    insert 
    into
        Paper
        (id, color) 
    values
        (null, ?)
14:19:21,006 DEBUG SQL:104 - 
    select
        paper0_.id as id1_0_,
        paper0_.color as color1_0_ 
    from
        Paper paper0_ 
    where
        paper0_.id=?
14:19:21,006 DEBUG SQL:104 - 
    delete 
    from
        Paper 
    where
        id=?
14:19:21,007  INFO CustomRunner:139 - Test: testRefresh
14:19:21,008 DEBUG SQL:104 - 
    insert 
    into
        Paper
        (id, color) 
    values
        (null, ?)
14:19:21,009 DEBUG SQL:104 - 
    select
        paper0_.id as id1_0_,
        paper0_.color as color1_0_ 
    from
        Paper paper0_ 
    where
        paper0_.id=?
14:19:21,009 DEBUG SQL:104 - 
    update
        Paper 
    set
        color=? 
    where
        id=?
14:19:21,009 DEBUG SQL:104 - 
    select
        paper0_.id as id1_0_,
        paper0_.color as color1_0_ 
    from
        Paper paper0_ 
    where
        paper0_.id=?
14:19:21,010 DEBUG SQL:104 - 
    delete 
    from
        Paper 
    where
        id=?
14:19:21,010  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:19:21,011 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:19:21,011 DEBUG SQL:104 - 
    drop table Document if exists
14:19:21,011 DEBUG SQL:104 - 
    drop table Paper if exists
14:19:21,012  INFO SchemaExport:405 - HHH000230: Schema export complete
14:19:21,012  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
