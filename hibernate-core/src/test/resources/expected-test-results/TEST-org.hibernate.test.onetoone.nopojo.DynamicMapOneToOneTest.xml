<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" hostname="dhcp-10.15.208.168.stl.redhat.com" name="org.hibernate.test.onetoone.nopojo.DynamicMapOneToOneTest" tests="1" time="0.096" timestamp="2013-02-28T20:17:39">
  <properties />
  <testcase classname="org.hibernate.test.onetoone.nopojo.DynamicMapOneToOneTest" name="testOneToOneOnSubclass" time="0.026" />
  <system-out><![CDATA[14:17:39,372  INFO CustomRunner:132 - BeforeClass: org.hibernate.test.onetoone.nopojo.DynamicMapOneToOneTest
14:17:39,375  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/onetoone/nopojo/Person.hbm.xml
14:17:39,419  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:17:39,420  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:17:39,420  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:17:39,420  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:17:39,420  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:17:39,421  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:17:39,422  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:17:39,422  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:17:39,422  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:17:39,427  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:17:39,427 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:17:39,427 DEBUG SQL:104 - 
    alter table Person 
        drop constraint FK8E4887751ED040EF
14:17:39,428 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Person drop constraint FK8E4887751ED040EF
14:17:39,428 ERROR SchemaExport:426 - Table "PERSON" not found; SQL statement:

    alter table Person 
        drop constraint FK8E4887751ED040EF [42102-145]
14:17:39,428 DEBUG SQL:104 - 
    drop table Address if exists
14:17:39,428 DEBUG SQL:104 - 
    drop table Person if exists
14:17:39,428 DEBUG SQL:104 - 
    create table Address (
        id bigint generated by default as identity,
        street varchar(255),
        state varchar(255),
        zip varchar(255),
        primary key (id)
    )
14:17:39,429 DEBUG SQL:104 - 
    create table Person (
        id bigint not null,
        name varchar(255),
        primary key (id)
    )
14:17:39,429 DEBUG SQL:104 - 
    alter table Person 
        add constraint FK8E4887751ED040EF 
        foreign key (id) 
        references Address
14:17:39,429  INFO SchemaExport:405 - HHH000230: Schema export complete
14:17:39,430  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:17:39,430  INFO CustomRunner:139 - Test: testOneToOneOnSubclass
14:17:39,431 DEBUG SQL:104 - 
    insert 
    into
        Address
        (id, street, state, zip) 
    values
        (null, ?, ?, ?)
14:17:39,432 DEBUG SQL:104 - 
    insert 
    into
        Person
        (name, id) 
    values
        (?, ?)
14:17:39,433 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from Person p join fetch p.address
14:17:39,433 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          +-[RANGE] Node: 'RANGE'
          |  +-[IDENT] Node: 'Person'
          |  \-[ALIAS] Node: 'p'
          \-[JOIN] Node: 'join'
             +-[FETCH] Node: 'fetch'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'p'
                \-[IDENT] Node: 'address'

14:17:39,433 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:39,434 DEBUG FromElement:157 - FromClause{level=1} : Person (p) -> person0_
14:17:39,434 DEBUG FromReferenceNode:74 - Resolved : p -> person0_.id
14:17:39,434 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.OneToOneType(Address)
14:17:39,434 DEBUG DotNode:389 - dereferenceEntityJoin() : generating join for address in Person (<no alias>) parent = [ {null} ]
14:17:39,434 DEBUG FromElement:157 - FromClause{level=1} : Address (<no alias>) -> address1_
14:17:39,434 DEBUG FromClause:282 - addJoinByPathMap() : p.address -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Address,tableAlias=address1_,origin=Person person0_,columns={person0_.id ,className=Address}}
14:17:39,434 DEBUG FromReferenceNode:74 - Resolved : p.address -> person0_.id
14:17:39,434 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'Address address1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Address,tableAlias=address1_,origin=Person person0_,columns={person0_.id ,className=Address}}

14:17:39,435 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} ( Person person0_ Address address1_ ) ) )
14:17:39,435 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:17:39,435 DEBUG JoinProcessor:175 - Using FROM fragment [Person person0_]
14:17:39,435 DEBUG JoinProcessor:175 - Using FROM fragment [inner join Address address1_ on person0_.id=address1_.id]
14:17:39,435 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Address,Person)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'person0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=Person,tableAlias=person0_,origin=null,columns={,className=Person}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'address1_.id as id0_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Address,tableAlias=address1_,origin=Person person0_,columns={person0_.id ,className=Address}}}
    |  +-[SQL_TOKEN] SqlFragment: 'person0_.name as name1_0_'
    |  \-[SQL_TOKEN] SqlFragment: 'address1_.street as street0_1_, address1_.state as state0_1_, address1_.zip as zip0_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[p], fromElementByTableAlias=[person0_, address1_], fromElementsByPath=[p.address], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Person person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=Person,tableAlias=person0_,origin=null,columns={,className=Person}}
          \-[JOIN_FRAGMENT] FromElement: 'inner join Address address1_ on person0_.id=address1_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Address,tableAlias=address1_,origin=Person person0_,columns={person0_.id ,className=Address}}

14:17:39,435 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:39,435 DEBUG QueryTranslatorImpl:235 - HQL: from Person p join fetch p.address
14:17:39,435 DEBUG QueryTranslatorImpl:236 - SQL: select person0_.id as id1_0_, address1_.id as id0_1_, person0_.name as name1_0_, address1_.street as street0_1_, address1_.state as state0_1_, address1_.zip as zip0_1_ from Person person0_ inner join Address address1_ on person0_.id=address1_.id
14:17:39,436 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:39,436 DEBUG SQL:104 - 
    select
        person0_.id as id1_0_,
        address1_.id as id0_1_,
        person0_.name as name1_0_,
        address1_.street as street0_1_,
        address1_.state as state0_1_,
        address1_.zip as zip0_1_ 
    from
        Person person0_ 
    inner join
        Address address1_ 
            on person0_.id=address1_.id
14:17:39,437 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select p.name, p from Person p join fetch p.address
14:17:39,437 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  +-[RANGE] Node: 'RANGE'
       |  |  +-[IDENT] Node: 'Person'
       |  |  \-[ALIAS] Node: 'p'
       |  \-[JOIN] Node: 'join'
       |     +-[FETCH] Node: 'fetch'
       |     \-[DOT] Node: '.'
       |        +-[IDENT] Node: 'p'
       |        \-[IDENT] Node: 'address'
       \-[SELECT] Node: 'select'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'name'
          \-[IDENT] Node: 'p'

14:17:39,438 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:39,438 DEBUG FromElement:157 - FromClause{level=1} : Person (p) -> person0_
14:17:39,438 DEBUG FromReferenceNode:74 - Resolved : p -> person0_.id
14:17:39,438 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.OneToOneType(Address)
14:17:39,438 DEBUG DotNode:389 - dereferenceEntityJoin() : generating join for address in Person (<no alias>) parent = [ {null} ]
14:17:39,438 DEBUG FromElement:157 - FromClause{level=1} : Address (<no alias>) -> address1_
14:17:39,438 DEBUG FromClause:282 - addJoinByPathMap() : p.address -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Address,tableAlias=address1_,origin=Person person0_,columns={person0_.id ,className=Address}}
14:17:39,438 DEBUG FromReferenceNode:74 - Resolved : p.address -> person0_.id
14:17:39,439 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'Address address1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Address,tableAlias=address1_,origin=Person person0_,columns={person0_.id ,className=Address}}

14:17:39,439 DEBUG FromReferenceNode:74 - Resolved : p -> person0_.id
14:17:39,439 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:17:39,439 DEBUG FromReferenceNode:74 - Resolved : p.name -> person0_.name
14:17:39,439 DEBUG FromReferenceNode:74 - Resolved : p -> person0_.id
14:17:39,439 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( person0_.name person0_.id name ) person0_.id ) ( FromClause{level=1} ( Person person0_ Address address1_ ) ) )
14:17:39,440 DEBUG JoinProcessor:175 - Using FROM fragment [Person person0_]
14:17:39,440 DEBUG JoinProcessor:175 - Using FROM fragment [inner join Address address1_ on person0_.id=address1_.id]
14:17:39,440 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Address,Person)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'person0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=p.name,tableAlias=person0_,className=Person,classAlias=p}
    |  |  +-[ALIAS_REF] IdentNode: 'person0_.id' {alias=p, className=Person, tableAlias=person0_}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[ALIAS_REF] IdentNode: 'person0_.id as col_1_0_' {alias=p, className=Person, tableAlias=person0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'address1_.id as id0_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Address,tableAlias=address1_,origin=Person person0_,columns={person0_.id ,className=Address}}}
    |  +-[SQL_TOKEN] SqlFragment: 'person0_.id as id1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'address1_.id as id0_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'person0_.name as name1_0_'
    |  \-[SQL_TOKEN] SqlFragment: 'address1_.street as street0_1_, address1_.state as state0_1_, address1_.zip as zip0_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[p], fromElementByTableAlias=[person0_, address1_], fromElementsByPath=[p.address], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Person person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=Person,tableAlias=person0_,origin=null,columns={,className=Person}}
          \-[JOIN_FRAGMENT] FromElement: 'inner join Address address1_ on person0_.id=address1_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Address,tableAlias=address1_,origin=Person person0_,columns={person0_.id ,className=Address}}

14:17:39,440 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:39,441 DEBUG QueryTranslatorImpl:235 - HQL: select p.name, p from Person p join fetch p.address
14:17:39,441 DEBUG QueryTranslatorImpl:236 - SQL: select person0_.name as col_0_0_, person0_.id as col_1_0_, address1_.id as id0_1_, person0_.id as id1_0_, address1_.id as id0_1_, person0_.name as name1_0_, address1_.street as street0_1_, address1_.state as state0_1_, address1_.zip as zip0_1_ from Person person0_ inner join Address address1_ on person0_.id=address1_.id
14:17:39,441 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:39,441 DEBUG SQL:104 - 
    select
        person0_.name as col_0_0_,
        person0_.id as col_1_0_,
        address1_.id as id0_1_,
        person0_.id as id1_0_,
        address1_.id as id0_1_,
        person0_.name as name1_0_,
        address1_.street as street0_1_,
        address1_.state as state0_1_,
        address1_.zip as zip0_1_ 
    from
        Person person0_ 
    inner join
        Address address1_ 
            on person0_.id=address1_.id
14:17:39,442 DEBUG SQL:104 - 
    delete 
    from
        Person 
    where
        id=?
14:17:39,455 DEBUG SQL:104 - 
    delete 
    from
        Address 
    where
        id=?
14:17:39,457  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:17:39,458 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:17:39,458 DEBUG SQL:104 - 
    alter table Person 
        drop constraint FK8E4887751ED040EF
14:17:39,458 DEBUG SQL:104 - 
    drop table Address if exists
14:17:39,458 DEBUG SQL:104 - 
    drop table Person if exists
14:17:39,459  INFO SchemaExport:405 - HHH000230: Schema export complete
14:17:39,459  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
