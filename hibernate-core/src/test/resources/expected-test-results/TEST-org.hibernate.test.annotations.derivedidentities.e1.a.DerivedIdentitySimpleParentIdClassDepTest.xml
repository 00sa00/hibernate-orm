<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" hostname="dhcp-10.15.208.168.stl.redhat.com" name="org.hibernate.test.annotations.derivedidentities.e1.a.DerivedIdentitySimpleParentIdClassDepTest" tests="2" time="0.062" timestamp="2013-02-28T20:10:19">
  <properties />
  <testcase classname="org.hibernate.test.annotations.derivedidentities.e1.a.DerivedIdentitySimpleParentIdClassDepTest" name="testManyToOne" time="0.006" />
  <testcase classname="org.hibernate.test.annotations.derivedidentities.e1.a.DerivedIdentitySimpleParentIdClassDepTest" name="testQueryNewEntityInPC" time="0.02" />
  <system-out><![CDATA[14:10:19,553  INFO CustomRunner:132 - BeforeClass: org.hibernate.test.annotations.derivedidentities.e1.a.DerivedIdentitySimpleParentIdClassDepTest
14:10:19,562  WARN RootClass:288 - HHH000038: Composite-id class does not override equals(): org.hibernate.test.annotations.derivedidentities.e1.a.DependentId
14:10:19,562  WARN RootClass:289 - HHH000039: Composite-id class does not override hashCode(): org.hibernate.test.annotations.derivedidentities.e1.a.DependentId
14:10:19,562  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:10:19,563  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:10:19,563  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:10:19,563  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:10:19,563  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:10:19,565  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:10:19,565  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:10:19,565  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:10:19,566  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:10:19,566  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:10:19,579  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:10:19,580 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:10:19,580 DEBUG SQL:104 - 
    alter table Dependent 
        drop constraint FK3554AADF483499F4
14:10:19,581 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Dependent drop constraint FK3554AADF483499F4
14:10:19,581 ERROR SchemaExport:426 - Table "DEPENDENT" not found; SQL statement:

    alter table Dependent 
        drop constraint FK3554AADF483499F4 [42102-145]
14:10:19,581 DEBUG SQL:104 - 
    drop table Dependent if exists
14:10:19,581 DEBUG SQL:104 - 
    drop table Employee if exists
14:10:19,581 DEBUG SQL:104 - 
    create table Dependent (
        name varchar(255) not null,
        emp_empId bigint not null,
        primary key (emp_empId, name)
    )
14:10:19,582 DEBUG SQL:104 - 
    create table Employee (
        empId bigint not null,
        empName varchar(255),
        nickname varchar(255),
        primary key (empId)
    )
14:10:19,582 DEBUG SQL:104 - 
    alter table Dependent 
        add constraint FK3554AADF483499F4 
        foreign key (emp_empId) 
        references Employee
14:10:19,583  INFO SchemaExport:405 - HHH000230: Schema export complete
14:10:19,583  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:10:19,584  INFO CustomRunner:139 - Test: testManyToOne
14:10:19,586 DEBUG SQL:104 - 
    insert 
    into
        Employee
        (empName, nickname, empId) 
    values
        (?, ?, ?)
14:10:19,588 DEBUG SQL:104 - 
    insert 
    into
        Dependent
        (emp_empId, name) 
    values
        (?, ?)
14:10:19,588 DEBUG SQL:104 - 
    select
        dependent0_.emp_empId as emp2_0_1_,
        dependent0_.name as name0_1_,
        employee1_.empId as empId1_0_,
        employee1_.empName as empName1_0_,
        employee1_.nickname as nickname1_0_ 
    from
        Dependent dependent0_ 
    inner join
        Employee employee1_ 
            on dependent0_.emp_empId=employee1_.empId 
    where
        dependent0_.emp_empId=? 
        and dependent0_.name=?
14:10:19,589 DEBUG SQL:104 - 
    delete 
    from
        Dependent 
    where
        emp_empId=? 
        and name=?
14:10:19,590 DEBUG SQL:104 - 
    delete 
    from
        Employee 
    where
        empId=?
14:10:19,591  INFO CustomRunner:139 - Test: testQueryNewEntityInPC
14:10:19,593 DEBUG QueryTranslatorImpl:265 - parse() - HQL: Select d from org.hibernate.test.annotations.derivedidentities.e1.a.Dependent d where d.name='LittleP' and d.emp.empName='Paula'
14:10:19,595 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  |  |  |  \-[IDENT] Node: 'annotations'
    |  |     |  |  |  |  \-[IDENT] Node: 'derivedidentities'
    |  |     |  |  |  \-[IDENT] Node: 'e1'
    |  |     |  |  \-[IDENT] Node: 'a'
    |  |     |  \-[IDENT] Node: 'Dependent'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 'd'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'd'
          |  |  \-[IDENT] Node: 'name'
          |  \-[QUOTED_STRING] Node: ''LittleP''
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'd'
             |  |  \-[IDENT] Node: 'emp'
             |  \-[IDENT] Node: 'empName'
             \-[QUOTED_STRING] Node: ''Paula''

14:10:19,595 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:19,596 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.annotations.derivedidentities.e1.a.Dependent (d) -> dependent0_
14:10:19,596 DEBUG FromReferenceNode:74 - Resolved : d -> (dependent0_.emp_empId, dependent0_.name)
14:10:19,596 DEBUG FromReferenceNode:74 - Resolved : d -> (dependent0_.emp_empId, dependent0_.name)
14:10:19,596 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:10:19,596 DEBUG FromReferenceNode:74 - Resolved : d.name -> dependent0_.name
14:10:19,596 DEBUG FromReferenceNode:74 - Resolved : d -> (dependent0_.emp_empId, dependent0_.name)
14:10:19,596 DEBUG DotNode:599 - getDataType() : emp -> org.hibernate.type.ManyToOneType(org.hibernate.test.annotations.derivedidentities.e1.a.Employee)
14:10:19,597 DEBUG DotNode:389 - dereferenceEntityJoin() : generating join for emp in org.hibernate.test.annotations.derivedidentities.e1.a.Dependent (<no alias>) parent = [  ( . ( . (dependent0_.emp_empId, dependent0_.name) emp ) empName ) ]
14:10:19,597 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.annotations.derivedidentities.e1.a.Employee (<no alias>) -> employee1_
14:10:19,597 DEBUG FromClause:282 - addJoinByPathMap() : d.emp -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Employee,tableAlias=employee1_,origin=Dependent dependent0_,columns={dependent0_.emp_empId ,className=org.hibernate.test.annotations.derivedidentities.e1.a.Employee}}
14:10:19,597 DEBUG FromReferenceNode:74 - Resolved : d.emp -> dependent0_.emp_empId
14:10:19,597 DEBUG DotNode:599 - getDataType() : empName -> org.hibernate.type.StringType@2dc8de40
14:10:19,597 DEBUG FromReferenceNode:74 - Resolved : d.emp.empName -> employee1_.empName
14:10:19,597 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} (dependent0_.emp_empId, dependent0_.name) ) ( FromClause{level=1} Dependent dependent0_ Employee employee1_ ) ( where ( and ( = ( dependent0_.name (dependent0_.emp_empId, dependent0_.name) name ) 'LittleP' ) ( = ( employee1_.empName ( dependent0_.emp_empId (dependent0_.emp_empId, dependent0_.name) emp ) empName ) 'Paula' ) ) ) )
14:10:19,598 DEBUG JoinProcessor:175 - Using FROM fragment [Dependent dependent0_]
14:10:19,598 DEBUG SyntheticAndFactory:92 - Using unprocessed WHERE-fragment [dependent0_.emp_empId=employee1_.empId]
14:10:19,598 DEBUG SyntheticAndFactory:124 - Using processed WHERE-fragment [dependent0_.emp_empId=employee1_.empId]
14:10:19,598 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Dependent,Employee)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  \-[ALIAS_REF] IdentNode: 'dependent0_.emp_empId as emp2_0_, dependent0_.name as name0_' {alias=d, className=org.hibernate.test.annotations.derivedidentities.e1.a.Dependent, tableAlias=dependent0_}
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[d], fromElementByTableAlias=[dependent0_, employee1_], fromElementsByPath=[d.emp], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'Dependent dependent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=Dependent,tableAlias=dependent0_,origin=null,columns={,className=org.hibernate.test.annotations.derivedidentities.e1.a.Dependent}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: 'Employee employee1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Employee,tableAlias=employee1_,origin=Dependent dependent0_,columns={dependent0_.emp_empId ,className=org.hibernate.test.annotations.derivedidentities.e1.a.Employee}}
    \-[WHERE] SqlNode: 'where'
       +-[THETA_JOINS] SqlNode: '{theta joins}'
       |  \-[SQL_TOKEN] SqlFragment: 'dependent0_.emp_empId=employee1_.empId'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'dependent0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=d.name,tableAlias=dependent0_,className=org.hibernate.test.annotations.derivedidentities.e1.a.Dependent,classAlias=d}
          |  |  +-[ALIAS_REF] IdentNode: '(dependent0_.emp_empId, dependent0_.name)' {alias=d, className=org.hibernate.test.annotations.derivedidentities.e1.a.Dependent, tableAlias=dependent0_}
          |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
          |  \-[QUOTED_STRING] LiteralNode: ''LittleP''
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'employee1_.empName' {propertyName=empName,dereferenceType=ALL,propertyPath=empName,path=d.emp.empName,tableAlias=employee1_,className=org.hibernate.test.annotations.derivedidentities.e1.a.Employee,classAlias=null}
             |  +-[DOT] DotNode: 'dependent0_.emp_empId' {propertyName=emp,dereferenceType=EOF,propertyPath=emp,path=d.emp,tableAlias=employee1_,className=org.hibernate.test.annotations.derivedidentities.e1.a.Employee,classAlias=null}
             |  |  +-[ALIAS_REF] IdentNode: '(dependent0_.emp_empId, dependent0_.name)' {alias=d, className=org.hibernate.test.annotations.derivedidentities.e1.a.Dependent, tableAlias=dependent0_}
             |  |  \-[IDENT] IdentNode: 'emp' {originalText=emp}
             |  \-[IDENT] IdentNode: 'empName' {originalText=empName}
             \-[QUOTED_STRING] LiteralNode: ''Paula''

14:10:19,599 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:19,599 DEBUG QueryTranslatorImpl:235 - HQL: Select d from org.hibernate.test.annotations.derivedidentities.e1.a.Dependent d where d.name='LittleP' and d.emp.empName='Paula'
14:10:19,599 DEBUG QueryTranslatorImpl:236 - SQL: select dependent0_.emp_empId as emp2_0_, dependent0_.name as name0_ from Dependent dependent0_ cross join Employee employee1_ where dependent0_.emp_empId=employee1_.empId and dependent0_.name='LittleP' and employee1_.empName='Paula'
14:10:19,599 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:19,600 DEBUG SQL:104 - 
    insert 
    into
        Employee
        (empName, nickname, empId) 
    values
        (?, ?, ?)
14:10:19,600 DEBUG SQL:104 - 
    insert 
    into
        Dependent
        (emp_empId, name) 
    values
        (?, ?)
14:10:19,600 DEBUG SQL:104 - 
    select
        dependent0_.emp_empId as emp2_0_,
        dependent0_.name as name0_ 
    from
        Dependent dependent0_ cross 
    join
        Employee employee1_ 
    where
        dependent0_.emp_empId=employee1_.empId 
        and dependent0_.name='LittleP' 
        and employee1_.empName='Paula'
14:10:19,611  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:10:19,612 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:10:19,612 DEBUG SQL:104 - 
    alter table Dependent 
        drop constraint FK3554AADF483499F4
14:10:19,612 DEBUG SQL:104 - 
    drop table Dependent if exists
14:10:19,612 DEBUG SQL:104 - 
    drop table Employee if exists
14:10:19,613  INFO SchemaExport:405 - HHH000230: Schema export complete
14:10:19,613  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
