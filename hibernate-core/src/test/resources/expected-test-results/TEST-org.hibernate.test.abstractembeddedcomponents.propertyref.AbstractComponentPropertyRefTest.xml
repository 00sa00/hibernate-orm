<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" hostname="dhcp-10.15.208.168.stl.redhat.com" name="org.hibernate.test.abstractembeddedcomponents.propertyref.AbstractComponentPropertyRefTest" tests="1" time="0.256" timestamp="2013-02-28T20:10:04">
  <properties />
  <testcase classname="org.hibernate.test.abstractembeddedcomponents.propertyref.AbstractComponentPropertyRefTest" name="testPropertiesRefCascades" time="0.094" />
  <system-out><![CDATA[14:10:04,469  INFO CustomRunner:132 - BeforeClass: org.hibernate.test.abstractembeddedcomponents.propertyref.AbstractComponentPropertyRefTest
14:10:04,473  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/abstractembeddedcomponents/propertyref/Mappings.hbm.xml
14:10:04,518  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:10:04,518  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:10:04,518  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:10:04,519  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:10:04,519  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:10:04,523  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:10:04,524  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:10:04,524  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:10:04,525  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:10:04,525  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:10:04,560  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:10:04,571 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:10:04,572 DEBUG SQL:104 - 
    alter table ADDRESS 
        drop constraint FKE66327D44493AA80
14:10:04,573 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table ADDRESS drop constraint FKE66327D44493AA80
14:10:04,573 ERROR SchemaExport:426 - Table "ADDRESS" not found; SQL statement:

    alter table ADDRESS 
        drop constraint FKE66327D44493AA80 [42102-145]
14:10:04,574 DEBUG SQL:104 - 
    alter table SERVER 
        drop constraint FK91952343862BE88A
14:10:04,575 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table SERVER drop constraint FK91952343862BE88A
14:10:04,575 ERROR SchemaExport:426 - Table "SERVER" not found; SQL statement:

    alter table SERVER 
        drop constraint FK91952343862BE88A [42102-145]
14:10:04,575 DEBUG SQL:104 - 
    drop table ADDRESS if exists
14:10:04,576 DEBUG SQL:104 - 
    drop table SERVER if exists
14:10:04,576 DEBUG SQL:104 - 
    create table ADDRESS (
        ADDRESS_ID bigint generated by default as identity,
        ADDRESS_TYPE varchar(30) not null,
        SERVER_ID bigint not null,
        primary key (ADDRESS_ID)
    )
14:10:04,591 DEBUG SQL:104 - 
    create table SERVER (
        SERVER_ID bigint generated by default as identity,
        SERVER_TYPE varchar(10) not null,
        ADDRESS_TYPE varchar(255),
        primary key (SERVER_ID)
    )
14:10:04,596 DEBUG SQL:104 - 
    alter table ADDRESS 
        add constraint FKE66327D44493AA80 
        foreign key (SERVER_ID) 
        references SERVER
14:10:04,603 DEBUG SQL:104 - 
    alter table SERVER 
        add constraint FK91952343862BE88A 
        foreign key (ADDRESS_TYPE, SERVER_ID) 
        references ADDRESS (ADDRESS_TYPE, SERVER_ID)
14:10:04,614  INFO SchemaExport:405 - HHH000230: Schema export complete
14:10:04,615  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:10:04,615  INFO CustomRunner:139 - Test: testPropertiesRefCascades
14:10:04,627 DEBUG SQL:104 - 
    insert 
    into
        SERVER
        (SERVER_ID, SERVER_TYPE) 
    values
        (null, '1')
14:10:04,634 DEBUG SQL:104 - 
    insert 
    into
        ADDRESS
        (ADDRESS_ID, SERVER_ID, ADDRESS_TYPE) 
    values
        (null, ?, '2')
14:10:04,649 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.abstractembeddedcomponents.propertyref.Server s join fetch s.address
14:10:04,655 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          +-[RANGE] Node: 'RANGE'
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[DOT] Node: '.'
          |  |  |  |  |  +-[DOT] Node: '.'
          |  |  |  |  |  |  +-[IDENT] Node: 'org'
          |  |  |  |  |  |  \-[IDENT] Node: 'hibernate'
          |  |  |  |  |  \-[IDENT] Node: 'test'
          |  |  |  |  \-[IDENT] Node: 'abstractembeddedcomponents'
          |  |  |  \-[IDENT] Node: 'propertyref'
          |  |  \-[IDENT] Node: 'Server'
          |  \-[ALIAS] Node: 's'
          \-[JOIN] Node: 'join'
             +-[FETCH] Node: 'fetch'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 's'
                \-[IDENT] Node: 'address'

14:10:04,657 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:04,659 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.abstractembeddedcomponents.propertyref.Server (s) -> server0_
14:10:04,660 DEBUG FromReferenceNode:74 - Resolved : s -> server0_.SERVER_ID
14:10:04,662 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ManyToOneType(org.hibernate.test.abstractembeddedcomponents.propertyref.AddressImpl)
14:10:04,662 DEBUG DotNode:389 - dereferenceEntityJoin() : generating join for address in org.hibernate.test.abstractembeddedcomponents.propertyref.Server (<no alias>) parent = [ {null} ]
14:10:04,663 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.abstractembeddedcomponents.propertyref.AddressImpl (<no alias>) -> addressimp1_
14:10:04,663 DEBUG FromClause:282 - addJoinByPathMap() : s.address -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ADDRESS,tableAlias=addressimp1_,origin=SERVER server0_,columns={server0_.ADDRESS_TYPE server0_.SERVER_ID ,className=org.hibernate.test.abstractembeddedcomponents.propertyref.AddressImpl}}
14:10:04,663 DEBUG FromReferenceNode:74 - Resolved : s.address -> server0_.ADDRESS_TYPE, server0_.SERVER_ID
14:10:04,664 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'ADDRESS addressimp1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ADDRESS,tableAlias=addressimp1_,origin=SERVER server0_,columns={server0_.ADDRESS_TYPE server0_.SERVER_ID ,className=org.hibernate.test.abstractembeddedcomponents.propertyref.AddressImpl}}

14:10:04,664 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} ( SERVER server0_ ADDRESS addressimp1_ ) ) )
14:10:04,665 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:10:04,665 DEBUG JoinProcessor:175 - Using FROM fragment [SERVER server0_]
14:10:04,669 DEBUG JoinProcessor:175 - Using FROM fragment [inner join ADDRESS addressimp1_ on server0_.ADDRESS_TYPE=addressimp1_.ADDRESS_TYPE and server0_.SERVER_ID=addressimp1_.SERVER_ID and addressimp1_.ADDRESS_TYPE='2']
14:10:04,670 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ADDRESS,SERVER)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'server0_.SERVER_ID as SERVER1_1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=SERVER,tableAlias=server0_,origin=null,columns={,className=org.hibernate.test.abstractembeddedcomponents.propertyref.Server}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'addressimp1_.ADDRESS_ID as ADDRESS1_0_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ADDRESS,tableAlias=addressimp1_,origin=SERVER server0_,columns={server0_.ADDRESS_TYPE server0_.SERVER_ID ,className=org.hibernate.test.abstractembeddedcomponents.propertyref.AddressImpl}}}
    |  +-[SQL_TOKEN] SqlFragment: 'server0_.SERVER_TYPE as SERVER2_1_0_, server0_.ADDRESS_TYPE as ADDRESS3_1_0_'
    |  \-[SQL_TOKEN] SqlFragment: 'addressimp1_.ADDRESS_TYPE as ADDRESS2_0_1_, addressimp1_.SERVER_ID as SERVER3_0_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[s], fromElementByTableAlias=[server0_, addressimp1_], fromElementsByPath=[s.address], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'SERVER server0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=SERVER,tableAlias=server0_,origin=null,columns={,className=org.hibernate.test.abstractembeddedcomponents.propertyref.Server}}
          \-[JOIN_FRAGMENT] FromElement: 'inner join ADDRESS addressimp1_ on server0_.ADDRESS_TYPE=addressimp1_.ADDRESS_TYPE and server0_.SERVER_ID=addressimp1_.SERVER_ID and addressimp1_.ADDRESS_TYPE='2'' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=ADDRESS,tableAlias=addressimp1_,origin=SERVER server0_,columns={server0_.ADDRESS_TYPE server0_.SERVER_ID ,className=org.hibernate.test.abstractembeddedcomponents.propertyref.AddressImpl}}

14:10:04,670 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:04,671 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.abstractembeddedcomponents.propertyref.Server s join fetch s.address
14:10:04,671 DEBUG QueryTranslatorImpl:236 - SQL: select server0_.SERVER_ID as SERVER1_1_0_, addressimp1_.ADDRESS_ID as ADDRESS1_0_1_, server0_.SERVER_TYPE as SERVER2_1_0_, server0_.ADDRESS_TYPE as ADDRESS3_1_0_, addressimp1_.ADDRESS_TYPE as ADDRESS2_0_1_, addressimp1_.SERVER_ID as SERVER3_0_1_ from SERVER server0_ inner join ADDRESS addressimp1_ on server0_.ADDRESS_TYPE=addressimp1_.ADDRESS_TYPE and server0_.SERVER_ID=addressimp1_.SERVER_ID and addressimp1_.ADDRESS_TYPE='2'
14:10:04,671 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:04,672 DEBUG SQL:104 - 
    select
        server0_.SERVER_ID as SERVER1_1_0_,
        addressimp1_.ADDRESS_ID as ADDRESS1_0_1_,
        server0_.SERVER_TYPE as SERVER2_1_0_,
        server0_.ADDRESS_TYPE as ADDRESS3_1_0_,
        addressimp1_.ADDRESS_TYPE as ADDRESS2_0_1_,
        addressimp1_.SERVER_ID as SERVER3_0_1_ 
    from
        SERVER server0_ 
    inner join
        ADDRESS addressimp1_ 
            on server0_.ADDRESS_TYPE=addressimp1_.ADDRESS_TYPE 
            and server0_.SERVER_ID=addressimp1_.SERVER_ID 
            and addressimp1_.ADDRESS_TYPE='2'
14:10:04,688 DEBUG SQL:104 - 
    delete 
    from
        ADDRESS 
    where
        ADDRESS_ID=?
14:10:04,689 DEBUG SQL:104 - 
    delete 
    from
        SERVER 
    where
        SERVER_ID=?
14:10:04,711  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:10:04,713 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:10:04,714 DEBUG SQL:104 - 
    alter table ADDRESS 
        drop constraint FKE66327D44493AA80
14:10:04,717 DEBUG SQL:104 - 
    alter table SERVER 
        drop constraint FK91952343862BE88A
14:10:04,719 DEBUG SQL:104 - 
    drop table ADDRESS if exists
14:10:04,721 DEBUG SQL:104 - 
    drop table SERVER if exists
14:10:04,723  INFO SchemaExport:405 - HHH000230: Schema export complete
14:10:04,723  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
