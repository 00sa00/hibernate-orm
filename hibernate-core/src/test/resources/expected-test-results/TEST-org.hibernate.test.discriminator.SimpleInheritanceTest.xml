<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" hostname="dhcp-10.15.208.168.stl.redhat.com" name="org.hibernate.test.discriminator.SimpleInheritanceTest" tests="5" time="2.274" timestamp="2013-02-28T20:12:13">
  <properties />
  <testcase classname="org.hibernate.test.discriminator.SimpleInheritanceTest" name="testAccessAsIncorrectSubclass" time="0.005" />
  <testcase classname="org.hibernate.test.discriminator.SimpleInheritanceTest" name="testDiscriminatorSubclass" time="0.06" />
  <testcase classname="org.hibernate.test.discriminator.SimpleInheritanceTest" name="testLoadSuperclassProxyEvictPolymorphicAccess" time="0.007" />
  <testcase classname="org.hibernate.test.discriminator.SimpleInheritanceTest" name="testLoadSuperclassProxyPolymorphicAccess" time="0.004" />
  <testcase classname="org.hibernate.test.discriminator.SimpleInheritanceTest" name="testQuerySubclassAttribute" time="0.017" />
  <system-out><![CDATA[14:12:13,582  INFO CustomRunner:132 - BeforeClass: org.hibernate.test.discriminator.SimpleInheritanceTest
14:12:15,650  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:12:15,651  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:12:15,651  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:12:15,651  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:12:15,651  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:12:15,653  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:12:15,653  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:12:15,742  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:12:15,743  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:12:15,743  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:12:15,752  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:12:15,752 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:12:15,753 DEBUG SQL:104 - 
    drop table "Person" if exists
14:12:15,753 DEBUG SQL:104 - 
    create table "Person" (
        "person_id" bigint not null,
        "TYPE" char(255),
        "name" varchar(255) not null,
        "sex" char(255) not null,
        "title" varchar(255),
        "salary" decimal(19,2),
        "comments" varchar(255),
        primary key ("person_id")
    )
14:12:15,754  INFO SchemaExport:405 - HHH000230: Schema export complete
14:12:15,754  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:12:15,754  INFO CustomRunner:139 - Test: testAccessAsIncorrectSubclass
14:12:15,756 DEBUG SQL:104 - 
    insert 
    into
        "Person"
        ("sex", "name", "title", "salary", "TYPE", "person_id") 
    values
        (?, ?, ?, ?, 'E', ?)
14:12:15,757 DEBUG SQL:104 - 
    select
        customer0_."person_id" as pers0_111_0_,
        customer0_."sex" as sex3_111_0_,
        customer0_."name" as name2_111_0_,
        customer0_."comments" as comm6_111_0_ 
    from
        "Person" customer0_ 
    where
        customer0_."person_id"=? 
        and customer0_."TYPE"='C'
14:12:15,757 DEBUG SQL:104 - 
    select
        employee0_."person_id" as pers0_111_0_,
        employee0_."sex" as sex3_111_0_,
        employee0_."name" as name2_111_0_,
        employee0_."title" as titl4_111_0_,
        employee0_."salary" as sala5_111_0_ 
    from
        "Person" employee0_ 
    where
        employee0_."person_id"=? 
        and employee0_."TYPE"='E'
14:12:15,758 DEBUG SQL:104 - 
    delete 
    from
        "Person" 
    where
        "person_id"=?
14:12:15,760  INFO CustomRunner:139 - Test: testDiscriminatorSubclass
14:12:15,762  WARN QuerySplitter:128 - HHH000183: no persistent classes found for query class: from java.io.Serializable
14:12:15,762 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.discriminator.Person
14:12:15,763 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'discriminator'
                \-[IDENT] Node: 'Person'

14:12:15,763 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:15,763 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.discriminator.Person (<no alias>) -> person0_
14:12:15,763 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} "Person" person0_ ) )
14:12:15,764 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:12:15,764 DEBUG JoinProcessor:175 - Using FROM fragment ["Person" person0_]
14:12:15,764 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces ("Person")
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'person0_."person_id" as pers0_111_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName="Person",tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.discriminator.Person}}}
    |  \-[SQL_TOKEN] SqlFragment: 'person0_."sex" as sex3_111_, person0_."name" as name2_111_, person0_."title" as titl4_111_, person0_."salary" as sala5_111_, person0_."comments" as comm6_111_, person0_."TYPE" as TYPE1_111_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[person0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: '"Person" person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName="Person",tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.discriminator.Person}}

14:12:15,764 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:15,764 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.discriminator.Person
14:12:15,764 DEBUG QueryTranslatorImpl:236 - SQL: select person0_."person_id" as pers0_111_, person0_."sex" as sex3_111_, person0_."name" as name2_111_, person0_."title" as titl4_111_, person0_."salary" as sala5_111_, person0_."comments" as comm6_111_, person0_."TYPE" as TYPE1_111_ from "Person" person0_
14:12:15,764 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:15,765 DEBUG SQL:104 - 
    insert 
    into
        "Person"
        ("sex", "name", "TYPE", "person_id") 
    values
        (?, ?, 'P', ?)
14:12:15,765 DEBUG SQL:104 - 
    insert 
    into
        "Person"
        ("sex", "name", "title", "salary", "TYPE", "person_id") 
    values
        (?, ?, ?, ?, 'E', ?)
14:12:15,765 DEBUG SQL:104 - 
    insert 
    into
        "Person"
        ("sex", "name", "comments", "TYPE", "person_id") 
    values
        (?, ?, ?, 'C', ?)
14:12:15,766 DEBUG SQL:104 - 
    select
        person0_."person_id" as pers0_111_,
        person0_."sex" as sex3_111_,
        person0_."name" as name2_111_,
        person0_."title" as titl4_111_,
        person0_."salary" as sala5_111_,
        person0_."comments" as comm6_111_,
        person0_."TYPE" as TYPE1_111_ 
    from
        "Person" person0_
14:12:15,766 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.discriminator.Person p where p.class = org.hibernate.test.discriminator.Person
14:12:15,766 DEBUG HqlParser:378 - handleDotIdent() : new LT(2) token - [".",<15> previously: <15>,line=1,col=55,possibleID=false]
14:12:15,768 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  |  \-[IDENT] Node: 'test'
    |        |  |  \-[IDENT] Node: 'discriminator'
    |        |  \-[IDENT] Node: 'Person'
    |        \-[ALIAS] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'class'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'discriminator'
             \-[IDENT] Node: 'Person'

14:12:15,768 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:15,768 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.discriminator.Person (p) -> person0_
14:12:15,768 DEBUG FromReferenceNode:74 - Resolved : p -> person0_."person_id"
14:12:15,768 DEBUG DotNode:599 - getDataType() : class -> org.hibernate.type.CharacterType@26ccbcea
14:12:15,768 DEBUG FromReferenceNode:74 - Resolved : p.class -> person0_."TYPE"
14:12:15,769 DEBUG LiteralProcessor:125 - setSQLValue() org.hibernate.test.discriminator.Person -> 'P'
14:12:15,769 DEBUG FromReferenceNode:74 - Resolved : org.hibernate.test.discriminator.Person -> 'P'
14:12:15,769 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} "Person" person0_ ) ( where ( = ( person0_."TYPE" person0_."person_id" class ) 'P' ) ) )
14:12:15,769 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:12:15,770 DEBUG JoinProcessor:175 - Using FROM fragment ["Person" person0_]
14:12:15,770 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces ("Person")
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'person0_."person_id" as pers0_111_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName="Person",tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.discriminator.Person}}}
    |  \-[SQL_TOKEN] SqlFragment: 'person0_."sex" as sex3_111_, person0_."name" as name2_111_, person0_."title" as titl4_111_, person0_."salary" as sala5_111_, person0_."comments" as comm6_111_, person0_."TYPE" as TYPE1_111_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[person0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: '"Person" person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName="Person",tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.discriminator.Person}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'person0_."TYPE"' {propertyName=class,dereferenceType=ALL,propertyPath=class,path=p.class,tableAlias=person0_,className=org.hibernate.test.discriminator.Person,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'person0_."person_id"' {alias=p, className=org.hibernate.test.discriminator.Person, tableAlias=person0_}
          |  \-[IDENT] IdentNode: 'class' {originalText=class}
          \-[SQL_TOKEN] DotNode: ''P'' {propertyName=Person,dereferenceType=AND,propertyPath=Person,path=org.hibernate.test.discriminator.Person,no from element}

14:12:15,770 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:15,770 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.discriminator.Person p where p.class = org.hibernate.test.discriminator.Person
14:12:15,770 DEBUG QueryTranslatorImpl:236 - SQL: select person0_."person_id" as pers0_111_, person0_."sex" as sex3_111_, person0_."name" as name2_111_, person0_."title" as titl4_111_, person0_."salary" as sala5_111_, person0_."comments" as comm6_111_, person0_."TYPE" as TYPE1_111_ from "Person" person0_ where person0_."TYPE"='P'
14:12:15,770 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:15,771 DEBUG SQL:104 - 
    select
        person0_."person_id" as pers0_111_,
        person0_."sex" as sex3_111_,
        person0_."name" as name2_111_,
        person0_."title" as titl4_111_,
        person0_."salary" as sala5_111_,
        person0_."comments" as comm6_111_,
        person0_."TYPE" as TYPE1_111_ 
    from
        "Person" person0_ 
    where
        person0_."TYPE"='P'
14:12:15,771 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.discriminator.Person p where p.class = org.hibernate.test.discriminator.Customer
14:12:15,771 DEBUG HqlParser:378 - handleDotIdent() : new LT(2) token - [".",<15> previously: <15>,line=1,col=55,possibleID=false]
14:12:15,774 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  |  \-[IDENT] Node: 'test'
    |        |  |  \-[IDENT] Node: 'discriminator'
    |        |  \-[IDENT] Node: 'Person'
    |        \-[ALIAS] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'class'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'discriminator'
             \-[IDENT] Node: 'Customer'

14:12:15,775 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:15,776 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.discriminator.Person (p) -> person0_
14:12:15,777 DEBUG FromReferenceNode:74 - Resolved : p -> person0_."person_id"
14:12:15,777 DEBUG DotNode:599 - getDataType() : class -> org.hibernate.type.CharacterType@26ccbcea
14:12:15,777 DEBUG FromReferenceNode:74 - Resolved : p.class -> person0_."TYPE"
14:12:15,778 DEBUG LiteralProcessor:125 - setSQLValue() org.hibernate.test.discriminator.Customer -> 'C'
14:12:15,778 DEBUG FromReferenceNode:74 - Resolved : org.hibernate.test.discriminator.Customer -> 'C'
14:12:15,778 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} "Person" person0_ ) ( where ( = ( person0_."TYPE" person0_."person_id" class ) 'C' ) ) )
14:12:15,778 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:12:15,778 DEBUG JoinProcessor:175 - Using FROM fragment ["Person" person0_]
14:12:15,779 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces ("Person")
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'person0_."person_id" as pers0_111_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName="Person",tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.discriminator.Person}}}
    |  \-[SQL_TOKEN] SqlFragment: 'person0_."sex" as sex3_111_, person0_."name" as name2_111_, person0_."title" as titl4_111_, person0_."salary" as sala5_111_, person0_."comments" as comm6_111_, person0_."TYPE" as TYPE1_111_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[person0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: '"Person" person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName="Person",tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.discriminator.Person}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'person0_."TYPE"' {propertyName=class,dereferenceType=ALL,propertyPath=class,path=p.class,tableAlias=person0_,className=org.hibernate.test.discriminator.Person,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'person0_."person_id"' {alias=p, className=org.hibernate.test.discriminator.Person, tableAlias=person0_}
          |  \-[IDENT] IdentNode: 'class' {originalText=class}
          \-[SQL_TOKEN] DotNode: ''C'' {propertyName=Customer,dereferenceType=AND,propertyPath=Customer,path=org.hibernate.test.discriminator.Customer,no from element}

14:12:15,779 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:15,779 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.discriminator.Person p where p.class = org.hibernate.test.discriminator.Customer
14:12:15,780 DEBUG QueryTranslatorImpl:236 - SQL: select person0_."person_id" as pers0_111_, person0_."sex" as sex3_111_, person0_."name" as name2_111_, person0_."title" as titl4_111_, person0_."salary" as sala5_111_, person0_."comments" as comm6_111_, person0_."TYPE" as TYPE1_111_ from "Person" person0_ where person0_."TYPE"='C'
14:12:15,780 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:15,780 DEBUG SQL:104 - 
    select
        person0_."person_id" as pers0_111_,
        person0_."sex" as sex3_111_,
        person0_."name" as name2_111_,
        person0_."title" as titl4_111_,
        person0_."salary" as sala5_111_,
        person0_."comments" as comm6_111_,
        person0_."TYPE" as TYPE1_111_ 
    from
        "Person" person0_ 
    where
        person0_."TYPE"='C'
14:12:15,781 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.discriminator.Person p where type(p) = :who
14:12:15,782 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  |  \-[IDENT] Node: 'test'
    |        |  |  \-[IDENT] Node: 'discriminator'
    |        |  \-[IDENT] Node: 'Person'
    |        \-[ALIAS] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'type'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[IDENT] Node: 'p'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'who'

14:12:15,783 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:15,783 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.discriminator.Person (p) -> person0_
14:12:15,783 DEBUG FromReferenceNode:74 - Resolved : p -> person0_."person_id"
14:12:15,801 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} "Person" person0_ ) ( where ( = ( person0_."TYPE" type ( exprList person0_."person_id" ) ) ? ) ) )
14:12:15,802 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:12:15,802 DEBUG JoinProcessor:175 - Using FROM fragment ["Person" person0_]
14:12:15,802 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces ("Person")
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'person0_."person_id" as pers0_111_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName="Person",tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.discriminator.Person}}}
    |  \-[SQL_TOKEN] SqlFragment: 'person0_."sex" as sex3_111_, person0_."name" as name2_111_, person0_."title" as titl4_111_, person0_."salary" as sala5_111_, person0_."comments" as comm6_111_, person0_."TYPE" as TYPE1_111_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[person0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: '"Person" person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName="Person",tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.discriminator.Person}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[SQL_TOKEN] MethodNode: 'person0_."TYPE"'
          |  +-[METHOD_NAME] IdentNode: 'type' {originalText=type}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[ALIAS_REF] IdentNode: 'person0_."person_id"' {alias=p, className=org.hibernate.test.discriminator.Person, tableAlias=person0_}
          \-[NAMED_PARAM] ParameterNode: '?' {name=who, expectedType=org.hibernate.persister.entity.DiscriminatorType@75b9ff7f}

14:12:15,802 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:15,803 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.discriminator.Person p where type(p) = :who
14:12:15,803 DEBUG QueryTranslatorImpl:236 - SQL: select person0_."person_id" as pers0_111_, person0_."sex" as sex3_111_, person0_."name" as name2_111_, person0_."title" as titl4_111_, person0_."salary" as sala5_111_, person0_."comments" as comm6_111_, person0_."TYPE" as TYPE1_111_ from "Person" person0_ where person0_."TYPE"=?
14:12:15,803 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:15,803 DEBUG SQL:104 - 
    select
        person0_."person_id" as pers0_111_,
        person0_."sex" as sex3_111_,
        person0_."name" as name2_111_,
        person0_."title" as titl4_111_,
        person0_."salary" as sala5_111_,
        person0_."comments" as comm6_111_,
        person0_."TYPE" as TYPE1_111_ 
    from
        "Person" person0_ 
    where
        person0_."TYPE"=?
14:12:15,804 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.discriminator.Person p where type(p) in :who
14:12:15,805 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  |  \-[IDENT] Node: 'test'
    |        |  |  \-[IDENT] Node: 'discriminator'
    |        |  \-[IDENT] Node: 'Person'
    |        \-[ALIAS] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'type'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[IDENT] Node: 'p'
          \-[IN_LIST] Node: 'inList'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'who'

14:12:15,806 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:15,806 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.discriminator.Person (p) -> person0_
14:12:15,806 DEBUG FromReferenceNode:74 - Resolved : p -> person0_."person_id"
14:12:15,806 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} "Person" person0_ ) ( where ( in ( person0_."TYPE" type ( exprList person0_."person_id" ) ) ( inList ? ) ) ) )
14:12:15,806 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:12:15,807 DEBUG JoinProcessor:175 - Using FROM fragment ["Person" person0_]
14:12:15,807 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces ("Person")
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'person0_."person_id" as pers0_111_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName="Person",tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.discriminator.Person}}}
    |  \-[SQL_TOKEN] SqlFragment: 'person0_."sex" as sex3_111_, person0_."name" as name2_111_, person0_."title" as titl4_111_, person0_."salary" as sala5_111_, person0_."comments" as comm6_111_, person0_."TYPE" as TYPE1_111_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[person0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: '"Person" person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName="Person",tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.discriminator.Person}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[SQL_TOKEN] MethodNode: 'person0_."TYPE"'
          |  +-[METHOD_NAME] IdentNode: 'type' {originalText=type}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[ALIAS_REF] IdentNode: 'person0_."person_id"' {alias=p, className=org.hibernate.test.discriminator.Person, tableAlias=person0_}
          \-[IN_LIST] SqlNode: 'inList'
             \-[NAMED_PARAM] ParameterNode: '?' {name=who, expectedType=org.hibernate.persister.entity.DiscriminatorType@2947aacf}

14:12:15,807 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:15,807 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.discriminator.Person p where type(p) in :who
14:12:15,807 DEBUG QueryTranslatorImpl:236 - SQL: select person0_."person_id" as pers0_111_, person0_."sex" as sex3_111_, person0_."name" as name2_111_, person0_."title" as titl4_111_, person0_."salary" as sala5_111_, person0_."comments" as comm6_111_, person0_."TYPE" as TYPE1_111_ from "Person" person0_ where person0_."TYPE" in (?)
14:12:15,807 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:15,808 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.discriminator.Person p where type(p) in (:who0_, :who1_)
14:12:15,809 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  |  \-[IDENT] Node: 'test'
    |        |  |  \-[IDENT] Node: 'discriminator'
    |        |  \-[IDENT] Node: 'Person'
    |        \-[ALIAS] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[IN] Node: 'in'
          +-[METHOD_CALL] Node: '('
          |  +-[IDENT] Node: 'type'
          |  \-[EXPR_LIST] Node: 'exprList'
          |     \-[IDENT] Node: 'p'
          \-[IN_LIST] Node: 'inList'
             +-[COLON] Node: ':'
             |  \-[IDENT] Node: 'who0_'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'who1_'

14:12:15,811 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:15,811 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.discriminator.Person (p) -> person0_
14:12:15,811 DEBUG FromReferenceNode:74 - Resolved : p -> person0_."person_id"
14:12:15,812 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} "Person" person0_ ) ( where ( in ( person0_."TYPE" type ( exprList person0_."person_id" ) ) ( inList ? ? ) ) ) )
14:12:15,812 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:12:15,812 DEBUG JoinProcessor:175 - Using FROM fragment ["Person" person0_]
14:12:15,812 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces ("Person")
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'person0_."person_id" as pers0_111_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName="Person",tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.discriminator.Person}}}
    |  \-[SQL_TOKEN] SqlFragment: 'person0_."sex" as sex3_111_, person0_."name" as name2_111_, person0_."title" as titl4_111_, person0_."salary" as sala5_111_, person0_."comments" as comm6_111_, person0_."TYPE" as TYPE1_111_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[person0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: '"Person" person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName="Person",tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.discriminator.Person}}
    \-[WHERE] SqlNode: 'where'
       \-[IN] InLogicOperatorNode: 'in'
          +-[SQL_TOKEN] MethodNode: 'person0_."TYPE"'
          |  +-[METHOD_NAME] IdentNode: 'type' {originalText=type}
          |  \-[EXPR_LIST] SqlNode: 'exprList'
          |     \-[ALIAS_REF] IdentNode: 'person0_."person_id"' {alias=p, className=org.hibernate.test.discriminator.Person, tableAlias=person0_}
          \-[IN_LIST] SqlNode: 'inList'
             +-[NAMED_PARAM] ParameterNode: '?' {name=who0_, expectedType=org.hibernate.persister.entity.DiscriminatorType@15bd2a5b}
             \-[NAMED_PARAM] ParameterNode: '?' {name=who1_, expectedType=org.hibernate.persister.entity.DiscriminatorType@15bd2a5b}

14:12:15,812 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:15,813 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.discriminator.Person p where type(p) in (:who0_, :who1_)
14:12:15,813 DEBUG QueryTranslatorImpl:236 - SQL: select person0_."person_id" as pers0_111_, person0_."sex" as sex3_111_, person0_."name" as name2_111_, person0_."title" as titl4_111_, person0_."salary" as sala5_111_, person0_."comments" as comm6_111_, person0_."TYPE" as TYPE1_111_ from "Person" person0_ where person0_."TYPE" in (? , ?)
14:12:15,813 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:15,813 DEBUG SQL:104 - 
    select
        person0_."person_id" as pers0_111_,
        person0_."sex" as sex3_111_,
        person0_."name" as name2_111_,
        person0_."title" as titl4_111_,
        person0_."salary" as sala5_111_,
        person0_."comments" as comm6_111_,
        person0_."TYPE" as TYPE1_111_ 
    from
        "Person" person0_ 
    where
        person0_."TYPE" in (
            ? , ?
        )
14:12:15,814 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.discriminator.Customer
14:12:15,815 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'discriminator'
                \-[IDENT] Node: 'Customer'

14:12:15,815 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:15,815 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.discriminator.Customer (<no alias>) -> customer0_
14:12:15,815 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} "Person" customer0_ ) )
14:12:15,816 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:12:15,816 DEBUG JoinProcessor:175 - Using FROM fragment ["Person" customer0_]
14:12:15,816 DEBUG SyntheticAndFactory:92 - Using unprocessed WHERE-fragment [customer0_."TYPE"='C']
14:12:15,816 DEBUG SyntheticAndFactory:124 - Using processed WHERE-fragment [customer0_."TYPE"='C']
14:12:15,816 DEBUG QueryNode:73 - getWhereClause() : Creating a new WHERE clause...
14:12:15,816 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces ("Person")
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customer0_."person_id" as pers0_111_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName="Person",tableAlias=customer0_,origin=null,columns={,className=org.hibernate.test.discriminator.Customer}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_."sex" as sex3_111_, customer0_."name" as name2_111_, customer0_."comments" as comm6_111_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: '"Person" customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName="Person",tableAlias=customer0_,origin=null,columns={,className=org.hibernate.test.discriminator.Customer}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[FILTERS] SqlNode: '{filter conditions}'
          \-[SQL_TOKEN] SqlFragment: 'customer0_."TYPE"='C''

14:12:15,816 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:15,817 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.discriminator.Customer
14:12:15,817 DEBUG QueryTranslatorImpl:236 - SQL: select customer0_."person_id" as pers0_111_, customer0_."sex" as sex3_111_, customer0_."name" as name2_111_, customer0_."comments" as comm6_111_ from "Person" customer0_ where customer0_."TYPE"='C'
14:12:15,817 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:15,817 DEBUG SQL:104 - 
    select
        customer0_."person_id" as pers0_111_,
        customer0_."sex" as sex3_111_,
        customer0_."name" as name2_111_,
        customer0_."comments" as comm6_111_ 
    from
        "Person" customer0_ 
    where
        customer0_."TYPE"='C'
14:12:15,818 DEBUG SQL:104 - 
    select
        employee0_."person_id" as pers0_111_0_,
        employee0_."sex" as sex3_111_0_,
        employee0_."name" as name2_111_0_,
        employee0_."title" as titl4_111_0_,
        employee0_."salary" as sala5_111_0_ 
    from
        "Person" employee0_ 
    where
        employee0_."person_id"=? 
        and employee0_."TYPE"='E'
14:12:15,818 DEBUG SQL:104 - 
    select
        customer0_."person_id" as pers0_111_0_,
        customer0_."sex" as sex3_111_0_,
        customer0_."name" as name2_111_0_,
        customer0_."comments" as comm6_111_0_ 
    from
        "Person" customer0_ 
    where
        customer0_."person_id"=? 
        and customer0_."TYPE"='C'
14:12:15,819 DEBUG SQL:104 - 
    delete 
    from
        "Person" 
    where
        "person_id"=?
14:12:15,819 DEBUG SQL:104 - 
    delete 
    from
        "Person" 
    where
        "person_id"=?
14:12:15,820 DEBUG SQL:104 - 
    delete 
    from
        "Person" 
    where
        "person_id"=?
14:12:15,820 DEBUG SQL:104 - 
    select
        person0_."person_id" as pers0_111_,
        person0_."sex" as sex3_111_,
        person0_."name" as name2_111_,
        person0_."title" as titl4_111_,
        person0_."salary" as sala5_111_,
        person0_."comments" as comm6_111_,
        person0_."TYPE" as TYPE1_111_ 
    from
        "Person" person0_
14:12:15,821  INFO CustomRunner:139 - Test: testLoadSuperclassProxyEvictPolymorphicAccess
14:12:15,822 DEBUG SQL:104 - 
    insert 
    into
        "Person"
        ("sex", "name", "title", "salary", "TYPE", "person_id") 
    values
        (?, ?, ?, ?, 'E', ?)
14:12:15,823 DEBUG SQL:104 - 
    select
        person0_."person_id" as pers0_111_0_,
        person0_."sex" as sex3_111_0_,
        person0_."name" as name2_111_0_,
        person0_."title" as titl4_111_0_,
        person0_."salary" as sala5_111_0_,
        person0_."comments" as comm6_111_0_,
        person0_."TYPE" as TYPE1_111_0_ 
    from
        "Person" person0_ 
    where
        person0_."person_id"=?
14:12:15,823 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.discriminator.Person where id = :id
14:12:15,824 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'org'
    |           |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  \-[IDENT] Node: 'test'
    |           |  \-[IDENT] Node: 'discriminator'
    |           \-[IDENT] Node: 'Person'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

14:12:15,824 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:15,824 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.discriminator.Person (<no alias>) -> person0_
14:12:15,824 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:12:15,825 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.LongType@4bf3f9d
14:12:15,825 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.id -> person0_."person_id"
14:12:15,825 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} "Person" person0_ ) ( where ( = ( person0_."person_id" {synthetic-alias} id ) ? ) ) )
14:12:15,825 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:12:15,825 DEBUG JoinProcessor:175 - Using FROM fragment ["Person" person0_]
14:12:15,825 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces ("Person")
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'person0_."person_id" as pers0_111_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName="Person",tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.discriminator.Person}}}
    |  \-[SQL_TOKEN] SqlFragment: 'person0_."sex" as sex3_111_, person0_."name" as name2_111_, person0_."title" as titl4_111_, person0_."salary" as sala5_111_, person0_."comments" as comm6_111_, person0_."TYPE" as TYPE1_111_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[person0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: '"Person" person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName="Person",tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.discriminator.Person}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'person0_."person_id"' {propertyName=id,dereferenceType=ALL,propertyPath=id,path={synthetic-alias}.id,tableAlias=person0_,className=org.hibernate.test.discriminator.Person,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.LongType@4bf3f9d}

14:12:15,825 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:15,826 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.discriminator.Person where id = :id
14:12:15,826 DEBUG QueryTranslatorImpl:236 - SQL: select person0_."person_id" as pers0_111_, person0_."sex" as sex3_111_, person0_."name" as name2_111_, person0_."title" as titl4_111_, person0_."salary" as sala5_111_, person0_."comments" as comm6_111_, person0_."TYPE" as TYPE1_111_ from "Person" person0_ where person0_."person_id"=?
14:12:15,826 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:15,826 DEBUG SQL:104 - 
    select
        person0_."person_id" as pers0_111_,
        person0_."sex" as sex3_111_,
        person0_."name" as name2_111_,
        person0_."title" as titl4_111_,
        person0_."salary" as sala5_111_,
        person0_."comments" as comm6_111_,
        person0_."TYPE" as TYPE1_111_ 
    from
        "Person" person0_ 
    where
        person0_."person_id"=?
14:12:15,827 DEBUG SQL:104 - 
    select
        this_."person_id" as pers0_111_0_,
        this_."sex" as sex3_111_0_,
        this_."name" as name2_111_0_,
        this_."title" as titl4_111_0_,
        this_."salary" as sala5_111_0_,
        this_."comments" as comm6_111_0_,
        this_."TYPE" as TYPE1_111_0_ 
    from
        "Person" this_ 
    where
        this_."person_id" = ?
14:12:15,827 DEBUG SQL:104 - 
    delete 
    from
        "Person" 
    where
        "person_id"=?
14:12:15,828  INFO CustomRunner:139 - Test: testLoadSuperclassProxyPolymorphicAccess
14:12:15,829 DEBUG SQL:104 - 
    insert 
    into
        "Person"
        ("sex", "name", "title", "salary", "TYPE", "person_id") 
    values
        (?, ?, ?, ?, 'E', ?)
14:12:15,830 DEBUG SQL:104 - 
    select
        person0_."person_id" as pers0_111_0_,
        person0_."sex" as sex3_111_0_,
        person0_."name" as name2_111_0_,
        person0_."title" as titl4_111_0_,
        person0_."salary" as sala5_111_0_,
        person0_."comments" as comm6_111_0_,
        person0_."TYPE" as TYPE1_111_0_ 
    from
        "Person" person0_ 
    where
        person0_."person_id"=?
14:12:15,831 DEBUG SQL:104 - 
    select
        person0_."person_id" as pers0_111_,
        person0_."sex" as sex3_111_,
        person0_."name" as name2_111_,
        person0_."title" as titl4_111_,
        person0_."salary" as sala5_111_,
        person0_."comments" as comm6_111_,
        person0_."TYPE" as TYPE1_111_ 
    from
        "Person" person0_ 
    where
        person0_."person_id"=?
14:12:15,831 DEBUG SQL:104 - 
    select
        this_."person_id" as pers0_111_0_,
        this_."sex" as sex3_111_0_,
        this_."name" as name2_111_0_,
        this_."title" as titl4_111_0_,
        this_."salary" as sala5_111_0_,
        this_."comments" as comm6_111_0_,
        this_."TYPE" as TYPE1_111_0_ 
    from
        "Person" this_ 
    where
        this_."person_id" = ?
14:12:15,832 DEBUG SQL:104 - 
    delete 
    from
        "Person" 
    where
        "person_id"=?
14:12:15,833  INFO CustomRunner:139 - Test: testQuerySubclassAttribute
14:12:15,834 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.discriminator.Person where salary > 100
14:12:15,835 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'org'
    |           |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  \-[IDENT] Node: 'test'
    |           |  \-[IDENT] Node: 'discriminator'
    |           \-[IDENT] Node: 'Person'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[IDENT] Node: 'salary'
          \-[NUM_INT] Node: '100'

14:12:15,835 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:15,835 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.discriminator.Person (<no alias>) -> person0_
14:12:15,835 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:12:15,835 DEBUG DotNode:599 - getDataType() : salary -> org.hibernate.type.BigDecimalType@3bb4a749
14:12:15,835 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.salary -> person0_."salary"
14:12:15,836 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} "Person" person0_ ) ( where ( > ( person0_."salary" {synthetic-alias} salary ) 100 ) ) )
14:12:15,836 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:12:15,836 DEBUG JoinProcessor:175 - Using FROM fragment ["Person" person0_]
14:12:15,836 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces ("Person")
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'person0_."person_id" as pers0_111_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName="Person",tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.discriminator.Person}}}
    |  \-[SQL_TOKEN] SqlFragment: 'person0_."sex" as sex3_111_, person0_."name" as name2_111_, person0_."title" as titl4_111_, person0_."salary" as sala5_111_, person0_."comments" as comm6_111_, person0_."TYPE" as TYPE1_111_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[person0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: '"Person" person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName="Person",tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.discriminator.Person}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'person0_."salary"' {propertyName=salary,dereferenceType=ALL,propertyPath=salary,path={synthetic-alias}.salary,tableAlias=person0_,className=org.hibernate.test.discriminator.Person,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'salary' {originalText=salary}
          \-[NUM_INT] LiteralNode: '100'

14:12:15,836 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:15,836 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.discriminator.Person where salary > 100
14:12:15,836 DEBUG QueryTranslatorImpl:236 - SQL: select person0_."person_id" as pers0_111_, person0_."sex" as sex3_111_, person0_."name" as name2_111_, person0_."title" as titl4_111_, person0_."salary" as sala5_111_, person0_."comments" as comm6_111_, person0_."TYPE" as TYPE1_111_ from "Person" person0_ where person0_."salary">100
14:12:15,836 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:15,837 DEBUG SQL:104 - 
    insert 
    into
        "Person"
        ("sex", "name", "TYPE", "person_id") 
    values
        (?, ?, 'P', ?)
14:12:15,837 DEBUG SQL:104 - 
    insert 
    into
        "Person"
        ("sex", "name", "title", "salary", "TYPE", "person_id") 
    values
        (?, ?, ?, ?, 'E', ?)
14:12:15,838 DEBUG SQL:104 - 
    select
        person0_."person_id" as pers0_111_,
        person0_."sex" as sex3_111_,
        person0_."name" as name2_111_,
        person0_."title" as titl4_111_,
        person0_."salary" as sala5_111_,
        person0_."comments" as comm6_111_,
        person0_."TYPE" as TYPE1_111_ 
    from
        "Person" person0_ 
    where
        person0_."salary">100
14:12:15,838 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.discriminator.Person where salary > 100 or name like 'E%'
14:12:15,839 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'org'
    |           |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  \-[IDENT] Node: 'test'
    |           |  \-[IDENT] Node: 'discriminator'
    |           \-[IDENT] Node: 'Person'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[GT] Node: '>'
          |  +-[IDENT] Node: 'salary'
          |  \-[NUM_INT] Node: '100'
          \-[LIKE] Node: 'like'
             +-[IDENT] Node: 'name'
             \-[QUOTED_STRING] Node: ''E%''

14:12:15,839 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:15,839 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.discriminator.Person (<no alias>) -> person0_
14:12:15,839 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:12:15,839 DEBUG DotNode:599 - getDataType() : salary -> org.hibernate.type.BigDecimalType@3bb4a749
14:12:15,839 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.salary -> person0_."salary"
14:12:15,840 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:12:15,840 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:15,840 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> person0_."name"
14:12:15,840 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} "Person" person0_ ) ( where ( or ( > ( person0_."salary" {synthetic-alias} salary ) 100 ) ( like ( person0_."name" {synthetic-alias} name ) 'E%' ) ) ) )
14:12:15,840 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:12:15,840 DEBUG JoinProcessor:175 - Using FROM fragment ["Person" person0_]
14:12:15,840 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces ("Person")
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'person0_."person_id" as pers0_111_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName="Person",tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.discriminator.Person}}}
    |  \-[SQL_TOKEN] SqlFragment: 'person0_."sex" as sex3_111_, person0_."name" as name2_111_, person0_."title" as titl4_111_, person0_."salary" as sala5_111_, person0_."comments" as comm6_111_, person0_."TYPE" as TYPE1_111_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[person0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: '"Person" person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName="Person",tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.discriminator.Person}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[GT] BinaryLogicOperatorNode: '>'
          |  +-[DOT] DotNode: 'person0_."salary"' {propertyName=salary,dereferenceType=ALL,propertyPath=salary,path={synthetic-alias}.salary,tableAlias=person0_,className=org.hibernate.test.discriminator.Person,classAlias=null}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'salary' {originalText=salary}
          |  \-[NUM_INT] LiteralNode: '100'
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'person0_."name"' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=person0_,className=org.hibernate.test.discriminator.Person,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'name' {originalText=name}
             \-[QUOTED_STRING] LiteralNode: ''E%''

14:12:15,841 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:15,841 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.discriminator.Person where salary > 100 or name like 'E%'
14:12:15,841 DEBUG QueryTranslatorImpl:236 - SQL: select person0_."person_id" as pers0_111_, person0_."sex" as sex3_111_, person0_."name" as name2_111_, person0_."title" as titl4_111_, person0_."salary" as sala5_111_, person0_."comments" as comm6_111_, person0_."TYPE" as TYPE1_111_ from "Person" person0_ where person0_."salary">100 or person0_."name" like 'E%'
14:12:15,841 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:15,841 DEBUG SQL:104 - 
    select
        person0_."person_id" as pers0_111_,
        person0_."sex" as sex3_111_,
        person0_."name" as name2_111_,
        person0_."title" as titl4_111_,
        person0_."salary" as sala5_111_,
        person0_."comments" as comm6_111_,
        person0_."TYPE" as TYPE1_111_ 
    from
        "Person" person0_ 
    where
        person0_."salary">100 
        or person0_."name" like 'E%'
14:12:15,842 DEBUG SQL:104 - 
    select
        this_."person_id" as pers0_111_0_,
        this_."sex" as sex3_111_0_,
        this_."name" as name2_111_0_,
        this_."title" as titl4_111_0_,
        this_."salary" as sala5_111_0_,
        this_."comments" as comm6_111_0_,
        this_."TYPE" as TYPE1_111_0_ 
    from
        "Person" this_ 
    where
        this_."salary">?
14:12:15,842 DEBUG SQL:104 - 
    delete 
    from
        "Person" 
    where
        "person_id"=?
14:12:15,843 DEBUG SQL:104 - 
    delete 
    from
        "Person" 
    where
        "person_id"=?
14:12:15,851  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:12:15,851 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:12:15,852 DEBUG SQL:104 - 
    drop table "Person" if exists
14:12:15,852  INFO SchemaExport:405 - HHH000230: Schema export complete
14:12:15,852  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
