<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" hostname="dhcp-10.15.208.168.stl.redhat.com" name="org.hibernate.test.subclassfilter.DiscrimSubclassFilterTest" tests="1" time="0.202" timestamp="2013-02-28T20:19:21">
  <properties />
  <testcase classname="org.hibernate.test.subclassfilter.DiscrimSubclassFilterTest" name="testFiltersWithSubclass" time="0.161" />
  <system-out><![CDATA[14:19:21,442  INFO CustomRunner:132 - BeforeClass: org.hibernate.test.subclassfilter.DiscrimSubclassFilterTest
14:19:21,444  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/subclassfilter/discrim-subclass.hbm.xml
14:19:21,454  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:19:21,454  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:19:21,454  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:19:21,455  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:19:21,455  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:19:21,458  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:19:21,459  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:19:21,460  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:19:21,460  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:19:21,460  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:19:21,473  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:19:21,474 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:19:21,474 DEBUG SQL:104 - 
    alter table SPerson 
        drop constraint FKB4EDBD8842E7F3F8
14:19:21,474 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table SPerson drop constraint FKB4EDBD8842E7F3F8
14:19:21,474 ERROR SchemaExport:426 - Table "SPERSON" not found; SQL statement:

    alter table SPerson 
        drop constraint FKB4EDBD8842E7F3F8 [42102-145]
14:19:21,474 DEBUG SQL:104 - 
    alter table SPerson 
        drop constraint FKB4EDBD88D01561E9
14:19:21,475 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table SPerson drop constraint FKB4EDBD88D01561E9
14:19:21,475 ERROR SchemaExport:426 - Table "SPERSON" not found; SQL statement:

    alter table SPerson 
        drop constraint FKB4EDBD88D01561E9 [42102-145]
14:19:21,475 DEBUG SQL:104 - 
    drop table SPerson if exists
14:19:21,475 DEBUG SQL:104 - 
    create table SPerson (
        person_id bigint generated by default as identity,
        name varchar(255),
        company varchar(255),
        region varchar(255),
        title varchar(255),
        dept varchar(255),
        mgr_id bigint,
        contactOwner bigint,
        primary key (person_id)
    )
14:19:21,476 DEBUG SQL:104 - 
    alter table SPerson 
        add constraint FKB4EDBD8842E7F3F8 
        foreign key (mgr_id) 
        references SPerson
14:19:21,477 DEBUG SQL:104 - 
    alter table SPerson 
        add constraint FKB4EDBD88D01561E9 
        foreign key (contactOwner) 
        references SPerson
14:19:21,478  INFO SchemaExport:405 - HHH000230: Schema export complete
14:19:21,478  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:19:21,478  INFO CustomRunner:139 - Test: testFiltersWithSubclass
14:19:21,480 DEBUG SQL:104 - 
    insert 
    into
        SPerson
        (person_id, name, company, region, title, dept, mgr_id) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:19:21,481 DEBUG SQL:104 - 
    insert 
    into
        SPerson
        (person_id, name, company, region, title, dept, mgr_id) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:19:21,481 DEBUG SQL:104 - 
    insert 
    into
        SPerson
        (person_id, name, company, region, title, dept, mgr_id) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:19:21,481 DEBUG SQL:104 - 
    insert 
    into
        SPerson
        (person_id, name, company, region, contactOwner) 
    values
        (null, ?, ?, ?, ?)
14:19:21,482 DEBUG SQL:104 - 
    insert 
    into
        SPerson
        (person_id, name, company, region) 
    values
        (null, ?, ?, ?)
14:19:21,483 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.subclassfilter.Person
14:19:21,483 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'subclassfilter'
                \-[IDENT] Node: 'Person'

14:19:21,483 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,484 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.subclassfilter.Person (<no alias>) -> person0_
14:19:21,484 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} SPerson person0_ ) )
14:19:21,484 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:21,484 DEBUG JoinProcessor:175 - Using FROM fragment [SPerson person0_]
14:19:21,484 DEBUG SyntheticAndFactory:92 - Using unprocessed WHERE-fragment [person0_.region = :region.userRegion]
14:19:21,484 DEBUG SyntheticAndFactory:124 - Using processed WHERE-fragment [person0_.region = ?]
14:19:21,484 DEBUG QueryNode:73 - getWhereClause() : Creating a new WHERE clause...
14:19:21,485 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SPerson)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'person0_.person_id as person1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=SPerson,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.subclassfilter.Person}}}
    |  \-[SQL_TOKEN] SqlFragment: 'person0_.name as name0_, person0_.company as company0_, person0_.region as region0_, person0_.title as title0_, person0_.dept as dept0_, person0_.mgr_id as mgr7_0_, person0_.contactOwner as contactO8_0_, CASE WHEN person0_.company is null THEN 0 WHEN person0_.company = 'JBoss' THEN 1 ELSE 2 END as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[person0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'SPerson person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=SPerson,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.subclassfilter.Person}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[FILTERS] SqlNode: '{filter conditions}'
          \-[SQL_TOKEN] SqlFragment: 'person0_.region = ?'

14:19:21,485 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,485 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.subclassfilter.Person
14:19:21,485 DEBUG QueryTranslatorImpl:236 - SQL: select person0_.person_id as person1_0_, person0_.name as name0_, person0_.company as company0_, person0_.region as region0_, person0_.title as title0_, person0_.dept as dept0_, person0_.mgr_id as mgr7_0_, person0_.contactOwner as contactO8_0_, CASE WHEN person0_.company is null THEN 0 WHEN person0_.company = 'JBoss' THEN 1 ELSE 2 END as clazz_ from SPerson person0_ where person0_.region = ?
14:19:21,485 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,485 DEBUG SQL:104 - 
    select
        person0_.person_id as person1_0_,
        person0_.name as name0_,
        person0_.company as company0_,
        person0_.region as region0_,
        person0_.title as title0_,
        person0_.dept as dept0_,
        person0_.mgr_id as mgr7_0_,
        person0_.contactOwner as contactO8_0_,
        CASE 
            WHEN person0_.company is null THEN 0 
            WHEN person0_.company = 'JBoss' THEN 1 
            ELSE 2 
        END as clazz_ 
    from
        SPerson person0_ 
    where
        person0_.region = ?
14:19:21,501 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.subclassfilter.Employee
14:19:21,502 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'subclassfilter'
                \-[IDENT] Node: 'Employee'

14:19:21,502 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,502 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.subclassfilter.Employee (<no alias>) -> employee0_
14:19:21,503 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} SPerson employee0_ ) )
14:19:21,503 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:21,503 DEBUG JoinProcessor:175 - Using FROM fragment [SPerson employee0_]
14:19:21,503 DEBUG SyntheticAndFactory:92 - Using unprocessed WHERE-fragment [employee0_.region = :region.userRegion and CASE WHEN employee0_.company is null THEN 0 WHEN employee0_.company = 'JBoss' THEN 1 ELSE 2 END=1]
14:19:21,510 DEBUG SyntheticAndFactory:124 - Using processed WHERE-fragment [employee0_.region = ? and CASE WHEN employee0_.company is null THEN 0 WHEN employee0_.company = 'JBoss' THEN 1 ELSE 2 END=1]
14:19:21,510 DEBUG QueryNode:73 - getWhereClause() : Creating a new WHERE clause...
14:19:21,511 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SPerson)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'employee0_.person_id as person1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=SPerson,tableAlias=employee0_,origin=null,columns={,className=org.hibernate.test.subclassfilter.Employee}}}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_.name as name0_, employee0_.company as company0_, employee0_.region as region0_, employee0_.title as title0_, employee0_.dept as dept0_, employee0_.mgr_id as mgr7_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'SPerson employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=SPerson,tableAlias=employee0_,origin=null,columns={,className=org.hibernate.test.subclassfilter.Employee}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[FILTERS] SqlNode: '{filter conditions}'
          \-[SQL_TOKEN] SqlFragment: 'employee0_.region = ? and CASE WHEN employee0_.company is null THEN 0 WHEN employee0_.company = 'JBoss' THEN 1 ELSE 2 END=1'

14:19:21,511 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,511 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.subclassfilter.Employee
14:19:21,511 DEBUG QueryTranslatorImpl:236 - SQL: select employee0_.person_id as person1_0_, employee0_.name as name0_, employee0_.company as company0_, employee0_.region as region0_, employee0_.title as title0_, employee0_.dept as dept0_, employee0_.mgr_id as mgr7_0_ from SPerson employee0_ where employee0_.region = ? and CASE WHEN employee0_.company is null THEN 0 WHEN employee0_.company = 'JBoss' THEN 1 ELSE 2 END=1
14:19:21,511 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,511 DEBUG SQL:104 - 
    select
        employee0_.person_id as person1_0_,
        employee0_.name as name0_,
        employee0_.company as company0_,
        employee0_.region as region0_,
        employee0_.title as title0_,
        employee0_.dept as dept0_,
        employee0_.mgr_id as mgr7_0_ 
    from
        SPerson employee0_ 
    where
        employee0_.region = ? 
        and CASE 
            WHEN employee0_.company is null THEN 0 
            WHEN employee0_.company = 'JBoss' THEN 1 
            ELSE 2 
        END=1
14:19:21,522 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.subclassfilter.Person as p left join fetch p.minions
14:19:21,523 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          +-[RANGE] Node: 'RANGE'
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[DOT] Node: '.'
          |  |  |  |  |  +-[IDENT] Node: 'org'
          |  |  |  |  |  \-[IDENT] Node: 'hibernate'
          |  |  |  |  \-[IDENT] Node: 'test'
          |  |  |  \-[IDENT] Node: 'subclassfilter'
          |  |  \-[IDENT] Node: 'Person'
          |  \-[ALIAS] Node: 'p'
          \-[JOIN] Node: 'join'
             +-[LEFT] Node: 'left'
             +-[FETCH] Node: 'fetch'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'p'
                \-[IDENT] Node: 'minions'

14:19:21,523 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,523 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.subclassfilter.Person (p) -> person0_
14:19:21,532 DEBUG FromReferenceNode:74 - Resolved : p -> person0_.person_id
14:19:21,532 DEBUG DotNode:599 - getDataType() : minions -> org.hibernate.type.SetType(org.hibernate.test.subclassfilter.Employee.minions)
14:19:21,532 DEBUG FromElementFactory:376 - createEntityAssociation() : One to many - path = p.minions role = org.hibernate.test.subclassfilter.Employee.minions associatedEntityName = org.hibernate.test.subclassfilter.Employee
14:19:21,532 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.subclassfilter.Employee (<no alias>) -> minions1_
14:19:21,532 DEBUG FromClause:282 - addJoinByPathMap() : p.minions -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=SPerson,tableAlias=minions1_,origin=SPerson person0_,columns={person0_.person_id ,className=org.hibernate.test.subclassfilter.Employee}}
14:19:21,532 DEBUG DotNode:308 - dereferenceCollection() : Created new FROM element for p.minions : SPerson minions1_
14:19:21,532 DEBUG FromReferenceNode:74 - Resolved : p.minions -> .
14:19:21,533 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'SPerson minions1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.subclassfilter.Employee.minions,tableName=SPerson,tableAlias=minions1_,origin=SPerson person0_,columns={person0_.person_id ,className=org.hibernate.test.subclassfilter.Employee}}

14:19:21,533 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} ( SPerson person0_ SPerson minions1_ ) ) )
14:19:21,533 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:21,533 DEBUG JoinProcessor:175 - Using FROM fragment [SPerson person0_]
14:19:21,533 DEBUG SyntheticAndFactory:92 - Using unprocessed WHERE-fragment [person0_.region = :region.userRegion]
14:19:21,533 DEBUG SyntheticAndFactory:124 - Using processed WHERE-fragment [person0_.region = ?]
14:19:21,533 DEBUG QueryNode:73 - getWhereClause() : Creating a new WHERE clause...
14:19:21,534 DEBUG JoinProcessor:175 - Using FROM fragment [left outer join SPerson minions1_ on person0_.person_id=minions1_.mgr_id and minions1_.region = :region.userRegion]
14:19:21,534 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SPerson)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'person0_.person_id as person1_0_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=SPerson,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.subclassfilter.Person}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'minions1_.person_id as person1_0_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.subclassfilter.Employee.minions,tableName=SPerson,tableAlias=minions1_,origin=SPerson person0_,columns={person0_.person_id ,className=org.hibernate.test.subclassfilter.Employee}}}
    |  +-[SQL_TOKEN] SqlFragment: 'person0_.name as name0_0_, person0_.company as company0_0_, person0_.region as region0_0_, person0_.title as title0_0_, person0_.dept as dept0_0_, person0_.mgr_id as mgr7_0_0_, person0_.contactOwner as contactO8_0_0_, CASE WHEN person0_.company is null THEN 0 WHEN person0_.company = 'JBoss' THEN 1 ELSE 2 END as clazz_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'minions1_.name as name0_1_, minions1_.company as company0_1_, minions1_.region as region0_1_, minions1_.title as title0_1_, minions1_.dept as dept0_1_, minions1_.mgr_id as mgr7_0_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'minions1_.mgr_id as mgr7_0_0__, minions1_.person_id as person1_0_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[p], fromElementByTableAlias=[minions1_, person0_], fromElementsByPath=[p.minions], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'SPerson person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=SPerson,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.subclassfilter.Person}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join SPerson minions1_ on person0_.person_id=minions1_.mgr_id and minions1_.region = ?' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.subclassfilter.Employee.minions,tableName=SPerson,tableAlias=minions1_,origin=SPerson person0_,columns={person0_.person_id ,className=org.hibernate.test.subclassfilter.Employee}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[FILTERS] SqlNode: '{filter conditions}'
          \-[SQL_TOKEN] SqlFragment: 'person0_.region = ?'

14:19:21,544 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,544 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.subclassfilter.Person as p left join fetch p.minions
14:19:21,544 DEBUG QueryTranslatorImpl:236 - SQL: select person0_.person_id as person1_0_0_, minions1_.person_id as person1_0_1_, person0_.name as name0_0_, person0_.company as company0_0_, person0_.region as region0_0_, person0_.title as title0_0_, person0_.dept as dept0_0_, person0_.mgr_id as mgr7_0_0_, person0_.contactOwner as contactO8_0_0_, CASE WHEN person0_.company is null THEN 0 WHEN person0_.company = 'JBoss' THEN 1 ELSE 2 END as clazz_0_, minions1_.name as name0_1_, minions1_.company as company0_1_, minions1_.region as region0_1_, minions1_.title as title0_1_, minions1_.dept as dept0_1_, minions1_.mgr_id as mgr7_0_1_, minions1_.mgr_id as mgr7_0_0__, minions1_.person_id as person1_0_0__ from SPerson person0_ left outer join SPerson minions1_ on person0_.person_id=minions1_.mgr_id and minions1_.region = ? where person0_.region = ?
14:19:21,544 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,545 DEBUG SQL:104 - 
    select
        person0_.person_id as person1_0_0_,
        minions1_.person_id as person1_0_1_,
        person0_.name as name0_0_,
        person0_.company as company0_0_,
        person0_.region as region0_0_,
        person0_.title as title0_0_,
        person0_.dept as dept0_0_,
        person0_.mgr_id as mgr7_0_0_,
        person0_.contactOwner as contactO8_0_0_,
        CASE 
            WHEN person0_.company is null THEN 0 
            WHEN person0_.company = 'JBoss' THEN 1 
            ELSE 2 
        END as clazz_0_,
        minions1_.name as name0_1_,
        minions1_.company as company0_1_,
        minions1_.region as region0_1_,
        minions1_.title as title0_1_,
        minions1_.dept as dept0_1_,
        minions1_.mgr_id as mgr7_0_1_,
        minions1_.mgr_id as mgr7_0_0__,
        minions1_.person_id as person1_0_0__ 
    from
        SPerson person0_ 
    left outer join
        SPerson minions1_ 
            on person0_.person_id=minions1_.mgr_id 
            and minions1_.region = ? 
    where
        person0_.region = ?
14:19:21,556 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.subclassfilter.Employee as p left join fetch p.minions
14:19:21,557 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          +-[RANGE] Node: 'RANGE'
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[DOT] Node: '.'
          |  |  |  |  |  +-[IDENT] Node: 'org'
          |  |  |  |  |  \-[IDENT] Node: 'hibernate'
          |  |  |  |  \-[IDENT] Node: 'test'
          |  |  |  \-[IDENT] Node: 'subclassfilter'
          |  |  \-[IDENT] Node: 'Employee'
          |  \-[ALIAS] Node: 'p'
          \-[JOIN] Node: 'join'
             +-[LEFT] Node: 'left'
             +-[FETCH] Node: 'fetch'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'p'
                \-[IDENT] Node: 'minions'

14:19:21,565 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,566 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.subclassfilter.Employee (p) -> employee0_
14:19:21,566 DEBUG FromReferenceNode:74 - Resolved : p -> employee0_.person_id
14:19:21,566 DEBUG DotNode:599 - getDataType() : minions -> org.hibernate.type.SetType(org.hibernate.test.subclassfilter.Employee.minions)
14:19:21,566 DEBUG FromElementFactory:376 - createEntityAssociation() : One to many - path = p.minions role = org.hibernate.test.subclassfilter.Employee.minions associatedEntityName = org.hibernate.test.subclassfilter.Employee
14:19:21,566 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.subclassfilter.Employee (<no alias>) -> minions1_
14:19:21,566 DEBUG FromClause:282 - addJoinByPathMap() : p.minions -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=SPerson,tableAlias=minions1_,origin=SPerson employee0_,columns={employee0_.person_id ,className=org.hibernate.test.subclassfilter.Employee}}
14:19:21,567 DEBUG DotNode:308 - dereferenceCollection() : Created new FROM element for p.minions : SPerson minions1_
14:19:21,567 DEBUG FromReferenceNode:74 - Resolved : p.minions -> .
14:19:21,567 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'SPerson minions1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.subclassfilter.Employee.minions,tableName=SPerson,tableAlias=minions1_,origin=SPerson employee0_,columns={employee0_.person_id ,className=org.hibernate.test.subclassfilter.Employee}}

14:19:21,567 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} ( SPerson employee0_ SPerson minions1_ ) ) )
14:19:21,567 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:21,567 DEBUG JoinProcessor:175 - Using FROM fragment [SPerson employee0_]
14:19:21,567 DEBUG SyntheticAndFactory:92 - Using unprocessed WHERE-fragment [employee0_.region = :region.userRegion and CASE WHEN employee0_.company is null THEN 0 WHEN employee0_.company = 'JBoss' THEN 1 ELSE 2 END=1]
14:19:21,567 DEBUG SyntheticAndFactory:124 - Using processed WHERE-fragment [employee0_.region = ? and CASE WHEN employee0_.company is null THEN 0 WHEN employee0_.company = 'JBoss' THEN 1 ELSE 2 END=1]
14:19:21,568 DEBUG QueryNode:73 - getWhereClause() : Creating a new WHERE clause...
14:19:21,568 DEBUG JoinProcessor:175 - Using FROM fragment [left outer join SPerson minions1_ on employee0_.person_id=minions1_.mgr_id and minions1_.region = :region.userRegion]
14:19:21,568 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (SPerson)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'employee0_.person_id as person1_0_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=SPerson,tableAlias=employee0_,origin=null,columns={,className=org.hibernate.test.subclassfilter.Employee}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'minions1_.person_id as person1_0_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.subclassfilter.Employee.minions,tableName=SPerson,tableAlias=minions1_,origin=SPerson employee0_,columns={employee0_.person_id ,className=org.hibernate.test.subclassfilter.Employee}}}
    |  +-[SQL_TOKEN] SqlFragment: 'employee0_.name as name0_0_, employee0_.company as company0_0_, employee0_.region as region0_0_, employee0_.title as title0_0_, employee0_.dept as dept0_0_, employee0_.mgr_id as mgr7_0_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'minions1_.name as name0_1_, minions1_.company as company0_1_, minions1_.region as region0_1_, minions1_.title as title0_1_, minions1_.dept as dept0_1_, minions1_.mgr_id as mgr7_0_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'minions1_.mgr_id as mgr7_0_0__, minions1_.person_id as person1_0_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[p], fromElementByTableAlias=[minions1_, employee0_], fromElementsByPath=[p.minions], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'SPerson employee0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=SPerson,tableAlias=employee0_,origin=null,columns={,className=org.hibernate.test.subclassfilter.Employee}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join SPerson minions1_ on employee0_.person_id=minions1_.mgr_id and minions1_.region = ?' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.subclassfilter.Employee.minions,tableName=SPerson,tableAlias=minions1_,origin=SPerson employee0_,columns={employee0_.person_id ,className=org.hibernate.test.subclassfilter.Employee}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[FILTERS] SqlNode: '{filter conditions}'
          \-[SQL_TOKEN] SqlFragment: 'employee0_.region = ? and CASE WHEN employee0_.company is null THEN 0 WHEN employee0_.company = 'JBoss' THEN 1 ELSE 2 END=1'

14:19:21,577 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,577 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.subclassfilter.Employee as p left join fetch p.minions
14:19:21,577 DEBUG QueryTranslatorImpl:236 - SQL: select employee0_.person_id as person1_0_0_, minions1_.person_id as person1_0_1_, employee0_.name as name0_0_, employee0_.company as company0_0_, employee0_.region as region0_0_, employee0_.title as title0_0_, employee0_.dept as dept0_0_, employee0_.mgr_id as mgr7_0_0_, minions1_.name as name0_1_, minions1_.company as company0_1_, minions1_.region as region0_1_, minions1_.title as title0_1_, minions1_.dept as dept0_1_, minions1_.mgr_id as mgr7_0_1_, minions1_.mgr_id as mgr7_0_0__, minions1_.person_id as person1_0_0__ from SPerson employee0_ left outer join SPerson minions1_ on employee0_.person_id=minions1_.mgr_id and minions1_.region = ? where employee0_.region = ? and CASE WHEN employee0_.company is null THEN 0 WHEN employee0_.company = 'JBoss' THEN 1 ELSE 2 END=1
14:19:21,577 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,577 DEBUG SQL:104 - 
    select
        employee0_.person_id as person1_0_0_,
        minions1_.person_id as person1_0_1_,
        employee0_.name as name0_0_,
        employee0_.company as company0_0_,
        employee0_.region as region0_0_,
        employee0_.title as title0_0_,
        employee0_.dept as dept0_0_,
        employee0_.mgr_id as mgr7_0_0_,
        minions1_.name as name0_1_,
        minions1_.company as company0_1_,
        minions1_.region as region0_1_,
        minions1_.title as title0_1_,
        minions1_.dept as dept0_1_,
        minions1_.mgr_id as mgr7_0_1_,
        minions1_.mgr_id as mgr7_0_0__,
        minions1_.person_id as person1_0_0__ 
    from
        SPerson employee0_ 
    left outer join
        SPerson minions1_ 
            on employee0_.person_id=minions1_.mgr_id 
            and minions1_.region = ? 
    where
        employee0_.region = ? 
        and CASE 
            WHEN employee0_.company is null THEN 0 
            WHEN employee0_.company = 'JBoss' THEN 1 
            ELSE 2 
        END=1
14:19:21,580 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.subclassfilter.Customer where contactOwner is not null
14:19:21,581 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'subclassfilter'
    |        \-[IDENT] Node: 'Customer'
    \-[WHERE] Node: 'where'
       \-[IS_NOT_NULL] Node: 'is not null'
          \-[IDENT] Node: 'contactOwner'

14:19:21,581 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,594 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.subclassfilter.Customer (<no alias>) -> customer0_
14:19:21,595 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:19:21,595 DEBUG DotNode:599 - getDataType() : contactOwner -> org.hibernate.type.ManyToOneType(org.hibernate.test.subclassfilter.Employee)
14:19:21,595 DEBUG DotNode:562 - dereferenceShortcut() : property contactOwner in org.hibernate.test.subclassfilter.Customer does not require a join.
14:19:21,595 DEBUG DotNode:588 - Terminal propertyPath = [contactOwner]
14:19:21,595 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.contactOwner -> contactOwner
14:19:21,596 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (SPerson)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'SPerson' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=SPerson,tableAlias=customer0_,origin=null,columns={,className=org.hibernate.test.subclassfilter.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: '{and}'
          +-[SQL_TOKEN] SqlFragment: 'CASE WHEN company is null THEN 0 WHEN company = 'JBoss' THEN 1 ELSE 2 END=2'
          \-[IS_NOT_NULL] IsNotNullLogicOperatorNode: 'is not null'
             \-[DOT] DotNode: 'contactOwner' {propertyName=contactOwner,dereferenceType=0,propertyPath=contactOwner,path={synthetic-alias}.contactOwner,tableAlias=customer0_,className=org.hibernate.test.subclassfilter.Customer,classAlias=null}
                +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
                \-[IDENT] IdentNode: 'contactOwner' {originalText=contactOwner}

14:19:21,596 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,596 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,596 DEBUG SQL:104 - 
    delete 
    from
        SPerson 
    where
        CASE 
            WHEN company is null THEN 0 
            WHEN company = 'JBoss' THEN 1 
            ELSE 2 
        END=2 
        and (
            contactOwner is not null
        )
14:19:21,607 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.subclassfilter.Employee where manager is not null
14:19:21,608 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'subclassfilter'
    |        \-[IDENT] Node: 'Employee'
    \-[WHERE] Node: 'where'
       \-[IS_NOT_NULL] Node: 'is not null'
          \-[IDENT] Node: 'manager'

14:19:21,608 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,608 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.subclassfilter.Employee (<no alias>) -> employee0_
14:19:21,608 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:19:21,608 DEBUG DotNode:599 - getDataType() : manager -> org.hibernate.type.ManyToOneType(org.hibernate.test.subclassfilter.Employee)
14:19:21,608 DEBUG DotNode:562 - dereferenceShortcut() : property manager in org.hibernate.test.subclassfilter.Employee does not require a join.
14:19:21,608 DEBUG DotNode:588 - Terminal propertyPath = [manager]
14:19:21,609 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.manager -> mgr_id
14:19:21,609 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (SPerson)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'SPerson' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=SPerson,tableAlias=employee0_,origin=null,columns={,className=org.hibernate.test.subclassfilter.Employee}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: '{and}'
          +-[SQL_TOKEN] SqlFragment: 'CASE WHEN company is null THEN 0 WHEN company = 'JBoss' THEN 1 ELSE 2 END=1'
          \-[IS_NOT_NULL] IsNotNullLogicOperatorNode: 'is not null'
             \-[DOT] DotNode: 'mgr_id' {propertyName=manager,dereferenceType=0,propertyPath=manager,path={synthetic-alias}.manager,tableAlias=employee0_,className=org.hibernate.test.subclassfilter.Employee,classAlias=null}
                +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
                \-[IDENT] IdentNode: 'manager' {originalText=manager}

14:19:21,609 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,609 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,609 DEBUG SQL:104 - 
    delete 
    from
        SPerson 
    where
        CASE 
            WHEN company is null THEN 0 
            WHEN company = 'JBoss' THEN 1 
            ELSE 2 
        END=1 
        and (
            mgr_id is not null
        )
14:19:21,630 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.subclassfilter.Person
14:19:21,631 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'subclassfilter'
             \-[IDENT] Node: 'Person'

14:19:21,631 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,631 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.subclassfilter.Person (<no alias>) -> person0_
14:19:21,631 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (SPerson)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[person0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'SPerson' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=SPerson,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.subclassfilter.Person}}

14:19:21,640 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,640 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,640 DEBUG SQL:104 - 
    delete 
    from
        SPerson
14:19:21,641  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:19:21,641 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:19:21,641 DEBUG SQL:104 - 
    alter table SPerson 
        drop constraint FKB4EDBD8842E7F3F8
14:19:21,642 DEBUG SQL:104 - 
    alter table SPerson 
        drop constraint FKB4EDBD88D01561E9
14:19:21,642 DEBUG SQL:104 - 
    drop table SPerson if exists
14:19:21,642  INFO SchemaExport:405 - HHH000230: Schema export complete
14:19:21,642  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
