<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" hostname="dhcp-10.15.208.168.stl.redhat.com" name="org.hibernate.test.idclass.IdClassTest" tests="1" time="0.079" timestamp="2013-02-28T20:14:01">
  <properties />
  <testcase classname="org.hibernate.test.idclass.IdClassTest" name="testIdClass" time="0.013" />
  <system-out><![CDATA[14:14:01,173  INFO CustomRunner:132 - BeforeClass: org.hibernate.test.idclass.IdClassTest
14:14:01,175  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/idclass/Customer.hbm.xml
14:14:01,219  WARN RootClass:288 - HHH000038: Composite-id class does not override equals(): org.hibernate.test.idclass.CustomerId
14:14:01,219  WARN RootClass:289 - HHH000039: Composite-id class does not override hashCode(): org.hibernate.test.idclass.CustomerId
14:14:01,219  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:14:01,219  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:14:01,220  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:14:01,220  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:14:01,220  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:14:01,222  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:14:01,222  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:14:01,223  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:14:01,223  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:14:01,223  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:14:01,232  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:14:01,232 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:14:01,233 DEBUG SQL:104 - 
    drop table Customer if exists
14:14:01,233 DEBUG SQL:104 - 
    create table Customer (
        org_name varchar(255) not null,
        cust_name varchar(255) not null,
        disc varchar(255) not null,
        address varchar(255),
        primary key (org_name, cust_name)
    )
14:14:01,233  INFO SchemaExport:405 - HHH000230: Schema export complete
14:14:01,233  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:14:01,234  INFO CustomRunner:139 - Test: testIdClass
14:14:01,236 DEBUG SQL:104 - 
    insert 
    into
        Customer
        (address, disc, org_name, cust_name) 
    values
        (?, 'org.hibernate.test.idclass.FavoriteCustomer', ?, ?)
14:14:01,237 DEBUG SQL:104 - 
    select
        customer0_.org_name as org1_0_0_,
        customer0_.cust_name as cust2_0_0_,
        customer0_.address as address0_0_,
        customer0_.disc as disc0_0_ 
    from
        Customer customer0_ 
    where
        customer0_.org_name=? 
        and customer0_.cust_name=?
14:14:01,238 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.idclass.Customer where id.customerName = 'RouteOne'
14:14:01,239 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'org'
    |           |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  \-[IDENT] Node: 'test'
    |           |  \-[IDENT] Node: 'idclass'
    |           \-[IDENT] Node: 'Customer'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'id'
          |  \-[IDENT] Node: 'customerName'
          \-[QUOTED_STRING] Node: ''RouteOne''

14:14:01,239 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:01,239 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.idclass.Customer (<no alias>) -> customer0_
14:14:01,239 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:14:01,239 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.ComponentType@29888d5c
14:14:01,239 DEBUG DotNode:585 - Unresolved property path is now 'id.customerName'
14:14:01,240 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.id -> customer0_.cust_name
14:14:01,240 DEBUG DotNode:599 - getDataType() : id.customerName -> org.hibernate.type.StringType@2dc8de40
14:14:01,240 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.id.customerName -> customer0_.cust_name
14:14:01,240 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Customer customer0_ ) ( where ( = ( customer0_.cust_name ( customer0_.cust_name {synthetic-alias} id ) customerName ) 'RouteOne' ) ) )
14:14:01,240 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:14:01,240 DEBUG JoinProcessor:175 - Using FROM fragment [Customer customer0_]
14:14:01,240 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Customer)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customer0_.org_name as org1_0_, customer0_.cust_name as cust2_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Customer,tableAlias=customer0_,origin=null,columns={,className=org.hibernate.test.idclass.Customer}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.address as address0_, customer0_.disc as disc0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Customer,tableAlias=customer0_,origin=null,columns={,className=org.hibernate.test.idclass.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.cust_name' {propertyName=customerName,dereferenceType=ALL,propertyPath=id.customerName,path={synthetic-alias}.id.customerName,tableAlias=customer0_,className=org.hibernate.test.idclass.Customer,classAlias=null}
          |  +-[DOT] DotNode: 'customer0_.cust_name' {propertyName=customerName,dereferenceType=2,propertyPath=id.customerName,path={synthetic-alias}.id,tableAlias=customer0_,className=org.hibernate.test.idclass.Customer,classAlias=null}
          |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  \-[IDENT] IdentNode: 'id' {originalText=id}
          |  \-[IDENT] IdentNode: 'customerName' {originalText=customerName}
          \-[QUOTED_STRING] LiteralNode: ''RouteOne''

14:14:01,240 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:01,241 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.idclass.Customer where id.customerName = 'RouteOne'
14:14:01,241 DEBUG QueryTranslatorImpl:236 - SQL: select customer0_.org_name as org1_0_, customer0_.cust_name as cust2_0_, customer0_.address as address0_, customer0_.disc as disc0_ from Customer customer0_ where customer0_.cust_name='RouteOne'
14:14:01,241 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:01,241 DEBUG SQL:104 - 
    select
        customer0_.org_name as org1_0_,
        customer0_.cust_name as cust2_0_,
        customer0_.address as address0_,
        customer0_.disc as disc0_ 
    from
        Customer customer0_ 
    where
        customer0_.cust_name='RouteOne'
14:14:01,242 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.idclass.Customer where customerName = 'RouteOne'
14:14:01,242 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'org'
    |           |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  \-[IDENT] Node: 'test'
    |           |  \-[IDENT] Node: 'idclass'
    |           \-[IDENT] Node: 'Customer'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'customerName'
          \-[QUOTED_STRING] Node: ''RouteOne''

14:14:01,242 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:01,243 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.idclass.Customer (<no alias>) -> customer0_
14:14:01,243 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:14:01,243 DEBUG DotNode:599 - getDataType() : customerName -> org.hibernate.type.StringType@2dc8de40
14:14:01,243 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.customerName -> customer0_.cust_name
14:14:01,243 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Customer customer0_ ) ( where ( = ( customer0_.cust_name {synthetic-alias} customerName ) 'RouteOne' ) ) )
14:14:01,243 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:14:01,243 DEBUG JoinProcessor:175 - Using FROM fragment [Customer customer0_]
14:14:01,244 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Customer)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customer0_.org_name as org1_0_, customer0_.cust_name as cust2_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Customer,tableAlias=customer0_,origin=null,columns={,className=org.hibernate.test.idclass.Customer}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.address as address0_, customer0_.disc as disc0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Customer customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Customer,tableAlias=customer0_,origin=null,columns={,className=org.hibernate.test.idclass.Customer}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'customer0_.cust_name' {propertyName=customerName,dereferenceType=ALL,propertyPath=customerName,path={synthetic-alias}.customerName,tableAlias=customer0_,className=org.hibernate.test.idclass.Customer,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'customerName' {originalText=customerName}
          \-[QUOTED_STRING] LiteralNode: ''RouteOne''

14:14:01,244 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:01,244 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.idclass.Customer where customerName = 'RouteOne'
14:14:01,244 DEBUG QueryTranslatorImpl:236 - SQL: select customer0_.org_name as org1_0_, customer0_.cust_name as cust2_0_, customer0_.address as address0_, customer0_.disc as disc0_ from Customer customer0_ where customer0_.cust_name='RouteOne'
14:14:01,244 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:01,244 DEBUG SQL:104 - 
    select
        customer0_.org_name as org1_0_,
        customer0_.cust_name as cust2_0_,
        customer0_.address as address0_,
        customer0_.disc as disc0_ 
    from
        Customer customer0_ 
    where
        customer0_.cust_name='RouteOne'
14:14:01,245 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete from org.hibernate.test.idclass.Customer
14:14:01,246 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'idclass'
             \-[IDENT] Node: 'Customer'

14:14:01,246 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:01,246 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.idclass.Customer (<no alias>) -> customer0_
14:14:01,246 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Customer)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Customer' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Customer,tableAlias=customer0_,origin=null,columns={,className=org.hibernate.test.idclass.Customer}}

14:14:01,246 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:01,246 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:01,247 DEBUG SQL:104 - 
    delete 
    from
        Customer
14:14:01,247  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:14:01,248 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:14:01,248 DEBUG SQL:104 - 
    drop table Customer if exists
14:14:01,248  INFO SchemaExport:405 - HHH000230: Schema export complete
14:14:01,248  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
