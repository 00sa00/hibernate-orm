<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" hostname="dhcp-10.15.208.168.stl.redhat.com" name="org.hibernate.test.id.uuid.sqlrep.sqlchar.UUIDCharTest" tests="1" time="0.089" timestamp="2013-02-28T20:14:00">
  <properties />
  <testcase classname="org.hibernate.test.id.uuid.sqlrep.sqlchar.UUIDCharTest" name="testUsage" time="0.026" />
  <system-out><![CDATA[14:14:00,879  INFO CustomRunner:132 - BeforeClass: org.hibernate.test.id.uuid.sqlrep.sqlchar.UUIDCharTest
14:14:00,881  INFO BasicTypeRegistry:150 - HHH000270: Type registration [uuid-char] overrides previous : org.hibernate.type.UUIDCharType@2055658c
14:14:00,881  INFO BasicTypeRegistry:150 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@40201d86
14:14:00,882  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/id/uuid/sqlrep/Node2.hbm.xml
14:14:00,887  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:14:00,888  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:14:00,888  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:14:00,888  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:14:00,888  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:14:00,889  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:14:00,890  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:14:00,890  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:14:00,891  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:14:00,892  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:14:00,936  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:14:00,937 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:14:00,937 DEBUG SQL:104 - 
    alter table Node 
        drop constraint FK252222E9F4B615
14:14:00,937 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Node drop constraint FK252222E9F4B615
14:14:00,937 ERROR SchemaExport:426 - Table "NODE" not found; SQL statement:

    alter table Node 
        drop constraint FK252222E9F4B615 [42102-145]
14:14:00,938 DEBUG SQL:104 - 
    drop table Node if exists
14:14:00,938 DEBUG SQL:104 - 
    create table Node (
        id varchar(36) not null,
        name varchar(255),
        parent varchar(36),
        primary key (id)
    )
14:14:00,938 DEBUG SQL:104 - 
    alter table Node 
        add constraint FK252222E9F4B615 
        foreign key (parent) 
        references Node
14:14:00,939  INFO SchemaExport:405 - HHH000230: Schema export complete
14:14:00,939  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:14:00,939  INFO CustomRunner:139 - Test: testUsage
14:14:00,945 DEBUG SQL:104 - 
    insert 
    into
        Node
        (name, parent, id) 
    values
        (?, ?, ?)
14:14:00,955 DEBUG SQL:104 - 
    insert 
    into
        Node
        (name, parent, id) 
    values
        (?, ?, ?)
14:14:00,956 DEBUG SQL:104 - 
    select
        node0_.id as id0_0_,
        node0_.name as name0_0_,
        node0_.parent as parent0_0_ 
    from
        Node node0_ 
    where
        node0_.id=?
14:14:00,956 DEBUG SQL:104 - 
    select
        node0_.id as id0_0_,
        node0_.name as name0_0_,
        node0_.parent as parent0_0_ 
    from
        Node node0_ 
    where
        node0_.id=?
14:14:00,957 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.id.uuid.sqlrep.Node n join fetch n.parent where n.parent is not null
14:14:00,960 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     +-[RANGE] Node: 'RANGE'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |     |  |  |  |  |  |  |  \-[IDENT] Node: 'hibernate'
    |     |  |  |  |  |  |  \-[IDENT] Node: 'test'
    |     |  |  |  |  |  \-[IDENT] Node: 'id'
    |     |  |  |  |  \-[IDENT] Node: 'uuid'
    |     |  |  |  \-[IDENT] Node: 'sqlrep'
    |     |  |  \-[IDENT] Node: 'Node'
    |     |  \-[ALIAS] Node: 'n'
    |     \-[JOIN] Node: 'join'
    |        +-[FETCH] Node: 'fetch'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'n'
    |           \-[IDENT] Node: 'parent'
    \-[WHERE] Node: 'where'
       \-[IS_NOT_NULL] Node: 'is not null'
          \-[DOT] Node: '.'
             +-[IDENT] Node: 'n'
             \-[IDENT] Node: 'parent'

14:14:00,960 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:00,960 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.id.uuid.sqlrep.Node (n) -> node0_
14:14:00,961 DEBUG FromReferenceNode:74 - Resolved : n -> node0_.id
14:14:00,961 DEBUG DotNode:599 - getDataType() : parent -> org.hibernate.type.ManyToOneType(org.hibernate.test.id.uuid.sqlrep.Node)
14:14:00,961 DEBUG DotNode:389 - dereferenceEntityJoin() : generating join for parent in org.hibernate.test.id.uuid.sqlrep.Node (<no alias>) parent = [ {null} ]
14:14:00,961 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.id.uuid.sqlrep.Node (<no alias>) -> node1_
14:14:00,961 DEBUG FromClause:282 - addJoinByPathMap() : n.parent -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Node,tableAlias=node1_,origin=Node node0_,columns={node0_.parent ,className=org.hibernate.test.id.uuid.sqlrep.Node}}
14:14:00,962 DEBUG FromReferenceNode:74 - Resolved : n.parent -> node0_.parent
14:14:00,962 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'Node node1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Node,tableAlias=node1_,origin=Node node0_,columns={node0_.parent ,className=org.hibernate.test.id.uuid.sqlrep.Node}}

14:14:00,962 DEBUG FromReferenceNode:74 - Resolved : n -> node0_.id
14:14:00,962 DEBUG DotNode:599 - getDataType() : parent -> org.hibernate.type.ManyToOneType(org.hibernate.test.id.uuid.sqlrep.Node)
14:14:00,962 DEBUG DotNode:562 - dereferenceShortcut() : property parent in org.hibernate.test.id.uuid.sqlrep.Node does not require a join.
14:14:00,962 DEBUG DotNode:588 - Terminal propertyPath = [parent]
14:14:00,962 DEBUG FromReferenceNode:74 - Resolved : n.parent -> node0_.parent
14:14:00,962 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} ( Node node0_ Node node1_ ) ) ( where ( is not null ( node0_.parent node0_.id parent ) ) ) )
14:14:00,963 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:14:00,963 DEBUG JoinProcessor:175 - Using FROM fragment [Node node0_]
14:14:00,963 DEBUG JoinProcessor:175 - Using FROM fragment [inner join Node node1_ on node0_.parent=node1_.id]
14:14:00,963 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Node)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'node0_.id as id0_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=Node,tableAlias=node0_,origin=null,columns={,className=org.hibernate.test.id.uuid.sqlrep.Node}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'node1_.id as id0_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Node,tableAlias=node1_,origin=Node node0_,columns={node0_.parent ,className=org.hibernate.test.id.uuid.sqlrep.Node}}}
    |  +-[SQL_TOKEN] SqlFragment: 'node0_.name as name0_0_, node0_.parent as parent0_0_'
    |  \-[SQL_TOKEN] SqlFragment: 'node1_.name as name0_1_, node1_.parent as parent0_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[n], fromElementByTableAlias=[node1_, node0_], fromElementsByPath=[n.parent], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Node node0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=n,role=null,tableName=Node,tableAlias=node0_,origin=null,columns={,className=org.hibernate.test.id.uuid.sqlrep.Node}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join Node node1_ on node0_.parent=node1_.id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Node,tableAlias=node1_,origin=Node node0_,columns={node0_.parent ,className=org.hibernate.test.id.uuid.sqlrep.Node}}
    \-[WHERE] SqlNode: 'where'
       \-[IS_NOT_NULL] IsNotNullLogicOperatorNode: 'is not null'
          \-[DOT] DotNode: 'node0_.parent' {propertyName=parent,dereferenceType=0,propertyPath=parent,path=n.parent,tableAlias=node0_,className=org.hibernate.test.id.uuid.sqlrep.Node,classAlias=n}
             +-[ALIAS_REF] IdentNode: 'node0_.id' {alias=n, className=org.hibernate.test.id.uuid.sqlrep.Node, tableAlias=node0_}
             \-[IDENT] IdentNode: 'parent' {originalText=parent}

14:14:00,963 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:00,963 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.id.uuid.sqlrep.Node n join fetch n.parent where n.parent is not null
14:14:00,963 DEBUG QueryTranslatorImpl:236 - SQL: select node0_.id as id0_0_, node1_.id as id0_1_, node0_.name as name0_0_, node0_.parent as parent0_0_, node1_.name as name0_1_, node1_.parent as parent0_1_ from Node node0_ inner join Node node1_ on node0_.parent=node1_.id where node0_.parent is not null
14:14:00,963 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:00,964 DEBUG SQL:104 - 
    select
        node0_.id as id0_0_,
        node1_.id as id0_1_,
        node0_.name as name0_0_,
        node0_.parent as parent0_0_,
        node1_.name as name0_1_,
        node1_.parent as parent0_1_ 
    from
        Node node0_ 
    inner join
        Node node1_ 
            on node0_.parent=node1_.id 
    where
        node0_.parent is not null
14:14:00,965 DEBUG SQL:104 - 
    delete 
    from
        Node 
    where
        id=?
14:14:00,965 DEBUG SQL:104 - 
    delete 
    from
        Node 
    where
        id=?
14:14:00,966  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:14:00,966 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:14:00,967 DEBUG SQL:104 - 
    alter table Node 
        drop constraint FK252222E9F4B615
14:14:00,967 DEBUG SQL:104 - 
    drop table Node if exists
14:14:00,967  INFO SchemaExport:405 - HHH000230: Schema export complete
14:14:00,967  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
