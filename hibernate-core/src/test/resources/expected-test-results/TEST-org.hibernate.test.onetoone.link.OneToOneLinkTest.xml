<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" hostname="dhcp-10.15.208.168.stl.redhat.com" name="org.hibernate.test.onetoone.link.OneToOneLinkTest" tests="1" time="0.211" timestamp="2013-02-28T20:17:39">
  <properties />
  <testcase classname="org.hibernate.test.onetoone.link.OneToOneLinkTest" name="testOneToOneViaAssociationTable" time="0.15" />
  <system-out><![CDATA[14:17:39,152  INFO CustomRunner:132 - BeforeClass: org.hibernate.test.onetoone.link.OneToOneLinkTest
14:17:39,154  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/onetoone/link/Person.hbm.xml
14:17:39,163  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:17:39,164  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:17:39,164  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:17:39,164  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:17:39,164  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:17:39,165  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:17:39,165  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:17:39,166  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:17:39,167  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:17:39,167  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:17:39,175  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:17:39,176 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:17:39,176 DEBUG SQL:104 - 
    alter table customerPerson 
        drop constraint FK6CB628D3BFEF6546
14:17:39,176 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table customerPerson drop constraint FK6CB628D3BFEF6546
14:17:39,176 ERROR SchemaExport:426 - Table "CUSTOMERPERSON" not found; SQL statement:

    alter table customerPerson 
        drop constraint FK6CB628D3BFEF6546 [42102-145]
14:17:39,177 DEBUG SQL:104 - 
    alter table customerPerson 
        drop constraint FK6CB628D34A683D8
14:17:39,177 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table customerPerson drop constraint FK6CB628D34A683D8
14:17:39,177 ERROR SchemaExport:426 - Table "CUSTOMERPERSON" not found; SQL statement:

    alter table customerPerson 
        drop constraint FK6CB628D34A683D8 [42102-145]
14:17:39,177 DEBUG SQL:104 - 
    alter table employeePerson 
        drop constraint FK41A333A3BFEF6546
14:17:39,177 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table employeePerson drop constraint FK41A333A3BFEF6546
14:17:39,177 ERROR SchemaExport:426 - Table "EMPLOYEEPERSON" not found; SQL statement:

    alter table employeePerson 
        drop constraint FK41A333A3BFEF6546 [42102-145]
14:17:39,177 DEBUG SQL:104 - 
    alter table employeePerson 
        drop constraint FK41A333A38FEADD78
14:17:39,178 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table employeePerson drop constraint FK41A333A38FEADD78
14:17:39,178 ERROR SchemaExport:426 - Table "EMPLOYEEPERSON" not found; SQL statement:

    alter table employeePerson 
        drop constraint FK41A333A38FEADD78 [42102-145]
14:17:39,178 DEBUG SQL:104 - 
    drop table Customer if exists
14:17:39,178 DEBUG SQL:104 - 
    drop table Employee if exists
14:17:39,178 DEBUG SQL:104 - 
    drop table Person if exists
14:17:39,179 DEBUG SQL:104 - 
    drop table customerPerson if exists
14:17:39,179 DEBUG SQL:104 - 
    drop table employeePerson if exists
14:17:39,179 DEBUG SQL:104 - 
    create table Customer (
        customerId bigint generated by default as identity,
        primary key (customerId)
    )
14:17:39,179 DEBUG SQL:104 - 
    create table Employee (
        employeeId bigint generated by default as identity,
        primary key (employeeId)
    )
14:17:39,180 DEBUG SQL:104 - 
    create table Person (
        name varchar(255) not null,
        dob date,
        primary key (name)
    )
14:17:39,195 DEBUG SQL:104 - 
    create table customerPerson (
        personId varchar(255) not null,
        customerId bigint not null,
        primary key (customerId)
    )
14:17:39,195 DEBUG SQL:104 - 
    create table employeePerson (
        personId varchar(255) not null,
        employeeId bigint not null,
        primary key (employeeId)
    )
14:17:39,195 DEBUG SQL:104 - 
    alter table customerPerson 
        add constraint uc_customerPerson_1 unique (personId)
14:17:39,196 DEBUG SQL:104 - 
    alter table customerPerson 
        add constraint FK6CB628D3BFEF6546 
        foreign key (personId) 
        references Person
14:17:39,196 DEBUG SQL:104 - 
    alter table customerPerson 
        add constraint FK6CB628D34A683D8 
        foreign key (customerId) 
        references Customer
14:17:39,197 DEBUG SQL:104 - 
    alter table employeePerson 
        add constraint uc_employeePerson_1 unique (personId)
14:17:39,197 DEBUG SQL:104 - 
    alter table employeePerson 
        add constraint FK41A333A3BFEF6546 
        foreign key (personId) 
        references Person
14:17:39,197 DEBUG SQL:104 - 
    alter table employeePerson 
        add constraint FK41A333A38FEADD78 
        foreign key (employeeId) 
        references Employee
14:17:39,197  INFO SchemaExport:405 - HHH000230: Schema export complete
14:17:39,198  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:17:39,198  INFO CustomRunner:139 - Test: testOneToOneViaAssociationTable
14:17:39,204 DEBUG SQL:104 - 
    insert 
    into
        Employee
        (employeeId) 
    values
        (null)
14:17:39,205 DEBUG SQL:104 - 
    insert 
    into
        Person
        (dob, name) 
    values
        (?, ?)
14:17:39,205 DEBUG SQL:104 - 
    insert 
    into
        employeePerson
        (personId, employeeId) 
    values
        (?, ?)
14:17:39,206 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.onetoone.link.Employee e where e.person.name like 'Gavin%'
14:17:39,207 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  |  |  \-[IDENT] Node: 'test'
    |        |  |  |  \-[IDENT] Node: 'onetoone'
    |        |  |  \-[IDENT] Node: 'link'
    |        |  \-[IDENT] Node: 'Employee'
    |        \-[ALIAS] Node: 'e'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'e'
          |  |  \-[IDENT] Node: 'person'
          |  \-[IDENT] Node: 'name'
          \-[QUOTED_STRING] Node: ''Gavin%''

14:17:39,226 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:39,227 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.onetoone.link.Employee (e) -> employee0_
14:17:39,227 DEBUG FromReferenceNode:74 - Resolved : e -> employee0_.employeeId
14:17:39,227 DEBUG DotNode:599 - getDataType() : person -> org.hibernate.type.ManyToOneType(org.hibernate.test.onetoone.link.Person)
14:17:39,227 DEBUG DotNode:562 - dereferenceShortcut() : property name in org.hibernate.test.onetoone.link.Employee does not require a join.
14:17:39,227 DEBUG DotNode:585 - Unresolved property path is now 'person.name'
14:17:39,227 DEBUG FromReferenceNode:74 - Resolved : e.person -> employee0_1_.personId
14:17:39,228 DEBUG DotNode:599 - getDataType() : person.name -> org.hibernate.type.StringType@2dc8de40
14:17:39,228 DEBUG FromReferenceNode:74 - Resolved : e.person.name -> employee0_1_.personId
14:17:39,228 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Employee employee0_ ) ( where ( like ( employee0_1_.personId ( employee0_1_.personId employee0_.employeeId person ) name ) 'Gavin%' ) ) )
14:17:39,228 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:17:39,228 DEBUG JoinProcessor:175 - Using FROM fragment [Employee employee0_ left outer join employeePerson employee0_1_ on employee0_.employeeId=employee0_1_.employeeId]
14:17:39,228 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (employeePerson,Employee)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'employee0_.employeeId as employeeId1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=Employee,tableAlias=employee0_,origin=null,columns={,className=org.hibernate.test.onetoone.link.Employee}}}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_1_.personId as personId4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[employee0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Employee employee0_ left outer join employeePerson employee0_1_ on employee0_.employeeId=employee0_1_.employeeId' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=Employee,tableAlias=employee0_,origin=null,columns={,className=org.hibernate.test.onetoone.link.Employee}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'employee0_1_.personId' {propertyName=name,dereferenceType=ALL,propertyPath=person.name,path=e.person.name,tableAlias=employee0_,className=org.hibernate.test.onetoone.link.Employee,classAlias=e}
          |  +-[DOT] DotNode: 'employee0_1_.personId' {propertyName=name,dereferenceType=0,propertyPath=person.name,path=e.person,tableAlias=employee0_,className=org.hibernate.test.onetoone.link.Employee,classAlias=e}
          |  |  +-[ALIAS_REF] IdentNode: 'employee0_.employeeId' {alias=e, className=org.hibernate.test.onetoone.link.Employee, tableAlias=employee0_}
          |  |  \-[IDENT] IdentNode: 'person' {originalText=person}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[QUOTED_STRING] LiteralNode: ''Gavin%''

14:17:39,234 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:39,234 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.onetoone.link.Employee e where e.person.name like 'Gavin%'
14:17:39,234 DEBUG QueryTranslatorImpl:236 - SQL: select employee0_.employeeId as employeeId1_, employee0_1_.personId as personId4_ from Employee employee0_ left outer join employeePerson employee0_1_ on employee0_.employeeId=employee0_1_.employeeId where employee0_1_.personId like 'Gavin%'
14:17:39,235 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:39,235 DEBUG SQL:104 - 
    select
        employee0_.employeeId as employeeId1_,
        employee0_1_.personId as personId4_ 
    from
        Employee employee0_ 
    left outer join
        employeePerson employee0_1_ 
            on employee0_.employeeId=employee0_1_.employeeId 
    where
        employee0_1_.personId like 'Gavin%'
14:17:39,236 DEBUG SQL:104 - 
    select
        person0_.name as name2_0_,
        person0_.dob as dob2_0_,
        person0_1_.employeeId as employeeId4_0_,
        person0_2_.customerId as customerId3_0_ 
    from
        Person person0_ 
    left outer join
        employeePerson person0_1_ 
            on person0_.name=person0_1_.personId 
    left outer join
        customerPerson person0_2_ 
            on person0_.name=person0_2_.personId 
    where
        person0_.name=?
14:17:39,248 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.onetoone.link.Employee e where e.person.dob = :date
14:17:39,249 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  |  |  \-[IDENT] Node: 'test'
    |        |  |  |  \-[IDENT] Node: 'onetoone'
    |        |  |  \-[IDENT] Node: 'link'
    |        |  \-[IDENT] Node: 'Employee'
    |        \-[ALIAS] Node: 'e'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'e'
          |  |  \-[IDENT] Node: 'person'
          |  \-[IDENT] Node: 'dob'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'date'

14:17:39,260 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:39,260 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.onetoone.link.Employee (e) -> employee0_
14:17:39,260 DEBUG FromReferenceNode:74 - Resolved : e -> employee0_.employeeId
14:17:39,261 DEBUG DotNode:599 - getDataType() : person -> org.hibernate.type.ManyToOneType(org.hibernate.test.onetoone.link.Person)
14:17:39,261 DEBUG DotNode:389 - dereferenceEntityJoin() : generating join for person in org.hibernate.test.onetoone.link.Employee (<no alias>) parent = [  ( . ( . employee0_.employeeId person ) dob ) ]
14:17:39,261 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.onetoone.link.Person (<no alias>) -> person1_
14:17:39,261 DEBUG FromClause:282 - addJoinByPathMap() : e.person -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Person,tableAlias=person1_,origin=Employee employee0_,columns={employee0_1_.personId ,className=org.hibernate.test.onetoone.link.Person}}
14:17:39,261 DEBUG FromElementFactory:257 - createEntityJoin() : Implied multi-table entity join
14:17:39,261 DEBUG FromReferenceNode:74 - Resolved : e.person -> employee0_1_.personId
14:17:39,261 DEBUG DotNode:599 - getDataType() : dob -> org.hibernate.type.DateType@126554a2
14:17:39,261 DEBUG FromReferenceNode:74 - Resolved : e.person.dob -> person1_.dob
14:17:39,262 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Employee employee0_ Person person1_ ) ( where ( = ( person1_.dob ( employee0_1_.personId employee0_.employeeId person ) dob ) ? ) ) )
14:17:39,262 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:17:39,262 DEBUG JoinProcessor:175 - Using FROM fragment [Employee employee0_ left outer join employeePerson employee0_1_ on employee0_.employeeId=employee0_1_.employeeId]
14:17:39,262 DEBUG JoinProcessor:175 - Using FROM fragment [Person person1_ left outer join employeePerson person1_1_ on person1_.name=person1_1_.personId left outer join customerPerson person1_2_ on person1_.name=person1_2_.personId]
14:17:39,262 DEBUG SyntheticAndFactory:92 - Using unprocessed WHERE-fragment [employee0_1_.personId=person1_.name]
14:17:39,262 DEBUG SyntheticAndFactory:124 - Using processed WHERE-fragment [employee0_1_.personId=person1_.name]
14:17:39,262 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (customerPerson,employeePerson,Employee,Person)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'employee0_.employeeId as employeeId1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=Employee,tableAlias=employee0_,origin=null,columns={,className=org.hibernate.test.onetoone.link.Employee}}}
    |  \-[SQL_TOKEN] SqlFragment: 'employee0_1_.personId as personId4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[e], fromElementByTableAlias=[employee0_, person1_], fromElementsByPath=[e.person], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'Employee employee0_ left outer join employeePerson employee0_1_ on employee0_.employeeId=employee0_1_.employeeId' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=Employee,tableAlias=employee0_,origin=null,columns={,className=org.hibernate.test.onetoone.link.Employee}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: 'Person person1_ left outer join employeePerson person1_1_ on person1_.name=person1_1_.personId left outer join customerPerson person1_2_ on person1_.name=person1_2_.personId' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Person,tableAlias=person1_,origin=Employee employee0_ left outer join employeePerson employee0_1_ on employee0_.employeeId=employee0_1_.employeeId,columns={employee0_1_.personId ,className=org.hibernate.test.onetoone.link.Person}}
    \-[WHERE] SqlNode: 'where'
       +-[THETA_JOINS] SqlNode: '{theta joins}'
       |  \-[SQL_TOKEN] SqlFragment: 'employee0_1_.personId=person1_.name'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'person1_.dob' {propertyName=dob,dereferenceType=ALL,propertyPath=dob,path=e.person.dob,tableAlias=person1_,className=org.hibernate.test.onetoone.link.Person,classAlias=null}
          |  +-[DOT] DotNode: 'employee0_1_.personId' {propertyName=person,dereferenceType=EOF,propertyPath=person,path=e.person,tableAlias=person1_,className=org.hibernate.test.onetoone.link.Person,classAlias=null}
          |  |  +-[ALIAS_REF] IdentNode: 'employee0_.employeeId' {alias=e, className=org.hibernate.test.onetoone.link.Employee, tableAlias=employee0_}
          |  |  \-[IDENT] IdentNode: 'person' {originalText=person}
          |  \-[IDENT] IdentNode: 'dob' {originalText=dob}
          \-[NAMED_PARAM] ParameterNode: '?' {name=date, expectedType=org.hibernate.type.DateType@126554a2}

14:17:39,267 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:39,267 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.onetoone.link.Employee e where e.person.dob = :date
14:17:39,267 DEBUG QueryTranslatorImpl:236 - SQL: select employee0_.employeeId as employeeId1_, employee0_1_.personId as personId4_ from Employee employee0_ left outer join employeePerson employee0_1_ on employee0_.employeeId=employee0_1_.employeeId cross join Person person1_ left outer join employeePerson person1_1_ on person1_.name=person1_1_.personId left outer join customerPerson person1_2_ on person1_.name=person1_2_.personId where employee0_1_.personId=person1_.name and person1_.dob=?
14:17:39,267 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:39,268 DEBUG SQL:104 - 
    select
        employee0_.employeeId as employeeId1_,
        employee0_1_.personId as personId4_ 
    from
        Employee employee0_ 
    left outer join
        employeePerson employee0_1_ 
            on employee0_.employeeId=employee0_1_.employeeId cross 
    join
        Person person1_ 
    left outer join
        employeePerson person1_1_ 
            on person1_.name=person1_1_.personId 
    left outer join
        customerPerson person1_2_ 
            on person1_.name=person1_2_.personId 
    where
        employee0_1_.personId=person1_.name 
        and person1_.dob=?
14:17:39,278 DEBUG SQL:104 - 
    select
        person0_.name as name2_0_,
        person0_.dob as dob2_0_,
        person0_1_.employeeId as employeeId4_0_,
        person0_2_.customerId as customerId3_0_ 
    from
        Person person0_ 
    left outer join
        employeePerson person0_1_ 
            on person0_.name=person0_1_.personId 
    left outer join
        customerPerson person0_2_ 
            on person0_.name=person0_2_.personId 
    where
        person0_.name=?
14:17:39,279 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.onetoone.link.Employee e join fetch e.person p left join fetch p.customer
14:17:39,280 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          +-[RANGE] Node: 'RANGE'
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[DOT] Node: '.'
          |  |  |  |  |  +-[DOT] Node: '.'
          |  |  |  |  |  |  +-[IDENT] Node: 'org'
          |  |  |  |  |  |  \-[IDENT] Node: 'hibernate'
          |  |  |  |  |  \-[IDENT] Node: 'test'
          |  |  |  |  \-[IDENT] Node: 'onetoone'
          |  |  |  \-[IDENT] Node: 'link'
          |  |  \-[IDENT] Node: 'Employee'
          |  \-[ALIAS] Node: 'e'
          +-[JOIN] Node: 'join'
          |  +-[FETCH] Node: 'fetch'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'e'
          |  |  \-[IDENT] Node: 'person'
          |  \-[ALIAS] Node: 'p'
          \-[JOIN] Node: 'join'
             +-[LEFT] Node: 'left'
             +-[FETCH] Node: 'fetch'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'p'
                \-[IDENT] Node: 'customer'

14:17:39,291 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:39,291 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.onetoone.link.Employee (e) -> employee0_
14:17:39,291 DEBUG FromReferenceNode:74 - Resolved : e -> employee0_.employeeId
14:17:39,292 DEBUG DotNode:599 - getDataType() : person -> org.hibernate.type.ManyToOneType(org.hibernate.test.onetoone.link.Person)
14:17:39,292 DEBUG DotNode:389 - dereferenceEntityJoin() : generating join for person in org.hibernate.test.onetoone.link.Employee (p) parent = [ {null} ]
14:17:39,292 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.onetoone.link.Person (p) -> person1_
14:17:39,292 DEBUG FromClause:282 - addJoinByPathMap() : e.person -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=Person,tableAlias=person1_,origin=Employee employee0_,columns={employee0_1_.personId ,className=org.hibernate.test.onetoone.link.Person}}
14:17:39,292 DEBUG FromReferenceNode:74 - Resolved : e.person -> employee0_1_.personId
14:17:39,292 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'Person person1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=Person,tableAlias=person1_,origin=Employee employee0_,columns={employee0_1_.personId ,className=org.hibernate.test.onetoone.link.Person}}

14:17:39,292 DEBUG FromReferenceNode:74 - Resolved : p -> person1_.name
14:17:39,293 DEBUG DotNode:599 - getDataType() : customer -> org.hibernate.type.ManyToOneType(org.hibernate.test.onetoone.link.Customer)
14:17:39,293 DEBUG DotNode:389 - dereferenceEntityJoin() : generating join for customer in org.hibernate.test.onetoone.link.Person (<no alias>) parent = [ {null} ]
14:17:39,293 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.onetoone.link.Customer (<no alias>) -> customer2_
14:17:39,293 DEBUG FromClause:282 - addJoinByPathMap() : p.customer -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Customer,tableAlias=customer2_,origin=Person person1_,columns={person1_2_.customerId ,className=org.hibernate.test.onetoone.link.Customer}}
14:17:39,293 DEBUG FromReferenceNode:74 - Resolved : p.customer -> person1_2_.customerId
14:17:39,293 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'Customer customer2_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Customer,tableAlias=customer2_,origin=Person person1_,columns={person1_2_.customerId ,className=org.hibernate.test.onetoone.link.Customer}}

14:17:39,293 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} ( Employee employee0_ ( Person person1_ Customer customer2_ ) ) ) )
14:17:39,293 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:17:39,294 DEBUG JoinProcessor:175 - Using FROM fragment [Employee employee0_ left outer join employeePerson employee0_1_ on employee0_.employeeId=employee0_1_.employeeId]
14:17:39,294 DEBUG JoinProcessor:175 - Using FROM fragment [inner join Person person1_ on employee0_1_.personId=person1_.name left outer join employeePerson person1_1_ on person1_.name=person1_1_.personId left outer join customerPerson person1_2_ on person1_.name=person1_2_.personId]
14:17:39,294 DEBUG JoinProcessor:175 - Using FROM fragment [left outer join Customer customer2_ on person1_2_.customerId=customer2_.customerId left outer join customerPerson customer2_1_ on customer2_.customerId=customer2_1_.customerId]
14:17:39,294 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Customer,customerPerson,employeePerson,Employee,Person)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'employee0_.employeeId as employeeId1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=Employee,tableAlias=employee0_,origin=null,columns={,className=org.hibernate.test.onetoone.link.Employee}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'person1_.name as name2_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=Person,tableAlias=person1_,origin=Employee employee0_ left outer join employeePerson employee0_1_ on employee0_.employeeId=employee0_1_.employeeId,columns={employee0_1_.personId ,className=org.hibernate.test.onetoone.link.Person}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customer2_.customerId as customerId0_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Customer,tableAlias=customer2_,origin=inner join Person person1_ on employee0_1_.personId=person1_.name left outer join employeePerson person1_1_ on person1_.name=person1_1_.personId left outer join customerPerson person1_2_ on person1_.name=person1_2_.personId,columns={person1_2_.customerId ,className=org.hibernate.test.onetoone.link.Customer}}}
    |  +-[SQL_TOKEN] SqlFragment: 'employee0_1_.personId as personId4_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'person1_.dob as dob2_1_, person1_1_.employeeId as employeeId4_1_, person1_2_.customerId as customerId3_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'customer2_1_.personId as personId3_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[e, p], fromElementByTableAlias=[customer2_, employee0_, person1_], fromElementsByPath=[e.person, p.customer], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Employee employee0_ left outer join employeePerson employee0_1_ on employee0_.employeeId=employee0_1_.employeeId' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=Employee,tableAlias=employee0_,origin=null,columns={,className=org.hibernate.test.onetoone.link.Employee}}
          \-[JOIN_FRAGMENT] FromElement: 'inner join Person person1_ on employee0_1_.personId=person1_.name left outer join employeePerson person1_1_ on person1_.name=person1_1_.personId left outer join customerPerson person1_2_ on person1_.name=person1_2_.personId' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=Person,tableAlias=person1_,origin=Employee employee0_ left outer join employeePerson employee0_1_ on employee0_.employeeId=employee0_1_.employeeId,columns={employee0_1_.personId ,className=org.hibernate.test.onetoone.link.Person}}
             \-[JOIN_FRAGMENT] FromElement: 'left outer join Customer customer2_ on person1_2_.customerId=customer2_.customerId left outer join customerPerson customer2_1_ on customer2_.customerId=customer2_1_.customerId' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Customer,tableAlias=customer2_,origin=inner join Person person1_ on employee0_1_.personId=person1_.name left outer join employeePerson person1_1_ on person1_.name=person1_1_.personId left outer join customerPerson person1_2_ on person1_.name=person1_2_.personId,columns={person1_2_.customerId ,className=org.hibernate.test.onetoone.link.Customer}}

14:17:39,301 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:39,302 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.onetoone.link.Employee e join fetch e.person p left join fetch p.customer
14:17:39,302 DEBUG QueryTranslatorImpl:236 - SQL: select employee0_.employeeId as employeeId1_0_, person1_.name as name2_1_, customer2_.customerId as customerId0_2_, employee0_1_.personId as personId4_0_, person1_.dob as dob2_1_, person1_1_.employeeId as employeeId4_1_, person1_2_.customerId as customerId3_1_, customer2_1_.personId as personId3_2_ from Employee employee0_ left outer join employeePerson employee0_1_ on employee0_.employeeId=employee0_1_.employeeId inner join Person person1_ on employee0_1_.personId=person1_.name left outer join employeePerson person1_1_ on person1_.name=person1_1_.personId left outer join customerPerson person1_2_ on person1_.name=person1_2_.personId left outer join Customer customer2_ on person1_2_.customerId=customer2_.customerId left outer join customerPerson customer2_1_ on customer2_.customerId=customer2_1_.customerId
14:17:39,302 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:39,302 DEBUG SQL:104 - 
    select
        employee0_.employeeId as employeeId1_0_,
        person1_.name as name2_1_,
        customer2_.customerId as customerId0_2_,
        employee0_1_.personId as personId4_0_,
        person1_.dob as dob2_1_,
        person1_1_.employeeId as employeeId4_1_,
        person1_2_.customerId as customerId3_1_,
        customer2_1_.personId as personId3_2_ 
    from
        Employee employee0_ 
    left outer join
        employeePerson employee0_1_ 
            on employee0_.employeeId=employee0_1_.employeeId 
    inner join
        Person person1_ 
            on employee0_1_.personId=person1_.name 
    left outer join
        employeePerson person1_1_ 
            on person1_.name=person1_1_.personId 
    left outer join
        customerPerson person1_2_ 
            on person1_.name=person1_2_.personId 
    left outer join
        Customer customer2_ 
            on person1_2_.customerId=customer2_.customerId 
    left outer join
        customerPerson customer2_1_ 
            on customer2_.customerId=customer2_1_.customerId
14:17:39,325 DEBUG SQL:104 - 
    insert 
    into
        Customer
        (customerId) 
    values
        (null)
14:17:39,325 DEBUG SQL:104 - 
    insert 
    into
        customerPerson
        (personId, customerId) 
    values
        (?, ?)
14:17:39,326 DEBUG SQL:104 - 
    select
        employee0_.employeeId as employeeId1_0_,
        person1_.name as name2_1_,
        customer2_.customerId as customerId0_2_,
        employee0_1_.personId as personId4_0_,
        person1_.dob as dob2_1_,
        person1_1_.employeeId as employeeId4_1_,
        person1_2_.customerId as customerId3_1_,
        customer2_1_.personId as personId3_2_ 
    from
        Employee employee0_ 
    left outer join
        employeePerson employee0_1_ 
            on employee0_.employeeId=employee0_1_.employeeId 
    inner join
        Person person1_ 
            on employee0_1_.personId=person1_.name 
    left outer join
        employeePerson person1_1_ 
            on person1_.name=person1_1_.personId 
    left outer join
        customerPerson person1_2_ 
            on person1_.name=person1_2_.personId 
    left outer join
        Customer customer2_ 
            on person1_2_.customerId=customer2_.customerId 
    left outer join
        customerPerson customer2_1_ 
            on customer2_.customerId=customer2_1_.customerId
14:17:39,337 DEBUG SQL:104 - 
    delete 
    from
        customerPerson 
    where
        customerId=?
14:17:39,337 DEBUG SQL:104 - 
    delete 
    from
        employeePerson 
    where
        employeeId=?
14:17:39,337 DEBUG SQL:104 - 
    delete 
    from
        Employee 
    where
        employeeId=?
14:17:39,347 DEBUG SQL:104 - 
    delete 
    from
        Person 
    where
        name=?
14:17:39,347 DEBUG SQL:104 - 
    delete 
    from
        customerPerson 
    where
        customerId=?
14:17:39,347 DEBUG SQL:104 - 
    delete 
    from
        Customer 
    where
        customerId=?
14:17:39,348  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:17:39,348 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:17:39,349 DEBUG SQL:104 - 
    alter table customerPerson 
        drop constraint FK6CB628D3BFEF6546
14:17:39,349 DEBUG SQL:104 - 
    alter table customerPerson 
        drop constraint FK6CB628D34A683D8
14:17:39,349 DEBUG SQL:104 - 
    alter table employeePerson 
        drop constraint FK41A333A3BFEF6546
14:17:39,359 DEBUG SQL:104 - 
    alter table employeePerson 
        drop constraint FK41A333A38FEADD78
14:17:39,359 DEBUG SQL:104 - 
    drop table Customer if exists
14:17:39,360 DEBUG SQL:104 - 
    drop table Employee if exists
14:17:39,360 DEBUG SQL:104 - 
    drop table Person if exists
14:17:39,360 DEBUG SQL:104 - 
    drop table customerPerson if exists
14:17:39,360 DEBUG SQL:104 - 
    drop table employeePerson if exists
14:17:39,360  INFO SchemaExport:405 - HHH000230: Schema export complete
14:17:39,361  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
