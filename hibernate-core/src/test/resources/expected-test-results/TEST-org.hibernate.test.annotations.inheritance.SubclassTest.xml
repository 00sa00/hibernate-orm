<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" hostname="dhcp-10.15.208.168.stl.redhat.com" name="org.hibernate.test.annotations.inheritance.SubclassTest" tests="4" time="0.293" timestamp="2013-02-28T20:10:31">
  <properties />
  <testcase classname="org.hibernate.test.annotations.inheritance.SubclassTest" name="test2ndLevelSubClass" time="0.083" />
  <testcase classname="org.hibernate.test.annotations.inheritance.SubclassTest" name="testEmbeddedSuperclass" time="0.012" />
  <testcase classname="org.hibernate.test.annotations.inheritance.SubclassTest" name="testFormula" time="0.064" />
  <testcase classname="org.hibernate.test.annotations.inheritance.SubclassTest" name="testPolymorphism" time="0.038" />
  <system-out><![CDATA[14:10:31,740  INFO CustomRunner:132 - BeforeClass: org.hibernate.test.annotations.inheritance.SubclassTest
14:10:31,750  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:10:31,755  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:10:31,755  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:10:31,755  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:10:31,756  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:10:31,757  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:10:31,757  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:10:31,757  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:10:31,758  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:10:31,758  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:10:31,807  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:10:31,808 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:10:31,808 DEBUG SQL:104 - 
    drop table Fruit if exists
14:10:31,808 DEBUG SQL:104 - 
    drop table Music if exists
14:10:31,808 DEBUG SQL:104 - 
    drop table Plane if exists
14:10:31,809 DEBUG SQL:104 - 
    drop sequence hibernate_sequence
14:10:31,809 ERROR SchemaExport:425 - HHH000389: Unsuccessful: drop sequence hibernate_sequence
14:10:31,809 ERROR SchemaExport:426 - Sequence "HIBERNATE_SEQUENCE" not found; SQL statement:

    drop sequence hibernate_sequence [90036-145]
14:10:31,809 DEBUG SQL:104 - 
    create table Fruit (
        DTYPE varchar(31) not null,
        id integer not null,
        primary key (id)
    )
14:10:31,809 DEBUG SQL:104 - 
    create table Music (
        id integer not null,
        avgBeat integer not null,
        zik_type integer,
        starred integer,
        primary key (id)
    )
14:10:31,810 DEBUG SQL:104 - 
    create table Plane (
        planetype varchar(100) not null,
        id bigint not null,
        alive boolean not null,
        fld_altitude integer,
        color varchar(255) not null,
        serialnbr varchar(255),
        nbrOfSeats integer not null,
        javaEmbeddedVersion varchar(255),
        primary key (id)
    )
14:10:31,810 DEBUG SQL:104 - 
    alter table Music 
        add constraint UK_Music_1 unique (avgBeat, starred)
14:10:31,810 DEBUG SQL:104 - 
    create sequence hibernate_sequence start with 1 increment by 1
14:10:31,810  INFO SchemaExport:405 - HHH000230: Schema export complete
14:10:31,811  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:10:31,812 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.annotations.Plane where id = :id
14:10:31,813 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'org'
    |           |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  \-[IDENT] Node: 'test'
    |           |  \-[IDENT] Node: 'annotations'
    |           \-[IDENT] Node: 'Plane'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

14:10:31,813 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:31,814 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.annotations.Plane (<no alias>) -> plane0_
14:10:31,814 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:10:31,814 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.LongType@4bf3f9d
14:10:31,814 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.id -> plane0_.id
14:10:31,814 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Plane plane0_ ) ( where ( = ( plane0_.id {synthetic-alias} id ) ? ) ) )
14:10:31,814 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:10:31,815 DEBUG JoinProcessor:175 - Using FROM fragment [Plane plane0_]
14:10:31,815 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Plane)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'plane0_.id as id2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Plane,tableAlias=plane0_,origin=null,columns={,className=org.hibernate.test.annotations.Plane}}}
    |  \-[SQL_TOKEN] SqlFragment: 'plane0_.alive as alive2_, plane0_.fld_altitude as fld4_2_, plane0_.color as color2_, plane0_.serialnbr as serialnbr2_, plane0_.nbrOfSeats as nbrOfSeats2_, plane0_.javaEmbeddedVersion as javaEmbe8_2_, plane0_.planetype as planetype2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[plane0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Plane plane0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Plane,tableAlias=plane0_,origin=null,columns={,className=org.hibernate.test.annotations.Plane}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'plane0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path={synthetic-alias}.id,tableAlias=plane0_,className=org.hibernate.test.annotations.Plane,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.LongType@4bf3f9d}

14:10:31,820 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:31,822 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.annotations.Plane where id = :id
14:10:31,822 DEBUG QueryTranslatorImpl:236 - SQL: select plane0_.id as id2_, plane0_.alive as alive2_, plane0_.fld_altitude as fld4_2_, plane0_.color as color2_, plane0_.serialnbr as serialnbr2_, plane0_.nbrOfSeats as nbrOfSeats2_, plane0_.javaEmbeddedVersion as javaEmbe8_2_, plane0_.planetype as planetype2_ from Plane plane0_ where plane0_.id=?
14:10:31,822 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:31,822  INFO CustomRunner:139 - Test: test2ndLevelSubClass
14:10:31,823 DEBUG SQL:104 - 
    call next value for hibernate_sequence
14:10:31,826 DEBUG SQL:104 - 
    insert 
    into
        Plane
        (alive, fld_altitude, color, serialnbr, nbrOfSeats, javaEmbeddedVersion, planetype, id) 
    values
        (?, ?, ?, ?, ?, ?, 'A320b', ?)
14:10:31,827 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.annotations.A320 as a where a.javaEmbeddedVersion = :version
14:10:31,828 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  |  \-[IDENT] Node: 'test'
    |        |  |  \-[IDENT] Node: 'annotations'
    |        |  \-[IDENT] Node: 'A320'
    |        \-[ALIAS] Node: 'a'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'a'
          |  \-[IDENT] Node: 'javaEmbeddedVersion'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'version'

14:10:31,839 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:31,840 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.annotations.A320 (a) -> a320x0_
14:10:31,840 DEBUG FromReferenceNode:74 - Resolved : a -> a320x0_.id
14:10:31,840 DEBUG DotNode:599 - getDataType() : javaEmbeddedVersion -> org.hibernate.type.StringType@2dc8de40
14:10:31,840 DEBUG FromReferenceNode:74 - Resolved : a.javaEmbeddedVersion -> a320x0_.javaEmbeddedVersion
14:10:31,841 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Plane a320x0_ ) ( where ( = ( a320x0_.javaEmbeddedVersion a320x0_.id javaEmbeddedVersion ) ? ) ) )
14:10:31,841 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:10:31,841 DEBUG JoinProcessor:175 - Using FROM fragment [Plane a320x0_]
14:10:31,841 DEBUG SyntheticAndFactory:92 - Using unprocessed WHERE-fragment [a320x0_.planetype in ('A320', 'A320b')]
14:10:31,841 DEBUG SyntheticAndFactory:124 - Using processed WHERE-fragment [a320x0_.planetype in ('A320', 'A320b')]
14:10:31,842 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Plane)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'a320x0_.id as id2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Plane,tableAlias=a320x0_,origin=null,columns={,className=org.hibernate.test.annotations.A320}}}
    |  \-[SQL_TOKEN] SqlFragment: 'a320x0_.alive as alive2_, a320x0_.fld_altitude as fld4_2_, a320x0_.color as color2_, a320x0_.serialnbr as serialnbr2_, a320x0_.nbrOfSeats as nbrOfSeats2_, a320x0_.javaEmbeddedVersion as javaEmbe8_2_, a320x0_.planetype as planetype2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[a320x0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Plane a320x0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Plane,tableAlias=a320x0_,origin=null,columns={,className=org.hibernate.test.annotations.A320}}
    \-[WHERE] SqlNode: 'where'
       +-[FILTERS] SqlNode: '{filter conditions}'
       |  \-[SQL_TOKEN] SqlFragment: 'a320x0_.planetype in ('A320', 'A320b')'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'a320x0_.javaEmbeddedVersion' {propertyName=javaEmbeddedVersion,dereferenceType=ALL,propertyPath=javaEmbeddedVersion,path=a.javaEmbeddedVersion,tableAlias=a320x0_,className=org.hibernate.test.annotations.A320,classAlias=a}
          |  +-[ALIAS_REF] IdentNode: 'a320x0_.id' {alias=a, className=org.hibernate.test.annotations.A320, tableAlias=a320x0_}
          |  \-[IDENT] IdentNode: 'javaEmbeddedVersion' {originalText=javaEmbeddedVersion}
          \-[NAMED_PARAM] ParameterNode: '?' {name=version, expectedType=org.hibernate.type.StringType@2dc8de40}

14:10:31,843 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:31,843 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.annotations.A320 as a where a.javaEmbeddedVersion = :version
14:10:31,875 DEBUG QueryTranslatorImpl:236 - SQL: select a320x0_.id as id2_, a320x0_.alive as alive2_, a320x0_.fld_altitude as fld4_2_, a320x0_.color as color2_, a320x0_.serialnbr as serialnbr2_, a320x0_.nbrOfSeats as nbrOfSeats2_, a320x0_.javaEmbeddedVersion as javaEmbe8_2_, a320x0_.planetype as planetype2_ from Plane a320x0_ where a320x0_.planetype in ('A320', 'A320b') and a320x0_.javaEmbeddedVersion=?
14:10:31,876 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:31,876 DEBUG SQL:104 - 
    select
        a320x0_.id as id2_,
        a320x0_.alive as alive2_,
        a320x0_.fld_altitude as fld4_2_,
        a320x0_.color as color2_,
        a320x0_.serialnbr as serialnbr2_,
        a320x0_.nbrOfSeats as nbrOfSeats2_,
        a320x0_.javaEmbeddedVersion as javaEmbe8_2_,
        a320x0_.planetype as planetype2_ 
    from
        Plane a320x0_ 
    where
        a320x0_.planetype in (
            'A320', 'A320b'
        ) 
        and a320x0_.javaEmbeddedVersion=?
14:10:31,880 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete from org.hibernate.test.annotations.Plane
14:10:31,881 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'annotations'
             \-[IDENT] Node: 'Plane'

14:10:31,888 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:31,888 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.annotations.Plane (<no alias>) -> plane0_
14:10:31,889 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Plane)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[plane0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Plane' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Plane,tableAlias=plane0_,origin=null,columns={,className=org.hibernate.test.annotations.Plane}}

14:10:31,889 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:31,889 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:31,889 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete from org.hibernate.test.annotations.inheritance.singletable.Music
14:10:31,890 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'org'
             |  |  |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  |  |  \-[IDENT] Node: 'test'
             |  |  |  \-[IDENT] Node: 'annotations'
             |  |  \-[IDENT] Node: 'inheritance'
             |  \-[IDENT] Node: 'singletable'
             \-[IDENT] Node: 'Music'

14:10:31,890 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:31,890 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.annotations.inheritance.singletable.Music (<no alias>) -> music0_
14:10:31,891 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Music)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[music0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Music' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Music,tableAlias=music0_,origin=null,columns={,className=org.hibernate.test.annotations.inheritance.singletable.Music}}

14:10:31,891 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:31,891 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:31,891 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete from org.hibernate.test.annotations.inheritance.Fruit
14:10:31,892 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[IDENT] Node: 'org'
             |  |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  |  \-[IDENT] Node: 'test'
             |  |  \-[IDENT] Node: 'annotations'
             |  \-[IDENT] Node: 'inheritance'
             \-[IDENT] Node: 'Fruit'

14:10:31,892 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:31,892 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.annotations.inheritance.Fruit (<no alias>) -> fruit0_
14:10:31,893 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Fruit)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[fruit0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Fruit' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Fruit,tableAlias=fruit0_,origin=null,columns={,className=org.hibernate.test.annotations.inheritance.Fruit}}

14:10:31,903 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:31,903 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:31,904  WARN HQLQueryPlan:278 - HHH000245: Manipulation query [delete from java.lang.Object] resulted in [3] split queries
14:10:31,904 DEBUG SQL:104 - 
    delete 
    from
        Plane
14:10:31,904 DEBUG SQL:104 - 
    delete 
    from
        Music
14:10:31,905 DEBUG SQL:104 - 
    delete 
    from
        Fruit
14:10:31,905  INFO CustomRunner:139 - Test: testEmbeddedSuperclass
14:10:31,906 DEBUG SQL:104 - 
    call next value for hibernate_sequence
14:10:31,907 DEBUG SQL:104 - 
    insert 
    into
        Plane
        (alive, fld_altitude, color, serialnbr, nbrOfSeats, planetype, id) 
    values
        (?, ?, ?, ?, ?, 'Plane', ?)
14:10:31,914 DEBUG SQL:104 - 
    select
        plane0_.id as id2_0_,
        plane0_.alive as alive2_0_,
        plane0_.fld_altitude as fld4_2_0_,
        plane0_.color as color2_0_,
        plane0_.serialnbr as serialnbr2_0_,
        plane0_.nbrOfSeats as nbrOfSeats2_0_,
        plane0_.javaEmbeddedVersion as javaEmbe8_2_0_,
        plane0_.planetype as planetype2_0_ 
    from
        Plane plane0_ 
    where
        plane0_.id=?
14:10:31,916 DEBUG SQL:104 - 
    delete 
    from
        Plane 
    where
        id=?
14:10:31,917  WARN HQLQueryPlan:278 - HHH000245: Manipulation query [delete from java.lang.Object] resulted in [3] split queries
14:10:31,917 DEBUG SQL:104 - 
    delete 
    from
        Plane
14:10:31,917 DEBUG SQL:104 - 
    delete 
    from
        Music
14:10:31,917 DEBUG SQL:104 - 
    delete 
    from
        Fruit
14:10:31,918  INFO CustomRunner:139 - Test: testFormula
14:10:31,922 DEBUG SQL:104 - 
    call next value for hibernate_sequence
14:10:31,923 DEBUG SQL:104 - 
    call next value for hibernate_sequence
14:10:31,924 DEBUG SQL:104 - 
    insert 
    into
        Music
        (avgBeat, zik_type, id) 
    values
        (?, ?, ?)
14:10:31,942 DEBUG SQL:104 - 
    insert 
    into
        Music
        (avgBeat, zik_type, id) 
    values
        (?, ?, ?)
14:10:31,943 DEBUG SQL:104 - 
    select
        this_.id as id1_0_,
        this_.avgBeat as avgBeat1_0_,
        this_.zik_type as zik3_1_0_ 
    from
        Music this_ 
    where
        case 
            when this_.zik_type is null then 0 
            else this_.zik_type 
        end=0
14:10:31,975 DEBUG SQL:104 - 
    delete 
    from
        Music 
    where
        id=?
14:10:31,976 DEBUG SQL:104 - 
    select
        this_.id as id1_0_,
        this_.avgBeat as avgBeat1_0_,
        this_.zik_type as zik3_1_0_ 
    from
        Music this_ 
    where
        case 
            when this_.zik_type is null then 0 
            else this_.zik_type 
        end=2
14:10:31,976 DEBUG SQL:104 - 
    delete 
    from
        Music 
    where
        id=?
14:10:31,977 DEBUG SQL:104 - 
    select
        this_.id as id1_0_,
        this_.avgBeat as avgBeat1_0_,
        this_.zik_type as zik3_1_0_,
        this_.starred as starred1_0_ 
    from
        Music this_ 
    where
        case 
            when this_.zik_type is null then 0 
            else this_.zik_type 
        end=1
14:10:31,978  WARN HQLQueryPlan:278 - HHH000245: Manipulation query [delete from java.lang.Object] resulted in [3] split queries
14:10:31,978 DEBUG SQL:104 - 
    delete 
    from
        Plane
14:10:31,981 DEBUG SQL:104 - 
    delete 
    from
        Music
14:10:31,981 DEBUG SQL:104 - 
    delete 
    from
        Fruit
14:10:31,982  INFO CustomRunner:139 - Test: testPolymorphism
14:10:31,983 DEBUG SQL:104 - 
    call next value for hibernate_sequence
14:10:31,983 DEBUG SQL:104 - 
    call next value for hibernate_sequence
14:10:31,984 DEBUG SQL:104 - 
    insert 
    into
        Plane
        (alive, fld_altitude, color, serialnbr, nbrOfSeats, javaEmbeddedVersion, planetype, id) 
    values
        (?, ?, ?, ?, ?, ?, 'A320', ?)
14:10:31,984 DEBUG SQL:104 - 
    insert 
    into
        Plane
        (alive, fld_altitude, color, serialnbr, nbrOfSeats, planetype, id) 
    values
        (?, ?, ?, ?, ?, 'Plane', ?)
14:10:31,991 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.annotations.A320
14:10:31,992 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'annotations'
                \-[IDENT] Node: 'A320'

14:10:31,992 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:31,992 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.annotations.A320 (<no alias>) -> a320x0_
14:10:31,992 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Plane a320x0_ ) )
14:10:31,992 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:10:31,993 DEBUG JoinProcessor:175 - Using FROM fragment [Plane a320x0_]
14:10:31,993 DEBUG SyntheticAndFactory:92 - Using unprocessed WHERE-fragment [a320x0_.planetype in ('A320', 'A320b')]
14:10:31,993 DEBUG SyntheticAndFactory:124 - Using processed WHERE-fragment [a320x0_.planetype in ('A320', 'A320b')]
14:10:31,993 DEBUG QueryNode:73 - getWhereClause() : Creating a new WHERE clause...
14:10:31,993 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Plane)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'a320x0_.id as id2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Plane,tableAlias=a320x0_,origin=null,columns={,className=org.hibernate.test.annotations.A320}}}
    |  \-[SQL_TOKEN] SqlFragment: 'a320x0_.alive as alive2_, a320x0_.fld_altitude as fld4_2_, a320x0_.color as color2_, a320x0_.serialnbr as serialnbr2_, a320x0_.nbrOfSeats as nbrOfSeats2_, a320x0_.javaEmbeddedVersion as javaEmbe8_2_, a320x0_.planetype as planetype2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[a320x0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Plane a320x0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Plane,tableAlias=a320x0_,origin=null,columns={,className=org.hibernate.test.annotations.A320}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[FILTERS] SqlNode: '{filter conditions}'
          \-[SQL_TOKEN] SqlFragment: 'a320x0_.planetype in ('A320', 'A320b')'

14:10:32,003 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:32,003 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.annotations.A320
14:10:32,003 DEBUG QueryTranslatorImpl:236 - SQL: select a320x0_.id as id2_, a320x0_.alive as alive2_, a320x0_.fld_altitude as fld4_2_, a320x0_.color as color2_, a320x0_.serialnbr as serialnbr2_, a320x0_.nbrOfSeats as nbrOfSeats2_, a320x0_.javaEmbeddedVersion as javaEmbe8_2_, a320x0_.planetype as planetype2_ from Plane a320x0_ where a320x0_.planetype in ('A320', 'A320b')
14:10:32,003 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:32,004 DEBUG SQL:104 - 
    select
        a320x0_.id as id2_,
        a320x0_.alive as alive2_,
        a320x0_.fld_altitude as fld4_2_,
        a320x0_.color as color2_,
        a320x0_.serialnbr as serialnbr2_,
        a320x0_.nbrOfSeats as nbrOfSeats2_,
        a320x0_.javaEmbeddedVersion as javaEmbe8_2_,
        a320x0_.planetype as planetype2_ 
    from
        Plane a320x0_ 
    where
        a320x0_.planetype in (
            'A320', 'A320b'
        )
14:10:32,005 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.annotations.Plane
14:10:32,006 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'annotations'
                \-[IDENT] Node: 'Plane'

14:10:32,015 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:32,016 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.annotations.Plane (<no alias>) -> plane0_
14:10:32,016 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Plane plane0_ ) )
14:10:32,016 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:10:32,016 DEBUG JoinProcessor:175 - Using FROM fragment [Plane plane0_]
14:10:32,017 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Plane)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'plane0_.id as id2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Plane,tableAlias=plane0_,origin=null,columns={,className=org.hibernate.test.annotations.Plane}}}
    |  \-[SQL_TOKEN] SqlFragment: 'plane0_.alive as alive2_, plane0_.fld_altitude as fld4_2_, plane0_.color as color2_, plane0_.serialnbr as serialnbr2_, plane0_.nbrOfSeats as nbrOfSeats2_, plane0_.javaEmbeddedVersion as javaEmbe8_2_, plane0_.planetype as planetype2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[plane0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Plane plane0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Plane,tableAlias=plane0_,origin=null,columns={,className=org.hibernate.test.annotations.Plane}}

14:10:32,017 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:32,017 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.annotations.Plane
14:10:32,017 DEBUG QueryTranslatorImpl:236 - SQL: select plane0_.id as id2_, plane0_.alive as alive2_, plane0_.fld_altitude as fld4_2_, plane0_.color as color2_, plane0_.serialnbr as serialnbr2_, plane0_.nbrOfSeats as nbrOfSeats2_, plane0_.javaEmbeddedVersion as javaEmbe8_2_, plane0_.planetype as planetype2_ from Plane plane0_
14:10:32,017 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:32,017 DEBUG SQL:104 - 
    select
        plane0_.id as id2_,
        plane0_.alive as alive2_,
        plane0_.fld_altitude as fld4_2_,
        plane0_.color as color2_,
        plane0_.serialnbr as serialnbr2_,
        plane0_.nbrOfSeats as nbrOfSeats2_,
        plane0_.javaEmbeddedVersion as javaEmbe8_2_,
        plane0_.planetype as planetype2_ 
    from
        Plane plane0_
14:10:32,018  WARN HQLQueryPlan:278 - HHH000245: Manipulation query [delete from java.lang.Object] resulted in [3] split queries
14:10:32,018 DEBUG SQL:104 - 
    delete 
    from
        Plane
14:10:32,019 DEBUG SQL:104 - 
    delete 
    from
        Music
14:10:32,019 DEBUG SQL:104 - 
    delete 
    from
        Fruit
14:10:32,020  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:10:32,021 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:10:32,021 DEBUG SQL:104 - 
    drop table Fruit if exists
14:10:32,021 DEBUG SQL:104 - 
    drop table Music if exists
14:10:32,022 DEBUG SQL:104 - 
    drop table Plane if exists
14:10:32,030 DEBUG SQL:104 - 
    drop sequence hibernate_sequence
14:10:32,030  INFO SchemaExport:405 - HHH000230: Schema export complete
14:10:32,030  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
