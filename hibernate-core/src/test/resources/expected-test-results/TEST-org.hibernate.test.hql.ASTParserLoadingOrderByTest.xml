<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" hostname="dhcp-10.15.208.168.stl.redhat.com" name="org.hibernate.test.hql.ASTParserLoadingOrderByTest" tests="9" time="3.081" timestamp="2013-02-28T20:12:33">
  <properties />
  <testcase classname="org.hibernate.test.hql.ASTParserLoadingOrderByTest" name="testOrderByAggregatedArgAliasRef" time="0.217" />
  <testcase classname="org.hibernate.test.hql.ASTParserLoadingOrderByTest" name="testOrderByComponentDescNoSelectAliasRef" time="0.283" />
  <testcase classname="org.hibernate.test.hql.ASTParserLoadingOrderByTest" name="testOrderByComponentDescSelectAliasRefFailureExpected" time="0.268" />
  <testcase classname="org.hibernate.test.hql.ASTParserLoadingOrderByTest" name="testOrderByEntityWithFetchJoinedCollection" time="0.205" />
  <testcase classname="org.hibernate.test.hql.ASTParserLoadingOrderByTest" name="testOrderByNoSelectAliasRef" time="0.606" />
  <testcase classname="org.hibernate.test.hql.ASTParserLoadingOrderByTest" name="testOrderByOnJoinedSubclassPropertyWhoseColumnIsNotInDrivingTable" time="0.014" />
  <testcase classname="org.hibernate.test.hql.ASTParserLoadingOrderByTest" name="testOrderBySelectAliasRef" time="0.709" />
  <testcase classname="org.hibernate.test.hql.ASTParserLoadingOrderByTest" name="testOrderBySelectNewArgAliasRef" time="0.221" />
  <testcase classname="org.hibernate.test.hql.ASTParserLoadingOrderByTest" name="testOrderBySelectNewMapArgAliasRef" time="0.249" />
  <system-out><![CDATA[14:12:33,554  INFO CustomRunner:132 - BeforeClass: org.hibernate.test.hql.ASTParserLoadingOrderByTest
14:12:33,556  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/hql/Animal.hbm.xml
14:12:33,579  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:12:33,580  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:12:33,580  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:12:33,580  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:12:33,580  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:12:33,581  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:12:33,582  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:12:33,582  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:12:33,582  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:12:33,583  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:12:33,630  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:12:33,631 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:12:33,631 DEBUG SQL:104 - 
    alter table Animal 
        drop constraint FK752A7A1C1F3964B4
14:12:33,631 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Animal drop constraint FK752A7A1C1F3964B4
14:12:33,631 ERROR SchemaExport:426 - Table "ANIMAL" not found; SQL statement:

    alter table Animal 
        drop constraint FK752A7A1C1F3964B4 [42102-145]
14:12:33,631 DEBUG SQL:104 - 
    alter table Animal 
        drop constraint FK752A7A1C6309E77B
14:12:33,631 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Animal drop constraint FK752A7A1C6309E77B
14:12:33,631 ERROR SchemaExport:426 - Table "ANIMAL" not found; SQL statement:

    alter table Animal 
        drop constraint FK752A7A1C6309E77B [42102-145]
14:12:33,632 DEBUG SQL:104 - 
    alter table Animal 
        drop constraint FK752A7A1C4B485C79
14:12:33,632 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Animal drop constraint FK752A7A1C4B485C79
14:12:33,632 ERROR SchemaExport:426 - Table "ANIMAL" not found; SQL statement:

    alter table Animal 
        drop constraint FK752A7A1C4B485C79 [42102-145]
14:12:33,632 DEBUG SQL:104 - 
    alter table Cat 
        drop constraint FK107B66D384BBA
14:12:33,632 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Cat drop constraint FK107B66D384BBA
14:12:33,632 ERROR SchemaExport:426 - Table "CAT" not found; SQL statement:

    alter table Cat 
        drop constraint FK107B66D384BBA [42102-145]
14:12:33,632 DEBUG SQL:104 - 
    alter table Dog 
        drop constraint FK10D1C6D384BBA
14:12:33,633 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Dog drop constraint FK10D1C6D384BBA
14:12:33,633 ERROR SchemaExport:426 - Table "DOG" not found; SQL statement:

    alter table Dog 
        drop constraint FK10D1C6D384BBA [42102-145]
14:12:33,633 DEBUG SQL:104 - 
    alter table DomesticAnimal 
        drop constraint FKE02638DA1733655F
14:12:33,633 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table DomesticAnimal drop constraint FKE02638DA1733655F
14:12:33,633 ERROR SchemaExport:426 - Table "DOMESTICANIMAL" not found; SQL statement:

    alter table DomesticAnimal 
        drop constraint FKE02638DA1733655F [42102-145]
14:12:33,633 DEBUG SQL:104 - 
    alter table DomesticAnimal 
        drop constraint FKE02638DA6C03411F
14:12:33,633 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table DomesticAnimal drop constraint FKE02638DA6C03411F
14:12:33,633 ERROR SchemaExport:426 - Table "DOMESTICANIMAL" not found; SQL statement:

    alter table DomesticAnimal 
        drop constraint FKE02638DA6C03411F [42102-145]
14:12:33,634 DEBUG SQL:104 - 
    alter table Human 
        drop constraint FK42D710D1733655F
14:12:33,645 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Human drop constraint FK42D710D1733655F
14:12:33,646 ERROR SchemaExport:426 - Table "HUMAN" not found; SQL statement:

    alter table Human 
        drop constraint FK42D710D1733655F [42102-145]
14:12:33,646 DEBUG SQL:104 - 
    alter table Human_family 
        drop constraint FK5F790ED61DCB1311
14:12:33,646 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Human_family drop constraint FK5F790ED61DCB1311
14:12:33,646 ERROR SchemaExport:426 - Table "HUMAN_FAMILY" not found; SQL statement:

    alter table Human_family 
        drop constraint FK5F790ED61DCB1311 [42102-145]
14:12:33,646 DEBUG SQL:104 - 
    alter table Human_family 
        drop constraint FK5F790ED61DCB1310
14:12:33,646 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Human_family drop constraint FK5F790ED61DCB1310
14:12:33,646 ERROR SchemaExport:426 - Table "HUMAN_FAMILY" not found; SQL statement:

    alter table Human_family 
        drop constraint FK5F790ED61DCB1310 [42102-145]
14:12:33,647 DEBUG SQL:104 - 
    alter table Human_friends 
        drop constraint FKAC7104631DCB1311
14:12:33,647 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Human_friends drop constraint FKAC7104631DCB1311
14:12:33,647 ERROR SchemaExport:426 - Table "HUMAN_FRIENDS" not found; SQL statement:

    alter table Human_friends 
        drop constraint FKAC7104631DCB1311 [42102-145]
14:12:33,647 DEBUG SQL:104 - 
    alter table Human_friends 
        drop constraint FKAC7104631DCB1310
14:12:33,647 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Human_friends drop constraint FKAC7104631DCB1310
14:12:33,648 ERROR SchemaExport:426 - Table "HUMAN_FRIENDS" not found; SQL statement:

    alter table Human_friends 
        drop constraint FKAC7104631DCB1310 [42102-145]
14:12:33,648 DEBUG SQL:104 - 
    alter table JOINED 
        drop constraint FK82C23B49534E0F13
14:12:33,648 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table JOINED drop constraint FK82C23B49534E0F13
14:12:33,648 ERROR SchemaExport:426 - Table "JOINED" not found; SQL statement:

    alter table JOINED 
        drop constraint FK82C23B49534E0F13 [42102-145]
14:12:33,648 DEBUG SQL:104 - 
    alter table Lizard 
        drop constraint FK87B0E2B6EE398315
14:12:33,648 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Lizard drop constraint FK87B0E2B6EE398315
14:12:33,649 ERROR SchemaExport:426 - Table "LIZARD" not found; SQL statement:

    alter table Lizard 
        drop constraint FK87B0E2B6EE398315 [42102-145]
14:12:33,649 DEBUG SQL:104 - 
    alter table Mammal 
        drop constraint FK88EF417FEFA9D699
14:12:33,649 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Mammal drop constraint FK88EF417FEFA9D699
14:12:33,649 ERROR SchemaExport:426 - Table "MAMMAL" not found; SQL statement:

    alter table Mammal 
        drop constraint FK88EF417FEFA9D699 [42102-145]
14:12:33,662 DEBUG SQL:104 - 
    alter table Mammal 
        drop constraint FK88EF417FCE6EEE98
14:12:33,662 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Mammal drop constraint FK88EF417FCE6EEE98
14:12:33,663 ERROR SchemaExport:426 - Table "MAMMAL" not found; SQL statement:

    alter table Mammal 
        drop constraint FK88EF417FCE6EEE98 [42102-145]
14:12:33,663 DEBUG SQL:104 - 
    alter table Reptile 
        drop constraint FKA4790CABEFA9D699
14:12:33,663 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Reptile drop constraint FKA4790CABEFA9D699
14:12:33,663 ERROR SchemaExport:426 - Table "REPTILE" not found; SQL statement:

    alter table Reptile 
        drop constraint FKA4790CABEFA9D699 [42102-145]
14:12:33,663 DEBUG SQL:104 - 
    alter table Zoo 
        drop constraint FK15FBA55106523
14:12:33,663 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Zoo drop constraint FK15FBA55106523
14:12:33,664 ERROR SchemaExport:426 - Table "ZOO" not found; SQL statement:

    alter table Zoo 
        drop constraint FK15FBA55106523 [42102-145]
14:12:33,664 DEBUG SQL:104 - 
    alter table Zoo_directors 
        drop constraint FK2D21982265B0D719
14:12:33,673 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Zoo_directors drop constraint FK2D21982265B0D719
14:12:33,673 ERROR SchemaExport:426 - Table "ZOO_DIRECTORS" not found; SQL statement:

    alter table Zoo_directors 
        drop constraint FK2D21982265B0D719 [42102-145]
14:12:33,673 DEBUG SQL:104 - 
    alter table Zoo_directors 
        drop constraint FK2D219822C590D705
14:12:33,674 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Zoo_directors drop constraint FK2D219822C590D705
14:12:33,674 ERROR SchemaExport:426 - Table "ZOO_DIRECTORS" not found; SQL statement:

    alter table Zoo_directors 
        drop constraint FK2D219822C590D705 [42102-145]
14:12:33,674 DEBUG SQL:104 - 
    alter table "User_permissions" 
        drop constraint FKB4582A30F2810CD2
14:12:33,674 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table "User_permissions" drop constraint FKB4582A30F2810CD2
14:12:33,674 ERROR SchemaExport:426 - Table "User_permissions" not found; SQL statement:

    alter table "User_permissions" 
        drop constraint FKB4582A30F2810CD2 [42102-145]
14:12:33,674 DEBUG SQL:104 - 
    alter table "User" 
        drop constraint FK285FEB65AF5B87
14:12:33,674 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table "User" drop constraint FK285FEB65AF5B87
14:12:33,675 ERROR SchemaExport:426 - Table "User" not found; SQL statement:

    alter table "User" 
        drop constraint FK285FEB65AF5B87 [42102-145]
14:12:33,675 DEBUG SQL:104 - 
    alter table addresses 
        drop constraint FK34207BA255106523
14:12:33,675 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table addresses drop constraint FK34207BA255106523
14:12:33,675 ERROR SchemaExport:426 - Table "ADDRESSES" not found; SQL statement:

    alter table addresses 
        drop constraint FK34207BA255106523 [42102-145]
14:12:33,675 DEBUG SQL:104 - 
    alter table addresses 
        drop constraint FK34207BA26B9FAF99
14:12:33,675 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table addresses drop constraint FK34207BA26B9FAF99
14:12:33,675 ERROR SchemaExport:426 - Table "ADDRESSES" not found; SQL statement:

    alter table addresses 
        drop constraint FK34207BA26B9FAF99 [42102-145]
14:12:33,695 DEBUG SQL:104 - 
    alter table human_nick_names 
        drop constraint FK8718E1BE6B9FAF99
14:12:33,696 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table human_nick_names drop constraint FK8718E1BE6B9FAF99
14:12:33,696 ERROR SchemaExport:426 - Table "HUMAN_NICK_NAMES" not found; SQL statement:

    alter table human_nick_names 
        drop constraint FK8718E1BE6B9FAF99 [42102-145]
14:12:33,696 DEBUG SQL:104 - 
    drop table Animal if exists
14:12:33,696 DEBUG SQL:104 - 
    drop table Cat if exists
14:12:33,697 DEBUG SQL:104 - 
    drop table Dog if exists
14:12:33,697 DEBUG SQL:104 - 
    drop table DomesticAnimal if exists
14:12:33,697 DEBUG SQL:104 - 
    drop table Human if exists
14:12:33,697 DEBUG SQL:104 - 
    drop table Human_family if exists
14:12:33,697 DEBUG SQL:104 - 
    drop table Human_friends if exists
14:12:33,697 DEBUG SQL:104 - 
    drop table JOINED if exists
14:12:33,697 DEBUG SQL:104 - 
    drop table Joiner if exists
14:12:33,706 DEBUG SQL:104 - 
    drop table Lizard if exists
14:12:33,706 DEBUG SQL:104 - 
    drop table Mammal if exists
14:12:33,706 DEBUG SQL:104 - 
    drop table Reptile if exists
14:12:33,706 DEBUG SQL:104 - 
    drop table StateProvince if exists
14:12:33,707 DEBUG SQL:104 - 
    drop table Zoo if exists
14:12:33,707 DEBUG SQL:104 - 
    drop table Zoo_directors if exists
14:12:33,707 DEBUG SQL:104 - 
    drop table "User_permissions" if exists
14:12:33,707 DEBUG SQL:104 - 
    drop table "User" if exists
14:12:33,707 DEBUG SQL:104 - 
    drop table addresses if exists
14:12:33,707 DEBUG SQL:104 - 
    drop table human_nick_names if exists
14:12:33,708 DEBUG SQL:104 - 
    create table Animal (
        id bigint generated by default as identity,
        description varchar(255),
        body_weight float,
        mother_id bigint,
        father_id bigint,
        zoo_id bigint,
        serialNumber varchar(255),
        primary key (id)
    )
14:12:33,717 DEBUG SQL:104 - 
    create table Cat (
        mammal bigint not null,
        primary key (mammal)
    )
14:12:33,718 DEBUG SQL:104 - 
    create table Dog (
        mammal bigint not null,
        primary key (mammal)
    )
14:12:33,718 DEBUG SQL:104 - 
    create table DomesticAnimal (
        mammal bigint not null,
        owner bigint,
        primary key (mammal)
    )
14:12:33,718 DEBUG SQL:104 - 
    create table Human (
        mammal bigint not null,
        name_first varchar(255),
        name_initial char(255),
        name_last varchar(255),
        nickName varchar(255),
        height_centimeters double not null,
        intValue integer,
        floatValue float,
        bigDecimalValue decimal(19,2),
        bigIntegerValue decimal(19,2),
        primary key (mammal)
    )
14:12:33,726 DEBUG SQL:104 - 
    create table Human_family (
        human1 bigint not null,
        human2 bigint not null,
        relationship varchar(255) not null,
        primary key (human1, relationship)
    )
14:12:33,726 DEBUG SQL:104 - 
    create table Human_friends (
        human1 bigint not null,
        human2 bigint not null
    )
14:12:33,727 DEBUG SQL:104 - 
    create table JOINED (
        ID bigint not null,
        joinedName varchar(255),
        primary key (ID)
    )
14:12:33,727 DEBUG SQL:104 - 
    create table Joiner (
        id bigint generated by default as identity,
        name varchar(255),
        primary key (id)
    )
14:12:33,737 DEBUG SQL:104 - 
    create table Lizard (
        reptile bigint not null,
        primary key (reptile)
    )
14:12:33,737 DEBUG SQL:104 - 
    create table Mammal (
        animal bigint not null,
        pregnant boolean,
        birthdate date,
        mammalZoo_id bigint,
        name varchar(255),
        primary key (animal)
    )
14:12:33,737 DEBUG SQL:104 - 
    create table Reptile (
        animal bigint not null,
        bodyTemperature float,
        primary key (animal)
    )
14:12:33,738 DEBUG SQL:104 - 
    create table StateProvince (
        id bigint generated by default as identity,
        name varchar(255),
        isoCode varchar(255),
        primary key (id)
    )
14:12:33,738 DEBUG SQL:104 - 
    create table Zoo (
        id bigint generated by default as identity,
        zooType char(255) not null,
        name varchar(255),
        classification tinyint,
        street varchar(255),
        city varchar(255),
        postalCode varchar(255),
        country varchar(255),
        state_prov_id bigint,
        primary key (id)
    )
14:12:33,748 DEBUG SQL:104 - 
    create table Zoo_directors (
        directorZoo_id bigint not null,
        elt bigint not null,
        title varchar(255) not null,
        primary key (directorZoo_id, title)
    )
14:12:33,748 DEBUG SQL:104 - 
    create table "User_permissions" (
        userId bigint not null,
        permissionName varchar(255),
        permissionId integer not null,
        primary key (userId, permissionId)
    )
14:12:33,748 DEBUG SQL:104 - 
    create table "User" (
        id bigint not null,
        userName varchar(255),
        primary key (id)
    )
14:12:33,757 DEBUG SQL:104 - 
    create table addresses (
        human bigint not null,
        street varchar(255),
        city varchar(255),
        postalCode varchar(255),
        country varchar(255),
        state_prov_id bigint,
        "type" varchar(255) not null,
        primary key (human, "type")
    )
14:12:33,758 DEBUG SQL:104 - 
    create table human_nick_names (
        human bigint not null,
        nick_name varchar(255) not null,
        primary key (human, nick_name)
    )
14:12:33,758 DEBUG SQL:104 - 
    alter table Animal 
        add constraint FK752A7A1C1F3964B4 
        foreign key (mother_id) 
        references Animal
14:12:33,759 DEBUG SQL:104 - 
    alter table Animal 
        add constraint FK752A7A1C6309E77B 
        foreign key (father_id) 
        references Animal
14:12:33,759 DEBUG SQL:104 - 
    alter table Animal 
        add constraint FK752A7A1C4B485C79 
        foreign key (zoo_id) 
        references Zoo
14:12:33,769 DEBUG SQL:104 - 
    alter table Cat 
        add constraint FK107B66D384BBA 
        foreign key (mammal) 
        references DomesticAnimal
14:12:33,770 DEBUG SQL:104 - 
    alter table Dog 
        add constraint FK10D1C6D384BBA 
        foreign key (mammal) 
        references DomesticAnimal
14:12:33,770 DEBUG SQL:104 - 
    alter table DomesticAnimal 
        add constraint FKE02638DA1733655F 
        foreign key (mammal) 
        references Mammal
14:12:33,771 DEBUG SQL:104 - 
    alter table DomesticAnimal 
        add constraint FKE02638DA6C03411F 
        foreign key (owner) 
        references Human
14:12:33,771 DEBUG SQL:104 - 
    alter table Human 
        add constraint FK42D710D1733655F 
        foreign key (mammal) 
        references Mammal
14:12:33,772 DEBUG SQL:104 - 
    alter table Human_family 
        add constraint FK5F790ED61DCB1311 
        foreign key (human2) 
        references Human
14:12:33,772 DEBUG SQL:104 - 
    alter table Human_family 
        add constraint FK5F790ED61DCB1310 
        foreign key (human1) 
        references Human
14:12:33,773 DEBUG SQL:104 - 
    alter table Human_friends 
        add constraint FKAC7104631DCB1311 
        foreign key (human2) 
        references Human
14:12:33,773 DEBUG SQL:104 - 
    alter table Human_friends 
        add constraint FKAC7104631DCB1310 
        foreign key (human1) 
        references Human
14:12:33,774 DEBUG SQL:104 - 
    alter table JOINED 
        add constraint FK82C23B49534E0F13 
        foreign key (ID) 
        references Joiner
14:12:33,774 DEBUG SQL:104 - 
    alter table Lizard 
        add constraint FK87B0E2B6EE398315 
        foreign key (reptile) 
        references Reptile
14:12:33,782 DEBUG SQL:104 - 
    alter table Mammal 
        add constraint FK88EF417FEFA9D699 
        foreign key (animal) 
        references Animal
14:12:33,782 DEBUG SQL:104 - 
    alter table Mammal 
        add constraint FK88EF417FCE6EEE98 
        foreign key (mammalZoo_id) 
        references Zoo
14:12:33,783 DEBUG SQL:104 - 
    alter table Reptile 
        add constraint FKA4790CABEFA9D699 
        foreign key (animal) 
        references Animal
14:12:33,783 DEBUG SQL:104 - 
    alter table Zoo 
        add constraint FK15FBA55106523 
        foreign key (state_prov_id) 
        references StateProvince
14:12:33,784 DEBUG SQL:104 - 
    alter table Zoo_directors 
        add constraint FK2D21982265B0D719 
        foreign key (elt) 
        references Human
14:12:33,784 DEBUG SQL:104 - 
    alter table Zoo_directors 
        add constraint FK2D219822C590D705 
        foreign key (directorZoo_id) 
        references Zoo
14:12:33,793 DEBUG SQL:104 - 
    alter table "User_permissions" 
        add constraint FKB4582A30F2810CD2 
        foreign key (userId) 
        references "User"
14:12:33,793 DEBUG SQL:104 - 
    alter table "User" 
        add constraint FK285FEB65AF5B87 
        foreign key (id) 
        references Human
14:12:33,794 DEBUG SQL:104 - 
    alter table addresses 
        add constraint FK34207BA255106523 
        foreign key (state_prov_id) 
        references StateProvince
14:12:33,794 DEBUG SQL:104 - 
    alter table addresses 
        add constraint FK34207BA26B9FAF99 
        foreign key (human) 
        references Human
14:12:33,796 DEBUG SQL:104 - 
    alter table human_nick_names 
        add constraint FK8718E1BE6B9FAF99 
        foreign key (human) 
        references Human
14:12:33,796  INFO SchemaExport:405 - HHH000230: Schema export complete
14:12:33,798  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:12:33,798  INFO CustomRunner:139 - Test: testOrderByAggregatedArgAliasRef
14:12:33,800 DEBUG SQL:104 - 
    insert 
    into
        StateProvince
        (id, name, isoCode) 
    values
        (null, ?, ?)
14:12:33,801 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:12:33,801 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:12:33,819 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:12:33,820 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:12:33,821 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:12:33,821 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:12:33,829 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:12:33,830 DEBUG SQL:104 - 
    insert 
    into
        Human
        (name_first, name_initial, name_last, nickName, height_centimeters, intValue, floatValue, bigDecimalValue, bigIntegerValue, mammal) 
    values
        (?, ?, ?, ?, ? * 2.54E0, ?, ?, ?, ?, ?)
14:12:33,831 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:12:33,832 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:12:33,832 DEBUG SQL:104 - 
    insert 
    into
        Human
        (name_first, name_initial, name_last, nickName, height_centimeters, intValue, floatValue, bigDecimalValue, bigIntegerValue, mammal) 
    values
        (?, ?, ?, ?, ? * 2.54E0, ?, ?, ?, ?, ?)
14:12:33,832 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:12:33,833 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:12:33,833 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:12:33,834 DEBUG SQL:104 - 
    update
        Animal 
    set
        description=?,
        body_weight=?,
        mother_id=?,
        father_id=?,
        zoo_id=?,
        serialNumber=? 
    where
        id=?
14:12:33,835 DEBUG SQL:104 - 
    update
        Animal 
    set
        description=?,
        body_weight=?,
        mother_id=?,
        father_id=?,
        zoo_id=?,
        serialNumber=? 
    where
        id=?
14:12:33,854 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:33,855 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:33,868 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:33,869 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:33,878 DEBUG SQL:104 - 
    update
        Mammal 
    set
        mammalZoo_id=?,
        name=? 
    where
        animal=?
14:12:33,878 DEBUG SQL:104 - 
    insert 
    into
        Zoo_directors
        (directorZoo_id, title, elt) 
    values
        (?, ?, ?)
14:12:33,878 DEBUG SQL:104 - 
    insert 
    into
        Zoo_directors
        (directorZoo_id, title, elt) 
    values
        (?, ?, ?)
14:12:33,879 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select z.name as zname, count(*) as cnt from org.hibernate.test.hql.Zoo z group by z.name order by cnt desc, zname
14:12:33,881 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'hql'
    |  |     |  \-[IDENT] Node: 'Zoo'
    |  |     \-[ALIAS] Node: 'z'
    |  \-[SELECT] Node: 'select'
    |     +-[AS] Node: 'as'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'z'
    |     |  |  \-[IDENT] Node: 'name'
    |     |  \-[IDENT] Node: 'zname'
    |     \-[AS] Node: 'as'
    |        +-[COUNT] Node: 'count'
    |        |  \-[ROW_STAR] Node: '*'
    |        \-[IDENT] Node: 'cnt'
    +-[GROUP] Node: 'group'
    |  \-[DOT] Node: '.'
    |     +-[IDENT] Node: 'z'
    |     \-[IDENT] Node: 'name'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'cnt'
       +-[DESCENDING] Node: 'desc'
       \-[IDENT] Node: 'zname'

14:12:33,892 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:33,893 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z) -> zoo0_
14:12:33,893 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:33,893 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:33,893 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:33,894 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:33,894 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:33,894 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:33,895 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo0_.name zoo0_.id name ) ( count * ) ) ( FromClause{level=1} Zoo zoo0_ ) ( group ( zoo0_.name zoo0_.id name ) ) ( order cnt desc zname ) )
14:12:33,896 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:33,896 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ROW_STAR] SqlNode: '*'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[z], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    +-[GROUP] SqlNode: 'group'
    |  \-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |     +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |     \-[IDENT] IdentNode: 'name' {originalText=name}
    \-[ORDER] OrderByClause: 'order'
       +-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'cnt'
       +-[DESCENDING] SqlNode: 'desc'
       \-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'zname'

14:12:33,896 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:33,896 DEBUG QueryTranslatorImpl:235 - HQL: select z.name as zname, count(*) as cnt from org.hibernate.test.hql.Zoo z group by z.name order by cnt desc, zname
14:12:33,910 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, count(*) as col_1_0_ from Zoo zoo0_ group by zoo0_.name order by col_1_0_ desc, col_0_0_
14:12:33,912 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:33,913 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        count(*) as col_1_0_ 
    from
        Zoo zoo0_ 
    group by
        zoo0_.name 
    order by
        col_1_0_ desc,
        col_0_0_
14:12:33,917 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:33,918 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:33,927 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:33,927 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:33,927 DEBUG SQL:104 - 
    update
        Animal 
    set
        description=?,
        body_weight=?,
        mother_id=?,
        father_id=?,
        zoo_id=?,
        serialNumber=? 
    where
        id=?
14:12:33,950 DEBUG SQL:104 - 
    update
        Animal 
    set
        description=?,
        body_weight=?,
        mother_id=?,
        father_id=?,
        zoo_id=?,
        serialNumber=? 
    where
        id=?
14:12:33,950 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=null 
    where
        mother_id=?
14:12:33,951 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=null 
    where
        mother_id=?
14:12:33,960 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=null 
    where
        mother_id=?
14:12:33,961 DEBUG SQL:104 - 
    delete 
    from
        Human_friends 
    where
        human1=?
14:12:33,961 DEBUG SQL:104 - 
    delete 
    from
        Human_family 
    where
        human1=?
14:12:33,961 DEBUG SQL:104 - 
    delete 
    from
        human_nick_names 
    where
        human=?
14:12:33,961 DEBUG SQL:104 - 
    delete 
    from
        addresses 
    where
        human=?
14:12:33,971 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=null 
    where
        mother_id=?
14:12:33,972 DEBUG SQL:104 - 
    delete 
    from
        Human_friends 
    where
        human1=?
14:12:33,972 DEBUG SQL:104 - 
    delete 
    from
        Human_family 
    where
        human1=?
14:12:33,972 DEBUG SQL:104 - 
    delete 
    from
        human_nick_names 
    where
        human=?
14:12:33,972 DEBUG SQL:104 - 
    delete 
    from
        addresses 
    where
        human=?
14:12:33,982 DEBUG SQL:104 - 
    update
        Mammal 
    set
        mammalZoo_id=null,
        name=null 
    where
        mammalZoo_id=?
14:12:33,982 DEBUG SQL:104 - 
    delete 
    from
        Zoo_directors 
    where
        directorZoo_id=?
14:12:33,983 DEBUG SQL:104 - 
    delete 
    from
        Zoo 
    where
        id=?
14:12:33,983 DEBUG SQL:104 - 
    delete 
    from
        Zoo 
    where
        id=?
14:12:33,983 DEBUG SQL:104 - 
    delete 
    from
        Zoo 
    where
        id=?
14:12:33,992 DEBUG SQL:104 - 
    delete 
    from
        Zoo 
    where
        id=?
14:12:33,992 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        animal=?
14:12:33,993 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        id=?
14:12:33,993 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        animal=?
14:12:33,993 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        id=?
14:12:34,003 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        mammal=?
14:12:34,003 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        animal=?
14:12:34,004 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        id=?
14:12:34,004 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        mammal=?
14:12:34,004 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        animal=?
14:12:34,014 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        id=?
14:12:34,015 DEBUG SQL:104 - 
    delete 
    from
        StateProvince 
    where
        id=?
14:12:34,016  INFO CustomRunner:139 - Test: testOrderByComponentDescNoSelectAliasRef
14:12:34,017 DEBUG SQL:104 - 
    insert 
    into
        StateProvince
        (id, name, isoCode) 
    values
        (null, ?, ?)
14:12:34,018 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:12:34,018 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:12:34,018 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:12:34,018 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:12:34,019 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:12:34,029 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:12:34,029 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:12:34,029 DEBUG SQL:104 - 
    insert 
    into
        Human
        (name_first, name_initial, name_last, nickName, height_centimeters, intValue, floatValue, bigDecimalValue, bigIntegerValue, mammal) 
    values
        (?, ?, ?, ?, ? * 2.54E0, ?, ?, ?, ?, ?)
14:12:34,030 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:12:34,030 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:12:34,039 DEBUG SQL:104 - 
    insert 
    into
        Human
        (name_first, name_initial, name_last, nickName, height_centimeters, intValue, floatValue, bigDecimalValue, bigIntegerValue, mammal) 
    values
        (?, ?, ?, ?, ? * 2.54E0, ?, ?, ?, ?, ?)
14:12:34,040 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:12:34,041 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:12:34,042 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:12:34,043 DEBUG SQL:104 - 
    update
        Animal 
    set
        description=?,
        body_weight=?,
        mother_id=?,
        father_id=?,
        zoo_id=?,
        serialNumber=? 
    where
        id=?
14:12:34,062 DEBUG SQL:104 - 
    update
        Animal 
    set
        description=?,
        body_weight=?,
        mother_id=?,
        father_id=?,
        zoo_id=?,
        serialNumber=? 
    where
        id=?
14:12:34,063 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:34,063 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:34,074 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:34,076 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:34,086 DEBUG SQL:104 - 
    update
        Mammal 
    set
        mammalZoo_id=?,
        name=? 
    where
        animal=?
14:12:34,087 DEBUG SQL:104 - 
    insert 
    into
        Zoo_directors
        (directorZoo_id, title, elt) 
    values
        (?, ?, ?)
14:12:34,087 DEBUG SQL:104 - 
    insert 
    into
        Zoo_directors
        (directorZoo_id, title, elt) 
    values
        (?, ?, ?)
14:12:34,089 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select z.name, z.address from org.hibernate.test.hql.Zoo z order by z.address DESC, z.name DESC
14:12:34,090 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'hql'
    |  |     |  \-[IDENT] Node: 'Zoo'
    |  |     \-[ALIAS] Node: 'z'
    |  \-[SELECT] Node: 'select'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'z'
    |     |  \-[IDENT] Node: 'name'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'z'
    |        \-[IDENT] Node: 'address'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'z'
       |  \-[IDENT] Node: 'address'
       +-[DESCENDING] Node: 'DESC'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'z'
       |  \-[IDENT] Node: 'name'
       \-[DESCENDING] Node: 'DESC'

14:12:34,103 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:34,115 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z) -> zoo0_
14:12:34,115 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:34,115 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:34,115 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:34,116 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:34,116 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@16b24ba3
14:12:34,116 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:34,116 DEBUG FromReferenceNode:74 - Resolved : z.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:34,116 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:34,116 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@16b24ba3
14:12:34,116 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:34,116 DEBUG FromReferenceNode:74 - Resolved : z.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:34,117 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:34,117 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:34,117 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:34,117 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo0_.name zoo0_.id name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ) ( FromClause{level=1} Zoo zoo0_ ) ( order ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) DESC ( zoo0_.name zoo0_.id name ) DESC ) )
14:12:34,117 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:34,117 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path=z.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[z], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id' {propertyName=address,dereferenceType=2,propertyPath=address,path=z.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
       |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
       |  \-[IDENT] IdentNode: 'address' {originalText=address}
       +-[DESCENDING] SqlNode: 'DESC'
       +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
       |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[DESCENDING] SqlNode: 'DESC'

14:12:34,126 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:34,127 DEBUG QueryTranslatorImpl:235 - HQL: select z.name, z.address from org.hibernate.test.hql.Zoo z order by z.address DESC, z.name DESC
14:12:34,127 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ order by zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id DESC, zoo0_.name DESC
14:12:34,127 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:34,127 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    order by
        zoo0_.street,
        zoo0_.city,
        zoo0_.postalCode,
        zoo0_.country,
        zoo0_.state_prov_id DESC,
        zoo0_.name DESC
14:12:34,139 DEBUG SQL:104 - 
    select
        stateprovi0_.id as id12_0_,
        stateprovi0_.name as name12_0_,
        stateprovi0_.isoCode as isoCode12_0_ 
    from
        StateProvince stateprovi0_ 
    where
        stateprovi0_.id=?
14:12:34,140  INFO FailureExpectedHandler:73 - Ignoring expected failure [{}] : {}
14:12:34,142  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/hql/Animal.hbm.xml
14:12:34,204  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:12:34,204  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:12:34,205  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:12:34,205  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:12:34,205  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:12:34,206  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:12:34,207  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:12:34,207  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:12:34,208  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:12:34,208  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:12:34,252  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:12:34,253 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:12:34,253 DEBUG SQL:104 - 
    alter table Animal 
        drop constraint FK752A7A1C1F3964B4
14:12:34,253 DEBUG SQL:104 - 
    alter table Animal 
        drop constraint FK752A7A1C6309E77B
14:12:34,253 DEBUG SQL:104 - 
    alter table Animal 
        drop constraint FK752A7A1C4B485C79
14:12:34,253 DEBUG SQL:104 - 
    alter table Cat 
        drop constraint FK107B66D384BBA
14:12:34,254 DEBUG SQL:104 - 
    alter table Dog 
        drop constraint FK10D1C6D384BBA
14:12:34,254 DEBUG SQL:104 - 
    alter table DomesticAnimal 
        drop constraint FKE02638DA1733655F
14:12:34,254 DEBUG SQL:104 - 
    alter table DomesticAnimal 
        drop constraint FKE02638DA6C03411F
14:12:34,254 DEBUG SQL:104 - 
    alter table Human 
        drop constraint FK42D710D1733655F
14:12:34,255 DEBUG SQL:104 - 
    alter table Human_family 
        drop constraint FK5F790ED61DCB1311
14:12:34,255 DEBUG SQL:104 - 
    alter table Human_family 
        drop constraint FK5F790ED61DCB1310
14:12:34,255 DEBUG SQL:104 - 
    alter table Human_friends 
        drop constraint FKAC7104631DCB1311
14:12:34,255 DEBUG SQL:104 - 
    alter table Human_friends 
        drop constraint FKAC7104631DCB1310
14:12:34,255 DEBUG SQL:104 - 
    alter table JOINED 
        drop constraint FK82C23B49534E0F13
14:12:34,256 DEBUG SQL:104 - 
    alter table Lizard 
        drop constraint FK87B0E2B6EE398315
14:12:34,256 DEBUG SQL:104 - 
    alter table Mammal 
        drop constraint FK88EF417FEFA9D699
14:12:34,256 DEBUG SQL:104 - 
    alter table Mammal 
        drop constraint FK88EF417FCE6EEE98
14:12:34,256 DEBUG SQL:104 - 
    alter table Reptile 
        drop constraint FKA4790CABEFA9D699
14:12:34,256 DEBUG SQL:104 - 
    alter table Zoo 
        drop constraint FK15FBA55106523
14:12:34,256 DEBUG SQL:104 - 
    alter table Zoo_directors 
        drop constraint FK2D21982265B0D719
14:12:34,257 DEBUG SQL:104 - 
    alter table Zoo_directors 
        drop constraint FK2D219822C590D705
14:12:34,257 DEBUG SQL:104 - 
    alter table "User_permissions" 
        drop constraint FKB4582A30F2810CD2
14:12:34,257 DEBUG SQL:104 - 
    alter table "User" 
        drop constraint FK285FEB65AF5B87
14:12:34,257 DEBUG SQL:104 - 
    alter table addresses 
        drop constraint FK34207BA255106523
14:12:34,257 DEBUG SQL:104 - 
    alter table addresses 
        drop constraint FK34207BA26B9FAF99
14:12:34,258 DEBUG SQL:104 - 
    alter table human_nick_names 
        drop constraint FK8718E1BE6B9FAF99
14:12:34,258 DEBUG SQL:104 - 
    drop table Animal if exists
14:12:34,258 DEBUG SQL:104 - 
    drop table Cat if exists
14:12:34,258 DEBUG SQL:104 - 
    drop table Dog if exists
14:12:34,258 DEBUG SQL:104 - 
    drop table DomesticAnimal if exists
14:12:34,259 DEBUG SQL:104 - 
    drop table Human if exists
14:12:34,259 DEBUG SQL:104 - 
    drop table Human_family if exists
14:12:34,259 DEBUG SQL:104 - 
    drop table Human_friends if exists
14:12:34,259 DEBUG SQL:104 - 
    drop table JOINED if exists
14:12:34,259 DEBUG SQL:104 - 
    drop table Joiner if exists
14:12:34,260 DEBUG SQL:104 - 
    drop table Lizard if exists
14:12:34,260 DEBUG SQL:104 - 
    drop table Mammal if exists
14:12:34,260 DEBUG SQL:104 - 
    drop table Reptile if exists
14:12:34,260 DEBUG SQL:104 - 
    drop table StateProvince if exists
14:12:34,261 DEBUG SQL:104 - 
    drop table Zoo if exists
14:12:34,261 DEBUG SQL:104 - 
    drop table Zoo_directors if exists
14:12:34,261 DEBUG SQL:104 - 
    drop table "User_permissions" if exists
14:12:34,261 DEBUG SQL:104 - 
    drop table "User" if exists
14:12:34,261 DEBUG SQL:104 - 
    drop table addresses if exists
14:12:34,262 DEBUG SQL:104 - 
    drop table human_nick_names if exists
14:12:34,262 DEBUG SQL:104 - 
    create table Animal (
        id bigint generated by default as identity,
        description varchar(255),
        body_weight float,
        mother_id bigint,
        father_id bigint,
        zoo_id bigint,
        serialNumber varchar(255),
        primary key (id)
    )
14:12:34,262 DEBUG SQL:104 - 
    create table Cat (
        mammal bigint not null,
        primary key (mammal)
    )
14:12:34,263 DEBUG SQL:104 - 
    create table Dog (
        mammal bigint not null,
        primary key (mammal)
    )
14:12:34,263 DEBUG SQL:104 - 
    create table DomesticAnimal (
        mammal bigint not null,
        owner bigint,
        primary key (mammal)
    )
14:12:34,263 DEBUG SQL:104 - 
    create table Human (
        mammal bigint not null,
        name_first varchar(255),
        name_initial char(255),
        name_last varchar(255),
        nickName varchar(255),
        height_centimeters double not null,
        intValue integer,
        floatValue float,
        bigDecimalValue decimal(19,2),
        bigIntegerValue decimal(19,2),
        primary key (mammal)
    )
14:12:34,263 DEBUG SQL:104 - 
    create table Human_family (
        human1 bigint not null,
        human2 bigint not null,
        relationship varchar(255) not null,
        primary key (human1, relationship)
    )
14:12:34,264 DEBUG SQL:104 - 
    create table Human_friends (
        human1 bigint not null,
        human2 bigint not null
    )
14:12:34,264 DEBUG SQL:104 - 
    create table JOINED (
        ID bigint not null,
        joinedName varchar(255),
        primary key (ID)
    )
14:12:34,264 DEBUG SQL:104 - 
    create table Joiner (
        id bigint generated by default as identity,
        name varchar(255),
        primary key (id)
    )
14:12:34,264 DEBUG SQL:104 - 
    create table Lizard (
        reptile bigint not null,
        primary key (reptile)
    )
14:12:34,265 DEBUG SQL:104 - 
    create table Mammal (
        animal bigint not null,
        pregnant boolean,
        birthdate date,
        mammalZoo_id bigint,
        name varchar(255),
        primary key (animal)
    )
14:12:34,265 DEBUG SQL:104 - 
    create table Reptile (
        animal bigint not null,
        bodyTemperature float,
        primary key (animal)
    )
14:12:34,265 DEBUG SQL:104 - 
    create table StateProvince (
        id bigint generated by default as identity,
        name varchar(255),
        isoCode varchar(255),
        primary key (id)
    )
14:12:34,265 DEBUG SQL:104 - 
    create table Zoo (
        id bigint generated by default as identity,
        zooType char(255) not null,
        name varchar(255),
        classification tinyint,
        street varchar(255),
        city varchar(255),
        postalCode varchar(255),
        country varchar(255),
        state_prov_id bigint,
        primary key (id)
    )
14:12:34,266 DEBUG SQL:104 - 
    create table Zoo_directors (
        directorZoo_id bigint not null,
        elt bigint not null,
        title varchar(255) not null,
        primary key (directorZoo_id, title)
    )
14:12:34,266 DEBUG SQL:104 - 
    create table "User_permissions" (
        userId bigint not null,
        permissionName varchar(255),
        permissionId integer not null,
        primary key (userId, permissionId)
    )
14:12:34,266 DEBUG SQL:104 - 
    create table "User" (
        id bigint not null,
        userName varchar(255),
        primary key (id)
    )
14:12:34,267 DEBUG SQL:104 - 
    create table addresses (
        human bigint not null,
        street varchar(255),
        city varchar(255),
        postalCode varchar(255),
        country varchar(255),
        state_prov_id bigint,
        "type" varchar(255) not null,
        primary key (human, "type")
    )
14:12:34,267 DEBUG SQL:104 - 
    create table human_nick_names (
        human bigint not null,
        nick_name varchar(255) not null,
        primary key (human, nick_name)
    )
14:12:34,269 DEBUG SQL:104 - 
    alter table Animal 
        add constraint FK752A7A1C1F3964B4 
        foreign key (mother_id) 
        references Animal
14:12:34,269 DEBUG SQL:104 - 
    alter table Animal 
        add constraint FK752A7A1C6309E77B 
        foreign key (father_id) 
        references Animal
14:12:34,270 DEBUG SQL:104 - 
    alter table Animal 
        add constraint FK752A7A1C4B485C79 
        foreign key (zoo_id) 
        references Zoo
14:12:34,270 DEBUG SQL:104 - 
    alter table Cat 
        add constraint FK107B66D384BBA 
        foreign key (mammal) 
        references DomesticAnimal
14:12:34,271 DEBUG SQL:104 - 
    alter table Dog 
        add constraint FK10D1C6D384BBA 
        foreign key (mammal) 
        references DomesticAnimal
14:12:34,271 DEBUG SQL:104 - 
    alter table DomesticAnimal 
        add constraint FKE02638DA1733655F 
        foreign key (mammal) 
        references Mammal
14:12:34,271 DEBUG SQL:104 - 
    alter table DomesticAnimal 
        add constraint FKE02638DA6C03411F 
        foreign key (owner) 
        references Human
14:12:34,272 DEBUG SQL:104 - 
    alter table Human 
        add constraint FK42D710D1733655F 
        foreign key (mammal) 
        references Mammal
14:12:34,272 DEBUG SQL:104 - 
    alter table Human_family 
        add constraint FK5F790ED61DCB1311 
        foreign key (human2) 
        references Human
14:12:34,273 DEBUG SQL:104 - 
    alter table Human_family 
        add constraint FK5F790ED61DCB1310 
        foreign key (human1) 
        references Human
14:12:34,273 DEBUG SQL:104 - 
    alter table Human_friends 
        add constraint FKAC7104631DCB1311 
        foreign key (human2) 
        references Human
14:12:34,274 DEBUG SQL:104 - 
    alter table Human_friends 
        add constraint FKAC7104631DCB1310 
        foreign key (human1) 
        references Human
14:12:34,274 DEBUG SQL:104 - 
    alter table JOINED 
        add constraint FK82C23B49534E0F13 
        foreign key (ID) 
        references Joiner
14:12:34,282 DEBUG SQL:104 - 
    alter table Lizard 
        add constraint FK87B0E2B6EE398315 
        foreign key (reptile) 
        references Reptile
14:12:34,283 DEBUG SQL:104 - 
    alter table Mammal 
        add constraint FK88EF417FEFA9D699 
        foreign key (animal) 
        references Animal
14:12:34,284 DEBUG SQL:104 - 
    alter table Mammal 
        add constraint FK88EF417FCE6EEE98 
        foreign key (mammalZoo_id) 
        references Zoo
14:12:34,284 DEBUG SQL:104 - 
    alter table Reptile 
        add constraint FKA4790CABEFA9D699 
        foreign key (animal) 
        references Animal
14:12:34,285 DEBUG SQL:104 - 
    alter table Zoo 
        add constraint FK15FBA55106523 
        foreign key (state_prov_id) 
        references StateProvince
14:12:34,285 DEBUG SQL:104 - 
    alter table Zoo_directors 
        add constraint FK2D21982265B0D719 
        foreign key (elt) 
        references Human
14:12:34,294 DEBUG SQL:104 - 
    alter table Zoo_directors 
        add constraint FK2D219822C590D705 
        foreign key (directorZoo_id) 
        references Zoo
14:12:34,295 DEBUG SQL:104 - 
    alter table "User_permissions" 
        add constraint FKB4582A30F2810CD2 
        foreign key (userId) 
        references "User"
14:12:34,295 DEBUG SQL:104 - 
    alter table "User" 
        add constraint FK285FEB65AF5B87 
        foreign key (id) 
        references Human
14:12:34,296 DEBUG SQL:104 - 
    alter table addresses 
        add constraint FK34207BA255106523 
        foreign key (state_prov_id) 
        references StateProvince
14:12:34,296 DEBUG SQL:104 - 
    alter table addresses 
        add constraint FK34207BA26B9FAF99 
        foreign key (human) 
        references Human
14:12:34,297 DEBUG SQL:104 - 
    alter table human_nick_names 
        add constraint FK8718E1BE6B9FAF99 
        foreign key (human) 
        references Human
14:12:34,297  INFO SchemaExport:405 - HHH000230: Schema export complete
14:12:34,298  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:12:34,299  INFO CustomRunner:139 - Test: testOrderByComponentDescSelectAliasRefFailureExpected
14:12:34,300 DEBUG SQL:104 - 
    insert 
    into
        StateProvince
        (id, name, isoCode) 
    values
        (null, ?, ?)
14:12:34,301 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:12:34,318 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:12:34,318 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:12:34,319 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:12:34,319 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:12:34,329 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:12:34,330 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:12:34,330 DEBUG SQL:104 - 
    insert 
    into
        Human
        (name_first, name_initial, name_last, nickName, height_centimeters, intValue, floatValue, bigDecimalValue, bigIntegerValue, mammal) 
    values
        (?, ?, ?, ?, ? * 2.54E0, ?, ?, ?, ?, ?)
14:12:34,330 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:12:34,338 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:12:34,339 DEBUG SQL:104 - 
    insert 
    into
        Human
        (name_first, name_initial, name_last, nickName, height_centimeters, intValue, floatValue, bigDecimalValue, bigIntegerValue, mammal) 
    values
        (?, ?, ?, ?, ? * 2.54E0, ?, ?, ?, ?, ?)
14:12:34,339 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:12:34,340 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:12:34,340 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:12:34,350 DEBUG SQL:104 - 
    update
        Animal 
    set
        description=?,
        body_weight=?,
        mother_id=?,
        father_id=?,
        zoo_id=?,
        serialNumber=? 
    where
        id=?
14:12:34,351 DEBUG SQL:104 - 
    update
        Animal 
    set
        description=?,
        body_weight=?,
        mother_id=?,
        father_id=?,
        zoo_id=?,
        serialNumber=? 
    where
        id=?
14:12:34,351 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:34,360 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:34,361 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:34,361 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:34,362 DEBUG SQL:104 - 
    update
        Mammal 
    set
        mammalZoo_id=?,
        name=? 
    where
        animal=?
14:12:34,362 DEBUG SQL:104 - 
    insert 
    into
        Zoo_directors
        (directorZoo_id, title, elt) 
    values
        (?, ?, ?)
14:12:34,362 DEBUG SQL:104 - 
    insert 
    into
        Zoo_directors
        (directorZoo_id, title, elt) 
    values
        (?, ?, ?)
14:12:34,363 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select z.name as zooName, z.address as zooAddress from org.hibernate.test.hql.Zoo z order by zooAddress DESC, zooName DESC
14:12:34,385 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'hql'
    |  |     |  \-[IDENT] Node: 'Zoo'
    |  |     \-[ALIAS] Node: 'z'
    |  \-[SELECT] Node: 'select'
    |     +-[AS] Node: 'as'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'z'
    |     |  |  \-[IDENT] Node: 'name'
    |     |  \-[IDENT] Node: 'zooName'
    |     \-[AS] Node: 'as'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'z'
    |        |  \-[IDENT] Node: 'address'
    |        \-[IDENT] Node: 'zooAddress'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'zooAddress'
       +-[DESCENDING] Node: 'DESC'
       +-[IDENT] Node: 'zooName'
       \-[DESCENDING] Node: 'DESC'

14:12:34,393 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:34,393 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z) -> zoo0_
14:12:34,393 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:34,394 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:34,394 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:34,394 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:34,394 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@6fb0ab32
14:12:34,394 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:34,394 DEBUG FromReferenceNode:74 - Resolved : z.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:34,394 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo0_.name zoo0_.id name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ) ( FromClause{level=1} Zoo zoo0_ ) ( order zooAddress DESC zooName DESC ) )
14:12:34,395 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:34,395 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path=z.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[z], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    \-[ORDER] OrderByClause: 'order'
       +-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'zooAddress'
       +-[DESCENDING] SqlNode: 'DESC'
       +-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'zooName'
       \-[DESCENDING] SqlNode: 'DESC'

14:12:34,404 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:34,404 DEBUG QueryTranslatorImpl:235 - HQL: select z.name as zooName, z.address as zooAddress from org.hibernate.test.hql.Zoo z order by zooAddress DESC, zooName DESC
14:12:34,404 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ order by col_1_0_, col_1_1_, col_1_2_, col_1_3_, col_1_4_ DESC, col_0_0_ DESC
14:12:34,404 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:34,405 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    order by
        col_1_0_,
        col_1_1_,
        col_1_2_,
        col_1_3_,
        col_1_4_ DESC,
        col_0_0_ DESC
14:12:34,406 DEBUG SQL:104 - 
    select
        stateprovi0_.id as id12_0_,
        stateprovi0_.name as name12_0_,
        stateprovi0_.isoCode as isoCode12_0_ 
    from
        StateProvince stateprovi0_ 
    where
        stateprovi0_.id=?
14:12:34,407  INFO FailureExpectedHandler:73 - Ignoring expected failure [{}] : {}
14:12:34,409  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/hql/Animal.hbm.xml
14:12:34,426  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:12:34,426  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:12:34,426  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:12:34,427  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:12:34,427  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:12:34,428  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:12:34,428  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:12:34,429  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:12:34,429  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:12:34,429  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:12:34,465  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:12:34,466 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:12:34,466 DEBUG SQL:104 - 
    alter table Animal 
        drop constraint FK752A7A1C1F3964B4
14:12:34,467 DEBUG SQL:104 - 
    alter table Animal 
        drop constraint FK752A7A1C6309E77B
14:12:34,467 DEBUG SQL:104 - 
    alter table Animal 
        drop constraint FK752A7A1C4B485C79
14:12:34,521 DEBUG SQL:104 - 
    alter table Cat 
        drop constraint FK107B66D384BBA
14:12:34,522 DEBUG SQL:104 - 
    alter table Dog 
        drop constraint FK10D1C6D384BBA
14:12:34,522 DEBUG SQL:104 - 
    alter table DomesticAnimal 
        drop constraint FKE02638DA1733655F
14:12:34,522 DEBUG SQL:104 - 
    alter table DomesticAnimal 
        drop constraint FKE02638DA6C03411F
14:12:34,522 DEBUG SQL:104 - 
    alter table Human 
        drop constraint FK42D710D1733655F
14:12:34,523 DEBUG SQL:104 - 
    alter table Human_family 
        drop constraint FK5F790ED61DCB1311
14:12:34,523 DEBUG SQL:104 - 
    alter table Human_family 
        drop constraint FK5F790ED61DCB1310
14:12:34,523 DEBUG SQL:104 - 
    alter table Human_friends 
        drop constraint FKAC7104631DCB1311
14:12:34,523 DEBUG SQL:104 - 
    alter table Human_friends 
        drop constraint FKAC7104631DCB1310
14:12:34,523 DEBUG SQL:104 - 
    alter table JOINED 
        drop constraint FK82C23B49534E0F13
14:12:34,523 DEBUG SQL:104 - 
    alter table Lizard 
        drop constraint FK87B0E2B6EE398315
14:12:34,524 DEBUG SQL:104 - 
    alter table Mammal 
        drop constraint FK88EF417FEFA9D699
14:12:34,524 DEBUG SQL:104 - 
    alter table Mammal 
        drop constraint FK88EF417FCE6EEE98
14:12:34,524 DEBUG SQL:104 - 
    alter table Reptile 
        drop constraint FKA4790CABEFA9D699
14:12:34,525 DEBUG SQL:104 - 
    alter table Zoo 
        drop constraint FK15FBA55106523
14:12:34,525 DEBUG SQL:104 - 
    alter table Zoo_directors 
        drop constraint FK2D21982265B0D719
14:12:34,525 DEBUG SQL:104 - 
    alter table Zoo_directors 
        drop constraint FK2D219822C590D705
14:12:34,525 DEBUG SQL:104 - 
    alter table "User_permissions" 
        drop constraint FKB4582A30F2810CD2
14:12:34,525 DEBUG SQL:104 - 
    alter table "User" 
        drop constraint FK285FEB65AF5B87
14:12:34,526 DEBUG SQL:104 - 
    alter table addresses 
        drop constraint FK34207BA255106523
14:12:34,526 DEBUG SQL:104 - 
    alter table addresses 
        drop constraint FK34207BA26B9FAF99
14:12:34,526 DEBUG SQL:104 - 
    alter table human_nick_names 
        drop constraint FK8718E1BE6B9FAF99
14:12:34,526 DEBUG SQL:104 - 
    drop table Animal if exists
14:12:34,526 DEBUG SQL:104 - 
    drop table Cat if exists
14:12:34,527 DEBUG SQL:104 - 
    drop table Dog if exists
14:12:34,527 DEBUG SQL:104 - 
    drop table DomesticAnimal if exists
14:12:34,527 DEBUG SQL:104 - 
    drop table Human if exists
14:12:34,527 DEBUG SQL:104 - 
    drop table Human_family if exists
14:12:34,527 DEBUG SQL:104 - 
    drop table Human_friends if exists
14:12:34,528 DEBUG SQL:104 - 
    drop table JOINED if exists
14:12:34,528 DEBUG SQL:104 - 
    drop table Joiner if exists
14:12:34,528 DEBUG SQL:104 - 
    drop table Lizard if exists
14:12:34,528 DEBUG SQL:104 - 
    drop table Mammal if exists
14:12:34,529 DEBUG SQL:104 - 
    drop table Reptile if exists
14:12:34,529 DEBUG SQL:104 - 
    drop table StateProvince if exists
14:12:34,529 DEBUG SQL:104 - 
    drop table Zoo if exists
14:12:34,529 DEBUG SQL:104 - 
    drop table Zoo_directors if exists
14:12:34,529 DEBUG SQL:104 - 
    drop table "User_permissions" if exists
14:12:34,530 DEBUG SQL:104 - 
    drop table "User" if exists
14:12:34,530 DEBUG SQL:104 - 
    drop table addresses if exists
14:12:34,530 DEBUG SQL:104 - 
    drop table human_nick_names if exists
14:12:34,530 DEBUG SQL:104 - 
    create table Animal (
        id bigint generated by default as identity,
        description varchar(255),
        body_weight float,
        mother_id bigint,
        father_id bigint,
        zoo_id bigint,
        serialNumber varchar(255),
        primary key (id)
    )
14:12:34,531 DEBUG SQL:104 - 
    create table Cat (
        mammal bigint not null,
        primary key (mammal)
    )
14:12:34,531 DEBUG SQL:104 - 
    create table Dog (
        mammal bigint not null,
        primary key (mammal)
    )
14:12:34,531 DEBUG SQL:104 - 
    create table DomesticAnimal (
        mammal bigint not null,
        owner bigint,
        primary key (mammal)
    )
14:12:34,532 DEBUG SQL:104 - 
    create table Human (
        mammal bigint not null,
        name_first varchar(255),
        name_initial char(255),
        name_last varchar(255),
        nickName varchar(255),
        height_centimeters double not null,
        intValue integer,
        floatValue float,
        bigDecimalValue decimal(19,2),
        bigIntegerValue decimal(19,2),
        primary key (mammal)
    )
14:12:34,532 DEBUG SQL:104 - 
    create table Human_family (
        human1 bigint not null,
        human2 bigint not null,
        relationship varchar(255) not null,
        primary key (human1, relationship)
    )
14:12:34,532 DEBUG SQL:104 - 
    create table Human_friends (
        human1 bigint not null,
        human2 bigint not null
    )
14:12:34,532 DEBUG SQL:104 - 
    create table JOINED (
        ID bigint not null,
        joinedName varchar(255),
        primary key (ID)
    )
14:12:34,533 DEBUG SQL:104 - 
    create table Joiner (
        id bigint generated by default as identity,
        name varchar(255),
        primary key (id)
    )
14:12:34,533 DEBUG SQL:104 - 
    create table Lizard (
        reptile bigint not null,
        primary key (reptile)
    )
14:12:34,533 DEBUG SQL:104 - 
    create table Mammal (
        animal bigint not null,
        pregnant boolean,
        birthdate date,
        mammalZoo_id bigint,
        name varchar(255),
        primary key (animal)
    )
14:12:34,533 DEBUG SQL:104 - 
    create table Reptile (
        animal bigint not null,
        bodyTemperature float,
        primary key (animal)
    )
14:12:34,534 DEBUG SQL:104 - 
    create table StateProvince (
        id bigint generated by default as identity,
        name varchar(255),
        isoCode varchar(255),
        primary key (id)
    )
14:12:34,534 DEBUG SQL:104 - 
    create table Zoo (
        id bigint generated by default as identity,
        zooType char(255) not null,
        name varchar(255),
        classification tinyint,
        street varchar(255),
        city varchar(255),
        postalCode varchar(255),
        country varchar(255),
        state_prov_id bigint,
        primary key (id)
    )
14:12:34,534 DEBUG SQL:104 - 
    create table Zoo_directors (
        directorZoo_id bigint not null,
        elt bigint not null,
        title varchar(255) not null,
        primary key (directorZoo_id, title)
    )
14:12:34,535 DEBUG SQL:104 - 
    create table "User_permissions" (
        userId bigint not null,
        permissionName varchar(255),
        permissionId integer not null,
        primary key (userId, permissionId)
    )
14:12:34,535 DEBUG SQL:104 - 
    create table "User" (
        id bigint not null,
        userName varchar(255),
        primary key (id)
    )
14:12:34,536 DEBUG SQL:104 - 
    create table addresses (
        human bigint not null,
        street varchar(255),
        city varchar(255),
        postalCode varchar(255),
        country varchar(255),
        state_prov_id bigint,
        "type" varchar(255) not null,
        primary key (human, "type")
    )
14:12:34,537 DEBUG SQL:104 - 
    create table human_nick_names (
        human bigint not null,
        nick_name varchar(255) not null,
        primary key (human, nick_name)
    )
14:12:34,537 DEBUG SQL:104 - 
    alter table Animal 
        add constraint FK752A7A1C1F3964B4 
        foreign key (mother_id) 
        references Animal
14:12:34,538 DEBUG SQL:104 - 
    alter table Animal 
        add constraint FK752A7A1C6309E77B 
        foreign key (father_id) 
        references Animal
14:12:34,538 DEBUG SQL:104 - 
    alter table Animal 
        add constraint FK752A7A1C4B485C79 
        foreign key (zoo_id) 
        references Zoo
14:12:34,539 DEBUG SQL:104 - 
    alter table Cat 
        add constraint FK107B66D384BBA 
        foreign key (mammal) 
        references DomesticAnimal
14:12:34,539 DEBUG SQL:104 - 
    alter table Dog 
        add constraint FK10D1C6D384BBA 
        foreign key (mammal) 
        references DomesticAnimal
14:12:34,540 DEBUG SQL:104 - 
    alter table DomesticAnimal 
        add constraint FKE02638DA1733655F 
        foreign key (mammal) 
        references Mammal
14:12:34,540 DEBUG SQL:104 - 
    alter table DomesticAnimal 
        add constraint FKE02638DA6C03411F 
        foreign key (owner) 
        references Human
14:12:34,540 DEBUG SQL:104 - 
    alter table Human 
        add constraint FK42D710D1733655F 
        foreign key (mammal) 
        references Mammal
14:12:34,541 DEBUG SQL:104 - 
    alter table Human_family 
        add constraint FK5F790ED61DCB1311 
        foreign key (human2) 
        references Human
14:12:34,541 DEBUG SQL:104 - 
    alter table Human_family 
        add constraint FK5F790ED61DCB1310 
        foreign key (human1) 
        references Human
14:12:34,542 DEBUG SQL:104 - 
    alter table Human_friends 
        add constraint FKAC7104631DCB1311 
        foreign key (human2) 
        references Human
14:12:34,551 DEBUG SQL:104 - 
    alter table Human_friends 
        add constraint FKAC7104631DCB1310 
        foreign key (human1) 
        references Human
14:12:34,551 DEBUG SQL:104 - 
    alter table JOINED 
        add constraint FK82C23B49534E0F13 
        foreign key (ID) 
        references Joiner
14:12:34,552 DEBUG SQL:104 - 
    alter table Lizard 
        add constraint FK87B0E2B6EE398315 
        foreign key (reptile) 
        references Reptile
14:12:34,552 DEBUG SQL:104 - 
    alter table Mammal 
        add constraint FK88EF417FEFA9D699 
        foreign key (animal) 
        references Animal
14:12:34,553 DEBUG SQL:104 - 
    alter table Mammal 
        add constraint FK88EF417FCE6EEE98 
        foreign key (mammalZoo_id) 
        references Zoo
14:12:34,553 DEBUG SQL:104 - 
    alter table Reptile 
        add constraint FKA4790CABEFA9D699 
        foreign key (animal) 
        references Animal
14:12:34,561 DEBUG SQL:104 - 
    alter table Zoo 
        add constraint FK15FBA55106523 
        foreign key (state_prov_id) 
        references StateProvince
14:12:34,562 DEBUG SQL:104 - 
    alter table Zoo_directors 
        add constraint FK2D21982265B0D719 
        foreign key (elt) 
        references Human
14:12:34,563 DEBUG SQL:104 - 
    alter table Zoo_directors 
        add constraint FK2D219822C590D705 
        foreign key (directorZoo_id) 
        references Zoo
14:12:34,563 DEBUG SQL:104 - 
    alter table "User_permissions" 
        add constraint FKB4582A30F2810CD2 
        foreign key (userId) 
        references "User"
14:12:34,563 DEBUG SQL:104 - 
    alter table "User" 
        add constraint FK285FEB65AF5B87 
        foreign key (id) 
        references Human
14:12:34,564 DEBUG SQL:104 - 
    alter table addresses 
        add constraint FK34207BA255106523 
        foreign key (state_prov_id) 
        references StateProvince
14:12:34,564 DEBUG SQL:104 - 
    alter table addresses 
        add constraint FK34207BA26B9FAF99 
        foreign key (human) 
        references Human
14:12:34,565 DEBUG SQL:104 - 
    alter table human_nick_names 
        add constraint FK8718E1BE6B9FAF99 
        foreign key (human) 
        references Human
14:12:34,565  INFO SchemaExport:405 - HHH000230: Schema export complete
14:12:34,567  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:12:34,567  INFO CustomRunner:139 - Test: testOrderByEntityWithFetchJoinedCollection
14:12:34,585 DEBUG SQL:104 - 
    insert 
    into
        StateProvince
        (id, name, isoCode) 
    values
        (null, ?, ?)
14:12:34,587 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:12:34,588 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:12:34,588 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:12:34,588 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:12:34,595 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:12:34,596 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:12:34,596 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:12:34,596 DEBUG SQL:104 - 
    insert 
    into
        Human
        (name_first, name_initial, name_last, nickName, height_centimeters, intValue, floatValue, bigDecimalValue, bigIntegerValue, mammal) 
    values
        (?, ?, ?, ?, ? * 2.54E0, ?, ?, ?, ?, ?)
14:12:34,606 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:12:34,606 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:12:34,606 DEBUG SQL:104 - 
    insert 
    into
        Human
        (name_first, name_initial, name_last, nickName, height_centimeters, intValue, floatValue, bigDecimalValue, bigIntegerValue, mammal) 
    values
        (?, ?, ?, ?, ? * 2.54E0, ?, ?, ?, ?, ?)
14:12:34,606 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:12:34,616 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:12:34,616 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:12:34,617 DEBUG SQL:104 - 
    update
        Animal 
    set
        description=?,
        body_weight=?,
        mother_id=?,
        father_id=?,
        zoo_id=?,
        serialNumber=? 
    where
        id=?
14:12:34,618 DEBUG SQL:104 - 
    update
        Animal 
    set
        description=?,
        body_weight=?,
        mother_id=?,
        father_id=?,
        zoo_id=?,
        serialNumber=? 
    where
        id=?
14:12:34,627 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:34,628 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:34,638 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:34,638 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:34,649 DEBUG SQL:104 - 
    update
        Mammal 
    set
        mammalZoo_id=?,
        name=? 
    where
        animal=?
14:12:34,649 DEBUG SQL:104 - 
    insert 
    into
        Zoo_directors
        (directorZoo_id, title, elt) 
    values
        (?, ?, ?)
14:12:34,649 DEBUG SQL:104 - 
    insert 
    into
        Zoo_directors
        (directorZoo_id, title, elt) 
    values
        (?, ?, ?)
14:12:34,650 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.hql.Zoo z join fetch z.mammals
14:12:34,651 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          +-[RANGE] Node: 'RANGE'
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[DOT] Node: '.'
          |  |  |  |  |  +-[IDENT] Node: 'org'
          |  |  |  |  |  \-[IDENT] Node: 'hibernate'
          |  |  |  |  \-[IDENT] Node: 'test'
          |  |  |  \-[IDENT] Node: 'hql'
          |  |  \-[IDENT] Node: 'Zoo'
          |  \-[ALIAS] Node: 'z'
          \-[JOIN] Node: 'join'
             +-[FETCH] Node: 'fetch'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'z'
                \-[IDENT] Node: 'mammals'

14:12:34,660 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:34,660 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z) -> zoo0_
14:12:34,661 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:34,661 DEBUG DotNode:599 - getDataType() : mammals -> org.hibernate.type.MapType(org.hibernate.test.hql.Zoo.mammals)
14:12:34,661 DEBUG FromElementFactory:376 - createEntityAssociation() : One to many - path = z.mammals role = org.hibernate.test.hql.Zoo.mammals associatedEntityName = org.hibernate.test.hql.Mammal
14:12:34,661 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Mammal (<no alias>) -> mammals1_
14:12:34,661 DEBUG FromClause:282 - addJoinByPathMap() : z.mammals -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Mammal,tableAlias=mammals1_,origin=Zoo zoo0_,columns={zoo0_.id ,className=org.hibernate.test.hql.Mammal}}
14:12:34,661 DEBUG DotNode:308 - dereferenceCollection() : Created new FROM element for z.mammals : Mammal mammals1_
14:12:34,661 DEBUG FromReferenceNode:74 - Resolved : z.mammals -> .
14:12:34,662 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'Mammal mammals1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.hql.Zoo.mammals,tableName=Mammal,tableAlias=mammals1_,origin=Zoo zoo0_,columns={zoo0_.id ,className=org.hibernate.test.hql.Mammal}}

14:12:34,662 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} ( Zoo zoo0_ Mammal mammals1_ ) ) )
14:12:34,662 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:12:34,662 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:34,662 DEBUG JoinProcessor:175 - Using FROM fragment [inner join Mammal mammals1_ on zoo0_.id=mammals1_.mammalZoo_id inner join Animal mammals1_1_ on mammals1_.animal=mammals1_1_.id left outer join DomesticAnimal mammals1_2_ on mammals1_.animal=mammals1_2_.mammal left outer join Cat mammals1_3_ on mammals1_.animal=mammals1_3_.mammal left outer join Dog mammals1_4_ on mammals1_.animal=mammals1_4_.mammal left outer join Human mammals1_5_ on mammals1_.animal=mammals1_5_.mammal]
14:12:34,662 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Animal,Zoo,Mammal)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'zoo0_.id as id13_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'mammals1_.animal as id0_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.hql.Zoo.mammals,tableName=Mammal,tableAlias=mammals1_,origin=Zoo zoo0_,columns={zoo0_.id ,className=org.hibernate.test.hql.Mammal}}}
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.name as name13_0_, zoo0_.classification as classifi4_13_0_, zoo0_.street as street13_0_, zoo0_.city as city13_0_, zoo0_.postalCode as postalCode13_0_, zoo0_.country as country13_0_, zoo0_.state_prov_id as state9_13_0_, zoo0_.zooType as zooType13_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'mammals1_1_.description as descript2_0_1_, mammals1_1_.body_weight as body3_0_1_, mammals1_1_.mother_id as mother4_0_1_, mammals1_1_.father_id as father5_0_1_, mammals1_1_.zoo_id as zoo6_0_1_, mammals1_1_.serialNumber as serialNu7_0_1_, mammals1_.pregnant as pregnant10_1_, mammals1_.birthdate as birthdate10_1_, mammals1_2_.owner as owner3_1_, mammals1_5_.name_first as name2_4_1_, mammals1_5_.name_initial as name3_4_1_, mammals1_5_.name_last as name4_4_1_, mammals1_5_.nickName as nickName4_1_, mammals1_5_.height_centimeters / 2.54E0 as height6_4_1_, mammals1_5_.intValue as intValue4_1_, mammals1_5_.floatValue as floatValue4_1_, mammals1_5_.bigDecimalValue as bigDecim9_4_1_, mammals1_5_.bigIntegerValue as bigInte10_4_1_, case when mammals1_3_.mammal is not null then 5 when mammals1_4_.mammal is not null then 6 when mammals1_2_.mammal is not null then 4 when mammals1_5_.mammal is not null then 7 when mammals1_.animal is not null then 3 end as clazz_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'mammals1_.mammalZoo_id as mammalZoo4_13_0__, mammals1_.animal as animal10_0__, mammals1_.name as name0__'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[z], fromElementByTableAlias=[zoo0_, mammals1_], fromElementsByPath=[z.mammals], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
          \-[JOIN_FRAGMENT] FromElement: 'inner join Mammal mammals1_ on zoo0_.id=mammals1_.mammalZoo_id inner join Animal mammals1_1_ on mammals1_.animal=mammals1_1_.id left outer join DomesticAnimal mammals1_2_ on mammals1_.animal=mammals1_2_.mammal left outer join Cat mammals1_3_ on mammals1_.animal=mammals1_3_.mammal left outer join Dog mammals1_4_ on mammals1_.animal=mammals1_4_.mammal left outer join Human mammals1_5_ on mammals1_.animal=mammals1_5_.mammal' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.hql.Zoo.mammals,tableName=Mammal,tableAlias=mammals1_,origin=Zoo zoo0_,columns={zoo0_.id ,className=org.hibernate.test.hql.Mammal}}

14:12:34,663 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:34,663 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.hql.Zoo z join fetch z.mammals
14:12:34,663 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.id as id13_0_, mammals1_.animal as id0_1_, zoo0_.name as name13_0_, zoo0_.classification as classifi4_13_0_, zoo0_.street as street13_0_, zoo0_.city as city13_0_, zoo0_.postalCode as postalCode13_0_, zoo0_.country as country13_0_, zoo0_.state_prov_id as state9_13_0_, zoo0_.zooType as zooType13_0_, mammals1_1_.description as descript2_0_1_, mammals1_1_.body_weight as body3_0_1_, mammals1_1_.mother_id as mother4_0_1_, mammals1_1_.father_id as father5_0_1_, mammals1_1_.zoo_id as zoo6_0_1_, mammals1_1_.serialNumber as serialNu7_0_1_, mammals1_.pregnant as pregnant10_1_, mammals1_.birthdate as birthdate10_1_, mammals1_2_.owner as owner3_1_, mammals1_5_.name_first as name2_4_1_, mammals1_5_.name_initial as name3_4_1_, mammals1_5_.name_last as name4_4_1_, mammals1_5_.nickName as nickName4_1_, mammals1_5_.height_centimeters / 2.54E0 as height6_4_1_, mammals1_5_.intValue as intValue4_1_, mammals1_5_.floatValue as floatValue4_1_, mammals1_5_.bigDecimalValue as bigDecim9_4_1_, mammals1_5_.bigIntegerValue as bigInte10_4_1_, case when mammals1_3_.mammal is not null then 5 when mammals1_4_.mammal is not null then 6 when mammals1_2_.mammal is not null then 4 when mammals1_5_.mammal is not null then 7 when mammals1_.animal is not null then 3 end as clazz_1_, mammals1_.mammalZoo_id as mammalZoo4_13_0__, mammals1_.animal as animal10_0__, mammals1_.name as name0__ from Zoo zoo0_ inner join Mammal mammals1_ on zoo0_.id=mammals1_.mammalZoo_id inner join Animal mammals1_1_ on mammals1_.animal=mammals1_1_.id left outer join DomesticAnimal mammals1_2_ on mammals1_.animal=mammals1_2_.mammal left outer join Cat mammals1_3_ on mammals1_.animal=mammals1_3_.mammal left outer join Dog mammals1_4_ on mammals1_.animal=mammals1_4_.mammal left outer join Human mammals1_5_ on mammals1_.animal=mammals1_5_.mammal
14:12:34,663 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:34,663 DEBUG SQL:104 - 
    select
        zoo0_.id as id13_0_,
        mammals1_.animal as id0_1_,
        zoo0_.name as name13_0_,
        zoo0_.classification as classifi4_13_0_,
        zoo0_.street as street13_0_,
        zoo0_.city as city13_0_,
        zoo0_.postalCode as postalCode13_0_,
        zoo0_.country as country13_0_,
        zoo0_.state_prov_id as state9_13_0_,
        zoo0_.zooType as zooType13_0_,
        mammals1_1_.description as descript2_0_1_,
        mammals1_1_.body_weight as body3_0_1_,
        mammals1_1_.mother_id as mother4_0_1_,
        mammals1_1_.father_id as father5_0_1_,
        mammals1_1_.zoo_id as zoo6_0_1_,
        mammals1_1_.serialNumber as serialNu7_0_1_,
        mammals1_.pregnant as pregnant10_1_,
        mammals1_.birthdate as birthdate10_1_,
        mammals1_2_.owner as owner3_1_,
        mammals1_5_.name_first as name2_4_1_,
        mammals1_5_.name_initial as name3_4_1_,
        mammals1_5_.name_last as name4_4_1_,
        mammals1_5_.nickName as nickName4_1_,
        mammals1_5_.height_centimeters / 2.54E0 as height6_4_1_,
        mammals1_5_.intValue as intValue4_1_,
        mammals1_5_.floatValue as floatValue4_1_,
        mammals1_5_.bigDecimalValue as bigDecim9_4_1_,
        mammals1_5_.bigIntegerValue as bigInte10_4_1_,
        case 
            when mammals1_3_.mammal is not null then 5 
            when mammals1_4_.mammal is not null then 6 
            when mammals1_2_.mammal is not null then 4 
            when mammals1_5_.mammal is not null then 7 
            when mammals1_.animal is not null then 3 
        end as clazz_1_,
        mammals1_.mammalZoo_id as mammalZoo4_13_0__,
        mammals1_.animal as animal10_0__,
        mammals1_.name as name0__ 
    from
        Zoo zoo0_ 
    inner join
        Mammal mammals1_ 
            on zoo0_.id=mammals1_.mammalZoo_id 
    inner join
        Animal mammals1_1_ 
            on mammals1_.animal=mammals1_1_.id 
    left outer join
        DomesticAnimal mammals1_2_ 
            on mammals1_.animal=mammals1_2_.mammal 
    left outer join
        Cat mammals1_3_ 
            on mammals1_.animal=mammals1_3_.mammal 
    left outer join
        Dog mammals1_4_ 
            on mammals1_.animal=mammals1_4_.mammal 
    left outer join
        Human mammals1_5_ 
            on mammals1_.animal=mammals1_5_.mammal
14:12:34,685 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:34,688 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:34,688 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:34,706 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:34,707 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:34,716 DEBUG SQL:104 - 
    update
        Animal 
    set
        description=?,
        body_weight=?,
        mother_id=?,
        father_id=?,
        zoo_id=?,
        serialNumber=? 
    where
        id=?
14:12:34,716 DEBUG SQL:104 - 
    update
        Animal 
    set
        description=?,
        body_weight=?,
        mother_id=?,
        father_id=?,
        zoo_id=?,
        serialNumber=? 
    where
        id=?
14:12:34,726 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=null 
    where
        mother_id=?
14:12:34,726 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=null 
    where
        mother_id=?
14:12:34,727 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=null 
    where
        mother_id=?
14:12:34,727 DEBUG SQL:104 - 
    delete 
    from
        Human_friends 
    where
        human1=?
14:12:34,727 DEBUG SQL:104 - 
    delete 
    from
        Human_family 
    where
        human1=?
14:12:34,736 DEBUG SQL:104 - 
    delete 
    from
        human_nick_names 
    where
        human=?
14:12:34,736 DEBUG SQL:104 - 
    delete 
    from
        addresses 
    where
        human=?
14:12:34,736 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=null 
    where
        mother_id=?
14:12:34,737 DEBUG SQL:104 - 
    delete 
    from
        Human_friends 
    where
        human1=?
14:12:34,737 DEBUG SQL:104 - 
    delete 
    from
        Human_family 
    where
        human1=?
14:12:34,745 DEBUG SQL:104 - 
    delete 
    from
        human_nick_names 
    where
        human=?
14:12:34,745 DEBUG SQL:104 - 
    delete 
    from
        addresses 
    where
        human=?
14:12:34,746 DEBUG SQL:104 - 
    update
        Mammal 
    set
        mammalZoo_id=null,
        name=null 
    where
        mammalZoo_id=?
14:12:34,746 DEBUG SQL:104 - 
    delete 
    from
        Zoo_directors 
    where
        directorZoo_id=?
14:12:34,755 DEBUG SQL:104 - 
    delete 
    from
        Zoo 
    where
        id=?
14:12:34,755 DEBUG SQL:104 - 
    delete 
    from
        Zoo 
    where
        id=?
14:12:34,755 DEBUG SQL:104 - 
    delete 
    from
        Zoo 
    where
        id=?
14:12:34,756 DEBUG SQL:104 - 
    delete 
    from
        Zoo 
    where
        id=?
14:12:34,756 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        animal=?
14:12:34,766 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        id=?
14:12:34,766 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        animal=?
14:12:34,766 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        id=?
14:12:34,767 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        mammal=?
14:12:34,767 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        animal=?
14:12:34,775 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        id=?
14:12:34,776 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        mammal=?
14:12:34,776 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        animal=?
14:12:34,776 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        id=?
14:12:34,777 DEBUG SQL:104 - 
    delete 
    from
        StateProvince 
    where
        id=?
14:12:34,789  INFO CustomRunner:139 - Test: testOrderByNoSelectAliasRef
14:12:34,790 DEBUG SQL:104 - 
    insert 
    into
        StateProvince
        (id, name, isoCode) 
    values
        (null, ?, ?)
14:12:34,790 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:12:34,791 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:12:34,791 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:12:34,791 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:12:34,792 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:12:34,792 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:12:34,792 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:12:34,792 DEBUG SQL:104 - 
    insert 
    into
        Human
        (name_first, name_initial, name_last, nickName, height_centimeters, intValue, floatValue, bigDecimalValue, bigIntegerValue, mammal) 
    values
        (?, ?, ?, ?, ? * 2.54E0, ?, ?, ?, ?, ?)
14:12:34,801 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:12:34,802 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:12:34,802 DEBUG SQL:104 - 
    insert 
    into
        Human
        (name_first, name_initial, name_last, nickName, height_centimeters, intValue, floatValue, bigDecimalValue, bigIntegerValue, mammal) 
    values
        (?, ?, ?, ?, ? * 2.54E0, ?, ?, ?, ?, ?)
14:12:34,802 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:12:34,813 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:12:34,813 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:12:34,814 DEBUG SQL:104 - 
    update
        Animal 
    set
        description=?,
        body_weight=?,
        mother_id=?,
        father_id=?,
        zoo_id=?,
        serialNumber=? 
    where
        id=?
14:12:34,815 DEBUG SQL:104 - 
    update
        Animal 
    set
        description=?,
        body_weight=?,
        mother_id=?,
        father_id=?,
        zoo_id=?,
        serialNumber=? 
    where
        id=?
14:12:34,815 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:34,837 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:34,837 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:34,847 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:34,848 DEBUG SQL:104 - 
    update
        Mammal 
    set
        mammalZoo_id=?,
        name=? 
    where
        animal=?
14:12:34,848 DEBUG SQL:104 - 
    insert 
    into
        Zoo_directors
        (directorZoo_id, title, elt) 
    values
        (?, ?, ?)
14:12:34,858 DEBUG SQL:104 - 
    insert 
    into
        Zoo_directors
        (directorZoo_id, title, elt) 
    values
        (?, ?, ?)
14:12:34,859 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select name, address from org.hibernate.test.hql.Zoo order by name, address
14:12:34,860 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     \-[DOT] Node: '.'
    |  |        +-[DOT] Node: '.'
    |  |        |  +-[DOT] Node: '.'
    |  |        |  |  +-[DOT] Node: '.'
    |  |        |  |  |  +-[IDENT] Node: 'org'
    |  |        |  |  |  \-[IDENT] Node: 'hibernate'
    |  |        |  |  \-[IDENT] Node: 'test'
    |  |        |  \-[IDENT] Node: 'hql'
    |  |        \-[IDENT] Node: 'Zoo'
    |  \-[SELECT] Node: 'select'
    |     +-[IDENT] Node: 'name'
    |     \-[IDENT] Node: 'address'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       \-[IDENT] Node: 'address'

14:12:34,868 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:34,869 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (<no alias>) -> zoo0_
14:12:34,869 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:12:34,869 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:34,869 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> zoo0_.name
14:12:34,869 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:12:34,869 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:34,869 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:34,870 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:34,873 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:12:34,873 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:34,873 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> zoo0_.name
14:12:34,873 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:12:34,873 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:34,874 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:34,874 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:34,874 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo0_.name {synthetic-alias} name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id {synthetic-alias} address ) ) ( FromClause{level=1} Zoo zoo0_ ) ( order ( zoo0_.name {synthetic-alias} name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id {synthetic-alias} address ) ) )
14:12:34,874 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:34,874 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path={synthetic-alias}.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[DOT] DotNode: 'zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id' {propertyName=address,dereferenceType=2,propertyPath=address,path={synthetic-alias}.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=null}
          +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          \-[IDENT] IdentNode: 'address' {originalText=address}

14:12:34,883 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:34,883 DEBUG QueryTranslatorImpl:235 - HQL: select name, address from org.hibernate.test.hql.Zoo order by name, address
14:12:34,883 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ order by zoo0_.name, zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:34,883 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:34,883 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    order by
        zoo0_.name,
        zoo0_.street,
        zoo0_.city,
        zoo0_.postalCode,
        zoo0_.country,
        zoo0_.state_prov_id
14:12:34,893 DEBUG SQL:104 - 
    select
        stateprovi0_.id as id12_0_,
        stateprovi0_.name as name12_0_,
        stateprovi0_.isoCode as isoCode12_0_ 
    from
        StateProvince stateprovi0_ 
    where
        stateprovi0_.id=?
14:12:34,895 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select z.name, z.address from org.hibernate.test.hql.Zoo z order by z.name, z.address
14:12:34,897 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'hql'
    |  |     |  \-[IDENT] Node: 'Zoo'
    |  |     \-[ALIAS] Node: 'z'
    |  \-[SELECT] Node: 'select'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'z'
    |     |  \-[IDENT] Node: 'name'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'z'
    |        \-[IDENT] Node: 'address'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'z'
       |  \-[IDENT] Node: 'name'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'z'
          \-[IDENT] Node: 'address'

14:12:34,902 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:34,902 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z) -> zoo0_
14:12:34,903 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:34,903 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:34,903 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:34,903 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:34,903 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:34,903 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:34,903 DEBUG FromReferenceNode:74 - Resolved : z.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:34,903 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:34,904 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:34,904 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:34,913 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:34,913 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:34,913 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:34,913 DEBUG FromReferenceNode:74 - Resolved : z.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:34,914 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo0_.name zoo0_.id name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ) ( FromClause{level=1} Zoo zoo0_ ) ( order ( zoo0_.name zoo0_.id name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ) )
14:12:34,914 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:34,914 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path=z.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[z], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
       |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[DOT] DotNode: 'zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id' {propertyName=address,dereferenceType=2,propertyPath=address,path=z.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
          +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
          \-[IDENT] IdentNode: 'address' {originalText=address}

14:12:34,914 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:34,914 DEBUG QueryTranslatorImpl:235 - HQL: select z.name, z.address from org.hibernate.test.hql.Zoo z order by z.name, z.address
14:12:34,914 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ order by zoo0_.name, zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:34,915 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:34,915 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    order by
        zoo0_.name,
        zoo0_.street,
        zoo0_.city,
        zoo0_.postalCode,
        zoo0_.country,
        zoo0_.state_prov_id
14:12:34,916 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select z2.name, z2.address from org.hibernate.test.hql.Zoo z2 where z2.name in ( select name from Zoo ) order by z2.name, z2.address
14:12:34,918 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'hql'
    |  |     |  \-[IDENT] Node: 'Zoo'
    |  |     \-[ALIAS] Node: 'z2'
    |  \-[SELECT] Node: 'select'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'z2'
    |     |  \-[IDENT] Node: 'name'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'z2'
    |        \-[IDENT] Node: 'address'
    +-[WHERE] Node: 'where'
    |  \-[IN] Node: 'in'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'z2'
    |     |  \-[IDENT] Node: 'name'
    |     \-[IN_LIST] Node: 'inList'
    |        \-[QUERY] Node: 'query'
    |           \-[SELECT_FROM] Node: 'SELECT_FROM'
    |              +-[FROM] Node: 'from'
    |              |  \-[RANGE] Node: 'RANGE'
    |              |     \-[IDENT] Node: 'Zoo'
    |              \-[SELECT] Node: 'select'
    |                 \-[IDENT] Node: 'name'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'z2'
       |  \-[IDENT] Node: 'name'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'z2'
          \-[IDENT] Node: 'address'

14:12:34,937 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:34,937 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z2) -> zoo0_
14:12:34,937 DEBUG FromReferenceNode:74 - Resolved : z2 -> zoo0_.id
14:12:34,937 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:34,938 DEBUG FromReferenceNode:74 - Resolved : z2.name -> zoo0_.name
14:12:34,938 DEBUG FromReferenceNode:74 - Resolved : z2 -> zoo0_.id
14:12:34,938 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:34,938 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:34,938 DEBUG FromReferenceNode:74 - Resolved : z2.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:34,938 DEBUG FromReferenceNode:74 - Resolved : z2 -> zoo0_.id
14:12:34,938 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:34,938 DEBUG FromReferenceNode:74 - Resolved : z2.name -> zoo0_.name
14:12:34,939 DEBUG FromElement:157 - FromClause{level=2} : Zoo (<no alias>) -> zoo1_
14:12:34,939 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:12:34,939 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:34,939 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> zoo1_.name
14:12:34,939 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo1_.name {synthetic-alias} name ) ) ( FromClause{level=2} Zoo zoo1_ ) )
14:12:34,939 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo1_]
14:12:34,939 DEBUG FromReferenceNode:74 - Resolved : z2 -> zoo0_.id
14:12:34,940 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:34,940 DEBUG FromReferenceNode:74 - Resolved : z2.name -> zoo0_.name
14:12:34,940 DEBUG FromReferenceNode:74 - Resolved : z2 -> zoo0_.id
14:12:34,940 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:34,940 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:34,940 DEBUG FromReferenceNode:74 - Resolved : z2.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:34,940 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo0_.name zoo0_.id name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ) ( FromClause{level=1} Zoo zoo0_ ) ( where ( in ( zoo0_.name zoo0_.id name ) ( inList ( SELECT ( {select clause} ( zoo1_.name {synthetic-alias} name ) ) ( FromClause{level=2} Zoo zoo1_ ) ) ) ) ) ( order ( zoo0_.name zoo0_.id name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ) )
14:12:34,940 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:34,941 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z2.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z2}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z2, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path=z2.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z2}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z2, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[z2], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z2,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    +-[WHERE] SqlNode: 'where'
    |  \-[IN] InLogicOperatorNode: 'in'
    |     +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z2.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z2}
    |     |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z2, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |     \-[IN_LIST] SqlNode: 'inList'
    |        \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    |           +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |           |  \-[DOT] DotNode: 'zoo1_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=zoo1_,className=Zoo,classAlias=null}
    |           |     +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |           |     \-[IDENT] IdentNode: 'name' {originalText=name}
    |           \-[FROM] FromClause: 'from' FromClause{level=2, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[zoo1_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |              \-[FROM_FRAGMENT] FromElement: 'Zoo zoo1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Zoo,tableAlias=zoo1_,origin=null,columns={,className=Zoo}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z2.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z2}
       |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z2, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[DOT] DotNode: 'zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id' {propertyName=address,dereferenceType=2,propertyPath=address,path=z2.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z2}
          +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z2, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
          \-[IDENT] IdentNode: 'address' {originalText=address}

14:12:34,962 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:34,963 DEBUG QueryTranslatorImpl:235 - HQL: select z2.name, z2.address from org.hibernate.test.hql.Zoo z2 where z2.name in ( select name from Zoo ) order by z2.name, z2.address
14:12:34,963 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ where zoo0_.name in (select zoo1_.name from Zoo zoo1_) order by zoo0_.name, zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:34,963 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:34,963 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    where
        zoo0_.name in (
            select
                zoo1_.name 
            from
                Zoo zoo1_
        ) 
    order by
        zoo0_.name,
        zoo0_.street,
        zoo0_.city,
        zoo0_.postalCode,
        zoo0_.country,
        zoo0_.state_prov_id
14:12:34,965 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select name, address from org.hibernate.test.hql.Zoo order by name ASC, address ASC
14:12:34,965 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     \-[DOT] Node: '.'
    |  |        +-[DOT] Node: '.'
    |  |        |  +-[DOT] Node: '.'
    |  |        |  |  +-[DOT] Node: '.'
    |  |        |  |  |  +-[IDENT] Node: 'org'
    |  |        |  |  |  \-[IDENT] Node: 'hibernate'
    |  |        |  |  \-[IDENT] Node: 'test'
    |  |        |  \-[IDENT] Node: 'hql'
    |  |        \-[IDENT] Node: 'Zoo'
    |  \-[SELECT] Node: 'select'
    |     +-[IDENT] Node: 'name'
    |     \-[IDENT] Node: 'address'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       +-[ASCENDING] Node: 'ASC'
       +-[IDENT] Node: 'address'
       \-[ASCENDING] Node: 'ASC'

14:12:34,986 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:34,986 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (<no alias>) -> zoo0_
14:12:34,987 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:12:34,987 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:34,987 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> zoo0_.name
14:12:34,987 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:12:34,987 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:34,987 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:34,987 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:34,987 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:12:34,987 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:34,988 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> zoo0_.name
14:12:34,988 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:12:34,995 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:34,995 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:34,995 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:34,996 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo0_.name {synthetic-alias} name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id {synthetic-alias} address ) ) ( FromClause{level=1} Zoo zoo0_ ) ( order ( zoo0_.name {synthetic-alias} name ) ASC ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id {synthetic-alias} address ) ASC ) )
14:12:34,996 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:34,996 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path={synthetic-alias}.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       +-[ASCENDING] SqlNode: 'ASC'
       +-[DOT] DotNode: 'zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id' {propertyName=address,dereferenceType=2,propertyPath=address,path={synthetic-alias}.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'address' {originalText=address}
       \-[ASCENDING] SqlNode: 'ASC'

14:12:35,005 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,007 DEBUG QueryTranslatorImpl:235 - HQL: select name, address from org.hibernate.test.hql.Zoo order by name ASC, address ASC
14:12:35,007 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ order by zoo0_.name ASC, zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id ASC
14:12:35,007 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,007 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    order by
        zoo0_.name ASC,
        zoo0_.street,
        zoo0_.city,
        zoo0_.postalCode,
        zoo0_.country,
        zoo0_.state_prov_id ASC
14:12:35,009 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select z.name, z.address from org.hibernate.test.hql.Zoo z order by z.name ASC, z.address ASC
14:12:35,011 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'hql'
    |  |     |  \-[IDENT] Node: 'Zoo'
    |  |     \-[ALIAS] Node: 'z'
    |  \-[SELECT] Node: 'select'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'z'
    |     |  \-[IDENT] Node: 'name'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'z'
    |        \-[IDENT] Node: 'address'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'z'
       |  \-[IDENT] Node: 'name'
       +-[ASCENDING] Node: 'ASC'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'z'
       |  \-[IDENT] Node: 'address'
       \-[ASCENDING] Node: 'ASC'

14:12:35,020 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,020 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z) -> zoo0_
14:12:35,030 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,030 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,031 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:35,031 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,031 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:35,031 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:35,031 DEBUG FromReferenceNode:74 - Resolved : z.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:35,031 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,031 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,032 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:35,032 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,032 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:35,032 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:35,032 DEBUG FromReferenceNode:74 - Resolved : z.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:35,032 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo0_.name zoo0_.id name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ) ( FromClause{level=1} Zoo zoo0_ ) ( order ( zoo0_.name zoo0_.id name ) ASC ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ASC ) )
14:12:35,032 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:35,033 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path=z.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[z], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
       |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       +-[ASCENDING] SqlNode: 'ASC'
       +-[DOT] DotNode: 'zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id' {propertyName=address,dereferenceType=2,propertyPath=address,path=z.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
       |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
       |  \-[IDENT] IdentNode: 'address' {originalText=address}
       \-[ASCENDING] SqlNode: 'ASC'

14:12:35,042 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,042 DEBUG QueryTranslatorImpl:235 - HQL: select z.name, z.address from org.hibernate.test.hql.Zoo z order by z.name ASC, z.address ASC
14:12:35,042 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ order by zoo0_.name ASC, zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id ASC
14:12:35,042 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,043 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    order by
        zoo0_.name ASC,
        zoo0_.street,
        zoo0_.city,
        zoo0_.postalCode,
        zoo0_.country,
        zoo0_.state_prov_id ASC
14:12:35,045 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select z2.name, z2.address from org.hibernate.test.hql.Zoo z2 where z2.name in ( select name from Zoo ) order by z2.name ASC, z2.address ASC
14:12:35,047 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'hql'
    |  |     |  \-[IDENT] Node: 'Zoo'
    |  |     \-[ALIAS] Node: 'z2'
    |  \-[SELECT] Node: 'select'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'z2'
    |     |  \-[IDENT] Node: 'name'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'z2'
    |        \-[IDENT] Node: 'address'
    +-[WHERE] Node: 'where'
    |  \-[IN] Node: 'in'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'z2'
    |     |  \-[IDENT] Node: 'name'
    |     \-[IN_LIST] Node: 'inList'
    |        \-[QUERY] Node: 'query'
    |           \-[SELECT_FROM] Node: 'SELECT_FROM'
    |              +-[FROM] Node: 'from'
    |              |  \-[RANGE] Node: 'RANGE'
    |              |     \-[IDENT] Node: 'Zoo'
    |              \-[SELECT] Node: 'select'
    |                 \-[IDENT] Node: 'name'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'z2'
       |  \-[IDENT] Node: 'name'
       +-[ASCENDING] Node: 'ASC'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'z2'
       |  \-[IDENT] Node: 'address'
       \-[ASCENDING] Node: 'ASC'

14:12:35,057 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,057 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z2) -> zoo0_
14:12:35,057 DEBUG FromReferenceNode:74 - Resolved : z2 -> zoo0_.id
14:12:35,057 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,057 DEBUG FromReferenceNode:74 - Resolved : z2.name -> zoo0_.name
14:12:35,058 DEBUG FromReferenceNode:74 - Resolved : z2 -> zoo0_.id
14:12:35,058 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:35,058 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:35,058 DEBUG FromReferenceNode:74 - Resolved : z2.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:35,107 DEBUG FromReferenceNode:74 - Resolved : z2 -> zoo0_.id
14:12:35,107 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,107 DEBUG FromReferenceNode:74 - Resolved : z2.name -> zoo0_.name
14:12:35,108 DEBUG FromElement:157 - FromClause{level=2} : Zoo (<no alias>) -> zoo1_
14:12:35,108 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:12:35,108 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,108 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> zoo1_.name
14:12:35,108 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo1_.name {synthetic-alias} name ) ) ( FromClause{level=2} Zoo zoo1_ ) )
14:12:35,108 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo1_]
14:12:35,109 DEBUG FromReferenceNode:74 - Resolved : z2 -> zoo0_.id
14:12:35,109 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,109 DEBUG FromReferenceNode:74 - Resolved : z2.name -> zoo0_.name
14:12:35,109 DEBUG FromReferenceNode:74 - Resolved : z2 -> zoo0_.id
14:12:35,109 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:35,109 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:35,109 DEBUG FromReferenceNode:74 - Resolved : z2.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:35,109 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo0_.name zoo0_.id name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ) ( FromClause{level=1} Zoo zoo0_ ) ( where ( in ( zoo0_.name zoo0_.id name ) ( inList ( SELECT ( {select clause} ( zoo1_.name {synthetic-alias} name ) ) ( FromClause{level=2} Zoo zoo1_ ) ) ) ) ) ( order ( zoo0_.name zoo0_.id name ) ASC ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ASC ) )
14:12:35,110 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:35,110 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z2.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z2}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z2, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path=z2.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z2}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z2, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[z2], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z2,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    +-[WHERE] SqlNode: 'where'
    |  \-[IN] InLogicOperatorNode: 'in'
    |     +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z2.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z2}
    |     |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z2, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |     \-[IN_LIST] SqlNode: 'inList'
    |        \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    |           +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |           |  \-[DOT] DotNode: 'zoo1_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=zoo1_,className=Zoo,classAlias=null}
    |           |     +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |           |     \-[IDENT] IdentNode: 'name' {originalText=name}
    |           \-[FROM] FromClause: 'from' FromClause{level=2, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[zoo1_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |              \-[FROM_FRAGMENT] FromElement: 'Zoo zoo1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Zoo,tableAlias=zoo1_,origin=null,columns={,className=Zoo}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z2.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z2}
       |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z2, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       +-[ASCENDING] SqlNode: 'ASC'
       +-[DOT] DotNode: 'zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id' {propertyName=address,dereferenceType=2,propertyPath=address,path=z2.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z2}
       |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z2, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
       |  \-[IDENT] IdentNode: 'address' {originalText=address}
       \-[ASCENDING] SqlNode: 'ASC'

14:12:35,115 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,115 DEBUG QueryTranslatorImpl:235 - HQL: select z2.name, z2.address from org.hibernate.test.hql.Zoo z2 where z2.name in ( select name from Zoo ) order by z2.name ASC, z2.address ASC
14:12:35,115 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ where zoo0_.name in (select zoo1_.name from Zoo zoo1_) order by zoo0_.name ASC, zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id ASC
14:12:35,115 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,116 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    where
        zoo0_.name in (
            select
                zoo1_.name 
            from
                Zoo zoo1_
        ) 
    order by
        zoo0_.name ASC,
        zoo0_.street,
        zoo0_.city,
        zoo0_.postalCode,
        zoo0_.country,
        zoo0_.state_prov_id ASC
14:12:35,128 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select z.name, z.address from org.hibernate.test.hql.Zoo z order by z.address, z.name
14:12:35,130 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'hql'
    |  |     |  \-[IDENT] Node: 'Zoo'
    |  |     \-[ALIAS] Node: 'z'
    |  \-[SELECT] Node: 'select'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'z'
    |     |  \-[IDENT] Node: 'name'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'z'
    |        \-[IDENT] Node: 'address'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'z'
       |  \-[IDENT] Node: 'address'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'z'
          \-[IDENT] Node: 'name'

14:12:35,137 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,138 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z) -> zoo0_
14:12:35,138 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,138 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,138 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:35,138 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,138 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:35,138 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:35,139 DEBUG FromReferenceNode:74 - Resolved : z.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:35,139 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,139 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:35,139 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:35,139 DEBUG FromReferenceNode:74 - Resolved : z.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:35,139 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,139 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,147 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:35,148 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo0_.name zoo0_.id name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ) ( FromClause{level=1} Zoo zoo0_ ) ( order ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ( zoo0_.name zoo0_.id name ) ) )
14:12:35,148 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:35,149 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path=z.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[z], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id' {propertyName=address,dereferenceType=2,propertyPath=address,path=z.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
       |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
       |  \-[IDENT] IdentNode: 'address' {originalText=address}
       \-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
          +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
          \-[IDENT] IdentNode: 'name' {originalText=name}

14:12:35,158 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,159 DEBUG QueryTranslatorImpl:235 - HQL: select z.name, z.address from org.hibernate.test.hql.Zoo z order by z.address, z.name
14:12:35,159 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ order by zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id, zoo0_.name
14:12:35,159 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,160 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    order by
        zoo0_.street,
        zoo0_.city,
        zoo0_.postalCode,
        zoo0_.country,
        zoo0_.state_prov_id,
        zoo0_.name
14:12:35,161 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select name, address from org.hibernate.test.hql.Zoo order by address, name
14:12:35,162 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     \-[DOT] Node: '.'
    |  |        +-[DOT] Node: '.'
    |  |        |  +-[DOT] Node: '.'
    |  |        |  |  +-[DOT] Node: '.'
    |  |        |  |  |  +-[IDENT] Node: 'org'
    |  |        |  |  |  \-[IDENT] Node: 'hibernate'
    |  |        |  |  \-[IDENT] Node: 'test'
    |  |        |  \-[IDENT] Node: 'hql'
    |  |        \-[IDENT] Node: 'Zoo'
    |  \-[SELECT] Node: 'select'
    |     +-[IDENT] Node: 'name'
    |     \-[IDENT] Node: 'address'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'address'
       \-[IDENT] Node: 'name'

14:12:35,162 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,162 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (<no alias>) -> zoo0_
14:12:35,163 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:12:35,163 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,163 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> zoo0_.name
14:12:35,163 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:12:35,163 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:35,163 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:35,163 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:35,163 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:12:35,164 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:35,164 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:35,164 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:35,164 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:12:35,164 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,164 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> zoo0_.name
14:12:35,164 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo0_.name {synthetic-alias} name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id {synthetic-alias} address ) ) ( FromClause{level=1} Zoo zoo0_ ) ( order ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id {synthetic-alias} address ) ( zoo0_.name {synthetic-alias} name ) ) )
14:12:35,175 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:35,175 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path={synthetic-alias}.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id' {propertyName=address,dereferenceType=2,propertyPath=address,path={synthetic-alias}.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'address' {originalText=address}
       \-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=null}
          +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          \-[IDENT] IdentNode: 'name' {originalText=name}

14:12:35,184 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,184 DEBUG QueryTranslatorImpl:235 - HQL: select name, address from org.hibernate.test.hql.Zoo order by address, name
14:12:35,184 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ order by zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id, zoo0_.name
14:12:35,184 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,185 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    order by
        zoo0_.street,
        zoo0_.city,
        zoo0_.postalCode,
        zoo0_.country,
        zoo0_.state_prov_id,
        zoo0_.name
14:12:35,186 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select z.name, z.address from org.hibernate.test.hql.Zoo z order by z.address
14:12:35,188 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'hql'
    |  |     |  \-[IDENT] Node: 'Zoo'
    |  |     \-[ALIAS] Node: 'z'
    |  \-[SELECT] Node: 'select'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'z'
    |     |  \-[IDENT] Node: 'name'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'z'
    |        \-[IDENT] Node: 'address'
    \-[ORDER] Node: 'order'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'z'
          \-[IDENT] Node: 'address'

14:12:35,206 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,207 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z) -> zoo0_
14:12:35,207 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,207 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,207 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:35,207 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,207 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:35,207 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:35,208 DEBUG FromReferenceNode:74 - Resolved : z.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:35,208 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,208 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:35,208 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:35,208 DEBUG FromReferenceNode:74 - Resolved : z.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:35,208 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo0_.name zoo0_.id name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ) ( FromClause{level=1} Zoo zoo0_ ) ( order ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ) )
14:12:35,209 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:35,209 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path=z.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[z], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    \-[ORDER] OrderByClause: 'order'
       \-[DOT] DotNode: 'zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id' {propertyName=address,dereferenceType=2,propertyPath=address,path=z.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
          +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
          \-[IDENT] IdentNode: 'address' {originalText=address}

14:12:35,216 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,216 DEBUG QueryTranslatorImpl:235 - HQL: select z.name, z.address from org.hibernate.test.hql.Zoo z order by z.address
14:12:35,217 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ order by zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:35,217 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,217 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    order by
        zoo0_.street,
        zoo0_.city,
        zoo0_.postalCode,
        zoo0_.country,
        zoo0_.state_prov_id
14:12:35,227 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select name, address from org.hibernate.test.hql.Zoo order by address
14:12:35,228 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     \-[DOT] Node: '.'
    |  |        +-[DOT] Node: '.'
    |  |        |  +-[DOT] Node: '.'
    |  |        |  |  +-[DOT] Node: '.'
    |  |        |  |  |  +-[IDENT] Node: 'org'
    |  |        |  |  |  \-[IDENT] Node: 'hibernate'
    |  |        |  |  \-[IDENT] Node: 'test'
    |  |        |  \-[IDENT] Node: 'hql'
    |  |        \-[IDENT] Node: 'Zoo'
    |  \-[SELECT] Node: 'select'
    |     +-[IDENT] Node: 'name'
    |     \-[IDENT] Node: 'address'
    \-[ORDER] Node: 'order'
       \-[IDENT] Node: 'address'

14:12:35,236 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,236 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (<no alias>) -> zoo0_
14:12:35,236 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:12:35,237 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,237 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> zoo0_.name
14:12:35,237 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:12:35,237 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:35,237 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:35,237 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:35,237 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:12:35,238 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:35,238 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:35,238 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:35,238 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo0_.name {synthetic-alias} name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id {synthetic-alias} address ) ) ( FromClause{level=1} Zoo zoo0_ ) ( order ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id {synthetic-alias} address ) ) )
14:12:35,238 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:35,238 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path={synthetic-alias}.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    \-[ORDER] OrderByClause: 'order'
       \-[DOT] DotNode: 'zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id' {propertyName=address,dereferenceType=2,propertyPath=address,path={synthetic-alias}.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=null}
          +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          \-[IDENT] IdentNode: 'address' {originalText=address}

14:12:35,246 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,247 DEBUG QueryTranslatorImpl:235 - HQL: select name, address from org.hibernate.test.hql.Zoo order by address
14:12:35,247 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ order by zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:35,247 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,247 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    order by
        zoo0_.street,
        zoo0_.city,
        zoo0_.postalCode,
        zoo0_.country,
        zoo0_.state_prov_id
14:12:35,257 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select z.name, z.address from org.hibernate.test.hql.Zoo z order by z.name
14:12:35,259 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'hql'
    |  |     |  \-[IDENT] Node: 'Zoo'
    |  |     \-[ALIAS] Node: 'z'
    |  \-[SELECT] Node: 'select'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'z'
    |     |  \-[IDENT] Node: 'name'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'z'
    |        \-[IDENT] Node: 'address'
    \-[ORDER] Node: 'order'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'z'
          \-[IDENT] Node: 'name'

14:12:35,267 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,267 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z) -> zoo0_
14:12:35,267 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,267 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,268 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:35,268 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,268 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:35,268 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:35,268 DEBUG FromReferenceNode:74 - Resolved : z.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:35,268 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,268 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,269 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:35,269 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo0_.name zoo0_.id name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ) ( FromClause{level=1} Zoo zoo0_ ) ( order ( zoo0_.name zoo0_.id name ) ) )
14:12:35,269 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:35,269 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path=z.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[z], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    \-[ORDER] OrderByClause: 'order'
       \-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
          +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
          \-[IDENT] IdentNode: 'name' {originalText=name}

14:12:35,278 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,279 DEBUG QueryTranslatorImpl:235 - HQL: select z.name, z.address from org.hibernate.test.hql.Zoo z order by z.name
14:12:35,279 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ order by zoo0_.name
14:12:35,279 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,279 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    order by
        zoo0_.name
14:12:35,289 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select name, address from org.hibernate.test.hql.Zoo order by name
14:12:35,290 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     \-[DOT] Node: '.'
    |  |        +-[DOT] Node: '.'
    |  |        |  +-[DOT] Node: '.'
    |  |        |  |  +-[DOT] Node: '.'
    |  |        |  |  |  +-[IDENT] Node: 'org'
    |  |        |  |  |  \-[IDENT] Node: 'hibernate'
    |  |        |  |  \-[IDENT] Node: 'test'
    |  |        |  \-[IDENT] Node: 'hql'
    |  |        \-[IDENT] Node: 'Zoo'
    |  \-[SELECT] Node: 'select'
    |     +-[IDENT] Node: 'name'
    |     \-[IDENT] Node: 'address'
    \-[ORDER] Node: 'order'
       \-[IDENT] Node: 'name'

14:12:35,291 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,291 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (<no alias>) -> zoo0_
14:12:35,291 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:12:35,291 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,291 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> zoo0_.name
14:12:35,291 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:12:35,291 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:35,291 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:35,292 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:35,292 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:12:35,292 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,292 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> zoo0_.name
14:12:35,292 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo0_.name {synthetic-alias} name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id {synthetic-alias} address ) ) ( FromClause{level=1} Zoo zoo0_ ) ( order ( zoo0_.name {synthetic-alias} name ) ) )
14:12:35,292 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:35,292 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path={synthetic-alias}.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=null}
    |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    \-[ORDER] OrderByClause: 'order'
       \-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=null}
          +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          \-[IDENT] IdentNode: 'name' {originalText=name}

14:12:35,302 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,302 DEBUG QueryTranslatorImpl:235 - HQL: select name, address from org.hibernate.test.hql.Zoo order by name
14:12:35,302 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ order by zoo0_.name
14:12:35,302 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,303 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    order by
        zoo0_.name
14:12:35,305 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:35,314 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:35,314 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:35,315 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:35,315 DEBUG SQL:104 - 
    update
        Animal 
    set
        description=?,
        body_weight=?,
        mother_id=?,
        father_id=?,
        zoo_id=?,
        serialNumber=? 
    where
        id=?
14:12:35,335 DEBUG SQL:104 - 
    update
        Animal 
    set
        description=?,
        body_weight=?,
        mother_id=?,
        father_id=?,
        zoo_id=?,
        serialNumber=? 
    where
        id=?
14:12:35,336 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=null 
    where
        mother_id=?
14:12:35,336 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=null 
    where
        mother_id=?
14:12:35,344 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=null 
    where
        mother_id=?
14:12:35,345 DEBUG SQL:104 - 
    delete 
    from
        Human_friends 
    where
        human1=?
14:12:35,345 DEBUG SQL:104 - 
    delete 
    from
        Human_family 
    where
        human1=?
14:12:35,345 DEBUG SQL:104 - 
    delete 
    from
        human_nick_names 
    where
        human=?
14:12:35,353 DEBUG SQL:104 - 
    delete 
    from
        addresses 
    where
        human=?
14:12:35,354 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=null 
    where
        mother_id=?
14:12:35,354 DEBUG SQL:104 - 
    delete 
    from
        Human_friends 
    where
        human1=?
14:12:35,354 DEBUG SQL:104 - 
    delete 
    from
        Human_family 
    where
        human1=?
14:12:35,354 DEBUG SQL:104 - 
    delete 
    from
        human_nick_names 
    where
        human=?
14:12:35,364 DEBUG SQL:104 - 
    delete 
    from
        addresses 
    where
        human=?
14:12:35,364 DEBUG SQL:104 - 
    update
        Mammal 
    set
        mammalZoo_id=null,
        name=null 
    where
        mammalZoo_id=?
14:12:35,364 DEBUG SQL:104 - 
    delete 
    from
        Zoo_directors 
    where
        directorZoo_id=?
14:12:35,365 DEBUG SQL:104 - 
    delete 
    from
        Zoo 
    where
        id=?
14:12:35,373 DEBUG SQL:104 - 
    delete 
    from
        Zoo 
    where
        id=?
14:12:35,373 DEBUG SQL:104 - 
    delete 
    from
        Zoo 
    where
        id=?
14:12:35,373 DEBUG SQL:104 - 
    delete 
    from
        Zoo 
    where
        id=?
14:12:35,374 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        animal=?
14:12:35,374 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        id=?
14:12:35,383 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        animal=?
14:12:35,383 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        id=?
14:12:35,384 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        mammal=?
14:12:35,384 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        animal=?
14:12:35,384 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        id=?
14:12:35,394 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        mammal=?
14:12:35,394 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        animal=?
14:12:35,394 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        id=?
14:12:35,395 DEBUG SQL:104 - 
    delete 
    from
        StateProvince 
    where
        id=?
14:12:35,395  INFO CustomRunner:139 - Test: testOrderByOnJoinedSubclassPropertyWhoseColumnIsNotInDrivingTable
14:12:35,404 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.hql.Human h order by h.bodyWeight
14:12:35,405 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  |  \-[IDENT] Node: 'test'
    |        |  |  \-[IDENT] Node: 'hql'
    |        |  \-[IDENT] Node: 'Human'
    |        \-[ALIAS] Node: 'h'
    \-[ORDER] Node: 'order'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'h'
          \-[IDENT] Node: 'bodyWeight'

14:12:35,406 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,406 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Human (h) -> human0_
14:12:35,406 DEBUG FromReferenceNode:74 - Resolved : h -> human0_.mammal
14:12:35,406 DEBUG DotNode:599 - getDataType() : bodyWeight -> org.hibernate.type.FloatType@39fd378e
14:12:35,406 DEBUG FromReferenceNode:74 - Resolved : h.bodyWeight -> human0_2_.body_weight
14:12:35,406 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Human human0_ ) ( order ( human0_2_.body_weight human0_.mammal bodyWeight ) ) )
14:12:35,406 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:12:35,415 DEBUG JoinProcessor:175 - Using FROM fragment [Human human0_ inner join Mammal human0_1_ on human0_.mammal=human0_1_.animal inner join Animal human0_2_ on human0_.mammal=human0_2_.id]
14:12:35,415 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Human,Animal,Mammal)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'human0_.mammal as id0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=h,role=null,tableName=Human,tableAlias=human0_,origin=null,columns={,className=org.hibernate.test.hql.Human}}}
    |  \-[SQL_TOKEN] SqlFragment: 'human0_2_.description as descript2_0_, human0_2_.body_weight as body3_0_, human0_2_.mother_id as mother4_0_, human0_2_.father_id as father5_0_, human0_2_.zoo_id as zoo6_0_, human0_2_.serialNumber as serialNu7_0_, human0_1_.pregnant as pregnant10_, human0_1_.birthdate as birthdate10_, human0_.name_first as name2_4_, human0_.name_initial as name3_4_, human0_.name_last as name4_4_, human0_.nickName as nickName4_, human0_.height_centimeters / 2.54E0 as height6_4_, human0_.intValue as intValue4_, human0_.floatValue as floatValue4_, human0_.bigDecimalValue as bigDecim9_4_, human0_.bigIntegerValue as bigInte10_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[h], fromElementByTableAlias=[human0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Human human0_ inner join Mammal human0_1_ on human0_.mammal=human0_1_.animal inner join Animal human0_2_ on human0_.mammal=human0_2_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=h,role=null,tableName=Human,tableAlias=human0_,origin=null,columns={,className=org.hibernate.test.hql.Human}}
    \-[ORDER] OrderByClause: 'order'
       \-[DOT] DotNode: 'human0_2_.body_weight' {propertyName=bodyWeight,dereferenceType=ALL,propertyPath=bodyWeight,path=h.bodyWeight,tableAlias=human0_,className=org.hibernate.test.hql.Human,classAlias=h}
          +-[ALIAS_REF] IdentNode: 'human0_.mammal' {alias=h, className=org.hibernate.test.hql.Human, tableAlias=human0_}
          \-[IDENT] IdentNode: 'bodyWeight' {originalText=bodyWeight}

14:12:35,415 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,415 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.hql.Human h order by h.bodyWeight
14:12:35,415 DEBUG QueryTranslatorImpl:236 - SQL: select human0_.mammal as id0_, human0_2_.description as descript2_0_, human0_2_.body_weight as body3_0_, human0_2_.mother_id as mother4_0_, human0_2_.father_id as father5_0_, human0_2_.zoo_id as zoo6_0_, human0_2_.serialNumber as serialNu7_0_, human0_1_.pregnant as pregnant10_, human0_1_.birthdate as birthdate10_, human0_.name_first as name2_4_, human0_.name_initial as name3_4_, human0_.name_last as name4_4_, human0_.nickName as nickName4_, human0_.height_centimeters / 2.54E0 as height6_4_, human0_.intValue as intValue4_, human0_.floatValue as floatValue4_, human0_.bigDecimalValue as bigDecim9_4_, human0_.bigIntegerValue as bigInte10_4_ from Human human0_ inner join Mammal human0_1_ on human0_.mammal=human0_1_.animal inner join Animal human0_2_ on human0_.mammal=human0_2_.id order by human0_2_.body_weight
14:12:35,416 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,416 DEBUG SQL:104 - 
    select
        human0_.mammal as id0_,
        human0_2_.description as descript2_0_,
        human0_2_.body_weight as body3_0_,
        human0_2_.mother_id as mother4_0_,
        human0_2_.father_id as father5_0_,
        human0_2_.zoo_id as zoo6_0_,
        human0_2_.serialNumber as serialNu7_0_,
        human0_1_.pregnant as pregnant10_,
        human0_1_.birthdate as birthdate10_,
        human0_.name_first as name2_4_,
        human0_.name_initial as name3_4_,
        human0_.name_last as name4_4_,
        human0_.nickName as nickName4_,
        human0_.height_centimeters / 2.54E0 as height6_4_,
        human0_.intValue as intValue4_,
        human0_.floatValue as floatValue4_,
        human0_.bigDecimalValue as bigDecim9_4_,
        human0_.bigIntegerValue as bigInte10_4_ 
    from
        Human human0_ 
    inner join
        Mammal human0_1_ 
            on human0_.mammal=human0_1_.animal 
    inner join
        Animal human0_2_ 
            on human0_.mammal=human0_2_.id 
    order by
        human0_2_.body_weight
14:12:35,417  INFO CustomRunner:139 - Test: testOrderBySelectAliasRef
14:12:35,418 DEBUG SQL:104 - 
    insert 
    into
        StateProvince
        (id, name, isoCode) 
    values
        (null, ?, ?)
14:12:35,418 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:12:35,428 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:12:35,428 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:12:35,428 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:12:35,429 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:12:35,438 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:12:35,439 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:12:35,439 DEBUG SQL:104 - 
    insert 
    into
        Human
        (name_first, name_initial, name_last, nickName, height_centimeters, intValue, floatValue, bigDecimalValue, bigIntegerValue, mammal) 
    values
        (?, ?, ?, ?, ? * 2.54E0, ?, ?, ?, ?, ?)
14:12:35,440 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:12:35,440 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:12:35,440 DEBUG SQL:104 - 
    insert 
    into
        Human
        (name_first, name_initial, name_last, nickName, height_centimeters, intValue, floatValue, bigDecimalValue, bigIntegerValue, mammal) 
    values
        (?, ?, ?, ?, ? * 2.54E0, ?, ?, ?, ?, ?)
14:12:35,459 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:12:35,460 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:12:35,460 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:12:35,461 DEBUG SQL:104 - 
    update
        Animal 
    set
        description=?,
        body_weight=?,
        mother_id=?,
        father_id=?,
        zoo_id=?,
        serialNumber=? 
    where
        id=?
14:12:35,469 DEBUG SQL:104 - 
    update
        Animal 
    set
        description=?,
        body_weight=?,
        mother_id=?,
        father_id=?,
        zoo_id=?,
        serialNumber=? 
    where
        id=?
14:12:35,470 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:35,470 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:35,470 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:35,470 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:35,471 DEBUG SQL:104 - 
    update
        Mammal 
    set
        mammalZoo_id=?,
        name=? 
    where
        animal=?
14:12:35,491 DEBUG SQL:104 - 
    insert 
    into
        Zoo_directors
        (directorZoo_id, title, elt) 
    values
        (?, ?, ?)
14:12:35,491 DEBUG SQL:104 - 
    insert 
    into
        Zoo_directors
        (directorZoo_id, title, elt) 
    values
        (?, ?, ?)
14:12:35,493 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select z2.name as zname, z2.address as zooAddress from org.hibernate.test.hql.Zoo z2 where z2.name in ( select name from Zoo ) order by zname, zooAddress
14:12:35,494 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'hql'
    |  |     |  \-[IDENT] Node: 'Zoo'
    |  |     \-[ALIAS] Node: 'z2'
    |  \-[SELECT] Node: 'select'
    |     +-[AS] Node: 'as'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'z2'
    |     |  |  \-[IDENT] Node: 'name'
    |     |  \-[IDENT] Node: 'zname'
    |     \-[AS] Node: 'as'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'z2'
    |        |  \-[IDENT] Node: 'address'
    |        \-[IDENT] Node: 'zooAddress'
    +-[WHERE] Node: 'where'
    |  \-[IN] Node: 'in'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'z2'
    |     |  \-[IDENT] Node: 'name'
    |     \-[IN_LIST] Node: 'inList'
    |        \-[QUERY] Node: 'query'
    |           \-[SELECT_FROM] Node: 'SELECT_FROM'
    |              +-[FROM] Node: 'from'
    |              |  \-[RANGE] Node: 'RANGE'
    |              |     \-[IDENT] Node: 'Zoo'
    |              \-[SELECT] Node: 'select'
    |                 \-[IDENT] Node: 'name'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'zname'
       \-[IDENT] Node: 'zooAddress'

14:12:35,511 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,511 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z2) -> zoo0_
14:12:35,511 DEBUG FromReferenceNode:74 - Resolved : z2 -> zoo0_.id
14:12:35,512 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,512 DEBUG FromReferenceNode:74 - Resolved : z2.name -> zoo0_.name
14:12:35,512 DEBUG FromReferenceNode:74 - Resolved : z2 -> zoo0_.id
14:12:35,512 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:35,512 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:35,512 DEBUG FromReferenceNode:74 - Resolved : z2.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:35,512 DEBUG FromReferenceNode:74 - Resolved : z2 -> zoo0_.id
14:12:35,512 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,512 DEBUG FromReferenceNode:74 - Resolved : z2.name -> zoo0_.name
14:12:35,513 DEBUG FromElement:157 - FromClause{level=2} : Zoo (<no alias>) -> zoo1_
14:12:35,513 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:12:35,513 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,513 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> zoo1_.name
14:12:35,513 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo1_.name {synthetic-alias} name ) ) ( FromClause{level=2} Zoo zoo1_ ) )
14:12:35,513 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo1_]
14:12:35,514 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo0_.name zoo0_.id name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ) ( FromClause{level=1} Zoo zoo0_ ) ( where ( in ( zoo0_.name zoo0_.id name ) ( inList ( SELECT ( {select clause} ( zoo1_.name {synthetic-alias} name ) ) ( FromClause{level=2} Zoo zoo1_ ) ) ) ) ) ( order zname zooAddress ) )
14:12:35,514 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:35,514 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z2.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z2}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z2, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path=z2.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z2}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z2, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[z2], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z2,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    +-[WHERE] SqlNode: 'where'
    |  \-[IN] InLogicOperatorNode: 'in'
    |     +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z2.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z2}
    |     |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z2, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |     \-[IN_LIST] SqlNode: 'inList'
    |        \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    |           +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |           |  \-[DOT] DotNode: 'zoo1_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=zoo1_,className=Zoo,classAlias=null}
    |           |     +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |           |     \-[IDENT] IdentNode: 'name' {originalText=name}
    |           \-[FROM] FromClause: 'from' FromClause{level=2, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[zoo1_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |              \-[FROM_FRAGMENT] FromElement: 'Zoo zoo1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Zoo,tableAlias=zoo1_,origin=null,columns={,className=Zoo}}
    \-[ORDER] OrderByClause: 'order'
       +-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'zname'
       \-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'zooAddress'

14:12:35,531 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,531 DEBUG QueryTranslatorImpl:235 - HQL: select z2.name as zname, z2.address as zooAddress from org.hibernate.test.hql.Zoo z2 where z2.name in ( select name from Zoo ) order by zname, zooAddress
14:12:35,531 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ where zoo0_.name in (select zoo1_.name from Zoo zoo1_) order by col_0_0_, col_1_0_, col_1_1_, col_1_2_, col_1_3_, col_1_4_
14:12:35,531 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,532 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    where
        zoo0_.name in (
            select
                zoo1_.name 
            from
                Zoo zoo1_
        ) 
    order by
        col_0_0_,
        col_1_0_,
        col_1_1_,
        col_1_2_,
        col_1_3_,
        col_1_4_
14:12:35,533 DEBUG SQL:104 - 
    select
        stateprovi0_.id as id12_0_,
        stateprovi0_.name as name12_0_,
        stateprovi0_.isoCode as isoCode12_0_ 
    from
        StateProvince stateprovi0_ 
    where
        stateprovi0_.id=?
14:12:35,534 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select z.name as name, z.address as address from org.hibernate.test.hql.Zoo z order by name, address
14:12:35,536 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'hql'
    |  |     |  \-[IDENT] Node: 'Zoo'
    |  |     \-[ALIAS] Node: 'z'
    |  \-[SELECT] Node: 'select'
    |     +-[AS] Node: 'as'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'z'
    |     |  |  \-[IDENT] Node: 'name'
    |     |  \-[IDENT] Node: 'name'
    |     \-[AS] Node: 'as'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'z'
    |        |  \-[IDENT] Node: 'address'
    |        \-[IDENT] Node: 'address'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       \-[IDENT] Node: 'address'

14:12:35,545 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,546 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z) -> zoo0_
14:12:35,546 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,546 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,546 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:35,546 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,547 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:35,547 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:35,547 DEBUG FromReferenceNode:74 - Resolved : z.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:35,547 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo0_.name zoo0_.id name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ) ( FromClause{level=1} Zoo zoo0_ ) ( order name address ) )
14:12:35,547 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:35,548 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path=z.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[z], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    \-[ORDER] OrderByClause: 'order'
       +-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'name'
       \-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'address'

14:12:35,557 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,557 DEBUG QueryTranslatorImpl:235 - HQL: select z.name as name, z.address as address from org.hibernate.test.hql.Zoo z order by name, address
14:12:35,557 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ order by col_0_0_, col_1_0_, col_1_1_, col_1_2_, col_1_3_, col_1_4_
14:12:35,557 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,558 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    order by
        col_0_0_,
        col_1_0_,
        col_1_1_,
        col_1_2_,
        col_1_3_,
        col_1_4_
14:12:35,580 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select z.name as zooName, z.address as zooAddress from org.hibernate.test.hql.Zoo z order by zooName, zooAddress
14:12:35,581 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'hql'
    |  |     |  \-[IDENT] Node: 'Zoo'
    |  |     \-[ALIAS] Node: 'z'
    |  \-[SELECT] Node: 'select'
    |     +-[AS] Node: 'as'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'z'
    |     |  |  \-[IDENT] Node: 'name'
    |     |  \-[IDENT] Node: 'zooName'
    |     \-[AS] Node: 'as'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'z'
    |        |  \-[IDENT] Node: 'address'
    |        \-[IDENT] Node: 'zooAddress'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'zooName'
       \-[IDENT] Node: 'zooAddress'

14:12:35,588 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,588 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z) -> zoo0_
14:12:35,589 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,589 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,589 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:35,589 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,589 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:35,589 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:35,589 DEBUG FromReferenceNode:74 - Resolved : z.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:35,590 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo0_.name zoo0_.id name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ) ( FromClause{level=1} Zoo zoo0_ ) ( order zooName zooAddress ) )
14:12:35,590 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:35,590 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path=z.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[z], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    \-[ORDER] OrderByClause: 'order'
       +-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'zooName'
       \-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'zooAddress'

14:12:35,599 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,600 DEBUG QueryTranslatorImpl:235 - HQL: select z.name as zooName, z.address as zooAddress from org.hibernate.test.hql.Zoo z order by zooName, zooAddress
14:12:35,600 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ order by col_0_0_, col_1_0_, col_1_1_, col_1_2_, col_1_3_, col_1_4_
14:12:35,600 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,600 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    order by
        col_0_0_,
        col_1_0_,
        col_1_1_,
        col_1_2_,
        col_1_3_,
        col_1_4_
14:12:35,601 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select z.name, z.address as name from org.hibernate.test.hql.Zoo z order by z.name, name
14:12:35,603 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'hql'
    |  |     |  \-[IDENT] Node: 'Zoo'
    |  |     \-[ALIAS] Node: 'z'
    |  \-[SELECT] Node: 'select'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'z'
    |     |  \-[IDENT] Node: 'name'
    |     \-[AS] Node: 'as'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'z'
    |        |  \-[IDENT] Node: 'address'
    |        \-[IDENT] Node: 'name'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'z'
       |  \-[IDENT] Node: 'name'
       \-[IDENT] Node: 'name'

14:12:35,609 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,609 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z) -> zoo0_
14:12:35,619 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,619 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,619 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:35,619 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,619 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:35,620 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:35,620 DEBUG FromReferenceNode:74 - Resolved : z.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:35,620 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,620 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,620 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:35,620 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo0_.name zoo0_.id name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ) ( FromClause{level=1} Zoo zoo0_ ) ( order ( zoo0_.name zoo0_.id name ) name ) )
14:12:35,620 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:35,621 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path=z.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[z], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
       |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'name'

14:12:35,630 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,630 DEBUG QueryTranslatorImpl:235 - HQL: select z.name, z.address as name from org.hibernate.test.hql.Zoo z order by z.name, name
14:12:35,630 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ order by zoo0_.name, col_1_0_, col_1_1_, col_1_2_, col_1_3_, col_1_4_
14:12:35,630 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,631 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    order by
        zoo0_.name,
        col_1_0_,
        col_1_1_,
        col_1_2_,
        col_1_3_,
        col_1_4_
14:12:35,631 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    order by
        zoo0_.name,
        col_1_0_,
        col_1_1_,
        col_1_2_,
        col_1_3_,
        col_1_4_
14:12:35,642 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select z2.name as zname, z2.address as zooAddress from org.hibernate.test.hql.Zoo z2 where z2.name in ( select name from Zoo ) order by zname ASC, zooAddress ASC
14:12:35,644 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'hql'
    |  |     |  \-[IDENT] Node: 'Zoo'
    |  |     \-[ALIAS] Node: 'z2'
    |  \-[SELECT] Node: 'select'
    |     +-[AS] Node: 'as'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'z2'
    |     |  |  \-[IDENT] Node: 'name'
    |     |  \-[IDENT] Node: 'zname'
    |     \-[AS] Node: 'as'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'z2'
    |        |  \-[IDENT] Node: 'address'
    |        \-[IDENT] Node: 'zooAddress'
    +-[WHERE] Node: 'where'
    |  \-[IN] Node: 'in'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'z2'
    |     |  \-[IDENT] Node: 'name'
    |     \-[IN_LIST] Node: 'inList'
    |        \-[QUERY] Node: 'query'
    |           \-[SELECT_FROM] Node: 'SELECT_FROM'
    |              +-[FROM] Node: 'from'
    |              |  \-[RANGE] Node: 'RANGE'
    |              |     \-[IDENT] Node: 'Zoo'
    |              \-[SELECT] Node: 'select'
    |                 \-[IDENT] Node: 'name'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'zname'
       +-[ASCENDING] Node: 'ASC'
       +-[IDENT] Node: 'zooAddress'
       \-[ASCENDING] Node: 'ASC'

14:12:35,653 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,653 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z2) -> zoo0_
14:12:35,653 DEBUG FromReferenceNode:74 - Resolved : z2 -> zoo0_.id
14:12:35,653 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,653 DEBUG FromReferenceNode:74 - Resolved : z2.name -> zoo0_.name
14:12:35,654 DEBUG FromReferenceNode:74 - Resolved : z2 -> zoo0_.id
14:12:35,654 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:35,654 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:35,654 DEBUG FromReferenceNode:74 - Resolved : z2.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:35,654 DEBUG FromReferenceNode:74 - Resolved : z2 -> zoo0_.id
14:12:35,654 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,654 DEBUG FromReferenceNode:74 - Resolved : z2.name -> zoo0_.name
14:12:35,655 DEBUG FromElement:157 - FromClause{level=2} : Zoo (<no alias>) -> zoo1_
14:12:35,655 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:12:35,655 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,655 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> zoo1_.name
14:12:35,655 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo1_.name {synthetic-alias} name ) ) ( FromClause{level=2} Zoo zoo1_ ) )
14:12:35,655 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo1_]
14:12:35,656 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo0_.name zoo0_.id name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ) ( FromClause{level=1} Zoo zoo0_ ) ( where ( in ( zoo0_.name zoo0_.id name ) ( inList ( SELECT ( {select clause} ( zoo1_.name {synthetic-alias} name ) ) ( FromClause{level=2} Zoo zoo1_ ) ) ) ) ) ( order zname ASC zooAddress ASC ) )
14:12:35,656 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:35,657 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z2.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z2}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z2, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path=z2.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z2}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z2, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[z2], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z2,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    +-[WHERE] SqlNode: 'where'
    |  \-[IN] InLogicOperatorNode: 'in'
    |     +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z2.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z2}
    |     |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z2, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |     \-[IN_LIST] SqlNode: 'inList'
    |        \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    |           +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |           |  \-[DOT] DotNode: 'zoo1_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=zoo1_,className=Zoo,classAlias=null}
    |           |     +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
    |           |     \-[IDENT] IdentNode: 'name' {originalText=name}
    |           \-[FROM] FromClause: 'from' FromClause{level=2, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[zoo1_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |              \-[FROM_FRAGMENT] FromElement: 'Zoo zoo1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Zoo,tableAlias=zoo1_,origin=null,columns={,className=Zoo}}
    \-[ORDER] OrderByClause: 'order'
       +-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'zname'
       +-[ASCENDING] SqlNode: 'ASC'
       +-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'zooAddress'
       \-[ASCENDING] SqlNode: 'ASC'

14:12:35,682 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,682 DEBUG QueryTranslatorImpl:235 - HQL: select z2.name as zname, z2.address as zooAddress from org.hibernate.test.hql.Zoo z2 where z2.name in ( select name from Zoo ) order by zname ASC, zooAddress ASC
14:12:35,683 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ where zoo0_.name in (select zoo1_.name from Zoo zoo1_) order by col_0_0_ ASC, col_1_0_, col_1_1_, col_1_2_, col_1_3_, col_1_4_ ASC
14:12:35,683 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,683 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    where
        zoo0_.name in (
            select
                zoo1_.name 
            from
                Zoo zoo1_
        ) 
    order by
        col_0_0_ ASC,
        col_1_0_,
        col_1_1_,
        col_1_2_,
        col_1_3_,
        col_1_4_ ASC
14:12:35,685 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select z.name as name, z.address as address from org.hibernate.test.hql.Zoo z order by name ASC, address ASC
14:12:35,686 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'hql'
    |  |     |  \-[IDENT] Node: 'Zoo'
    |  |     \-[ALIAS] Node: 'z'
    |  \-[SELECT] Node: 'select'
    |     +-[AS] Node: 'as'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'z'
    |     |  |  \-[IDENT] Node: 'name'
    |     |  \-[IDENT] Node: 'name'
    |     \-[AS] Node: 'as'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'z'
    |        |  \-[IDENT] Node: 'address'
    |        \-[IDENT] Node: 'address'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       +-[ASCENDING] Node: 'ASC'
       +-[IDENT] Node: 'address'
       \-[ASCENDING] Node: 'ASC'

14:12:35,701 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,701 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z) -> zoo0_
14:12:35,701 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,702 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,702 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:35,702 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,702 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:35,702 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:35,702 DEBUG FromReferenceNode:74 - Resolved : z.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:35,702 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo0_.name zoo0_.id name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ) ( FromClause{level=1} Zoo zoo0_ ) ( order name ASC address ASC ) )
14:12:35,703 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:35,711 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path=z.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[z], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    \-[ORDER] OrderByClause: 'order'
       +-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'name'
       +-[ASCENDING] SqlNode: 'ASC'
       +-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'address'
       \-[ASCENDING] SqlNode: 'ASC'

14:12:35,712 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,712 DEBUG QueryTranslatorImpl:235 - HQL: select z.name as name, z.address as address from org.hibernate.test.hql.Zoo z order by name ASC, address ASC
14:12:35,712 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ order by col_0_0_ ASC, col_1_0_, col_1_1_, col_1_2_, col_1_3_, col_1_4_ ASC
14:12:35,712 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,722 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    order by
        col_0_0_ ASC,
        col_1_0_,
        col_1_1_,
        col_1_2_,
        col_1_3_,
        col_1_4_ ASC
14:12:35,723 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select z.name as zooName, z.address as zooAddress from org.hibernate.test.hql.Zoo z order by zooName ASC, zooAddress ASC
14:12:35,725 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'hql'
    |  |     |  \-[IDENT] Node: 'Zoo'
    |  |     \-[ALIAS] Node: 'z'
    |  \-[SELECT] Node: 'select'
    |     +-[AS] Node: 'as'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'z'
    |     |  |  \-[IDENT] Node: 'name'
    |     |  \-[IDENT] Node: 'zooName'
    |     \-[AS] Node: 'as'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'z'
    |        |  \-[IDENT] Node: 'address'
    |        \-[IDENT] Node: 'zooAddress'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'zooName'
       +-[ASCENDING] Node: 'ASC'
       +-[IDENT] Node: 'zooAddress'
       \-[ASCENDING] Node: 'ASC'

14:12:35,731 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,731 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z) -> zoo0_
14:12:35,731 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,731 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,731 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:35,732 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,732 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:35,732 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:35,732 DEBUG FromReferenceNode:74 - Resolved : z.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:35,733 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo0_.name zoo0_.id name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ) ( FromClause{level=1} Zoo zoo0_ ) ( order zooName ASC zooAddress ASC ) )
14:12:35,741 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:35,742 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path=z.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[z], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    \-[ORDER] OrderByClause: 'order'
       +-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'zooName'
       +-[ASCENDING] SqlNode: 'ASC'
       +-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'zooAddress'
       \-[ASCENDING] SqlNode: 'ASC'

14:12:35,742 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,742 DEBUG QueryTranslatorImpl:235 - HQL: select z.name as zooName, z.address as zooAddress from org.hibernate.test.hql.Zoo z order by zooName ASC, zooAddress ASC
14:12:35,742 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ order by col_0_0_ ASC, col_1_0_, col_1_1_, col_1_2_, col_1_3_, col_1_4_ ASC
14:12:35,753 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,754 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    order by
        col_0_0_ ASC,
        col_1_0_,
        col_1_1_,
        col_1_2_,
        col_1_3_,
        col_1_4_ ASC
14:12:35,755 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select z.name, z.address as name from org.hibernate.test.hql.Zoo z order by z.name ASC, name ASC
14:12:35,757 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'hql'
    |  |     |  \-[IDENT] Node: 'Zoo'
    |  |     \-[ALIAS] Node: 'z'
    |  \-[SELECT] Node: 'select'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'z'
    |     |  \-[IDENT] Node: 'name'
    |     \-[AS] Node: 'as'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'z'
    |        |  \-[IDENT] Node: 'address'
    |        \-[IDENT] Node: 'name'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'z'
       |  \-[IDENT] Node: 'name'
       +-[ASCENDING] Node: 'ASC'
       +-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'ASC'

14:12:35,764 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,764 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z) -> zoo0_
14:12:35,765 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,765 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,765 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:35,765 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,765 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:35,765 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:35,765 DEBUG FromReferenceNode:74 - Resolved : z.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:35,766 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,774 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,775 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:35,775 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo0_.name zoo0_.id name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ) ( FromClause{level=1} Zoo zoo0_ ) ( order ( zoo0_.name zoo0_.id name ) ASC name ASC ) )
14:12:35,775 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:35,776 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path=z.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[z], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
       |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       +-[ASCENDING] SqlNode: 'ASC'
       +-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'name'
       \-[ASCENDING] SqlNode: 'ASC'

14:12:35,786 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,786 DEBUG QueryTranslatorImpl:235 - HQL: select z.name, z.address as name from org.hibernate.test.hql.Zoo z order by z.name ASC, name ASC
14:12:35,787 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ order by zoo0_.name ASC, col_1_0_, col_1_1_, col_1_2_, col_1_3_, col_1_4_ ASC
14:12:35,787 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,787 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    order by
        zoo0_.name ASC,
        col_1_0_,
        col_1_1_,
        col_1_2_,
        col_1_3_,
        col_1_4_ ASC
14:12:35,788 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    order by
        zoo0_.name ASC,
        col_1_0_,
        col_1_1_,
        col_1_2_,
        col_1_3_,
        col_1_4_ ASC
14:12:35,789 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select z.name as address, z.address as name from org.hibernate.test.hql.Zoo z order by name, address
14:12:35,790 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'hql'
    |  |     |  \-[IDENT] Node: 'Zoo'
    |  |     \-[ALIAS] Node: 'z'
    |  \-[SELECT] Node: 'select'
    |     +-[AS] Node: 'as'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'z'
    |     |  |  \-[IDENT] Node: 'name'
    |     |  \-[IDENT] Node: 'address'
    |     \-[AS] Node: 'as'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'z'
    |        |  \-[IDENT] Node: 'address'
    |        \-[IDENT] Node: 'name'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       \-[IDENT] Node: 'address'

14:12:35,799 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,799 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z) -> zoo0_
14:12:35,800 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,800 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,800 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:35,800 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,800 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:35,800 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:35,800 DEBUG FromReferenceNode:74 - Resolved : z.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:35,801 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo0_.name zoo0_.id name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ) ( FromClause{level=1} Zoo zoo0_ ) ( order name address ) )
14:12:35,801 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:35,801 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path=z.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[z], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    \-[ORDER] OrderByClause: 'order'
       +-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'name'
       \-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'address'

14:12:35,810 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,810 DEBUG QueryTranslatorImpl:235 - HQL: select z.name as address, z.address as name from org.hibernate.test.hql.Zoo z order by name, address
14:12:35,810 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ order by col_1_0_, col_1_1_, col_1_2_, col_1_3_, col_1_4_, col_0_0_
14:12:35,810 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,811 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    order by
        col_1_0_,
        col_1_1_,
        col_1_2_,
        col_1_3_,
        col_1_4_,
        col_0_0_
14:12:35,812 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select z.name, z.address as name from org.hibernate.test.hql.Zoo z order by name, z.name
14:12:35,814 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'hql'
    |  |     |  \-[IDENT] Node: 'Zoo'
    |  |     \-[ALIAS] Node: 'z'
    |  \-[SELECT] Node: 'select'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'z'
    |     |  \-[IDENT] Node: 'name'
    |     \-[AS] Node: 'as'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'z'
    |        |  \-[IDENT] Node: 'address'
    |        \-[IDENT] Node: 'name'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       \-[DOT] Node: '.'
          +-[IDENT] Node: 'z'
          \-[IDENT] Node: 'name'

14:12:35,832 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,832 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z) -> zoo0_
14:12:35,842 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,842 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,842 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:35,842 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,842 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:35,843 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:35,843 DEBUG FromReferenceNode:74 - Resolved : z.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:35,843 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,843 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,843 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:35,843 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo0_.name zoo0_.id name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ) ( FromClause{level=1} Zoo zoo0_ ) ( order name ( zoo0_.name zoo0_.id name ) ) )
14:12:35,843 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:35,844 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path=z.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[z], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    \-[ORDER] OrderByClause: 'order'
       +-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'name'
       \-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
          +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
          \-[IDENT] IdentNode: 'name' {originalText=name}

14:12:35,856 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,857 DEBUG QueryTranslatorImpl:235 - HQL: select z.name, z.address as name from org.hibernate.test.hql.Zoo z order by name, z.name
14:12:35,857 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ order by col_1_0_, col_1_1_, col_1_2_, col_1_3_, col_1_4_, zoo0_.name
14:12:35,857 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,857 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    order by
        col_1_0_,
        col_1_1_,
        col_1_2_,
        col_1_3_,
        col_1_4_,
        zoo0_.name
14:12:35,868 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select z.name as address, z.address as name from org.hibernate.test.hql.Zoo z order by name ASC, address ASC
14:12:35,870 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'hql'
    |  |     |  \-[IDENT] Node: 'Zoo'
    |  |     \-[ALIAS] Node: 'z'
    |  \-[SELECT] Node: 'select'
    |     +-[AS] Node: 'as'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'z'
    |     |  |  \-[IDENT] Node: 'name'
    |     |  \-[IDENT] Node: 'address'
    |     \-[AS] Node: 'as'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'z'
    |        |  \-[IDENT] Node: 'address'
    |        \-[IDENT] Node: 'name'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       +-[ASCENDING] Node: 'ASC'
       +-[IDENT] Node: 'address'
       \-[ASCENDING] Node: 'ASC'

14:12:35,877 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,877 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z) -> zoo0_
14:12:35,878 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,878 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,878 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:35,878 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,878 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:35,878 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:35,878 DEBUG FromReferenceNode:74 - Resolved : z.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:35,879 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo0_.name zoo0_.id name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ) ( FromClause{level=1} Zoo zoo0_ ) ( order name ASC address ASC ) )
14:12:35,879 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:35,879 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path=z.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[z], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    \-[ORDER] OrderByClause: 'order'
       +-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'name'
       +-[ASCENDING] SqlNode: 'ASC'
       +-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'address'
       \-[ASCENDING] SqlNode: 'ASC'

14:12:35,887 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,887 DEBUG QueryTranslatorImpl:235 - HQL: select z.name as address, z.address as name from org.hibernate.test.hql.Zoo z order by name ASC, address ASC
14:12:35,887 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ order by col_1_0_, col_1_1_, col_1_2_, col_1_3_, col_1_4_ ASC, col_0_0_ ASC
14:12:35,888 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,888 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    order by
        col_1_0_,
        col_1_1_,
        col_1_2_,
        col_1_3_,
        col_1_4_ ASC,
        col_0_0_ ASC
14:12:35,897 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select z.name, z.address as name from org.hibernate.test.hql.Zoo z order by name ASC, z.name ASC
14:12:35,899 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'hql'
    |  |     |  \-[IDENT] Node: 'Zoo'
    |  |     \-[ALIAS] Node: 'z'
    |  \-[SELECT] Node: 'select'
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'z'
    |     |  \-[IDENT] Node: 'name'
    |     \-[AS] Node: 'as'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'z'
    |        |  \-[IDENT] Node: 'address'
    |        \-[IDENT] Node: 'name'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       +-[ASCENDING] Node: 'ASC'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'z'
       |  \-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'ASC'

14:12:35,906 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,906 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z) -> zoo0_
14:12:35,906 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,906 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,907 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:35,907 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,907 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:35,907 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:35,907 DEBUG FromReferenceNode:74 - Resolved : z.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:35,907 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,907 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,907 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:35,907 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo0_.name zoo0_.id name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ) ( FromClause{level=1} Zoo zoo0_ ) ( order name ASC ( zoo0_.name zoo0_.id name ) ASC ) )
14:12:35,908 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:35,908 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path=z.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[z], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    \-[ORDER] OrderByClause: 'order'
       +-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'name'
       +-[ASCENDING] SqlNode: 'ASC'
       +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
       |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'ASC'

14:12:35,908 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,908 DEBUG QueryTranslatorImpl:235 - HQL: select z.name, z.address as name from org.hibernate.test.hql.Zoo z order by name ASC, z.name ASC
14:12:35,908 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ order by col_1_0_, col_1_1_, col_1_2_, col_1_3_, col_1_4_ ASC, zoo0_.name ASC
14:12:35,908 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,909 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    order by
        col_1_0_,
        col_1_1_,
        col_1_2_,
        col_1_3_,
        col_1_4_ ASC,
        zoo0_.name ASC
14:12:35,917 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select z.name as zooName, z.address as zooAddress from org.hibernate.test.hql.Zoo z order by zooAddress
14:12:35,919 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'hql'
    |  |     |  \-[IDENT] Node: 'Zoo'
    |  |     \-[ALIAS] Node: 'z'
    |  \-[SELECT] Node: 'select'
    |     +-[AS] Node: 'as'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'z'
    |     |  |  \-[IDENT] Node: 'name'
    |     |  \-[IDENT] Node: 'zooName'
    |     \-[AS] Node: 'as'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'z'
    |        |  \-[IDENT] Node: 'address'
    |        \-[IDENT] Node: 'zooAddress'
    \-[ORDER] Node: 'order'
       \-[IDENT] Node: 'zooAddress'

14:12:35,926 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,926 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z) -> zoo0_
14:12:35,926 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,927 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,927 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:35,927 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,927 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:35,927 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:35,927 DEBUG FromReferenceNode:74 - Resolved : z.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:35,927 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo0_.name zoo0_.id name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ) ( FromClause{level=1} Zoo zoo0_ ) ( order zooAddress ) )
14:12:35,927 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:35,928 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path=z.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[z], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    \-[ORDER] OrderByClause: 'order'
       \-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'zooAddress'

14:12:35,947 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,947 DEBUG QueryTranslatorImpl:235 - HQL: select z.name as zooName, z.address as zooAddress from org.hibernate.test.hql.Zoo z order by zooAddress
14:12:35,947 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ order by col_1_0_, col_1_1_, col_1_2_, col_1_3_, col_1_4_
14:12:35,947 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,948 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    order by
        col_1_0_,
        col_1_1_,
        col_1_2_,
        col_1_3_,
        col_1_4_
14:12:35,949 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select z.name as zooName, z.address as name from org.hibernate.test.hql.Zoo z order by name
14:12:35,950 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'hql'
    |  |     |  \-[IDENT] Node: 'Zoo'
    |  |     \-[ALIAS] Node: 'z'
    |  \-[SELECT] Node: 'select'
    |     +-[AS] Node: 'as'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'z'
    |     |  |  \-[IDENT] Node: 'name'
    |     |  \-[IDENT] Node: 'zooName'
    |     \-[AS] Node: 'as'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'z'
    |        |  \-[IDENT] Node: 'address'
    |        \-[IDENT] Node: 'name'
    \-[ORDER] Node: 'order'
       \-[IDENT] Node: 'name'

14:12:35,951 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,951 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z) -> zoo0_
14:12:35,952 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,952 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:35,952 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:35,952 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:35,953 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:35,953 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:35,953 DEBUG FromReferenceNode:74 - Resolved : z.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:35,953 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo0_.name zoo0_.id name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ) ( FromClause{level=1} Zoo zoo0_ ) ( order name ) )
14:12:35,953 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:35,953 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path=z.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[z], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    \-[ORDER] OrderByClause: 'order'
       \-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'name'

14:12:35,966 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,967 DEBUG QueryTranslatorImpl:235 - HQL: select z.name as zooName, z.address as name from org.hibernate.test.hql.Zoo z order by name
14:12:35,967 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ order by col_1_0_, col_1_1_, col_1_2_, col_1_3_, col_1_4_
14:12:35,967 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:35,967 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    order by
        col_1_0_,
        col_1_1_,
        col_1_2_,
        col_1_3_,
        col_1_4_
14:12:35,976 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select z.name as zooName, z.address as zooAddress from org.hibernate.test.hql.Zoo z order by zooName
14:12:35,977 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'hql'
    |  |     |  \-[IDENT] Node: 'Zoo'
    |  |     \-[ALIAS] Node: 'z'
    |  \-[SELECT] Node: 'select'
    |     +-[AS] Node: 'as'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'z'
    |     |  |  \-[IDENT] Node: 'name'
    |     |  \-[IDENT] Node: 'zooName'
    |     \-[AS] Node: 'as'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'z'
    |        |  \-[IDENT] Node: 'address'
    |        \-[IDENT] Node: 'zooAddress'
    \-[ORDER] Node: 'order'
       \-[IDENT] Node: 'zooName'

14:12:36,002 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:36,003 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z) -> zoo0_
14:12:36,003 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:36,003 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:36,003 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:36,003 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:36,003 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:36,003 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:36,003 DEBUG FromReferenceNode:74 - Resolved : z.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:36,004 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo0_.name zoo0_.id name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ) ( FromClause{level=1} Zoo zoo0_ ) ( order zooName ) )
14:12:36,004 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:36,004 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path=z.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[z], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    \-[ORDER] OrderByClause: 'order'
       \-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'zooName'

14:12:36,004 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:36,004 DEBUG QueryTranslatorImpl:235 - HQL: select z.name as zooName, z.address as zooAddress from org.hibernate.test.hql.Zoo z order by zooName
14:12:36,004 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ order by col_0_0_
14:12:36,004 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:36,005 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    order by
        col_0_0_
14:12:36,006 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select z.name as address, z.address as name from org.hibernate.test.hql.Zoo z order by address
14:12:36,008 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'hql'
    |  |     |  \-[IDENT] Node: 'Zoo'
    |  |     \-[ALIAS] Node: 'z'
    |  \-[SELECT] Node: 'select'
    |     +-[AS] Node: 'as'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'z'
    |     |  |  \-[IDENT] Node: 'name'
    |     |  \-[IDENT] Node: 'address'
    |     \-[AS] Node: 'as'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'z'
    |        |  \-[IDENT] Node: 'address'
    |        \-[IDENT] Node: 'name'
    \-[ORDER] Node: 'order'
       \-[IDENT] Node: 'address'

14:12:36,024 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:36,025 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z) -> zoo0_
14:12:36,025 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:36,025 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:36,025 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:36,026 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:36,026 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:36,026 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:36,026 DEBUG FromReferenceNode:74 - Resolved : z.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:36,026 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( zoo0_.name zoo0_.id name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ) ( FromClause{level=1} Zoo zoo0_ ) ( order address ) )
14:12:36,026 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:36,027 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path=z.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |  |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |  +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[z], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    \-[ORDER] OrderByClause: 'order'
       \-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'address'

14:12:36,027 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:36,027 DEBUG QueryTranslatorImpl:235 - HQL: select z.name as address, z.address as name from org.hibernate.test.hql.Zoo z order by address
14:12:36,027 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ order by col_0_0_
14:12:36,027 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:36,027 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    order by
        col_0_0_
14:12:36,030 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:36,030 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:36,031 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:36,039 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:36,039 DEBUG SQL:104 - 
    update
        Animal 
    set
        description=?,
        body_weight=?,
        mother_id=?,
        father_id=?,
        zoo_id=?,
        serialNumber=? 
    where
        id=?
14:12:36,049 DEBUG SQL:104 - 
    update
        Animal 
    set
        description=?,
        body_weight=?,
        mother_id=?,
        father_id=?,
        zoo_id=?,
        serialNumber=? 
    where
        id=?
14:12:36,050 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=null 
    where
        mother_id=?
14:12:36,050 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=null 
    where
        mother_id=?
14:12:36,050 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=null 
    where
        mother_id=?
14:12:36,050 DEBUG SQL:104 - 
    delete 
    from
        Human_friends 
    where
        human1=?
14:12:36,051 DEBUG SQL:104 - 
    delete 
    from
        Human_family 
    where
        human1=?
14:12:36,071 DEBUG SQL:104 - 
    delete 
    from
        human_nick_names 
    where
        human=?
14:12:36,072 DEBUG SQL:104 - 
    delete 
    from
        addresses 
    where
        human=?
14:12:36,072 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=null 
    where
        mother_id=?
14:12:36,072 DEBUG SQL:104 - 
    delete 
    from
        Human_friends 
    where
        human1=?
14:12:36,072 DEBUG SQL:104 - 
    delete 
    from
        Human_family 
    where
        human1=?
14:12:36,082 DEBUG SQL:104 - 
    delete 
    from
        human_nick_names 
    where
        human=?
14:12:36,083 DEBUG SQL:104 - 
    delete 
    from
        addresses 
    where
        human=?
14:12:36,083 DEBUG SQL:104 - 
    update
        Mammal 
    set
        mammalZoo_id=null,
        name=null 
    where
        mammalZoo_id=?
14:12:36,083 DEBUG SQL:104 - 
    delete 
    from
        Zoo_directors 
    where
        directorZoo_id=?
14:12:36,084 DEBUG SQL:104 - 
    delete 
    from
        Zoo 
    where
        id=?
14:12:36,093 DEBUG SQL:104 - 
    delete 
    from
        Zoo 
    where
        id=?
14:12:36,093 DEBUG SQL:104 - 
    delete 
    from
        Zoo 
    where
        id=?
14:12:36,093 DEBUG SQL:104 - 
    delete 
    from
        Zoo 
    where
        id=?
14:12:36,093 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        animal=?
14:12:36,108 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        id=?
14:12:36,109 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        animal=?
14:12:36,109 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        id=?
14:12:36,109 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        mammal=?
14:12:36,109 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        animal=?
14:12:36,116 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        id=?
14:12:36,116 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        mammal=?
14:12:36,117 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        animal=?
14:12:36,117 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        id=?
14:12:36,117 DEBUG SQL:104 - 
    delete 
    from
        StateProvince 
    where
        id=?
14:12:36,127  INFO CustomRunner:139 - Test: testOrderBySelectNewArgAliasRef
14:12:36,128 DEBUG SQL:104 - 
    insert 
    into
        StateProvince
        (id, name, isoCode) 
    values
        (null, ?, ?)
14:12:36,128 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:12:36,129 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:12:36,129 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:12:36,136 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:12:36,137 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:12:36,137 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:12:36,138 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:12:36,147 DEBUG SQL:104 - 
    insert 
    into
        Human
        (name_first, name_initial, name_last, nickName, height_centimeters, intValue, floatValue, bigDecimalValue, bigIntegerValue, mammal) 
    values
        (?, ?, ?, ?, ? * 2.54E0, ?, ?, ?, ?, ?)
14:12:36,148 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:12:36,148 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:12:36,148 DEBUG SQL:104 - 
    insert 
    into
        Human
        (name_first, name_initial, name_last, nickName, height_centimeters, intValue, floatValue, bigDecimalValue, bigIntegerValue, mammal) 
    values
        (?, ?, ?, ?, ? * 2.54E0, ?, ?, ?, ?, ?)
14:12:36,149 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:12:36,149 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:12:36,149 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:12:36,150 DEBUG SQL:104 - 
    update
        Animal 
    set
        description=?,
        body_weight=?,
        mother_id=?,
        father_id=?,
        zoo_id=?,
        serialNumber=? 
    where
        id=?
14:12:36,160 DEBUG SQL:104 - 
    update
        Animal 
    set
        description=?,
        body_weight=?,
        mother_id=?,
        father_id=?,
        zoo_id=?,
        serialNumber=? 
    where
        id=?
14:12:36,161 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:36,161 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:36,170 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:36,171 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:36,171 DEBUG SQL:104 - 
    update
        Mammal 
    set
        mammalZoo_id=?,
        name=? 
    where
        animal=?
14:12:36,192 DEBUG SQL:104 - 
    insert 
    into
        Zoo_directors
        (directorZoo_id, title, elt) 
    values
        (?, ?, ?)
14:12:36,193 DEBUG SQL:104 - 
    insert 
    into
        Zoo_directors
        (directorZoo_id, title, elt) 
    values
        (?, ?, ?)
14:12:36,194 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select new Zoo( z.name as zname, z.address as zaddress) from org.hibernate.test.hql.Zoo z order by zname, zaddress
14:12:36,195 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'hql'
    |  |     |  \-[IDENT] Node: 'Zoo'
    |  |     \-[ALIAS] Node: 'z'
    |  \-[SELECT] Node: 'select'
    |     \-[CONSTRUCTOR] Node: '('
    |        +-[IDENT] Node: 'Zoo'
    |        +-[AS] Node: 'as'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[IDENT] Node: 'z'
    |        |  |  \-[IDENT] Node: 'name'
    |        |  \-[IDENT] Node: 'zname'
    |        \-[AS] Node: 'as'
    |           +-[DOT] Node: '.'
    |           |  +-[IDENT] Node: 'z'
    |           |  \-[IDENT] Node: 'address'
    |           \-[IDENT] Node: 'zaddress'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'zname'
       \-[IDENT] Node: 'zaddress'

14:12:36,203 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:36,203 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z) -> zoo0_
14:12:36,203 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:36,204 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:36,204 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:36,204 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:36,204 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:36,204 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:36,204 DEBUG FromReferenceNode:74 - Resolved : z.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:36,204 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( ( Zoo ( zoo0_.name zoo0_.id name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ) ) ( FromClause{level=1} Zoo zoo0_ ) ( order zname zaddress ) )
14:12:36,213 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:36,213 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  \-[CONSTRUCTOR] ConstructorNode: '('
    |     +-[IDENT] IdentNode: 'Zoo' {originalText=Zoo}
    |     +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |     |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |     +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path=z.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |     |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |     |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |     +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |     +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |     +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |     +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |     \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[z], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    \-[ORDER] OrderByClause: 'order'
       +-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'zname'
       \-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'zaddress'

14:12:36,213 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:36,222 DEBUG QueryTranslatorImpl:235 - HQL: select new Zoo( z.name as zname, z.address as zaddress) from org.hibernate.test.hql.Zoo z order by zname, zaddress
14:12:36,222 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ order by col_0_0_, col_1_0_, col_1_1_, col_1_2_, col_1_3_, col_1_4_
14:12:36,222 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:36,223 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    order by
        col_0_0_,
        col_1_0_,
        col_1_1_,
        col_1_2_,
        col_1_3_,
        col_1_4_
14:12:36,224 DEBUG SQL:104 - 
    select
        stateprovi0_.id as id12_0_,
        stateprovi0_.name as name12_0_,
        stateprovi0_.isoCode as isoCode12_0_ 
    from
        StateProvince stateprovi0_ 
    where
        stateprovi0_.id=?
14:12:36,233 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select new Zoo( z.name as zname, z.address as zaddress) from org.hibernate.test.hql.Zoo z order by zaddress, zname
14:12:36,235 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |     |  |  |  \-[IDENT] Node: 'test'
    |  |     |  |  \-[IDENT] Node: 'hql'
    |  |     |  \-[IDENT] Node: 'Zoo'
    |  |     \-[ALIAS] Node: 'z'
    |  \-[SELECT] Node: 'select'
    |     \-[CONSTRUCTOR] Node: '('
    |        +-[IDENT] Node: 'Zoo'
    |        +-[AS] Node: 'as'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[IDENT] Node: 'z'
    |        |  |  \-[IDENT] Node: 'name'
    |        |  \-[IDENT] Node: 'zname'
    |        \-[AS] Node: 'as'
    |           +-[DOT] Node: '.'
    |           |  +-[IDENT] Node: 'z'
    |           |  \-[IDENT] Node: 'address'
    |           \-[IDENT] Node: 'zaddress'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'zaddress'
       \-[IDENT] Node: 'zname'

14:12:36,242 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:36,242 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z) -> zoo0_
14:12:36,243 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:36,243 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:36,243 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:36,243 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:36,243 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:36,243 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:36,243 DEBUG FromReferenceNode:74 - Resolved : z.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:36,244 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( ( Zoo ( zoo0_.name zoo0_.id name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ) ) ( FromClause{level=1} Zoo zoo0_ ) ( order zaddress zname ) )
14:12:36,244 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:36,244 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Zoo)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  \-[CONSTRUCTOR] ConstructorNode: '('
    |     +-[IDENT] IdentNode: 'Zoo' {originalText=Zoo}
    |     +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |     |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |     +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path=z.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |     |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |     |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |     +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |     +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |     +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |     +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |     \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[z], fromElementByTableAlias=[zoo0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    \-[ORDER] OrderByClause: 'order'
       +-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'zaddress'
       \-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'zname'

14:12:36,252 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:36,252 DEBUG QueryTranslatorImpl:235 - HQL: select new Zoo( z.name as zname, z.address as zaddress) from org.hibernate.test.hql.Zoo z order by zaddress, zname
14:12:36,252 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ order by col_1_0_, col_1_1_, col_1_2_, col_1_3_, col_1_4_, col_0_0_
14:12:36,252 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:36,252 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    order by
        col_1_0_,
        col_1_1_,
        col_1_2_,
        col_1_3_,
        col_1_4_,
        col_0_0_
14:12:36,264 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:36,264 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:36,273 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:36,273 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:36,274 DEBUG SQL:104 - 
    update
        Animal 
    set
        description=?,
        body_weight=?,
        mother_id=?,
        father_id=?,
        zoo_id=?,
        serialNumber=? 
    where
        id=?
14:12:36,274 DEBUG SQL:104 - 
    update
        Animal 
    set
        description=?,
        body_weight=?,
        mother_id=?,
        father_id=?,
        zoo_id=?,
        serialNumber=? 
    where
        id=?
14:12:36,274 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=null 
    where
        mother_id=?
14:12:36,274 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=null 
    where
        mother_id=?
14:12:36,286 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=null 
    where
        mother_id=?
14:12:36,286 DEBUG SQL:104 - 
    delete 
    from
        Human_friends 
    where
        human1=?
14:12:36,287 DEBUG SQL:104 - 
    delete 
    from
        Human_family 
    where
        human1=?
14:12:36,287 DEBUG SQL:104 - 
    delete 
    from
        human_nick_names 
    where
        human=?
14:12:36,297 DEBUG SQL:104 - 
    delete 
    from
        addresses 
    where
        human=?
14:12:36,297 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=null 
    where
        mother_id=?
14:12:36,297 DEBUG SQL:104 - 
    delete 
    from
        Human_friends 
    where
        human1=?
14:12:36,297 DEBUG SQL:104 - 
    delete 
    from
        Human_family 
    where
        human1=?
14:12:36,297 DEBUG SQL:104 - 
    delete 
    from
        human_nick_names 
    where
        human=?
14:12:36,298 DEBUG SQL:104 - 
    delete 
    from
        addresses 
    where
        human=?
14:12:36,298 DEBUG SQL:104 - 
    update
        Mammal 
    set
        mammalZoo_id=null,
        name=null 
    where
        mammalZoo_id=?
14:12:36,318 DEBUG SQL:104 - 
    delete 
    from
        Zoo_directors 
    where
        directorZoo_id=?
14:12:36,319 DEBUG SQL:104 - 
    delete 
    from
        Zoo 
    where
        id=?
14:12:36,319 DEBUG SQL:104 - 
    delete 
    from
        Zoo 
    where
        id=?
14:12:36,319 DEBUG SQL:104 - 
    delete 
    from
        Zoo 
    where
        id=?
14:12:36,320 DEBUG SQL:104 - 
    delete 
    from
        Zoo 
    where
        id=?
14:12:36,327 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        animal=?
14:12:36,327 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        id=?
14:12:36,327 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        animal=?
14:12:36,328 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        id=?
14:12:36,328 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        mammal=?
14:12:36,336 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        animal=?
14:12:36,336 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        id=?
14:12:36,336 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        mammal=?
14:12:36,336 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        animal=?
14:12:36,337 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        id=?
14:12:36,347 DEBUG SQL:104 - 
    delete 
    from
        StateProvince 
    where
        id=?
14:12:36,348  INFO CustomRunner:139 - Test: testOrderBySelectNewMapArgAliasRef
14:12:36,349 DEBUG SQL:104 - 
    insert 
    into
        StateProvince
        (id, name, isoCode) 
    values
        (null, ?, ?)
14:12:36,350 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:12:36,350 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:12:36,359 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:12:36,359 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:12:36,360 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:12:36,360 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:12:36,360 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:12:36,369 DEBUG SQL:104 - 
    insert 
    into
        Human
        (name_first, name_initial, name_last, nickName, height_centimeters, intValue, floatValue, bigDecimalValue, bigIntegerValue, mammal) 
    values
        (?, ?, ?, ?, ? * 2.54E0, ?, ?, ?, ?, ?)
14:12:36,370 DEBUG SQL:104 - 
    insert 
    into
        Animal
        (id, description, body_weight, mother_id, father_id, zoo_id, serialNumber) 
    values
        (null, ?, ?, ?, ?, ?, ?)
14:12:36,370 DEBUG SQL:104 - 
    insert 
    into
        Mammal
        (pregnant, birthdate, animal) 
    values
        (?, ?, ?)
14:12:36,370 DEBUG SQL:104 - 
    insert 
    into
        Human
        (name_first, name_initial, name_last, nickName, height_centimeters, intValue, floatValue, bigDecimalValue, bigIntegerValue, mammal) 
    values
        (?, ?, ?, ?, ? * 2.54E0, ?, ?, ?, ?, ?)
14:12:36,379 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:12:36,380 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:12:36,380 DEBUG SQL:104 - 
    insert 
    into
        Zoo
        (id, name, classification, street, city, postalCode, country, state_prov_id, zooType) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?, 'Z')
14:12:36,381 DEBUG SQL:104 - 
    update
        Animal 
    set
        description=?,
        body_weight=?,
        mother_id=?,
        father_id=?,
        zoo_id=?,
        serialNumber=? 
    where
        id=?
14:12:36,390 DEBUG SQL:104 - 
    update
        Animal 
    set
        description=?,
        body_weight=?,
        mother_id=?,
        father_id=?,
        zoo_id=?,
        serialNumber=? 
    where
        id=?
14:12:36,391 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:36,391 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:36,391 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:36,392 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:36,392 DEBUG SQL:104 - 
    update
        Mammal 
    set
        mammalZoo_id=?,
        name=? 
    where
        animal=?
14:12:36,405 DEBUG SQL:104 - 
    insert 
    into
        Zoo_directors
        (directorZoo_id, title, elt) 
    values
        (?, ?, ?)
14:12:36,405 DEBUG SQL:104 - 
    insert 
    into
        Zoo_directors
        (directorZoo_id, title, elt) 
    values
        (?, ?, ?)
14:12:36,406 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select new map( z.name as zname, z.address as zaddress ) from org.hibernate.test.hql.Zoo z left join z.mammals m order by zname, zaddress
14:12:36,407 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |  |  |  |  |  \-[IDENT] Node: 'test'
    |  |  |  |  |  \-[IDENT] Node: 'hql'
    |  |  |  |  \-[IDENT] Node: 'Zoo'
    |  |  |  \-[ALIAS] Node: 'z'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'z'
    |  |     |  \-[IDENT] Node: 'mammals'
    |  |     \-[ALIAS] Node: 'm'
    |  \-[SELECT] Node: 'select'
    |     \-[CONSTRUCTOR] Node: '('
    |        +-[IDENT] Node: 'map'
    |        +-[AS] Node: 'as'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[IDENT] Node: 'z'
    |        |  |  \-[IDENT] Node: 'name'
    |        |  \-[IDENT] Node: 'zname'
    |        \-[AS] Node: 'as'
    |           +-[DOT] Node: '.'
    |           |  +-[IDENT] Node: 'z'
    |           |  \-[IDENT] Node: 'address'
    |           \-[IDENT] Node: 'zaddress'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'zname'
       \-[IDENT] Node: 'zaddress'

14:12:36,417 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:36,417 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z) -> zoo0_
14:12:36,417 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:36,418 DEBUG DotNode:599 - getDataType() : mammals -> org.hibernate.type.MapType(org.hibernate.test.hql.Zoo.mammals)
14:12:36,418 DEBUG FromElementFactory:376 - createEntityAssociation() : One to many - path = z.mammals role = org.hibernate.test.hql.Zoo.mammals associatedEntityName = org.hibernate.test.hql.Mammal
14:12:36,418 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Mammal (m) -> mammals1_
14:12:36,427 DEBUG FromClause:282 - addJoinByPathMap() : z.mammals -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=m,role=null,tableName=Mammal,tableAlias=mammals1_,origin=Zoo zoo0_,columns={zoo0_.id ,className=org.hibernate.test.hql.Mammal}}
14:12:36,427 DEBUG DotNode:308 - dereferenceCollection() : Created new FROM element for z.mammals : Mammal mammals1_
14:12:36,427 DEBUG FromReferenceNode:74 - Resolved : z.mammals -> .
14:12:36,428 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'Mammal mammals1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=m,role=org.hibernate.test.hql.Zoo.mammals,tableName=Mammal,tableAlias=mammals1_,origin=Zoo zoo0_,columns={zoo0_.id ,className=org.hibernate.test.hql.Mammal}}

14:12:36,428 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:36,428 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:36,428 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:36,428 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:36,428 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:36,428 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:36,428 DEBUG FromReferenceNode:74 - Resolved : z.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:36,429 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( ( map ( zoo0_.name zoo0_.id name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ) ) ( FromClause{level=1} ( Zoo zoo0_ Mammal mammals1_ ) ) ( order zname zaddress ) )
14:12:36,429 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:36,429 DEBUG JoinProcessor:175 - Using FROM fragment [left outer join Mammal mammals1_ on zoo0_.id=mammals1_.mammalZoo_id left outer join Animal mammals1_1_ on mammals1_.animal=mammals1_1_.id]
14:12:36,429 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Animal,Zoo,Mammal)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  \-[CONSTRUCTOR] ConstructorNode: '('
    |     +-[IDENT] IdentNode: 'map' {originalText=map}
    |     +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |     |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |     +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path=z.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |     |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |     |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |     +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |     +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |     +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |     +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |     \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[m, z], fromElementByTableAlias=[zoo0_, mammals1_], fromElementsByPath=[z.mammals], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join Mammal mammals1_ on zoo0_.id=mammals1_.mammalZoo_id left outer join Animal mammals1_1_ on mammals1_.animal=mammals1_1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=m,role=org.hibernate.test.hql.Zoo.mammals,tableName=Mammal,tableAlias=mammals1_,origin=Zoo zoo0_,columns={zoo0_.id ,className=org.hibernate.test.hql.Mammal}}
    \-[ORDER] OrderByClause: 'order'
       +-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'zname'
       \-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'zaddress'

14:12:36,429 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:36,430 DEBUG QueryTranslatorImpl:235 - HQL: select new map( z.name as zname, z.address as zaddress ) from org.hibernate.test.hql.Zoo z left join z.mammals m order by zname, zaddress
14:12:36,449 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ left outer join Mammal mammals1_ on zoo0_.id=mammals1_.mammalZoo_id left outer join Animal mammals1_1_ on mammals1_.animal=mammals1_1_.id order by col_0_0_, col_1_0_, col_1_1_, col_1_2_, col_1_3_, col_1_4_
14:12:36,449 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:36,450 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    left outer join
        Mammal mammals1_ 
            on zoo0_.id=mammals1_.mammalZoo_id 
    left outer join
        Animal mammals1_1_ 
            on mammals1_.animal=mammals1_1_.id 
    order by
        col_0_0_,
        col_1_0_,
        col_1_1_,
        col_1_2_,
        col_1_3_,
        col_1_4_
14:12:36,450 DEBUG SQL:104 - 
    select
        stateprovi0_.id as id12_0_,
        stateprovi0_.name as name12_0_,
        stateprovi0_.isoCode as isoCode12_0_ 
    from
        StateProvince stateprovi0_ 
    where
        stateprovi0_.id=?
14:12:36,459 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select new map( z.name as zname, z.address as zaddress ) from org.hibernate.test.hql.Zoo z left join z.mammals m order by zaddress, zname
14:12:36,461 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |  |  |  |  |  \-[IDENT] Node: 'test'
    |  |  |  |  |  \-[IDENT] Node: 'hql'
    |  |  |  |  \-[IDENT] Node: 'Zoo'
    |  |  |  \-[ALIAS] Node: 'z'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[LEFT] Node: 'left'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'z'
    |  |     |  \-[IDENT] Node: 'mammals'
    |  |     \-[ALIAS] Node: 'm'
    |  \-[SELECT] Node: 'select'
    |     \-[CONSTRUCTOR] Node: '('
    |        +-[IDENT] Node: 'map'
    |        +-[AS] Node: 'as'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[IDENT] Node: 'z'
    |        |  |  \-[IDENT] Node: 'name'
    |        |  \-[IDENT] Node: 'zname'
    |        \-[AS] Node: 'as'
    |           +-[DOT] Node: '.'
    |           |  +-[IDENT] Node: 'z'
    |           |  \-[IDENT] Node: 'address'
    |           \-[IDENT] Node: 'zaddress'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'zaddress'
       \-[IDENT] Node: 'zname'

14:12:36,469 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:36,470 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Zoo (z) -> zoo0_
14:12:36,470 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:36,470 DEBUG DotNode:599 - getDataType() : mammals -> org.hibernate.type.MapType(org.hibernate.test.hql.Zoo.mammals)
14:12:36,470 DEBUG FromElementFactory:376 - createEntityAssociation() : One to many - path = z.mammals role = org.hibernate.test.hql.Zoo.mammals associatedEntityName = org.hibernate.test.hql.Mammal
14:12:36,470 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hql.Mammal (m) -> mammals1_
14:12:36,470 DEBUG FromClause:282 - addJoinByPathMap() : z.mammals -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=m,role=null,tableName=Mammal,tableAlias=mammals1_,origin=Zoo zoo0_,columns={zoo0_.id ,className=org.hibernate.test.hql.Mammal}}
14:12:36,470 DEBUG DotNode:308 - dereferenceCollection() : Created new FROM element for z.mammals : Mammal mammals1_
14:12:36,471 DEBUG FromReferenceNode:74 - Resolved : z.mammals -> .
14:12:36,471 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'Mammal mammals1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=m,role=org.hibernate.test.hql.Zoo.mammals,tableName=Mammal,tableAlias=mammals1_,origin=Zoo zoo0_,columns={zoo0_.id ,className=org.hibernate.test.hql.Mammal}}

14:12:36,471 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:36,471 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:36,471 DEBUG FromReferenceNode:74 - Resolved : z.name -> zoo0_.name
14:12:36,471 DEBUG FromReferenceNode:74 - Resolved : z -> zoo0_.id
14:12:36,471 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@3710fd81
14:12:36,471 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:12:36,512 DEBUG FromReferenceNode:74 - Resolved : z.address -> zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id
14:12:36,515 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( ( map ( zoo0_.name zoo0_.id name ) ( zoo0_.street, zoo0_.city, zoo0_.postalCode, zoo0_.country, zoo0_.state_prov_id zoo0_.id address ) ) ) ( FromClause{level=1} ( Zoo zoo0_ Mammal mammals1_ ) ) ( order zaddress zname ) )
14:12:36,515 DEBUG JoinProcessor:175 - Using FROM fragment [Zoo zoo0_]
14:12:36,515 DEBUG JoinProcessor:175 - Using FROM fragment [left outer join Mammal mammals1_ on zoo0_.id=mammals1_.mammalZoo_id left outer join Animal mammals1_1_ on mammals1_.animal=mammals1_1_.id]
14:12:36,516 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Animal,Zoo,Mammal)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  \-[CONSTRUCTOR] ConstructorNode: '('
    |     +-[IDENT] IdentNode: 'map' {originalText=map}
    |     +-[DOT] DotNode: 'zoo0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=z.name,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |     |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |     |  \-[IDENT] IdentNode: 'name' {originalText=name}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |     +-[DOT] DotNode: 'zoo0_.street' {propertyName=address,dereferenceType=2,propertyPath=address,path=z.address,tableAlias=zoo0_,className=org.hibernate.test.hql.Zoo,classAlias=z}
    |     |  +-[ALIAS_REF] IdentNode: 'zoo0_.id' {alias=z, className=org.hibernate.test.hql.Zoo, tableAlias=zoo0_}
    |     |  \-[IDENT] IdentNode: 'address' {originalText=address}
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    |     +-[SQL_TOKEN] SqlFragment: 'zoo0_.city'
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_1_1_'
    |     +-[SQL_TOKEN] SqlFragment: 'zoo0_.postalCode'
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_1_2_'
    |     +-[SQL_TOKEN] SqlFragment: 'zoo0_.country'
    |     +-[SELECT_COLUMNS] SqlNode: ' as col_1_3_'
    |     +-[SQL_TOKEN] SqlFragment: 'zoo0_.state_prov_id'
    |     \-[SELECT_COLUMNS] SqlNode: ' as col_1_4_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[m, z], fromElementByTableAlias=[zoo0_, mammals1_], fromElementsByPath=[z.mammals], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Zoo zoo0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=null,tableName=Zoo,tableAlias=zoo0_,origin=null,columns={,className=org.hibernate.test.hql.Zoo}}
    |     \-[JOIN_FRAGMENT] FromElement: 'left outer join Mammal mammals1_ on zoo0_.id=mammals1_.mammalZoo_id left outer join Animal mammals1_1_ on mammals1_.animal=mammals1_1_.id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=m,role=org.hibernate.test.hql.Zoo.mammals,tableName=Mammal,tableAlias=mammals1_,origin=Zoo zoo0_,columns={zoo0_.id ,className=org.hibernate.test.hql.Mammal}}
    \-[ORDER] OrderByClause: 'order'
       +-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'zaddress'
       \-[RESULT_VARIABLE_REF] ResultVariableRefNode: 'zname'

14:12:36,516 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:36,516 DEBUG QueryTranslatorImpl:235 - HQL: select new map( z.name as zname, z.address as zaddress ) from org.hibernate.test.hql.Zoo z left join z.mammals m order by zaddress, zname
14:12:36,516 DEBUG QueryTranslatorImpl:236 - SQL: select zoo0_.name as col_0_0_, zoo0_.street as col_1_0_, zoo0_.city as col_1_1_, zoo0_.postalCode as col_1_2_, zoo0_.country as col_1_3_, zoo0_.state_prov_id as col_1_4_ from Zoo zoo0_ left outer join Mammal mammals1_ on zoo0_.id=mammals1_.mammalZoo_id left outer join Animal mammals1_1_ on mammals1_.animal=mammals1_1_.id order by col_1_0_, col_1_1_, col_1_2_, col_1_3_, col_1_4_, col_0_0_
14:12:36,516 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:36,516 DEBUG SQL:104 - 
    select
        zoo0_.name as col_0_0_,
        zoo0_.street as col_1_0_,
        zoo0_.city as col_1_1_,
        zoo0_.postalCode as col_1_2_,
        zoo0_.country as col_1_3_,
        zoo0_.state_prov_id as col_1_4_ 
    from
        Zoo zoo0_ 
    left outer join
        Mammal mammals1_ 
            on zoo0_.id=mammals1_.mammalZoo_id 
    left outer join
        Animal mammals1_1_ 
            on mammals1_.animal=mammals1_1_.id 
    order by
        col_1_0_,
        col_1_1_,
        col_1_2_,
        col_1_3_,
        col_1_4_,
        col_0_0_
14:12:36,519 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:36,519 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:36,519 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:36,520 DEBUG SQL:104 - 
    update
        Zoo 
    set
        name=?,
        classification=?,
        street=?,
        city=?,
        postalCode=?,
        country=?,
        state_prov_id=? 
    where
        id=?
14:12:36,520 DEBUG SQL:104 - 
    update
        Animal 
    set
        description=?,
        body_weight=?,
        mother_id=?,
        father_id=?,
        zoo_id=?,
        serialNumber=? 
    where
        id=?
14:12:36,520 DEBUG SQL:104 - 
    update
        Animal 
    set
        description=?,
        body_weight=?,
        mother_id=?,
        father_id=?,
        zoo_id=?,
        serialNumber=? 
    where
        id=?
14:12:36,521 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=null 
    where
        mother_id=?
14:12:36,521 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=null 
    where
        mother_id=?
14:12:36,529 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=null 
    where
        mother_id=?
14:12:36,529 DEBUG SQL:104 - 
    delete 
    from
        Human_friends 
    where
        human1=?
14:12:36,529 DEBUG SQL:104 - 
    delete 
    from
        Human_family 
    where
        human1=?
14:12:36,529 DEBUG SQL:104 - 
    delete 
    from
        human_nick_names 
    where
        human=?
14:12:36,542 DEBUG SQL:104 - 
    delete 
    from
        addresses 
    where
        human=?
14:12:36,542 DEBUG SQL:104 - 
    update
        Animal 
    set
        mother_id=null 
    where
        mother_id=?
14:12:36,542 DEBUG SQL:104 - 
    delete 
    from
        Human_friends 
    where
        human1=?
14:12:36,542 DEBUG SQL:104 - 
    delete 
    from
        Human_family 
    where
        human1=?
14:12:36,543 DEBUG SQL:104 - 
    delete 
    from
        human_nick_names 
    where
        human=?
14:12:36,551 DEBUG SQL:104 - 
    delete 
    from
        addresses 
    where
        human=?
14:12:36,552 DEBUG SQL:104 - 
    update
        Mammal 
    set
        mammalZoo_id=null,
        name=null 
    where
        mammalZoo_id=?
14:12:36,552 DEBUG SQL:104 - 
    delete 
    from
        Zoo_directors 
    where
        directorZoo_id=?
14:12:36,552 DEBUG SQL:104 - 
    delete 
    from
        Zoo 
    where
        id=?
14:12:36,553 DEBUG SQL:104 - 
    delete 
    from
        Zoo 
    where
        id=?
14:12:36,553 DEBUG SQL:104 - 
    delete 
    from
        Zoo 
    where
        id=?
14:12:36,553 DEBUG SQL:104 - 
    delete 
    from
        Zoo 
    where
        id=?
14:12:36,554 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        animal=?
14:12:36,575 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        id=?
14:12:36,575 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        animal=?
14:12:36,575 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        id=?
14:12:36,576 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        mammal=?
14:12:36,576 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        animal=?
14:12:36,585 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        id=?
14:12:36,586 DEBUG SQL:104 - 
    delete 
    from
        Human 
    where
        mammal=?
14:12:36,586 DEBUG SQL:104 - 
    delete 
    from
        Mammal 
    where
        animal=?
14:12:36,586 DEBUG SQL:104 - 
    delete 
    from
        Animal 
    where
        id=?
14:12:36,586 DEBUG SQL:104 - 
    delete 
    from
        StateProvince 
    where
        id=?
14:12:36,597  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:12:36,598 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:12:36,598 DEBUG SQL:104 - 
    alter table Animal 
        drop constraint FK752A7A1C1F3964B4
14:12:36,598 DEBUG SQL:104 - 
    alter table Animal 
        drop constraint FK752A7A1C6309E77B
14:12:36,598 DEBUG SQL:104 - 
    alter table Animal 
        drop constraint FK752A7A1C4B485C79
14:12:36,598 DEBUG SQL:104 - 
    alter table Cat 
        drop constraint FK107B66D384BBA
14:12:36,599 DEBUG SQL:104 - 
    alter table Dog 
        drop constraint FK10D1C6D384BBA
14:12:36,599 DEBUG SQL:104 - 
    alter table DomesticAnimal 
        drop constraint FKE02638DA1733655F
14:12:36,599 DEBUG SQL:104 - 
    alter table DomesticAnimal 
        drop constraint FKE02638DA6C03411F
14:12:36,599 DEBUG SQL:104 - 
    alter table Human 
        drop constraint FK42D710D1733655F
14:12:36,607 DEBUG SQL:104 - 
    alter table Human_family 
        drop constraint FK5F790ED61DCB1311
14:12:36,607 DEBUG SQL:104 - 
    alter table Human_family 
        drop constraint FK5F790ED61DCB1310
14:12:36,607 DEBUG SQL:104 - 
    alter table Human_friends 
        drop constraint FKAC7104631DCB1311
14:12:36,607 DEBUG SQL:104 - 
    alter table Human_friends 
        drop constraint FKAC7104631DCB1310
14:12:36,608 DEBUG SQL:104 - 
    alter table JOINED 
        drop constraint FK82C23B49534E0F13
14:12:36,608 DEBUG SQL:104 - 
    alter table Lizard 
        drop constraint FK87B0E2B6EE398315
14:12:36,608 DEBUG SQL:104 - 
    alter table Mammal 
        drop constraint FK88EF417FEFA9D699
14:12:36,608 DEBUG SQL:104 - 
    alter table Mammal 
        drop constraint FK88EF417FCE6EEE98
14:12:36,608 DEBUG SQL:104 - 
    alter table Reptile 
        drop constraint FKA4790CABEFA9D699
14:12:36,608 DEBUG SQL:104 - 
    alter table Zoo 
        drop constraint FK15FBA55106523
14:12:36,609 DEBUG SQL:104 - 
    alter table Zoo_directors 
        drop constraint FK2D21982265B0D719
14:12:36,618 DEBUG SQL:104 - 
    alter table Zoo_directors 
        drop constraint FK2D219822C590D705
14:12:36,618 DEBUG SQL:104 - 
    alter table "User_permissions" 
        drop constraint FKB4582A30F2810CD2
14:12:36,618 DEBUG SQL:104 - 
    alter table "User" 
        drop constraint FK285FEB65AF5B87
14:12:36,618 DEBUG SQL:104 - 
    alter table addresses 
        drop constraint FK34207BA255106523
14:12:36,618 DEBUG SQL:104 - 
    alter table addresses 
        drop constraint FK34207BA26B9FAF99
14:12:36,619 DEBUG SQL:104 - 
    alter table human_nick_names 
        drop constraint FK8718E1BE6B9FAF99
14:12:36,619 DEBUG SQL:104 - 
    drop table Animal if exists
14:12:36,619 DEBUG SQL:104 - 
    drop table Cat if exists
14:12:36,619 DEBUG SQL:104 - 
    drop table Dog if exists
14:12:36,619 DEBUG SQL:104 - 
    drop table DomesticAnimal if exists
14:12:36,620 DEBUG SQL:104 - 
    drop table Human if exists
14:12:36,620 DEBUG SQL:104 - 
    drop table Human_family if exists
14:12:36,629 DEBUG SQL:104 - 
    drop table Human_friends if exists
14:12:36,630 DEBUG SQL:104 - 
    drop table JOINED if exists
14:12:36,630 DEBUG SQL:104 - 
    drop table Joiner if exists
14:12:36,630 DEBUG SQL:104 - 
    drop table Lizard if exists
14:12:36,630 DEBUG SQL:104 - 
    drop table Mammal if exists
14:12:36,630 DEBUG SQL:104 - 
    drop table Reptile if exists
14:12:36,631 DEBUG SQL:104 - 
    drop table StateProvince if exists
14:12:36,631 DEBUG SQL:104 - 
    drop table Zoo if exists
14:12:36,631 DEBUG SQL:104 - 
    drop table Zoo_directors if exists
14:12:36,631 DEBUG SQL:104 - 
    drop table "User_permissions" if exists
14:12:36,631 DEBUG SQL:104 - 
    drop table "User" if exists
14:12:36,632 DEBUG SQL:104 - 
    drop table addresses if exists
14:12:36,632 DEBUG SQL:104 - 
    drop table human_nick_names if exists
14:12:36,632  INFO SchemaExport:405 - HHH000230: Schema export complete
14:12:36,632  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
