<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" hostname="dhcp-10.15.208.168.stl.redhat.com" name="org.hibernate.test.annotations.embedded.many2one.EmbeddableWithMany2OneTest" tests="2" time="0.217" timestamp="2013-02-28T20:10:22">
  <properties />
  <testcase classname="org.hibernate.test.annotations.embedded.many2one.EmbeddableWithMany2OneTest" name="testBasicOps" time="0.085" />
  <testcase classname="org.hibernate.test.annotations.embedded.many2one.EmbeddableWithMany2OneTest" name="testJoinAcrossEmbedded" time="0.099" />
  <system-out><![CDATA[14:10:22,276  INFO CustomRunner:132 - BeforeClass: org.hibernate.test.annotations.embedded.many2one.EmbeddableWithMany2OneTest
14:10:22,281  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:10:22,281  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:10:22,282  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:10:22,282  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:10:22,282  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:10:22,284  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:10:22,284  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:10:22,285  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:10:22,285  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:10:22,285  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:10:22,296  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:10:22,297 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:10:22,297 DEBUG SQL:104 - 
    alter table Person 
        drop constraint FK8E4887755DB8F7D5
14:10:22,297 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Person drop constraint FK8E4887755DB8F7D5
14:10:22,297 ERROR SchemaExport:426 - Table "PERSON" not found; SQL statement:

    alter table Person 
        drop constraint FK8E4887755DB8F7D5 [42102-145]
14:10:22,298 DEBUG SQL:104 - 
    drop table Country if exists
14:10:22,298 DEBUG SQL:104 - 
    drop table Person if exists
14:10:22,298 DEBUG SQL:104 - 
    drop sequence hibernate_sequence
14:10:22,298 ERROR SchemaExport:425 - HHH000389: Unsuccessful: drop sequence hibernate_sequence
14:10:22,298 ERROR SchemaExport:426 - Sequence "HIBERNATE_SEQUENCE" not found; SQL statement:

    drop sequence hibernate_sequence [90036-145]
14:10:22,298 DEBUG SQL:104 - 
    create table Country (
        iso2 varchar(255) not null,
        name varchar(255),
        primary key (iso2)
    )
14:10:22,303 DEBUG SQL:104 - 
    create table Person (
        id bigint not null,
        city varchar(255),
        line1 varchar(255),
        line2 varchar(255),
        postalCode varchar(255),
        name varchar(255),
        country_iso2 varchar(255),
        primary key (id)
    )
14:10:22,303 DEBUG SQL:104 - 
    alter table Person 
        add constraint FK8E4887755DB8F7D5 
        foreign key (country_iso2) 
        references Country
14:10:22,304 DEBUG SQL:104 - 
    create sequence hibernate_sequence start with 1 increment by 1
14:10:22,304  INFO SchemaExport:405 - HHH000230: Schema export complete
14:10:22,305  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:10:22,305  INFO CustomRunner:139 - Test: testBasicOps
14:10:22,306 DEBUG SQL:104 - 
    call next value for hibernate_sequence
14:10:22,307 DEBUG SQL:104 - 
    insert 
    into
        Country
        (name, iso2) 
    values
        (?, ?)
14:10:22,319 DEBUG SQL:104 - 
    insert 
    into
        Person
        (city, country_iso2, line1, line2, postalCode, name, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
14:10:22,320 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.annotations.embedded.many2one.Person p where p.address.country.iso2 = 'US'
14:10:22,322 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  |  |  |  \-[IDENT] Node: 'test'
    |        |  |  |  |  \-[IDENT] Node: 'annotations'
    |        |  |  |  \-[IDENT] Node: 'embedded'
    |        |  |  \-[IDENT] Node: 'many2one'
    |        |  \-[IDENT] Node: 'Person'
    |        \-[ALIAS] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'p'
          |  |  |  \-[IDENT] Node: 'address'
          |  |  \-[IDENT] Node: 'country'
          |  \-[IDENT] Node: 'iso2'
          \-[QUOTED_STRING] Node: ''US''

14:10:22,328 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:22,329 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.annotations.embedded.many2one.Person (p) -> person0_
14:10:22,329 DEBUG FromReferenceNode:74 - Resolved : p -> person0_.id
14:10:22,329 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@6700af91
14:10:22,329 DEBUG DotNode:585 - Unresolved property path is now 'address.country'
14:10:22,330 DEBUG FromReferenceNode:74 - Resolved : p.address -> person0_.country_iso2
14:10:22,330 DEBUG DotNode:599 - getDataType() : address.country -> org.hibernate.type.ManyToOneType(org.hibernate.test.annotations.embedded.many2one.Country)
14:10:22,330 DEBUG DotNode:562 - dereferenceShortcut() : property iso2 in org.hibernate.test.annotations.embedded.many2one.Person does not require a join.
14:10:22,330 DEBUG DotNode:585 - Unresolved property path is now 'address.country.iso2'
14:10:22,330 DEBUG FromReferenceNode:74 - Resolved : p.address.country -> person0_.country_iso2
14:10:22,331 DEBUG DotNode:599 - getDataType() : address.country.iso2 -> org.hibernate.type.StringType@2dc8de40
14:10:22,331 DEBUG FromReferenceNode:74 - Resolved : p.address.country.iso2 -> person0_.country_iso2
14:10:22,331 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Person person0_ ) ( where ( = ( person0_.country_iso2 ( person0_.country_iso2 ( person0_.country_iso2 person0_.id address ) country ) iso2 ) 'US' ) ) )
14:10:22,331 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:10:22,332 DEBUG JoinProcessor:175 - Using FROM fragment [Person person0_]
14:10:22,332 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Person)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'person0_.id as id1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=Person,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.annotations.embedded.many2one.Person}}}
    |  \-[SQL_TOKEN] SqlFragment: 'person0_.city as city1_, person0_.country_iso2 as country7_1_, person0_.line1 as line3_1_, person0_.line2 as line4_1_, person0_.postalCode as postalCode1_, person0_.name as name1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[person0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Person person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=Person,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.annotations.embedded.many2one.Person}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'person0_.country_iso2' {propertyName=iso2,dereferenceType=ALL,propertyPath=address.country.iso2,path=p.address.country.iso2,tableAlias=person0_,className=org.hibernate.test.annotations.embedded.many2one.Person,classAlias=p}
          |  +-[DOT] DotNode: 'person0_.country_iso2' {propertyName=iso2,dereferenceType=0,propertyPath=address.country.iso2,path=p.address.country,tableAlias=person0_,className=org.hibernate.test.annotations.embedded.many2one.Person,classAlias=p}
          |  |  +-[DOT] DotNode: 'person0_.country_iso2' {propertyName=country,dereferenceType=2,propertyPath=address.country,path=p.address,tableAlias=person0_,className=org.hibernate.test.annotations.embedded.many2one.Person,classAlias=p}
          |  |  |  +-[ALIAS_REF] IdentNode: 'person0_.id' {alias=p, className=org.hibernate.test.annotations.embedded.many2one.Person, tableAlias=person0_}
          |  |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
          |  |  \-[IDENT] IdentNode: 'country' {originalText=country}
          |  \-[IDENT] IdentNode: 'iso2' {originalText=iso2}
          \-[QUOTED_STRING] LiteralNode: ''US''

14:10:22,338 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:22,338 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.annotations.embedded.many2one.Person p where p.address.country.iso2 = 'US'
14:10:22,338 DEBUG QueryTranslatorImpl:236 - SQL: select person0_.id as id1_, person0_.city as city1_, person0_.country_iso2 as country7_1_, person0_.line1 as line3_1_, person0_.line2 as line4_1_, person0_.postalCode as postalCode1_, person0_.name as name1_ from Person person0_ where person0_.country_iso2='US'
14:10:22,338 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:22,339 DEBUG SQL:104 - 
    select
        person0_.id as id1_,
        person0_.city as city1_,
        person0_.country_iso2 as country7_1_,
        person0_.line1 as line3_1_,
        person0_.line2 as line4_1_,
        person0_.postalCode as postalCode1_,
        person0_.name as name1_ 
    from
        Person person0_ 
    where
        person0_.country_iso2='US'
14:10:22,341 DEBUG SQL:104 - 
    select
        country0_.iso2 as iso1_0_0_,
        country0_.name as name0_0_ 
    from
        Country country0_ 
    where
        country0_.iso2=?
14:10:22,347 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.annotations.embedded.many2one.Person p where p.address.country.id = 'US'
14:10:22,349 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  |  |  |  \-[IDENT] Node: 'test'
    |        |  |  |  |  \-[IDENT] Node: 'annotations'
    |        |  |  |  \-[IDENT] Node: 'embedded'
    |        |  |  \-[IDENT] Node: 'many2one'
    |        |  \-[IDENT] Node: 'Person'
    |        \-[ALIAS] Node: 'p'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'p'
          |  |  |  \-[IDENT] Node: 'address'
          |  |  \-[IDENT] Node: 'country'
          |  \-[IDENT] Node: 'id'
          \-[QUOTED_STRING] Node: ''US''

14:10:22,359 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:22,359 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.annotations.embedded.many2one.Person (p) -> person0_
14:10:22,359 DEBUG FromReferenceNode:74 - Resolved : p -> person0_.id
14:10:22,360 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@6700af91
14:10:22,360 DEBUG DotNode:585 - Unresolved property path is now 'address.country'
14:10:22,360 DEBUG FromReferenceNode:74 - Resolved : p.address -> person0_.country_iso2
14:10:22,360 DEBUG DotNode:599 - getDataType() : address.country -> org.hibernate.type.ManyToOneType(org.hibernate.test.annotations.embedded.many2one.Country)
14:10:22,361 DEBUG DotNode:562 - dereferenceShortcut() : property id in org.hibernate.test.annotations.embedded.many2one.Person does not require a join.
14:10:22,361 DEBUG DotNode:585 - Unresolved property path is now 'address.country.id'
14:10:22,361 DEBUG FromReferenceNode:74 - Resolved : p.address.country -> person0_.country_iso2
14:10:22,361 DEBUG DotNode:599 - getDataType() : address.country.id -> org.hibernate.type.StringType@2dc8de40
14:10:22,361 DEBUG FromReferenceNode:74 - Resolved : p.address.country.id -> person0_.country_iso2
14:10:22,361 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Person person0_ ) ( where ( = ( person0_.country_iso2 ( person0_.country_iso2 ( person0_.country_iso2 person0_.id address ) country ) id ) 'US' ) ) )
14:10:22,361 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:10:22,362 DEBUG JoinProcessor:175 - Using FROM fragment [Person person0_]
14:10:22,362 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Person)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'person0_.id as id1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=Person,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.annotations.embedded.many2one.Person}}}
    |  \-[SQL_TOKEN] SqlFragment: 'person0_.city as city1_, person0_.country_iso2 as country7_1_, person0_.line1 as line3_1_, person0_.line2 as line4_1_, person0_.postalCode as postalCode1_, person0_.name as name1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[person0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Person person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=Person,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.annotations.embedded.many2one.Person}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'person0_.country_iso2' {propertyName=id,dereferenceType=ALL,propertyPath=address.country.id,path=p.address.country.id,tableAlias=person0_,className=org.hibernate.test.annotations.embedded.many2one.Person,classAlias=p}
          |  +-[DOT] DotNode: 'person0_.country_iso2' {propertyName=id,dereferenceType=0,propertyPath=address.country.id,path=p.address.country,tableAlias=person0_,className=org.hibernate.test.annotations.embedded.many2one.Person,classAlias=p}
          |  |  +-[DOT] DotNode: 'person0_.country_iso2' {propertyName=country,dereferenceType=2,propertyPath=address.country,path=p.address,tableAlias=person0_,className=org.hibernate.test.annotations.embedded.many2one.Person,classAlias=p}
          |  |  |  +-[ALIAS_REF] IdentNode: 'person0_.id' {alias=p, className=org.hibernate.test.annotations.embedded.many2one.Person, tableAlias=person0_}
          |  |  |  \-[IDENT] IdentNode: 'address' {originalText=address}
          |  |  \-[IDENT] IdentNode: 'country' {originalText=country}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[QUOTED_STRING] LiteralNode: ''US''

14:10:22,362 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:22,362 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.annotations.embedded.many2one.Person p where p.address.country.id = 'US'
14:10:22,363 DEBUG QueryTranslatorImpl:236 - SQL: select person0_.id as id1_, person0_.city as city1_, person0_.country_iso2 as country7_1_, person0_.line1 as line3_1_, person0_.line2 as line4_1_, person0_.postalCode as postalCode1_, person0_.name as name1_ from Person person0_ where person0_.country_iso2='US'
14:10:22,363 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:22,363 DEBUG SQL:104 - 
    select
        person0_.id as id1_,
        person0_.city as city1_,
        person0_.country_iso2 as country7_1_,
        person0_.line1 as line3_1_,
        person0_.line2 as line4_1_,
        person0_.postalCode as postalCode1_,
        person0_.name as name1_ 
    from
        Person person0_ 
    where
        person0_.country_iso2='US'
14:10:22,364 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.annotations.embedded.many2one.Country
14:10:22,365 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[DOT] Node: '.'
                |  |  |  |  |  +-[IDENT] Node: 'org'
                |  |  |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  |  |  \-[IDENT] Node: 'test'
                |  |  |  \-[IDENT] Node: 'annotations'
                |  |  \-[IDENT] Node: 'embedded'
                |  \-[IDENT] Node: 'many2one'
                \-[IDENT] Node: 'Country'

14:10:22,374 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:22,375 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.annotations.embedded.many2one.Country (<no alias>) -> country0_
14:10:22,375 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Country country0_ ) )
14:10:22,375 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:10:22,375 DEBUG JoinProcessor:175 - Using FROM fragment [Country country0_]
14:10:22,375 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Country)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'country0_.iso2 as iso1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Country,tableAlias=country0_,origin=null,columns={,className=org.hibernate.test.annotations.embedded.many2one.Country}}}
    |  \-[SQL_TOKEN] SqlFragment: 'country0_.name as name0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[country0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Country country0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Country,tableAlias=country0_,origin=null,columns={,className=org.hibernate.test.annotations.embedded.many2one.Country}}

14:10:22,384 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:22,386 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.annotations.embedded.many2one.Country
14:10:22,386 DEBUG QueryTranslatorImpl:236 - SQL: select country0_.iso2 as iso1_0_, country0_.name as name0_ from Country country0_
14:10:22,386 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:22,387 DEBUG SQL:104 - 
    select
        country0_.iso2 as iso1_0_,
        country0_.name as name0_ 
    from
        Country country0_
14:10:22,389 DEBUG SQL:104 - 
    delete 
    from
        Person 
    where
        id=?
14:10:22,389 DEBUG SQL:104 - 
    delete 
    from
        Country 
    where
        iso2=?
14:10:22,390  INFO CustomRunner:139 - Test: testJoinAcrossEmbedded
14:10:22,391 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.annotations.embedded.many2one.Person p join p.address as a join a.country as c where c.name = 'US'
14:10:22,393 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     +-[RANGE] Node: 'RANGE'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |     |  |  |  |  |  |  |  \-[IDENT] Node: 'hibernate'
    |     |  |  |  |  |  |  \-[IDENT] Node: 'test'
    |     |  |  |  |  |  \-[IDENT] Node: 'annotations'
    |     |  |  |  |  \-[IDENT] Node: 'embedded'
    |     |  |  |  \-[IDENT] Node: 'many2one'
    |     |  |  \-[IDENT] Node: 'Person'
    |     |  \-[ALIAS] Node: 'p'
    |     +-[JOIN] Node: 'join'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'p'
    |     |  |  \-[IDENT] Node: 'address'
    |     |  \-[ALIAS] Node: 'a'
    |     \-[JOIN] Node: 'join'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'a'
    |        |  \-[IDENT] Node: 'country'
    |        \-[ALIAS] Node: 'c'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'name'
          \-[QUOTED_STRING] Node: ''US''

14:10:22,410 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:22,411 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.annotations.embedded.many2one.Person (p) -> person0_
14:10:22,411 DEBUG FromReferenceNode:74 - Resolved : p -> person0_.id
14:10:22,411 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@6700af91
14:10:22,411 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:10:22,411 DEBUG FromReferenceNode:74 - Resolved : p.address -> person0_.city, person0_.country_iso2, person0_.line1, person0_.line2, person0_.postalCode
14:10:22,412 DEBUG FromClause:282 - addJoinByPathMap() : address -> ComponentJoin{path=address, type=class org.hibernate.test.annotations.embedded.many2one.Address}
14:10:22,413 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[0] ComponentJoin: '{text:null}' ComponentJoin{path=address, type=class org.hibernate.test.annotations.embedded.many2one.Address}

14:10:22,413 DEBUG FromReferenceNode:74 - Resolved : a -> (person0_.city, person0_.country_iso2, person0_.line1, person0_.line2, person0_.postalCode)
14:10:22,413 DEBUG DotNode:599 - getDataType() : country -> org.hibernate.type.ManyToOneType(org.hibernate.test.annotations.embedded.many2one.Country)
14:10:22,413 DEBUG DotNode:389 - dereferenceEntityJoin() : generating join for country in null (c) parent = [ {null} ]
14:10:22,422 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.annotations.embedded.many2one.Country (c) -> country1_
14:10:22,422 DEBUG FromClause:282 - addJoinByPathMap() : a.country -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Country,tableAlias=country1_,origin=Person person0_,columns={person0_.country_iso2 ,className=org.hibernate.test.annotations.embedded.many2one.Country}}
14:10:22,423 DEBUG FromReferenceNode:74 - Resolved : a.country -> person0_.country_iso2
14:10:22,423 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'Country country1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Country,tableAlias=country1_,origin=Person person0_,columns={person0_.country_iso2 ,className=org.hibernate.test.annotations.embedded.many2one.Country}}

14:10:22,423 DEBUG FromReferenceNode:74 - Resolved : c -> country1_.iso2
14:10:22,423 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:10:22,423 DEBUG FromReferenceNode:74 - Resolved : c.name -> country1_.name
14:10:22,423 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} ( Person person0_ Country country1_ ) ) ( where ( = ( country1_.name country1_.iso2 name ) 'US' ) ) )
14:10:22,424 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:10:22,424 DEBUG JoinProcessor:175 - Using FROM fragment [Person person0_]
14:10:22,424 DEBUG JoinProcessor:175 - Using FROM fragment [inner join Country country1_ on person0_.country_iso2=country1_.iso2]
14:10:22,424 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Country,Person)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'person0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=Person,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.annotations.embedded.many2one.Person}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'country1_.iso2 as iso1_0_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Country,tableAlias=country1_,origin=Person person0_,columns={person0_.country_iso2 ,className=org.hibernate.test.annotations.embedded.many2one.Country}}}
    |  +-[SQL_TOKEN] SqlFragment: 'person0_.city as city1_0_, person0_.country_iso2 as country7_1_0_, person0_.line1 as line3_1_0_, person0_.line2 as line4_1_0_, person0_.postalCode as postalCode1_0_, person0_.name as name1_0_'
    |  \-[SQL_TOKEN] SqlFragment: 'country1_.name as name0_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=3, fromElementByClassAlias=[c, a, p], fromElementByTableAlias=[country1_, person0_], fromElementsByPath=[a.country, address], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Person person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=Person,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.annotations.embedded.many2one.Person}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join Country country1_ on person0_.country_iso2=country1_.iso2' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Country,tableAlias=country1_,origin=Person person0_,columns={person0_.country_iso2 ,className=org.hibernate.test.annotations.embedded.many2one.Country}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'country1_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=c.name,tableAlias=country1_,className=org.hibernate.test.annotations.embedded.many2one.Country,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'country1_.iso2' {alias=c, className=org.hibernate.test.annotations.embedded.many2one.Country, tableAlias=country1_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[QUOTED_STRING] LiteralNode: ''US''

14:10:22,424 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:22,436 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.annotations.embedded.many2one.Person p join p.address as a join a.country as c where c.name = 'US'
14:10:22,436 DEBUG QueryTranslatorImpl:236 - SQL: select person0_.id as id1_0_, country1_.iso2 as iso1_0_1_, person0_.city as city1_0_, person0_.country_iso2 as country7_1_0_, person0_.line1 as line3_1_0_, person0_.line2 as line4_1_0_, person0_.postalCode as postalCode1_0_, person0_.name as name1_0_, country1_.name as name0_1_ from Person person0_ inner join Country country1_ on person0_.country_iso2=country1_.iso2 where country1_.name='US'
14:10:22,436 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:22,437 DEBUG SQL:104 - 
    select
        person0_.id as id1_0_,
        country1_.iso2 as iso1_0_1_,
        person0_.city as city1_0_,
        person0_.country_iso2 as country7_1_0_,
        person0_.line1 as line3_1_0_,
        person0_.line2 as line4_1_0_,
        person0_.postalCode as postalCode1_0_,
        person0_.name as name1_0_,
        country1_.name as name0_1_ 
    from
        Person person0_ 
    inner join
        Country country1_ 
            on person0_.country_iso2=country1_.iso2 
    where
        country1_.name='US'
14:10:22,442 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.annotations.embedded.many2one.Person p join p.address as a join a.country as c where c.id = 'US'
14:10:22,444 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     +-[RANGE] Node: 'RANGE'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |     |  |  |  |  |  |  |  \-[IDENT] Node: 'hibernate'
    |     |  |  |  |  |  |  \-[IDENT] Node: 'test'
    |     |  |  |  |  |  \-[IDENT] Node: 'annotations'
    |     |  |  |  |  \-[IDENT] Node: 'embedded'
    |     |  |  |  \-[IDENT] Node: 'many2one'
    |     |  |  \-[IDENT] Node: 'Person'
    |     |  \-[ALIAS] Node: 'p'
    |     +-[JOIN] Node: 'join'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[IDENT] Node: 'p'
    |     |  |  \-[IDENT] Node: 'address'
    |     |  \-[ALIAS] Node: 'a'
    |     \-[JOIN] Node: 'join'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'a'
    |        |  \-[IDENT] Node: 'country'
    |        \-[ALIAS] Node: 'c'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'id'
          \-[QUOTED_STRING] Node: ''US''

14:10:22,451 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:22,452 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.annotations.embedded.many2one.Person (p) -> person0_
14:10:22,452 DEBUG FromReferenceNode:74 - Resolved : p -> person0_.id
14:10:22,461 DEBUG DotNode:599 - getDataType() : address -> org.hibernate.type.ComponentType@6700af91
14:10:22,461 DEBUG DotNode:588 - Terminal propertyPath = [address]
14:10:22,461 DEBUG FromReferenceNode:74 - Resolved : p.address -> person0_.city, person0_.country_iso2, person0_.line1, person0_.line2, person0_.postalCode
14:10:22,462 DEBUG FromClause:282 - addJoinByPathMap() : address -> ComponentJoin{path=address, type=class org.hibernate.test.annotations.embedded.many2one.Address}
14:10:22,462 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[0] ComponentJoin: '{text:null}' ComponentJoin{path=address, type=class org.hibernate.test.annotations.embedded.many2one.Address}

14:10:22,462 DEBUG FromReferenceNode:74 - Resolved : a -> (person0_.city, person0_.country_iso2, person0_.line1, person0_.line2, person0_.postalCode)
14:10:22,462 DEBUG DotNode:599 - getDataType() : country -> org.hibernate.type.ManyToOneType(org.hibernate.test.annotations.embedded.many2one.Country)
14:10:22,463 DEBUG DotNode:389 - dereferenceEntityJoin() : generating join for country in null (c) parent = [ {null} ]
14:10:22,463 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.annotations.embedded.many2one.Country (c) -> country1_
14:10:22,463 DEBUG FromClause:282 - addJoinByPathMap() : a.country -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Country,tableAlias=country1_,origin=Person person0_,columns={person0_.country_iso2 ,className=org.hibernate.test.annotations.embedded.many2one.Country}}
14:10:22,463 DEBUG FromReferenceNode:74 - Resolved : a.country -> person0_.country_iso2
14:10:22,463 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'Country country1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Country,tableAlias=country1_,origin=Person person0_,columns={person0_.country_iso2 ,className=org.hibernate.test.annotations.embedded.many2one.Country}}

14:10:22,463 DEBUG FromReferenceNode:74 - Resolved : c -> country1_.iso2
14:10:22,463 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.StringType@2dc8de40
14:10:22,463 DEBUG FromReferenceNode:74 - Resolved : c.id -> country1_.iso2
14:10:22,464 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} ( Person person0_ Country country1_ ) ) ( where ( = ( country1_.iso2 country1_.iso2 id ) 'US' ) ) )
14:10:22,464 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:10:22,464 DEBUG JoinProcessor:175 - Using FROM fragment [Person person0_]
14:10:22,464 DEBUG JoinProcessor:175 - Using FROM fragment [inner join Country country1_ on person0_.country_iso2=country1_.iso2]
14:10:22,464 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Country,Person)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'person0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=Person,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.annotations.embedded.many2one.Person}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'country1_.iso2 as iso1_0_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Country,tableAlias=country1_,origin=Person person0_,columns={person0_.country_iso2 ,className=org.hibernate.test.annotations.embedded.many2one.Country}}}
    |  +-[SQL_TOKEN] SqlFragment: 'person0_.city as city1_0_, person0_.country_iso2 as country7_1_0_, person0_.line1 as line3_1_0_, person0_.line2 as line4_1_0_, person0_.postalCode as postalCode1_0_, person0_.name as name1_0_'
    |  \-[SQL_TOKEN] SqlFragment: 'country1_.name as name0_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=3, fromElementByClassAlias=[c, a, p], fromElementByTableAlias=[country1_, person0_], fromElementsByPath=[a.country, address], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Person person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=Person,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.annotations.embedded.many2one.Person}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join Country country1_ on person0_.country_iso2=country1_.iso2' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Country,tableAlias=country1_,origin=Person person0_,columns={person0_.country_iso2 ,className=org.hibernate.test.annotations.embedded.many2one.Country}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'country1_.iso2' {propertyName=id,dereferenceType=ALL,propertyPath=id,path=c.id,tableAlias=country1_,className=org.hibernate.test.annotations.embedded.many2one.Country,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'country1_.iso2' {alias=c, className=org.hibernate.test.annotations.embedded.many2one.Country, tableAlias=country1_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[QUOTED_STRING] LiteralNode: ''US''

14:10:22,475 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:22,475 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.annotations.embedded.many2one.Person p join p.address as a join a.country as c where c.id = 'US'
14:10:22,476 DEBUG QueryTranslatorImpl:236 - SQL: select person0_.id as id1_0_, country1_.iso2 as iso1_0_1_, person0_.city as city1_0_, person0_.country_iso2 as country7_1_0_, person0_.line1 as line3_1_0_, person0_.line2 as line4_1_0_, person0_.postalCode as postalCode1_0_, person0_.name as name1_0_, country1_.name as name0_1_ from Person person0_ inner join Country country1_ on person0_.country_iso2=country1_.iso2 where country1_.iso2='US'
14:10:22,476 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:10:22,476 DEBUG SQL:104 - 
    select
        person0_.id as id1_0_,
        country1_.iso2 as iso1_0_1_,
        person0_.city as city1_0_,
        person0_.country_iso2 as country7_1_0_,
        person0_.line1 as line3_1_0_,
        person0_.line2 as line4_1_0_,
        person0_.postalCode as postalCode1_0_,
        person0_.name as name1_0_,
        country1_.name as name0_1_ 
    from
        Person person0_ 
    inner join
        Country country1_ 
            on person0_.country_iso2=country1_.iso2 
    where
        country1_.iso2='US'
14:10:22,490  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:10:22,490 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:10:22,490 DEBUG SQL:104 - 
    alter table Person 
        drop constraint FK8E4887755DB8F7D5
14:10:22,491 DEBUG SQL:104 - 
    drop table Country if exists
14:10:22,491 DEBUG SQL:104 - 
    drop table Person if exists
14:10:22,491 DEBUG SQL:104 - 
    drop sequence hibernate_sequence
14:10:22,492  INFO SchemaExport:405 - HHH000230: Schema export complete
14:10:22,492  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
