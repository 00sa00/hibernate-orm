<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" hostname="dhcp-10.15.208.168.stl.redhat.com" name="org.hibernate.test.cut.CompositeUserTypeTest" tests="2" time="0.258" timestamp="2013-02-28T20:12:12">
  <properties />
  <testcase classname="org.hibernate.test.cut.CompositeUserTypeTest" name="testCompositeUserType" time="0.157" />
  <testcase classname="org.hibernate.test.cut.CompositeUserTypeTest" name="testCustomColumnReadAndWrite" time="0.052" />
  <system-out><![CDATA[14:12:12,296  INFO CustomRunner:132 - BeforeClass: org.hibernate.test.cut.CompositeUserTypeTest
14:12:12,299  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/cut/types.hbm.xml
14:12:12,305  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/cut/Transaction.hbm.xml
14:12:12,316  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:12:12,317  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:12:12,317  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:12:12,317  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:12:12,317  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:12:12,318  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:12:12,319  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:12:12,319  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:12:12,328  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:12:12,328  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:12:12,337  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:12:12,337 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:12:12,338 DEBUG SQL:104 - 
    drop table MutualFund if exists
14:12:12,338 DEBUG SQL:104 - 
    drop table Trnsctn if exists
14:12:12,338 DEBUG SQL:104 - 
    create table MutualFund (
        id bigint generated by default as identity,
        amount_millions decimal(19,2) not null,
        currency varchar(255) not null,
        primary key (id)
    )
14:12:12,338 DEBUG SQL:104 - 
    create table Trnsctn (
        id bigint generated by default as identity,
        description varchar(100) not null,
        amount decimal(19,2) not null,
        currency varchar(255) not null,
        primary key (id)
    )
14:12:12,339  INFO SchemaExport:405 - HHH000230: Schema export complete
14:12:12,339  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:12:12,340  INFO CustomRunner:139 - Test: testCompositeUserType
14:12:12,341 DEBUG SQL:104 - 
    insert 
    into
        Trnsctn
        (id, description, amount, currency) 
    values
        (null, ?, ?, ?)
14:12:12,352 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.cut.Transaction tran where tran.value.amount > 1.0 and tran.value.currency = 'USD'
14:12:12,354 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  |  \-[IDENT] Node: 'test'
    |        |  |  \-[IDENT] Node: 'cut'
    |        |  \-[IDENT] Node: 'Transaction'
    |        \-[ALIAS] Node: 'tran'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[GT] Node: '>'
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'tran'
          |  |  |  \-[IDENT] Node: 'value'
          |  |  \-[IDENT] Node: 'amount'
          |  \-[NUM_DOUBLE] Node: '1.0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'tran'
             |  |  \-[IDENT] Node: 'value'
             |  \-[IDENT] Node: 'currency'
             \-[QUOTED_STRING] Node: ''USD''

14:12:12,354 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:12,354 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.cut.Transaction (tran) -> transactio0_
14:12:12,354 DEBUG FromReferenceNode:74 - Resolved : tran -> transactio0_.id
14:12:12,354 DEBUG DotNode:599 - getDataType() : value -> org.hibernate.type.CompositeCustomType@7f9c1a02
14:12:12,354 DEBUG DotNode:585 - Unresolved property path is now 'value.amount'
14:12:12,355 DEBUG FromReferenceNode:74 - Resolved : tran.value -> transactio0_.amount
14:12:12,355 DEBUG DotNode:599 - getDataType() : value.amount -> org.hibernate.type.BigDecimalType@3bb4a749
14:12:12,358 DEBUG FromReferenceNode:74 - Resolved : tran.value.amount -> transactio0_.amount
14:12:12,358 DEBUG FromReferenceNode:74 - Resolved : tran -> transactio0_.id
14:12:12,378 DEBUG DotNode:599 - getDataType() : value -> org.hibernate.type.CompositeCustomType@7f9c1a02
14:12:12,378 DEBUG DotNode:585 - Unresolved property path is now 'value.currency'
14:12:12,378 DEBUG FromReferenceNode:74 - Resolved : tran.value -> transactio0_.currency
14:12:12,378 DEBUG DotNode:599 - getDataType() : value.currency -> org.hibernate.type.CurrencyType@ed7596b
14:12:12,378 DEBUG FromReferenceNode:74 - Resolved : tran.value.currency -> transactio0_.currency
14:12:12,379 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Trnsctn transactio0_ ) ( where ( and ( > ( transactio0_.amount ( transactio0_.amount transactio0_.id value ) amount ) 1.0 ) ( = ( transactio0_.currency ( transactio0_.currency transactio0_.id value ) currency ) 'USD' ) ) ) )
14:12:12,379 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:12:12,379 DEBUG JoinProcessor:175 - Using FROM fragment [Trnsctn transactio0_]
14:12:12,379 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Trnsctn)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'transactio0_.id as id1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tran,role=null,tableName=Trnsctn,tableAlias=transactio0_,origin=null,columns={,className=org.hibernate.test.cut.Transaction}}}
    |  \-[SQL_TOKEN] SqlFragment: 'transactio0_.description as descript2_1_, transactio0_.amount as amount1_, transactio0_.currency as currency1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[tran], fromElementByTableAlias=[transactio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Trnsctn transactio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tran,role=null,tableName=Trnsctn,tableAlias=transactio0_,origin=null,columns={,className=org.hibernate.test.cut.Transaction}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[GT] BinaryLogicOperatorNode: '>'
          |  +-[DOT] DotNode: 'transactio0_.amount' {propertyName=amount,dereferenceType=ALL,propertyPath=value.amount,path=tran.value.amount,tableAlias=transactio0_,className=org.hibernate.test.cut.Transaction,classAlias=tran}
          |  |  +-[DOT] DotNode: 'transactio0_.amount' {propertyName=amount,dereferenceType=2,propertyPath=value.amount,path=tran.value,tableAlias=transactio0_,className=org.hibernate.test.cut.Transaction,classAlias=tran}
          |  |  |  +-[ALIAS_REF] IdentNode: 'transactio0_.id' {alias=tran, className=org.hibernate.test.cut.Transaction, tableAlias=transactio0_}
          |  |  |  \-[IDENT] IdentNode: 'value' {originalText=value}
          |  |  \-[IDENT] IdentNode: 'amount' {originalText=amount}
          |  \-[NUM_DOUBLE] LiteralNode: '1.0'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'transactio0_.currency' {propertyName=currency,dereferenceType=ALL,propertyPath=value.currency,path=tran.value.currency,tableAlias=transactio0_,className=org.hibernate.test.cut.Transaction,classAlias=tran}
             |  +-[DOT] DotNode: 'transactio0_.currency' {propertyName=currency,dereferenceType=2,propertyPath=value.currency,path=tran.value,tableAlias=transactio0_,className=org.hibernate.test.cut.Transaction,classAlias=tran}
             |  |  +-[ALIAS_REF] IdentNode: 'transactio0_.id' {alias=tran, className=org.hibernate.test.cut.Transaction, tableAlias=transactio0_}
             |  |  \-[IDENT] IdentNode: 'value' {originalText=value}
             |  \-[IDENT] IdentNode: 'currency' {originalText=currency}
             \-[QUOTED_STRING] LiteralNode: ''USD''

14:12:12,384 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:12,384 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.cut.Transaction tran where tran.value.amount > 1.0 and tran.value.currency = 'USD'
14:12:12,384 DEBUG QueryTranslatorImpl:236 - SQL: select transactio0_.id as id1_, transactio0_.description as descript2_1_, transactio0_.amount as amount1_, transactio0_.currency as currency1_ from Trnsctn transactio0_ where transactio0_.amount>1.0 and transactio0_.currency='USD'
14:12:12,384 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:12,385 DEBUG SQL:104 - 
    select
        transactio0_.id as id1_,
        transactio0_.description as descript2_1_,
        transactio0_.amount as amount1_,
        transactio0_.currency as currency1_ 
    from
        Trnsctn transactio0_ 
    where
        transactio0_.amount>1.0 
        and transactio0_.currency='USD'
14:12:12,385 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.cut.Transaction tran where tran.value.amount > 1.0 and tran.value.currency = 'AUD'
14:12:12,387 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  |  \-[IDENT] Node: 'test'
    |        |  |  \-[IDENT] Node: 'cut'
    |        |  \-[IDENT] Node: 'Transaction'
    |        \-[ALIAS] Node: 'tran'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[GT] Node: '>'
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'tran'
          |  |  |  \-[IDENT] Node: 'value'
          |  |  \-[IDENT] Node: 'amount'
          |  \-[NUM_DOUBLE] Node: '1.0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 'tran'
             |  |  \-[IDENT] Node: 'value'
             |  \-[IDENT] Node: 'currency'
             \-[QUOTED_STRING] Node: ''AUD''

14:12:12,450 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:12,451 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.cut.Transaction (tran) -> transactio0_
14:12:12,451 DEBUG FromReferenceNode:74 - Resolved : tran -> transactio0_.id
14:12:12,451 DEBUG DotNode:599 - getDataType() : value -> org.hibernate.type.CompositeCustomType@7f9c1a02
14:12:12,451 DEBUG DotNode:585 - Unresolved property path is now 'value.amount'
14:12:12,452 DEBUG FromReferenceNode:74 - Resolved : tran.value -> transactio0_.amount
14:12:12,452 DEBUG DotNode:599 - getDataType() : value.amount -> org.hibernate.type.BigDecimalType@3bb4a749
14:12:12,452 DEBUG FromReferenceNode:74 - Resolved : tran.value.amount -> transactio0_.amount
14:12:12,452 DEBUG FromReferenceNode:74 - Resolved : tran -> transactio0_.id
14:12:12,452 DEBUG DotNode:599 - getDataType() : value -> org.hibernate.type.CompositeCustomType@7f9c1a02
14:12:12,452 DEBUG DotNode:585 - Unresolved property path is now 'value.currency'
14:12:12,452 DEBUG FromReferenceNode:74 - Resolved : tran.value -> transactio0_.currency
14:12:12,452 DEBUG DotNode:599 - getDataType() : value.currency -> org.hibernate.type.CurrencyType@ed7596b
14:12:12,453 DEBUG FromReferenceNode:74 - Resolved : tran.value.currency -> transactio0_.currency
14:12:12,453 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Trnsctn transactio0_ ) ( where ( and ( > ( transactio0_.amount ( transactio0_.amount transactio0_.id value ) amount ) 1.0 ) ( = ( transactio0_.currency ( transactio0_.currency transactio0_.id value ) currency ) 'AUD' ) ) ) )
14:12:12,453 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:12:12,453 DEBUG JoinProcessor:175 - Using FROM fragment [Trnsctn transactio0_]
14:12:12,453 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Trnsctn)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'transactio0_.id as id1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tran,role=null,tableName=Trnsctn,tableAlias=transactio0_,origin=null,columns={,className=org.hibernate.test.cut.Transaction}}}
    |  \-[SQL_TOKEN] SqlFragment: 'transactio0_.description as descript2_1_, transactio0_.amount as amount1_, transactio0_.currency as currency1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[tran], fromElementByTableAlias=[transactio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Trnsctn transactio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=tran,role=null,tableName=Trnsctn,tableAlias=transactio0_,origin=null,columns={,className=org.hibernate.test.cut.Transaction}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[GT] BinaryLogicOperatorNode: '>'
          |  +-[DOT] DotNode: 'transactio0_.amount' {propertyName=amount,dereferenceType=ALL,propertyPath=value.amount,path=tran.value.amount,tableAlias=transactio0_,className=org.hibernate.test.cut.Transaction,classAlias=tran}
          |  |  +-[DOT] DotNode: 'transactio0_.amount' {propertyName=amount,dereferenceType=2,propertyPath=value.amount,path=tran.value,tableAlias=transactio0_,className=org.hibernate.test.cut.Transaction,classAlias=tran}
          |  |  |  +-[ALIAS_REF] IdentNode: 'transactio0_.id' {alias=tran, className=org.hibernate.test.cut.Transaction, tableAlias=transactio0_}
          |  |  |  \-[IDENT] IdentNode: 'value' {originalText=value}
          |  |  \-[IDENT] IdentNode: 'amount' {originalText=amount}
          |  \-[NUM_DOUBLE] LiteralNode: '1.0'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'transactio0_.currency' {propertyName=currency,dereferenceType=ALL,propertyPath=value.currency,path=tran.value.currency,tableAlias=transactio0_,className=org.hibernate.test.cut.Transaction,classAlias=tran}
             |  +-[DOT] DotNode: 'transactio0_.currency' {propertyName=currency,dereferenceType=2,propertyPath=value.currency,path=tran.value,tableAlias=transactio0_,className=org.hibernate.test.cut.Transaction,classAlias=tran}
             |  |  +-[ALIAS_REF] IdentNode: 'transactio0_.id' {alias=tran, className=org.hibernate.test.cut.Transaction, tableAlias=transactio0_}
             |  |  \-[IDENT] IdentNode: 'value' {originalText=value}
             |  \-[IDENT] IdentNode: 'currency' {originalText=currency}
             \-[QUOTED_STRING] LiteralNode: ''AUD''

14:12:12,454 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:12,454 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.cut.Transaction tran where tran.value.amount > 1.0 and tran.value.currency = 'AUD'
14:12:12,454 DEBUG QueryTranslatorImpl:236 - SQL: select transactio0_.id as id1_, transactio0_.description as descript2_1_, transactio0_.amount as amount1_, transactio0_.currency as currency1_ from Trnsctn transactio0_ where transactio0_.amount>1.0 and transactio0_.currency='AUD'
14:12:12,454 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:12,454 DEBUG SQL:104 - 
    update
        Trnsctn 
    set
        description=?,
        amount=?,
        currency=? 
    where
        id=?
14:12:12,455 DEBUG SQL:104 - 
    select
        transactio0_.id as id1_,
        transactio0_.description as descript2_1_,
        transactio0_.amount as amount1_,
        transactio0_.currency as currency1_ 
    from
        Trnsctn transactio0_ 
    where
        transactio0_.amount>1.0 
        and transactio0_.currency='AUD'
14:12:12,455 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.cut.Transaction txn where txn.value = (1.5, 'AUD')
14:12:12,457 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  |  \-[IDENT] Node: 'test'
    |        |  |  \-[IDENT] Node: 'cut'
    |        |  \-[IDENT] Node: 'Transaction'
    |        \-[ALIAS] Node: 'txn'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'txn'
          |  \-[IDENT] Node: 'value'
          \-[VECTOR_EXPR] Node: '{vector}'
             +-[NUM_DOUBLE] Node: '1.5'
             \-[QUOTED_STRING] Node: ''AUD''

14:12:12,457 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:12,457 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.cut.Transaction (txn) -> transactio0_
14:12:12,457 DEBUG FromReferenceNode:74 - Resolved : txn -> transactio0_.id
14:12:12,457 DEBUG DotNode:599 - getDataType() : value -> org.hibernate.type.CompositeCustomType@7f9c1a02
14:12:12,457 DEBUG DotNode:588 - Terminal propertyPath = [value]
14:12:12,457 DEBUG FromReferenceNode:74 - Resolved : txn.value -> (transactio0_.amount, transactio0_.currency)
14:12:12,458 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Trnsctn transactio0_ ) ( where ( AND ( = transactio0_.amount 1.5 ) ( = transactio0_.currency 'AUD' ) ) ) )
14:12:12,458 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:12:12,458 DEBUG JoinProcessor:175 - Using FROM fragment [Trnsctn transactio0_]
14:12:12,458 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Trnsctn)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'transactio0_.id as id1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=txn,role=null,tableName=Trnsctn,tableAlias=transactio0_,origin=null,columns={,className=org.hibernate.test.cut.Transaction}}}
    |  \-[SQL_TOKEN] SqlFragment: 'transactio0_.description as descript2_1_, transactio0_.amount as amount1_, transactio0_.currency as currency1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[txn], fromElementByTableAlias=[transactio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Trnsctn transactio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=txn,role=null,tableName=Trnsctn,tableAlias=transactio0_,origin=null,columns={,className=org.hibernate.test.cut.Transaction}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] BinaryLogicOperatorNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[SQL_TOKEN] SqlFragment: 'transactio0_.amount'
          |  \-[SQL_TOKEN] SqlFragment: '1.5'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[SQL_TOKEN] SqlFragment: 'transactio0_.currency'
             \-[SQL_TOKEN] SqlFragment: ''AUD''

14:12:12,458 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:12,458 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.cut.Transaction txn where txn.value = (1.5, 'AUD')
14:12:12,458 DEBUG QueryTranslatorImpl:236 - SQL: select transactio0_.id as id1_, transactio0_.description as descript2_1_, transactio0_.amount as amount1_, transactio0_.currency as currency1_ from Trnsctn transactio0_ where transactio0_.amount=1.5 and transactio0_.currency='AUD'
14:12:12,459 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:12,459 DEBUG SQL:104 - 
    select
        transactio0_.id as id1_,
        transactio0_.description as descript2_1_,
        transactio0_.amount as amount1_,
        transactio0_.currency as currency1_ 
    from
        Trnsctn transactio0_ 
    where
        transactio0_.amount=1.5 
        and transactio0_.currency='AUD'
14:12:12,460 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.cut.Transaction where value = (1.5, 'AUD')
14:12:12,460 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'org'
    |           |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  \-[IDENT] Node: 'test'
    |           |  \-[IDENT] Node: 'cut'
    |           \-[IDENT] Node: 'Transaction'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'value'
          \-[VECTOR_EXPR] Node: '{vector}'
             +-[NUM_DOUBLE] Node: '1.5'
             \-[QUOTED_STRING] Node: ''AUD''

14:12:12,460 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:12,461 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.cut.Transaction (<no alias>) -> transactio0_
14:12:12,484 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:12:12,484 DEBUG DotNode:599 - getDataType() : value -> org.hibernate.type.CompositeCustomType@7f9c1a02
14:12:12,484 DEBUG DotNode:588 - Terminal propertyPath = [value]
14:12:12,484 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.value -> (transactio0_.amount, transactio0_.currency)
14:12:12,484 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Trnsctn transactio0_ ) ( where ( AND ( = transactio0_.amount 1.5 ) ( = transactio0_.currency 'AUD' ) ) ) )
14:12:12,485 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:12:12,485 DEBUG JoinProcessor:175 - Using FROM fragment [Trnsctn transactio0_]
14:12:12,485 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Trnsctn)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'transactio0_.id as id1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Trnsctn,tableAlias=transactio0_,origin=null,columns={,className=org.hibernate.test.cut.Transaction}}}
    |  \-[SQL_TOKEN] SqlFragment: 'transactio0_.description as descript2_1_, transactio0_.amount as amount1_, transactio0_.currency as currency1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[transactio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Trnsctn transactio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Trnsctn,tableAlias=transactio0_,origin=null,columns={,className=org.hibernate.test.cut.Transaction}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] BinaryLogicOperatorNode: 'AND'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[SQL_TOKEN] SqlFragment: 'transactio0_.amount'
          |  \-[SQL_TOKEN] SqlFragment: '1.5'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[SQL_TOKEN] SqlFragment: 'transactio0_.currency'
             \-[SQL_TOKEN] SqlFragment: ''AUD''

14:12:12,485 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:12,485 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.cut.Transaction where value = (1.5, 'AUD')
14:12:12,485 DEBUG QueryTranslatorImpl:236 - SQL: select transactio0_.id as id1_, transactio0_.description as descript2_1_, transactio0_.amount as amount1_, transactio0_.currency as currency1_ from Trnsctn transactio0_ where transactio0_.amount=1.5 and transactio0_.currency='AUD'
14:12:12,485 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:12,486 DEBUG SQL:104 - 
    select
        transactio0_.id as id1_,
        transactio0_.description as descript2_1_,
        transactio0_.amount as amount1_,
        transactio0_.currency as currency1_ 
    from
        Trnsctn transactio0_ 
    where
        transactio0_.amount=1.5 
        and transactio0_.currency='AUD'
14:12:12,496 DEBUG SQL:104 - 
    delete 
    from
        Trnsctn 
    where
        id=?
14:12:12,497  INFO CustomRunner:139 - Test: testCustomColumnReadAndWrite
14:12:12,499 DEBUG SQL:104 - 
    insert 
    into
        MutualFund
        (id, amount_millions, currency) 
    values
        (null, ? / 1000000.0, ?)
14:12:12,500 DEBUG SQL:104 - 
    select
        amount_millions 
    from
        MutualFund
14:12:12,508 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select f.holdings.amount from org.hibernate.test.cut.MutualFund f
14:12:12,509 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'org'
       |     |  |  |  |  \-[IDENT] Node: 'hibernate'
       |     |  |  |  \-[IDENT] Node: 'test'
       |     |  |  \-[IDENT] Node: 'cut'
       |     |  \-[IDENT] Node: 'MutualFund'
       |     \-[ALIAS] Node: 'f'
       \-[SELECT] Node: 'select'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'f'
             |  \-[IDENT] Node: 'holdings'
             \-[IDENT] Node: 'amount'

14:12:12,509 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:12,509 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.cut.MutualFund (f) -> mutualfund0_
14:12:12,509 DEBUG FromReferenceNode:74 - Resolved : f -> mutualfund0_.id
14:12:12,510 DEBUG DotNode:599 - getDataType() : holdings -> org.hibernate.type.CompositeCustomType@324eaff4
14:12:12,510 DEBUG DotNode:585 - Unresolved property path is now 'holdings.amount'
14:12:12,510 DEBUG FromReferenceNode:74 - Resolved : f.holdings -> mutualfund0_.amount_millions * 1000000.0
14:12:12,510 DEBUG DotNode:599 - getDataType() : holdings.amount -> org.hibernate.type.BigDecimalType@3bb4a749
14:12:12,518 DEBUG FromReferenceNode:74 - Resolved : f.holdings.amount -> mutualfund0_.amount_millions * 1000000.0
14:12:12,519 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} ( mutualfund0_.amount_millions * 1000000.0 ( mutualfund0_.amount_millions * 1000000.0 mutualfund0_.id holdings ) amount ) ) ( FromClause{level=1} MutualFund mutualfund0_ ) )
14:12:12,519 DEBUG JoinProcessor:175 - Using FROM fragment [MutualFund mutualfund0_]
14:12:12,519 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (MutualFund)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'mutualfund0_.amount_millions * 1000000.0' {propertyName=amount,dereferenceType=ALL,propertyPath=holdings.amount,path=f.holdings.amount,tableAlias=mutualfund0_,className=org.hibernate.test.cut.MutualFund,classAlias=f}
    |  |  +-[DOT] DotNode: 'mutualfund0_.amount_millions * 1000000.0' {propertyName=amount,dereferenceType=2,propertyPath=holdings.amount,path=f.holdings,tableAlias=mutualfund0_,className=org.hibernate.test.cut.MutualFund,classAlias=f}
    |  |  |  +-[ALIAS_REF] IdentNode: 'mutualfund0_.id' {alias=f, className=org.hibernate.test.cut.MutualFund, tableAlias=mutualfund0_}
    |  |  |  \-[IDENT] IdentNode: 'holdings' {originalText=holdings}
    |  |  \-[IDENT] IdentNode: 'amount' {originalText=amount}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[f], fromElementByTableAlias=[mutualfund0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'MutualFund mutualfund0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=f,role=null,tableName=MutualFund,tableAlias=mutualfund0_,origin=null,columns={,className=org.hibernate.test.cut.MutualFund}}

14:12:12,520 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:12,520 DEBUG QueryTranslatorImpl:235 - HQL: select f.holdings.amount from org.hibernate.test.cut.MutualFund f
14:12:12,520 DEBUG QueryTranslatorImpl:236 - SQL: select mutualfund0_.amount_millions * 1000000.0 as col_0_0_ from MutualFund mutualfund0_
14:12:12,520 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:12,520 DEBUG SQL:104 - 
    select
        mutualfund0_.amount_millions * 1000000.0 as col_0_0_ 
    from
        MutualFund mutualfund0_
14:12:12,521 DEBUG SQL:104 - 
    select
        this_.id as id0_0_,
        this_.amount_millions * 1000000.0 as amount2_0_0_,
        this_.currency as currency0_0_ 
    from
        MutualFund this_ 
    where
        this_.amount_millions * 1000000.0 between ? and ?
14:12:12,522 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.cut.MutualFund f where f.holdings.amount between ? and ?
14:12:12,523 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  |  \-[IDENT] Node: 'test'
    |        |  |  \-[IDENT] Node: 'cut'
    |        |  \-[IDENT] Node: 'MutualFund'
    |        \-[ALIAS] Node: 'f'
    \-[WHERE] Node: 'where'
       \-[BETWEEN] Node: 'between'
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'f'
          |  |  \-[IDENT] Node: 'holdings'
          |  \-[IDENT] Node: 'amount'
          +-[PARAM] Node: '?'
          \-[PARAM] Node: '?'

14:12:12,532 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:12,532 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.cut.MutualFund (f) -> mutualfund0_
14:12:12,533 DEBUG FromReferenceNode:74 - Resolved : f -> mutualfund0_.id
14:12:12,533 DEBUG DotNode:599 - getDataType() : holdings -> org.hibernate.type.CompositeCustomType@324eaff4
14:12:12,533 DEBUG DotNode:585 - Unresolved property path is now 'holdings.amount'
14:12:12,533 DEBUG FromReferenceNode:74 - Resolved : f.holdings -> mutualfund0_.amount_millions * 1000000.0
14:12:12,533 DEBUG DotNode:599 - getDataType() : holdings.amount -> org.hibernate.type.BigDecimalType@3bb4a749
14:12:12,533 DEBUG FromReferenceNode:74 - Resolved : f.holdings.amount -> mutualfund0_.amount_millions * 1000000.0
14:12:12,533  WARN HqlSqlWalker:929 - [DEPRECATION] Encountered positional parameter near line 1, column 74.  Positional parameter are considered deprecated; use named parameters or JPA-style positional parameters instead.
14:12:12,533  WARN HqlSqlWalker:929 - [DEPRECATION] Encountered positional parameter near line 1, column 80.  Positional parameter are considered deprecated; use named parameters or JPA-style positional parameters instead.
14:12:12,534 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} MutualFund mutualfund0_ ) ( where ( between ( mutualfund0_.amount_millions * 1000000.0 ( mutualfund0_.amount_millions * 1000000.0 mutualfund0_.id holdings ) amount ) ? ? ) ) )
14:12:12,534 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:12:12,534 DEBUG JoinProcessor:175 - Using FROM fragment [MutualFund mutualfund0_]
14:12:12,534 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (MutualFund)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'mutualfund0_.id as id0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=f,role=null,tableName=MutualFund,tableAlias=mutualfund0_,origin=null,columns={,className=org.hibernate.test.cut.MutualFund}}}
    |  \-[SQL_TOKEN] SqlFragment: 'mutualfund0_.amount_millions * 1000000.0 as amount2_0_, mutualfund0_.currency as currency0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[f], fromElementByTableAlias=[mutualfund0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'MutualFund mutualfund0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=f,role=null,tableName=MutualFund,tableAlias=mutualfund0_,origin=null,columns={,className=org.hibernate.test.cut.MutualFund}}
    \-[WHERE] SqlNode: 'where'
       \-[BETWEEN] BetweenOperatorNode: 'between'
          +-[DOT] DotNode: 'mutualfund0_.amount_millions * 1000000.0' {propertyName=amount,dereferenceType=ALL,propertyPath=holdings.amount,path=f.holdings.amount,tableAlias=mutualfund0_,className=org.hibernate.test.cut.MutualFund,classAlias=f}
          |  +-[DOT] DotNode: 'mutualfund0_.amount_millions * 1000000.0' {propertyName=amount,dereferenceType=2,propertyPath=holdings.amount,path=f.holdings,tableAlias=mutualfund0_,className=org.hibernate.test.cut.MutualFund,classAlias=f}
          |  |  +-[ALIAS_REF] IdentNode: 'mutualfund0_.id' {alias=f, className=org.hibernate.test.cut.MutualFund, tableAlias=mutualfund0_}
          |  |  \-[IDENT] IdentNode: 'holdings' {originalText=holdings}
          |  \-[IDENT] IdentNode: 'amount' {originalText=amount}
          +-[PARAM] ParameterNode: '?' {ordinal=0, expectedType=org.hibernate.type.BigDecimalType@3bb4a749}
          \-[PARAM] ParameterNode: '?' {ordinal=1, expectedType=org.hibernate.type.BigDecimalType@3bb4a749}

14:12:12,546 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:12,547 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.cut.MutualFund f where f.holdings.amount between ? and ?
14:12:12,547 DEBUG QueryTranslatorImpl:236 - SQL: select mutualfund0_.id as id0_, mutualfund0_.amount_millions * 1000000.0 as amount2_0_, mutualfund0_.currency as currency0_ from MutualFund mutualfund0_ where mutualfund0_.amount_millions * 1000000.0 between ? and ?
14:12:12,547 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:12,547 DEBUG SQL:104 - 
    select
        mutualfund0_.id as id0_,
        mutualfund0_.amount_millions * 1000000.0 as amount2_0_,
        mutualfund0_.currency as currency0_ 
    from
        MutualFund mutualfund0_ 
    where
        mutualfund0_.amount_millions * 1000000.0 between ? and ?
14:12:12,548 DEBUG SQL:104 - 
    delete 
    from
        MutualFund 
    where
        id=?
14:12:12,549  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:12:12,550 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:12:12,550 DEBUG SQL:104 - 
    drop table MutualFund if exists
14:12:12,550 DEBUG SQL:104 - 
    drop table Trnsctn if exists
14:12:12,550  INFO SchemaExport:405 - HHH000230: Schema export complete
14:12:12,551  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
