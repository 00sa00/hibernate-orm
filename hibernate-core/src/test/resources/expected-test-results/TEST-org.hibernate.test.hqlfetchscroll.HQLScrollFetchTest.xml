<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" hostname="dhcp-10.15.208.168.stl.redhat.com" name="org.hibernate.test.hqlfetchscroll.HQLScrollFetchTest" tests="14" time="1.189" timestamp="2013-02-28T20:13:59">
  <properties />
  <testcase classname="org.hibernate.test.hqlfetchscroll.HQLScrollFetchTest" name="testIncompleteScroll" time="0.082" />
  <testcase classname="org.hibernate.test.hqlfetchscroll.HQLScrollFetchTest" name="testIncompleteScrollFirstResult" time="0.076" />
  <testcase classname="org.hibernate.test.hqlfetchscroll.HQLScrollFetchTest" name="testIncompleteScrollFirstResultInTransaction" time="0.065" />
  <testcase classname="org.hibernate.test.hqlfetchscroll.HQLScrollFetchTest" name="testIncompleteScrollLast" time="0.065" />
  <testcase classname="org.hibernate.test.hqlfetchscroll.HQLScrollFetchTest" name="testIncompleteScrollSecondResult" time="0.11" />
  <testcase classname="org.hibernate.test.hqlfetchscroll.HQLScrollFetchTest" name="testIncompleteScrollSecondResultInTransaction" time="0.037" />
  <testcase classname="org.hibernate.test.hqlfetchscroll.HQLScrollFetchTest" name="testListOrderChildrenDesc" time="0.106" />
  <testcase classname="org.hibernate.test.hqlfetchscroll.HQLScrollFetchTest" name="testNoScroll" time="0.098" />
  <ignored-testcase classname="org.hibernate.test.hqlfetchscroll.HQLScrollFetchTest" name="testScroll" time="0.0" />
  <testcase classname="org.hibernate.test.hqlfetchscroll.HQLScrollFetchTest" name="testScrollOrderChildrenDesc" time="0.084" />
  <testcase classname="org.hibernate.test.hqlfetchscroll.HQLScrollFetchTest" name="testScrollOrderParentAsc" time="0.075" />
  <testcase classname="org.hibernate.test.hqlfetchscroll.HQLScrollFetchTest" name="testScrollOrderParentAscChildrenAsc" time="0.113" />
  <testcase classname="org.hibernate.test.hqlfetchscroll.HQLScrollFetchTest" name="testScrollOrderParentAscChildrenDesc" time="0.095" />
  <testcase classname="org.hibernate.test.hqlfetchscroll.HQLScrollFetchTest" name="testScrollOrderParentDesc" time="0.101" />
  <system-out><![CDATA[14:13:59,301  INFO CustomRunner:132 - BeforeClass: org.hibernate.test.hqlfetchscroll.HQLScrollFetchTest
14:13:59,302  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/hqlfetchscroll/ParentChild.hbm.xml
14:13:59,342  WARN DTDEntityResolver:74 - HHH000223: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
14:13:59,352  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:13:59,353  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:13:59,353  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:13:59,353  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:13:59,353  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:13:59,354  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:13:59,355  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:13:59,355  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:13:59,356  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:13:59,356  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:13:59,363  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:13:59,363 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:13:59,363 DEBUG SQL:104 - 
    alter table chlidren 
        drop constraint FK67DEA1599529F0AE
14:13:59,364 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table chlidren drop constraint FK67DEA1599529F0AE
14:13:59,364 ERROR SchemaExport:426 - Table "CHLIDREN" not found; SQL statement:

    alter table chlidren 
        drop constraint FK67DEA1599529F0AE [42102-145]
14:13:59,364 DEBUG SQL:104 - 
    drop table Parents if exists
14:13:59,364 DEBUG SQL:104 - 
    drop table chlidren if exists
14:13:59,364 DEBUG SQL:104 - 
    create table Parents (
        id bigint generated by default as identity,
        name varchar(255),
        primary key (id)
    )
14:13:59,365 DEBUG SQL:104 - 
    create table chlidren (
        id bigint generated by default as identity,
        name varchar(255),
        parent_id bigint,
        primary key (id)
    )
14:13:59,365 DEBUG SQL:104 - 
    alter table chlidren 
        add constraint FK67DEA1599529F0AE 
        foreign key (parent_id) 
        references Parents
14:13:59,365  INFO SchemaExport:405 - HHH000230: Schema export complete
14:13:59,366  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:13:59,366  INFO CustomRunner:139 - Test: testIncompleteScroll
14:13:59,367 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,368 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,368 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,368 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,369 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,369 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,369 DEBUG SQL:104 - 
    insert 
    into
        Parents
        (id, name) 
    values
        (null, ?)
14:13:59,370 DEBUG SQL:104 - 
    insert 
    into
        Parents
        (id, name) 
    values
        (null, ?)
14:13:59,371 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,371 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,371 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,371 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,372 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,372 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,372 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select p from org.hibernate.test.hqlfetchscroll.Parent p join fetch p.children c order by p.name asc
14:13:59,403 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |  |  |  |  |  \-[IDENT] Node: 'test'
    |  |  |  |  |  \-[IDENT] Node: 'hqlfetchscroll'
    |  |  |  |  \-[IDENT] Node: 'Parent'
    |  |  |  \-[ALIAS] Node: 'p'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'p'
    |  |     |  \-[IDENT] Node: 'children'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'p'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'p'
       |  \-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'asc'

14:13:59,403 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:59,403 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hqlfetchscroll.Parent (p) -> parent0_
14:13:59,404 DEBUG FromReferenceNode:74 - Resolved : p -> parent0_.id
14:13:59,404 DEBUG DotNode:599 - getDataType() : children -> org.hibernate.type.SetType(org.hibernate.test.hqlfetchscroll.Parent.children)
14:13:59,404 DEBUG FromElementFactory:376 - createEntityAssociation() : One to many - path = p.children role = org.hibernate.test.hqlfetchscroll.Parent.children associatedEntityName = org.hibernate.test.hqlfetchscroll.Child
14:13:59,404 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hqlfetchscroll.Child (c) -> children1_
14:13:59,404 DEBUG FromClause:282 - addJoinByPathMap() : p.children -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=chlidren,tableAlias=children1_,origin=Parents parent0_,columns={parent0_.id ,className=org.hibernate.test.hqlfetchscroll.Child}}
14:13:59,404 DEBUG DotNode:308 - dereferenceCollection() : Created new FROM element for p.children : chlidren children1_
14:13:59,404 DEBUG FromReferenceNode:74 - Resolved : p.children -> .
14:13:59,405 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'chlidren children1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=c,role=org.hibernate.test.hqlfetchscroll.Parent.children,tableName=chlidren,tableAlias=children1_,origin=Parents parent0_,columns={parent0_.id ,className=org.hibernate.test.hqlfetchscroll.Child}}

14:13:59,405 DEBUG FromReferenceNode:74 - Resolved : p -> parent0_.id
14:13:59,405 DEBUG FromReferenceNode:74 - Resolved : p -> parent0_.id
14:13:59,405 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:13:59,405 DEBUG FromReferenceNode:74 - Resolved : p.name -> parent0_.name
14:13:59,405 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} parent0_.id ) ( FromClause{level=1} ( Parents parent0_ chlidren children1_ ) ) ( order ( parent0_.name parent0_.id name ) asc ) )
14:13:59,405 DEBUG JoinProcessor:175 - Using FROM fragment [Parents parent0_]
14:13:59,405 DEBUG JoinProcessor:175 - Using FROM fragment [inner join chlidren children1_ on parent0_.id=children1_.parent_id]
14:13:59,406 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (chlidren,Parents)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'parent0_.id as id0_0_' {alias=p, className=org.hibernate.test.hqlfetchscroll.Parent, tableAlias=parent0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'children1_.id as id1_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=c,role=org.hibernate.test.hqlfetchscroll.Parent.children,tableName=chlidren,tableAlias=children1_,origin=Parents parent0_,columns={parent0_.id ,className=org.hibernate.test.hqlfetchscroll.Child}}}
    |  +-[SQL_TOKEN] SqlFragment: 'parent0_.name as name0_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'children1_.name as name1_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'children1_.parent_id as parent3_0_0__, children1_.id as id1_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[c, p], fromElementByTableAlias=[parent0_, children1_], fromElementsByPath=[p.children], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Parents parent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=Parents,tableAlias=parent0_,origin=null,columns={,className=org.hibernate.test.hqlfetchscroll.Parent}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join chlidren children1_ on parent0_.id=children1_.parent_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=c,role=org.hibernate.test.hqlfetchscroll.Parent.children,tableName=chlidren,tableAlias=children1_,origin=Parents parent0_,columns={parent0_.id ,className=org.hibernate.test.hqlfetchscroll.Child}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'parent0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=p.name,tableAlias=parent0_,className=org.hibernate.test.hqlfetchscroll.Parent,classAlias=p}
       |  +-[ALIAS_REF] IdentNode: 'parent0_.id' {alias=p, className=org.hibernate.test.hqlfetchscroll.Parent, tableAlias=parent0_}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'asc'

14:13:59,406 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:59,406 DEBUG QueryTranslatorImpl:235 - HQL: select p from org.hibernate.test.hqlfetchscroll.Parent p join fetch p.children c order by p.name asc
14:13:59,406 DEBUG QueryTranslatorImpl:236 - SQL: select parent0_.id as id0_0_, children1_.id as id1_1_, parent0_.name as name0_0_, children1_.name as name1_1_, children1_.parent_id as parent3_0_0__, children1_.id as id1_0__ from Parents parent0_ inner join chlidren children1_ on parent0_.id=children1_.parent_id order by parent0_.name asc
14:13:59,406 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:59,406 DEBUG SQL:104 - 
    select
        parent0_.id as id0_0_,
        children1_.id as id1_1_,
        parent0_.name as name0_0_,
        children1_.name as name1_1_,
        children1_.parent_id as parent3_0_0__,
        children1_.id as id1_0__ 
    from
        Parents parent0_ 
    inner join
        chlidren children1_ 
            on parent0_.id=children1_.parent_id 
    order by
        parent0_.name asc
14:13:59,408 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.hqlfetchscroll.Parent
14:13:59,427 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'hqlfetchscroll'
                \-[IDENT] Node: 'Parent'

14:13:59,428 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:59,428 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hqlfetchscroll.Parent (<no alias>) -> parent0_
14:13:59,429 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Parents parent0_ ) )
14:13:59,430 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:13:59,430 DEBUG JoinProcessor:175 - Using FROM fragment [Parents parent0_]
14:13:59,430 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Parents)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'parent0_.id as id0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Parents,tableAlias=parent0_,origin=null,columns={,className=org.hibernate.test.hqlfetchscroll.Parent}}}
    |  \-[SQL_TOKEN] SqlFragment: 'parent0_.name as name0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[parent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Parents parent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Parents,tableAlias=parent0_,origin=null,columns={,className=org.hibernate.test.hqlfetchscroll.Parent}}

14:13:59,430 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:59,431 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.hqlfetchscroll.Parent
14:13:59,431 DEBUG QueryTranslatorImpl:236 - SQL: select parent0_.id as id0_, parent0_.name as name0_ from Parents parent0_
14:13:59,431 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:59,431 DEBUG SQL:104 - 
    select
        parent0_.id as id0_,
        parent0_.name as name0_ 
    from
        Parents parent0_
14:13:59,432 DEBUG SQL:104 - 
    select
        children0_.parent_id as parent3_0_1_,
        children0_.id as id1_1_,
        children0_.id as id1_0_,
        children0_.name as name1_0_ 
    from
        chlidren children0_ 
    where
        children0_.parent_id=?
14:13:59,432 DEBUG SQL:104 - 
    select
        children0_.parent_id as parent3_0_1_,
        children0_.id as id1_1_,
        children0_.id as id1_0_,
        children0_.name as name1_0_ 
    from
        chlidren children0_ 
    where
        children0_.parent_id=?
14:13:59,433 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=null 
    where
        parent_id=?
14:13:59,433 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=null 
    where
        parent_id=?
14:13:59,434 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,434 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,435 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,435 DEBUG SQL:104 - 
    delete 
    from
        Parents 
    where
        id=?
14:13:59,435 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,446 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,447 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,447 DEBUG SQL:104 - 
    delete 
    from
        Parents 
    where
        id=?
14:13:59,448  INFO CustomRunner:139 - Test: testIncompleteScrollFirstResult
14:13:59,449 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,454 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,455 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,455 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,456 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,456 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,468 DEBUG SQL:104 - 
    insert 
    into
        Parents
        (id, name) 
    values
        (null, ?)
14:13:59,478 DEBUG SQL:104 - 
    insert 
    into
        Parents
        (id, name) 
    values
        (null, ?)
14:13:59,480 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,480 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,480 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,481 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,481 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,481 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,488 DEBUG SQL:104 - 
    select
        parent0_.id as id0_0_,
        children1_.id as id1_1_,
        parent0_.name as name0_0_,
        children1_.name as name1_1_,
        children1_.parent_id as parent3_0_0__,
        children1_.id as id1_0__ 
    from
        Parents parent0_ 
    inner join
        chlidren children1_ 
            on parent0_.id=children1_.parent_id 
    order by
        parent0_.name asc
14:13:59,490 DEBUG SQL:104 - 
    select
        parent0_.id as id0_,
        parent0_.name as name0_ 
    from
        Parents parent0_
14:13:59,493 DEBUG SQL:104 - 
    select
        children0_.parent_id as parent3_0_1_,
        children0_.id as id1_1_,
        children0_.id as id1_0_,
        children0_.name as name1_0_ 
    from
        chlidren children0_ 
    where
        children0_.parent_id=?
14:13:59,504 DEBUG SQL:104 - 
    select
        children0_.parent_id as parent3_0_1_,
        children0_.id as id1_1_,
        children0_.id as id1_0_,
        children0_.name as name1_0_ 
    from
        chlidren children0_ 
    where
        children0_.parent_id=?
14:13:59,506 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=null 
    where
        parent_id=?
14:13:59,506 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=null 
    where
        parent_id=?
14:13:59,506 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,511 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,512 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,512 DEBUG SQL:104 - 
    delete 
    from
        Parents 
    where
        id=?
14:13:59,512 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,513 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,523 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,524 DEBUG SQL:104 - 
    delete 
    from
        Parents 
    where
        id=?
14:13:59,524  INFO CustomRunner:139 - Test: testIncompleteScrollFirstResultInTransaction
14:13:59,525 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,526 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,527 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,527 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,527 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,527 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,535 DEBUG SQL:104 - 
    insert 
    into
        Parents
        (id, name) 
    values
        (null, ?)
14:13:59,536 DEBUG SQL:104 - 
    insert 
    into
        Parents
        (id, name) 
    values
        (null, ?)
14:13:59,537 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,537 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,537 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,546 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,547 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,548 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,549 DEBUG SQL:104 - 
    select
        parent0_.id as id0_0_,
        children1_.id as id1_1_,
        parent0_.name as name0_0_,
        children1_.name as name1_1_,
        children1_.parent_id as parent3_0_0__,
        children1_.id as id1_0__ 
    from
        Parents parent0_ 
    inner join
        chlidren children1_ 
            on parent0_.id=children1_.parent_id 
    order by
        parent0_.name asc
14:13:59,551 DEBUG SQL:104 - 
    select
        parent0_.id as id0_,
        parent0_.name as name0_ 
    from
        Parents parent0_
14:13:59,568 DEBUG SQL:104 - 
    select
        children0_.parent_id as parent3_0_1_,
        children0_.id as id1_1_,
        children0_.id as id1_0_,
        children0_.name as name1_0_ 
    from
        chlidren children0_ 
    where
        children0_.parent_id=?
14:13:59,569 DEBUG SQL:104 - 
    select
        children0_.parent_id as parent3_0_1_,
        children0_.id as id1_1_,
        children0_.id as id1_0_,
        children0_.name as name1_0_ 
    from
        chlidren children0_ 
    where
        children0_.parent_id=?
14:13:59,570 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=null 
    where
        parent_id=?
14:13:59,579 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=null 
    where
        parent_id=?
14:13:59,579 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,580 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,580 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,581 DEBUG SQL:104 - 
    delete 
    from
        Parents 
    where
        id=?
14:13:59,589 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,589 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,589 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,589 DEBUG SQL:104 - 
    delete 
    from
        Parents 
    where
        id=?
14:13:59,590  INFO CustomRunner:139 - Test: testIncompleteScrollLast
14:13:59,599 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,601 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,601 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,602 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,602 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,609 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,611 DEBUG SQL:104 - 
    insert 
    into
        Parents
        (id, name) 
    values
        (null, ?)
14:13:59,611 DEBUG SQL:104 - 
    insert 
    into
        Parents
        (id, name) 
    values
        (null, ?)
14:13:59,612 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,619 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,619 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,619 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,620 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,630 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,630 DEBUG SQL:104 - 
    select
        parent0_.id as id0_0_,
        children1_.id as id1_1_,
        parent0_.name as name0_0_,
        children1_.name as name1_1_,
        children1_.parent_id as parent3_0_0__,
        children1_.id as id1_0__ 
    from
        Parents parent0_ 
    inner join
        chlidren children1_ 
            on parent0_.id=children1_.parent_id 
    order by
        parent0_.name asc
14:13:59,632 DEBUG SQL:104 - 
    select
        parent0_.id as id0_,
        parent0_.name as name0_ 
    from
        Parents parent0_
14:13:59,632 DEBUG SQL:104 - 
    select
        children0_.parent_id as parent3_0_1_,
        children0_.id as id1_1_,
        children0_.id as id1_0_,
        children0_.name as name1_0_ 
    from
        chlidren children0_ 
    where
        children0_.parent_id=?
14:13:59,641 DEBUG SQL:104 - 
    select
        children0_.parent_id as parent3_0_1_,
        children0_.id as id1_1_,
        children0_.id as id1_0_,
        children0_.name as name1_0_ 
    from
        chlidren children0_ 
    where
        children0_.parent_id=?
14:13:59,642 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=null 
    where
        parent_id=?
14:13:59,642 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=null 
    where
        parent_id=?
14:13:59,642 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,643 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,643 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,643 DEBUG SQL:104 - 
    delete 
    from
        Parents 
    where
        id=?
14:13:59,643 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,654 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,654 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,655 DEBUG SQL:104 - 
    delete 
    from
        Parents 
    where
        id=?
14:13:59,655  INFO CustomRunner:139 - Test: testIncompleteScrollSecondResult
14:13:59,656 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,664 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,664 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,665 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,665 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,665 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,665 DEBUG SQL:104 - 
    insert 
    into
        Parents
        (id, name) 
    values
        (null, ?)
14:13:59,690 DEBUG SQL:104 - 
    insert 
    into
        Parents
        (id, name) 
    values
        (null, ?)
14:13:59,690 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,691 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,691 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,691 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,691 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,692 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,692 DEBUG SQL:104 - 
    select
        parent0_.id as id0_0_,
        children1_.id as id1_1_,
        parent0_.name as name0_0_,
        children1_.name as name1_1_,
        children1_.parent_id as parent3_0_0__,
        children1_.id as id1_0__ 
    from
        Parents parent0_ 
    inner join
        chlidren children1_ 
            on parent0_.id=children1_.parent_id 
    order by
        parent0_.name asc
14:13:59,694 DEBUG SQL:104 - 
    select
        parent0_.id as id0_,
        parent0_.name as name0_ 
    from
        Parents parent0_
14:13:59,694 DEBUG SQL:104 - 
    select
        children0_.parent_id as parent3_0_1_,
        children0_.id as id1_1_,
        children0_.id as id1_0_,
        children0_.name as name1_0_ 
    from
        chlidren children0_ 
    where
        children0_.parent_id=?
14:13:59,711 DEBUG SQL:104 - 
    select
        children0_.parent_id as parent3_0_1_,
        children0_.id as id1_1_,
        children0_.id as id1_0_,
        children0_.name as name1_0_ 
    from
        chlidren children0_ 
    where
        children0_.parent_id=?
14:13:59,712 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=null 
    where
        parent_id=?
14:13:59,713 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=null 
    where
        parent_id=?
14:13:59,720 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,721 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,721 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,721 DEBUG SQL:104 - 
    delete 
    from
        Parents 
    where
        id=?
14:13:59,721 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,759 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,766 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,766 DEBUG SQL:104 - 
    delete 
    from
        Parents 
    where
        id=?
14:13:59,767  INFO CustomRunner:139 - Test: testIncompleteScrollSecondResultInTransaction
14:13:59,768 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,768 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,768 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,769 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,769 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,769 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,770 DEBUG SQL:104 - 
    insert 
    into
        Parents
        (id, name) 
    values
        (null, ?)
14:13:59,770 DEBUG SQL:104 - 
    insert 
    into
        Parents
        (id, name) 
    values
        (null, ?)
14:13:59,770 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,771 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,771 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,771 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,771 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,771 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,772 DEBUG SQL:104 - 
    select
        parent0_.id as id0_0_,
        children1_.id as id1_1_,
        parent0_.name as name0_0_,
        children1_.name as name1_1_,
        children1_.parent_id as parent3_0_0__,
        children1_.id as id1_0__ 
    from
        Parents parent0_ 
    inner join
        chlidren children1_ 
            on parent0_.id=children1_.parent_id 
    order by
        parent0_.name asc
14:13:59,773 DEBUG SQL:104 - 
    select
        parent0_.id as id0_,
        parent0_.name as name0_ 
    from
        Parents parent0_
14:13:59,773 DEBUG SQL:104 - 
    select
        children0_.parent_id as parent3_0_1_,
        children0_.id as id1_1_,
        children0_.id as id1_0_,
        children0_.name as name1_0_ 
    from
        chlidren children0_ 
    where
        children0_.parent_id=?
14:13:59,774 DEBUG SQL:104 - 
    select
        children0_.parent_id as parent3_0_1_,
        children0_.id as id1_1_,
        children0_.id as id1_0_,
        children0_.name as name1_0_ 
    from
        chlidren children0_ 
    where
        children0_.parent_id=?
14:13:59,779 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=null 
    where
        parent_id=?
14:13:59,779 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=null 
    where
        parent_id=?
14:13:59,779 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,780 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,780 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,792 DEBUG SQL:104 - 
    delete 
    from
        Parents 
    where
        id=?
14:13:59,793 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,793 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,794 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,794 DEBUG SQL:104 - 
    delete 
    from
        Parents 
    where
        id=?
14:13:59,805  INFO CustomRunner:139 - Test: testListOrderChildrenDesc
14:13:59,806 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,807 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,817 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,817 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,818 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,818 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,830 DEBUG SQL:104 - 
    insert 
    into
        Parents
        (id, name) 
    values
        (null, ?)
14:13:59,831 DEBUG SQL:104 - 
    insert 
    into
        Parents
        (id, name) 
    values
        (null, ?)
14:13:59,831 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,831 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,832 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,841 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,842 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,842 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,842 DEBUG SQL:104 - 
    insert 
    into
        Parents
        (id, name) 
    values
        (null, ?)
14:13:59,853 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select p from org.hibernate.test.hqlfetchscroll.Parent p join fetch p.children c order by c.name desc
14:13:59,854 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |  |  |  |  |  \-[IDENT] Node: 'test'
    |  |  |  |  |  \-[IDENT] Node: 'hqlfetchscroll'
    |  |  |  |  \-[IDENT] Node: 'Parent'
    |  |  |  \-[ALIAS] Node: 'p'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'p'
    |  |     |  \-[IDENT] Node: 'children'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'p'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'c'
       |  \-[IDENT] Node: 'name'
       \-[DESCENDING] Node: 'desc'

14:13:59,864 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:59,864 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hqlfetchscroll.Parent (p) -> parent0_
14:13:59,864 DEBUG FromReferenceNode:74 - Resolved : p -> parent0_.id
14:13:59,865 DEBUG DotNode:599 - getDataType() : children -> org.hibernate.type.SetType(org.hibernate.test.hqlfetchscroll.Parent.children)
14:13:59,865 DEBUG FromElementFactory:376 - createEntityAssociation() : One to many - path = p.children role = org.hibernate.test.hqlfetchscroll.Parent.children associatedEntityName = org.hibernate.test.hqlfetchscroll.Child
14:13:59,865 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hqlfetchscroll.Child (c) -> children1_
14:13:59,865 DEBUG FromClause:282 - addJoinByPathMap() : p.children -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=chlidren,tableAlias=children1_,origin=Parents parent0_,columns={parent0_.id ,className=org.hibernate.test.hqlfetchscroll.Child}}
14:13:59,865 DEBUG DotNode:308 - dereferenceCollection() : Created new FROM element for p.children : chlidren children1_
14:13:59,865 DEBUG FromReferenceNode:74 - Resolved : p.children -> .
14:13:59,866 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'chlidren children1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=c,role=org.hibernate.test.hqlfetchscroll.Parent.children,tableName=chlidren,tableAlias=children1_,origin=Parents parent0_,columns={parent0_.id ,className=org.hibernate.test.hqlfetchscroll.Child}}

14:13:59,866 DEBUG FromReferenceNode:74 - Resolved : p -> parent0_.id
14:13:59,890 DEBUG FromReferenceNode:74 - Resolved : c -> children1_.id
14:13:59,890 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:13:59,890 DEBUG FromReferenceNode:74 - Resolved : c.name -> children1_.name
14:13:59,890 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} parent0_.id ) ( FromClause{level=1} ( Parents parent0_ chlidren children1_ ) ) ( order ( children1_.name children1_.id name ) desc ) )
14:13:59,891 DEBUG JoinProcessor:175 - Using FROM fragment [Parents parent0_]
14:13:59,891 DEBUG JoinProcessor:175 - Using FROM fragment [inner join chlidren children1_ on parent0_.id=children1_.parent_id]
14:13:59,891 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (chlidren,Parents)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'parent0_.id as id0_0_' {alias=p, className=org.hibernate.test.hqlfetchscroll.Parent, tableAlias=parent0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'children1_.id as id1_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=c,role=org.hibernate.test.hqlfetchscroll.Parent.children,tableName=chlidren,tableAlias=children1_,origin=Parents parent0_,columns={parent0_.id ,className=org.hibernate.test.hqlfetchscroll.Child}}}
    |  +-[SQL_TOKEN] SqlFragment: 'parent0_.name as name0_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'children1_.name as name1_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'children1_.parent_id as parent3_0_0__, children1_.id as id1_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[c, p], fromElementByTableAlias=[parent0_, children1_], fromElementsByPath=[p.children], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Parents parent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=Parents,tableAlias=parent0_,origin=null,columns={,className=org.hibernate.test.hqlfetchscroll.Parent}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join chlidren children1_ on parent0_.id=children1_.parent_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=c,role=org.hibernate.test.hqlfetchscroll.Parent.children,tableName=chlidren,tableAlias=children1_,origin=Parents parent0_,columns={parent0_.id ,className=org.hibernate.test.hqlfetchscroll.Child}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'children1_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=c.name,tableAlias=children1_,className=org.hibernate.test.hqlfetchscroll.Child,classAlias=c}
       |  +-[ALIAS_REF] IdentNode: 'children1_.id' {alias=c, className=org.hibernate.test.hqlfetchscroll.Child, tableAlias=children1_}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[DESCENDING] SqlNode: 'desc'

14:13:59,892 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:59,892 DEBUG QueryTranslatorImpl:235 - HQL: select p from org.hibernate.test.hqlfetchscroll.Parent p join fetch p.children c order by c.name desc
14:13:59,892 DEBUG QueryTranslatorImpl:236 - SQL: select parent0_.id as id0_0_, children1_.id as id1_1_, parent0_.name as name0_0_, children1_.name as name1_1_, children1_.parent_id as parent3_0_0__, children1_.id as id1_0__ from Parents parent0_ inner join chlidren children1_ on parent0_.id=children1_.parent_id order by children1_.name desc
14:13:59,892 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:59,892 DEBUG SQL:104 - 
    select
        parent0_.id as id0_0_,
        children1_.id as id1_1_,
        parent0_.name as name0_0_,
        children1_.name as name1_1_,
        children1_.parent_id as parent3_0_0__,
        children1_.id as id1_0__ 
    from
        Parents parent0_ 
    inner join
        chlidren children1_ 
            on parent0_.id=children1_.parent_id 
    order by
        children1_.name desc
14:13:59,893 DEBUG SQL:104 - 
    select
        parent0_.id as id0_,
        parent0_.name as name0_ 
    from
        Parents parent0_
14:13:59,894 DEBUG SQL:104 - 
    select
        children0_.parent_id as parent3_0_1_,
        children0_.id as id1_1_,
        children0_.id as id1_0_,
        children0_.name as name1_0_ 
    from
        chlidren children0_ 
    where
        children0_.parent_id=?
14:13:59,894 DEBUG SQL:104 - 
    select
        children0_.parent_id as parent3_0_1_,
        children0_.id as id1_1_,
        children0_.id as id1_0_,
        children0_.name as name1_0_ 
    from
        chlidren children0_ 
    where
        children0_.parent_id=?
14:13:59,894 DEBUG SQL:104 - 
    select
        children0_.parent_id as parent3_0_1_,
        children0_.id as id1_1_,
        children0_.id as id1_0_,
        children0_.name as name1_0_ 
    from
        chlidren children0_ 
    where
        children0_.parent_id=?
14:13:59,897 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=null 
    where
        parent_id=?
14:13:59,897 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=null 
    where
        parent_id=?
14:13:59,897 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,898 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,898 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,898 DEBUG SQL:104 - 
    delete 
    from
        Parents 
    where
        id=?
14:13:59,898 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,898 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,898 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,899 DEBUG SQL:104 - 
    delete 
    from
        Parents 
    where
        id=?
14:13:59,911 DEBUG SQL:104 - 
    delete 
    from
        Parents 
    where
        id=?
14:13:59,912  INFO CustomRunner:139 - Test: testNoScroll
14:13:59,913 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,913 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,913 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,924 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,924 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,924 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:13:59,925 DEBUG SQL:104 - 
    insert 
    into
        Parents
        (id, name) 
    values
        (null, ?)
14:13:59,934 DEBUG SQL:104 - 
    insert 
    into
        Parents
        (id, name) 
    values
        (null, ?)
14:13:59,935 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,935 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,944 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,945 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,945 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,945 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:13:59,955 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select p from org.hibernate.test.hqlfetchscroll.Parent p join fetch p.children c
14:13:59,957 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  +-[RANGE] Node: 'RANGE'
       |  |  +-[DOT] Node: '.'
       |  |  |  +-[DOT] Node: '.'
       |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  +-[DOT] Node: '.'
       |  |  |  |  |  |  +-[IDENT] Node: 'org'
       |  |  |  |  |  |  \-[IDENT] Node: 'hibernate'
       |  |  |  |  |  \-[IDENT] Node: 'test'
       |  |  |  |  \-[IDENT] Node: 'hqlfetchscroll'
       |  |  |  \-[IDENT] Node: 'Parent'
       |  |  \-[ALIAS] Node: 'p'
       |  \-[JOIN] Node: 'join'
       |     +-[FETCH] Node: 'fetch'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'p'
       |     |  \-[IDENT] Node: 'children'
       |     \-[ALIAS] Node: 'c'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'p'

14:13:59,957 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:59,957 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hqlfetchscroll.Parent (p) -> parent0_
14:13:59,967 DEBUG FromReferenceNode:74 - Resolved : p -> parent0_.id
14:13:59,968 DEBUG DotNode:599 - getDataType() : children -> org.hibernate.type.SetType(org.hibernate.test.hqlfetchscroll.Parent.children)
14:13:59,968 DEBUG FromElementFactory:376 - createEntityAssociation() : One to many - path = p.children role = org.hibernate.test.hqlfetchscroll.Parent.children associatedEntityName = org.hibernate.test.hqlfetchscroll.Child
14:13:59,968 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hqlfetchscroll.Child (c) -> children1_
14:13:59,968 DEBUG FromClause:282 - addJoinByPathMap() : p.children -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=chlidren,tableAlias=children1_,origin=Parents parent0_,columns={parent0_.id ,className=org.hibernate.test.hqlfetchscroll.Child}}
14:13:59,968 DEBUG DotNode:308 - dereferenceCollection() : Created new FROM element for p.children : chlidren children1_
14:13:59,968 DEBUG FromReferenceNode:74 - Resolved : p.children -> .
14:13:59,969 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'chlidren children1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=c,role=org.hibernate.test.hqlfetchscroll.Parent.children,tableName=chlidren,tableAlias=children1_,origin=Parents parent0_,columns={parent0_.id ,className=org.hibernate.test.hqlfetchscroll.Child}}

14:13:59,969 DEBUG FromReferenceNode:74 - Resolved : p -> parent0_.id
14:13:59,969 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} parent0_.id ) ( FromClause{level=1} ( Parents parent0_ chlidren children1_ ) ) )
14:13:59,969 DEBUG JoinProcessor:175 - Using FROM fragment [Parents parent0_]
14:13:59,969 DEBUG JoinProcessor:175 - Using FROM fragment [inner join chlidren children1_ on parent0_.id=children1_.parent_id]
14:13:59,969 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (chlidren,Parents)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'parent0_.id as id0_0_' {alias=p, className=org.hibernate.test.hqlfetchscroll.Parent, tableAlias=parent0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'children1_.id as id1_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=c,role=org.hibernate.test.hqlfetchscroll.Parent.children,tableName=chlidren,tableAlias=children1_,origin=Parents parent0_,columns={parent0_.id ,className=org.hibernate.test.hqlfetchscroll.Child}}}
    |  +-[SQL_TOKEN] SqlFragment: 'parent0_.name as name0_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'children1_.name as name1_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'children1_.parent_id as parent3_0_0__, children1_.id as id1_0__'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[c, p], fromElementByTableAlias=[parent0_, children1_], fromElementsByPath=[p.children], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Parents parent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=Parents,tableAlias=parent0_,origin=null,columns={,className=org.hibernate.test.hqlfetchscroll.Parent}}
          \-[JOIN_FRAGMENT] FromElement: 'inner join chlidren children1_ on parent0_.id=children1_.parent_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=c,role=org.hibernate.test.hqlfetchscroll.Parent.children,tableName=chlidren,tableAlias=children1_,origin=Parents parent0_,columns={parent0_.id ,className=org.hibernate.test.hqlfetchscroll.Child}}

14:13:59,970 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:59,970 DEBUG QueryTranslatorImpl:235 - HQL: select p from org.hibernate.test.hqlfetchscroll.Parent p join fetch p.children c
14:13:59,970 DEBUG QueryTranslatorImpl:236 - SQL: select parent0_.id as id0_0_, children1_.id as id1_1_, parent0_.name as name0_0_, children1_.name as name1_1_, children1_.parent_id as parent3_0_0__, children1_.id as id1_0__ from Parents parent0_ inner join chlidren children1_ on parent0_.id=children1_.parent_id
14:13:59,970 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:13:59,970 DEBUG SQL:104 - 
    select
        parent0_.id as id0_0_,
        children1_.id as id1_1_,
        parent0_.name as name0_0_,
        children1_.name as name1_1_,
        children1_.parent_id as parent3_0_0__,
        children1_.id as id1_0__ 
    from
        Parents parent0_ 
    inner join
        chlidren children1_ 
            on parent0_.id=children1_.parent_id
14:13:59,978 DEBUG SQL:104 - 
    select
        parent0_.id as id0_,
        parent0_.name as name0_ 
    from
        Parents parent0_
14:13:59,978 DEBUG SQL:104 - 
    select
        children0_.parent_id as parent3_0_1_,
        children0_.id as id1_1_,
        children0_.id as id1_0_,
        children0_.name as name1_0_ 
    from
        chlidren children0_ 
    where
        children0_.parent_id=?
14:13:59,979 DEBUG SQL:104 - 
    select
        children0_.parent_id as parent3_0_1_,
        children0_.id as id1_1_,
        children0_.id as id1_0_,
        children0_.name as name1_0_ 
    from
        chlidren children0_ 
    where
        children0_.parent_id=?
14:13:59,988 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=null 
    where
        parent_id=?
14:13:59,988 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=null 
    where
        parent_id=?
14:13:59,989 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:13:59,989 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,000 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,000 DEBUG SQL:104 - 
    delete 
    from
        Parents 
    where
        id=?
14:14:00,001 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,001 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,001 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,009 DEBUG SQL:104 - 
    delete 
    from
        Parents 
    where
        id=?
14:14:00,010  INFO CustomRunner:139 - Test: testScrollOrderChildrenDesc
14:14:00,011 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:14:00,011 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:14:00,012 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:14:00,023 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:14:00,024 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:14:00,024 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:14:00,024 DEBUG SQL:104 - 
    insert 
    into
        Parents
        (id, name) 
    values
        (null, ?)
14:14:00,025 DEBUG SQL:104 - 
    insert 
    into
        Parents
        (id, name) 
    values
        (null, ?)
14:14:00,025 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:14:00,026 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:14:00,026 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:14:00,026 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:14:00,038 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:14:00,039 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:14:00,039 DEBUG SQL:104 - 
    insert 
    into
        Parents
        (id, name) 
    values
        (null, ?)
14:14:00,040 DEBUG SQL:104 - 
    select
        parent0_.id as id0_0_,
        children1_.id as id1_1_,
        parent0_.name as name0_0_,
        children1_.name as name1_1_,
        children1_.parent_id as parent3_0_0__,
        children1_.id as id1_0__ 
    from
        Parents parent0_ 
    inner join
        chlidren children1_ 
            on parent0_.id=children1_.parent_id 
    order by
        children1_.name desc
14:14:00,054 DEBUG SQL:104 - 
    select
        parent0_.id as id0_,
        parent0_.name as name0_ 
    from
        Parents parent0_
14:14:00,054 DEBUG SQL:104 - 
    select
        children0_.parent_id as parent3_0_1_,
        children0_.id as id1_1_,
        children0_.id as id1_0_,
        children0_.name as name1_0_ 
    from
        chlidren children0_ 
    where
        children0_.parent_id=?
14:14:00,055 DEBUG SQL:104 - 
    select
        children0_.parent_id as parent3_0_1_,
        children0_.id as id1_1_,
        children0_.id as id1_0_,
        children0_.name as name1_0_ 
    from
        chlidren children0_ 
    where
        children0_.parent_id=?
14:14:00,061 DEBUG SQL:104 - 
    select
        children0_.parent_id as parent3_0_1_,
        children0_.id as id1_1_,
        children0_.id as id1_0_,
        children0_.name as name1_0_ 
    from
        chlidren children0_ 
    where
        children0_.parent_id=?
14:14:00,072 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=null 
    where
        parent_id=?
14:14:00,073 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=null 
    where
        parent_id=?
14:14:00,073 DEBUG SQL:104 - 
    delete 
    from
        Parents 
    where
        id=?
14:14:00,073 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,073 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,082 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,083 DEBUG SQL:104 - 
    delete 
    from
        Parents 
    where
        id=?
14:14:00,083 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,083 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,083 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,093 DEBUG SQL:104 - 
    delete 
    from
        Parents 
    where
        id=?
14:14:00,094  INFO CustomRunner:139 - Test: testScrollOrderParentAsc
14:14:00,095 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:14:00,095 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:14:00,096 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:14:00,105 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:14:00,106 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:14:00,106 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:14:00,107 DEBUG SQL:104 - 
    insert 
    into
        Parents
        (id, name) 
    values
        (null, ?)
14:14:00,107 DEBUG SQL:104 - 
    insert 
    into
        Parents
        (id, name) 
    values
        (null, ?)
14:14:00,115 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:14:00,116 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:14:00,116 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:14:00,116 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:14:00,125 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:14:00,125 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:14:00,126 DEBUG SQL:104 - 
    select
        parent0_.id as id0_0_,
        children1_.id as id1_1_,
        parent0_.name as name0_0_,
        children1_.name as name1_1_,
        children1_.parent_id as parent3_0_0__,
        children1_.id as id1_0__ 
    from
        Parents parent0_ 
    inner join
        chlidren children1_ 
            on parent0_.id=children1_.parent_id 
    order by
        parent0_.name asc
14:14:00,142 DEBUG SQL:104 - 
    select
        parent0_.id as id0_,
        parent0_.name as name0_ 
    from
        Parents parent0_
14:14:00,142 DEBUG SQL:104 - 
    select
        children0_.parent_id as parent3_0_1_,
        children0_.id as id1_1_,
        children0_.id as id1_0_,
        children0_.name as name1_0_ 
    from
        chlidren children0_ 
    where
        children0_.parent_id=?
14:14:00,143 DEBUG SQL:104 - 
    select
        children0_.parent_id as parent3_0_1_,
        children0_.id as id1_1_,
        children0_.id as id1_0_,
        children0_.name as name1_0_ 
    from
        chlidren children0_ 
    where
        children0_.parent_id=?
14:14:00,145 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=null 
    where
        parent_id=?
14:14:00,157 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=null 
    where
        parent_id=?
14:14:00,158 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,159 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,159 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,160 DEBUG SQL:104 - 
    delete 
    from
        Parents 
    where
        id=?
14:14:00,160 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,161 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,162 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,162 DEBUG SQL:104 - 
    delete 
    from
        Parents 
    where
        id=?
14:14:00,169  INFO CustomRunner:139 - Test: testScrollOrderParentAscChildrenAsc
14:14:00,170 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:14:00,171 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:14:00,171 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:14:00,171 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:14:00,182 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:14:00,182 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:14:00,183 DEBUG SQL:104 - 
    insert 
    into
        Parents
        (id, name) 
    values
        (null, ?)
14:14:00,184 DEBUG SQL:104 - 
    insert 
    into
        Parents
        (id, name) 
    values
        (null, ?)
14:14:00,194 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:14:00,195 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:14:00,203 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:14:00,203 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:14:00,203 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:14:00,204 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:14:00,205 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select p from org.hibernate.test.hqlfetchscroll.Parent p join fetch p.children c order by p.name asc, c.name asc
14:14:00,206 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |  |  |  |  |  \-[IDENT] Node: 'test'
    |  |  |  |  |  \-[IDENT] Node: 'hqlfetchscroll'
    |  |  |  |  \-[IDENT] Node: 'Parent'
    |  |  |  \-[ALIAS] Node: 'p'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'p'
    |  |     |  \-[IDENT] Node: 'children'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'p'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'p'
       |  \-[IDENT] Node: 'name'
       +-[ASCENDING] Node: 'asc'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'c'
       |  \-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'asc'

14:14:00,225 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:00,225 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hqlfetchscroll.Parent (p) -> parent0_
14:14:00,226 DEBUG FromReferenceNode:74 - Resolved : p -> parent0_.id
14:14:00,226 DEBUG DotNode:599 - getDataType() : children -> org.hibernate.type.SetType(org.hibernate.test.hqlfetchscroll.Parent.children)
14:14:00,226 DEBUG FromElementFactory:376 - createEntityAssociation() : One to many - path = p.children role = org.hibernate.test.hqlfetchscroll.Parent.children associatedEntityName = org.hibernate.test.hqlfetchscroll.Child
14:14:00,226 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hqlfetchscroll.Child (c) -> children1_
14:14:00,226 DEBUG FromClause:282 - addJoinByPathMap() : p.children -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=chlidren,tableAlias=children1_,origin=Parents parent0_,columns={parent0_.id ,className=org.hibernate.test.hqlfetchscroll.Child}}
14:14:00,227 DEBUG DotNode:308 - dereferenceCollection() : Created new FROM element for p.children : chlidren children1_
14:14:00,227 DEBUG FromReferenceNode:74 - Resolved : p.children -> .
14:14:00,227 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'chlidren children1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=c,role=org.hibernate.test.hqlfetchscroll.Parent.children,tableName=chlidren,tableAlias=children1_,origin=Parents parent0_,columns={parent0_.id ,className=org.hibernate.test.hqlfetchscroll.Child}}

14:14:00,227 DEBUG FromReferenceNode:74 - Resolved : p -> parent0_.id
14:14:00,227 DEBUG FromReferenceNode:74 - Resolved : p -> parent0_.id
14:14:00,228 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:14:00,228 DEBUG FromReferenceNode:74 - Resolved : p.name -> parent0_.name
14:14:00,228 DEBUG FromReferenceNode:74 - Resolved : c -> children1_.id
14:14:00,228 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:14:00,228 DEBUG FromReferenceNode:74 - Resolved : c.name -> children1_.name
14:14:00,228 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} parent0_.id ) ( FromClause{level=1} ( Parents parent0_ chlidren children1_ ) ) ( order ( parent0_.name parent0_.id name ) asc ( children1_.name children1_.id name ) asc ) )
14:14:00,229 DEBUG JoinProcessor:175 - Using FROM fragment [Parents parent0_]
14:14:00,229 DEBUG JoinProcessor:175 - Using FROM fragment [inner join chlidren children1_ on parent0_.id=children1_.parent_id]
14:14:00,229 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (chlidren,Parents)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'parent0_.id as id0_0_' {alias=p, className=org.hibernate.test.hqlfetchscroll.Parent, tableAlias=parent0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'children1_.id as id1_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=c,role=org.hibernate.test.hqlfetchscroll.Parent.children,tableName=chlidren,tableAlias=children1_,origin=Parents parent0_,columns={parent0_.id ,className=org.hibernate.test.hqlfetchscroll.Child}}}
    |  +-[SQL_TOKEN] SqlFragment: 'parent0_.name as name0_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'children1_.name as name1_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'children1_.parent_id as parent3_0_0__, children1_.id as id1_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[c, p], fromElementByTableAlias=[parent0_, children1_], fromElementsByPath=[p.children], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Parents parent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=Parents,tableAlias=parent0_,origin=null,columns={,className=org.hibernate.test.hqlfetchscroll.Parent}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join chlidren children1_ on parent0_.id=children1_.parent_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=c,role=org.hibernate.test.hqlfetchscroll.Parent.children,tableName=chlidren,tableAlias=children1_,origin=Parents parent0_,columns={parent0_.id ,className=org.hibernate.test.hqlfetchscroll.Child}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'parent0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=p.name,tableAlias=parent0_,className=org.hibernate.test.hqlfetchscroll.Parent,classAlias=p}
       |  +-[ALIAS_REF] IdentNode: 'parent0_.id' {alias=p, className=org.hibernate.test.hqlfetchscroll.Parent, tableAlias=parent0_}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       +-[ASCENDING] SqlNode: 'asc'
       +-[DOT] DotNode: 'children1_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=c.name,tableAlias=children1_,className=org.hibernate.test.hqlfetchscroll.Child,classAlias=c}
       |  +-[ALIAS_REF] IdentNode: 'children1_.id' {alias=c, className=org.hibernate.test.hqlfetchscroll.Child, tableAlias=children1_}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'asc'

14:14:00,236 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:00,237 DEBUG QueryTranslatorImpl:235 - HQL: select p from org.hibernate.test.hqlfetchscroll.Parent p join fetch p.children c order by p.name asc, c.name asc
14:14:00,237 DEBUG QueryTranslatorImpl:236 - SQL: select parent0_.id as id0_0_, children1_.id as id1_1_, parent0_.name as name0_0_, children1_.name as name1_1_, children1_.parent_id as parent3_0_0__, children1_.id as id1_0__ from Parents parent0_ inner join chlidren children1_ on parent0_.id=children1_.parent_id order by parent0_.name asc, children1_.name asc
14:14:00,237 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:00,237 DEBUG SQL:104 - 
    select
        parent0_.id as id0_0_,
        children1_.id as id1_1_,
        parent0_.name as name0_0_,
        children1_.name as name1_1_,
        children1_.parent_id as parent3_0_0__,
        children1_.id as id1_0__ 
    from
        Parents parent0_ 
    inner join
        chlidren children1_ 
            on parent0_.id=children1_.parent_id 
    order by
        parent0_.name asc,
        children1_.name asc
14:14:00,248 DEBUG SQL:104 - 
    select
        parent0_.id as id0_,
        parent0_.name as name0_ 
    from
        Parents parent0_
14:14:00,249 DEBUG SQL:104 - 
    select
        children0_.parent_id as parent3_0_1_,
        children0_.id as id1_1_,
        children0_.id as id1_0_,
        children0_.name as name1_0_ 
    from
        chlidren children0_ 
    where
        children0_.parent_id=?
14:14:00,250 DEBUG SQL:104 - 
    select
        children0_.parent_id as parent3_0_1_,
        children0_.id as id1_1_,
        children0_.id as id1_0_,
        children0_.name as name1_0_ 
    from
        chlidren children0_ 
    where
        children0_.parent_id=?
14:14:00,252 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=null 
    where
        parent_id=?
14:14:00,260 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=null 
    where
        parent_id=?
14:14:00,261 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,261 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,261 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,271 DEBUG SQL:104 - 
    delete 
    from
        Parents 
    where
        id=?
14:14:00,271 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,271 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,271 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,272 DEBUG SQL:104 - 
    delete 
    from
        Parents 
    where
        id=?
14:14:00,283  INFO CustomRunner:139 - Test: testScrollOrderParentAscChildrenDesc
14:14:00,285 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:14:00,285 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:14:00,286 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:14:00,286 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:14:00,286 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:14:00,286 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:14:00,287 DEBUG SQL:104 - 
    insert 
    into
        Parents
        (id, name) 
    values
        (null, ?)
14:14:00,289 DEBUG SQL:104 - 
    insert 
    into
        Parents
        (id, name) 
    values
        (null, ?)
14:14:00,295 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:14:00,296 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:14:00,296 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:14:00,296 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:14:00,296 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:14:00,323 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:14:00,324 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select p from org.hibernate.test.hqlfetchscroll.Parent p join fetch p.children c order by p.name asc, c.name desc
14:14:00,326 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |  |  |  |  |  \-[IDENT] Node: 'test'
    |  |  |  |  |  \-[IDENT] Node: 'hqlfetchscroll'
    |  |  |  |  \-[IDENT] Node: 'Parent'
    |  |  |  \-[ALIAS] Node: 'p'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'p'
    |  |     |  \-[IDENT] Node: 'children'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'p'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'p'
       |  \-[IDENT] Node: 'name'
       +-[ASCENDING] Node: 'asc'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'c'
       |  \-[IDENT] Node: 'name'
       \-[DESCENDING] Node: 'desc'

14:14:00,329 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:00,329 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hqlfetchscroll.Parent (p) -> parent0_
14:14:00,329 DEBUG FromReferenceNode:74 - Resolved : p -> parent0_.id
14:14:00,330 DEBUG DotNode:599 - getDataType() : children -> org.hibernate.type.SetType(org.hibernate.test.hqlfetchscroll.Parent.children)
14:14:00,330 DEBUG FromElementFactory:376 - createEntityAssociation() : One to many - path = p.children role = org.hibernate.test.hqlfetchscroll.Parent.children associatedEntityName = org.hibernate.test.hqlfetchscroll.Child
14:14:00,330 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hqlfetchscroll.Child (c) -> children1_
14:14:00,330 DEBUG FromClause:282 - addJoinByPathMap() : p.children -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=chlidren,tableAlias=children1_,origin=Parents parent0_,columns={parent0_.id ,className=org.hibernate.test.hqlfetchscroll.Child}}
14:14:00,330 DEBUG DotNode:308 - dereferenceCollection() : Created new FROM element for p.children : chlidren children1_
14:14:00,331 DEBUG FromReferenceNode:74 - Resolved : p.children -> .
14:14:00,333 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'chlidren children1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=c,role=org.hibernate.test.hqlfetchscroll.Parent.children,tableName=chlidren,tableAlias=children1_,origin=Parents parent0_,columns={parent0_.id ,className=org.hibernate.test.hqlfetchscroll.Child}}

14:14:00,333 DEBUG FromReferenceNode:74 - Resolved : p -> parent0_.id
14:14:00,334 DEBUG FromReferenceNode:74 - Resolved : p -> parent0_.id
14:14:00,334 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:14:00,334 DEBUG FromReferenceNode:74 - Resolved : p.name -> parent0_.name
14:14:00,334 DEBUG FromReferenceNode:74 - Resolved : c -> children1_.id
14:14:00,334 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:14:00,334 DEBUG FromReferenceNode:74 - Resolved : c.name -> children1_.name
14:14:00,335 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} parent0_.id ) ( FromClause{level=1} ( Parents parent0_ chlidren children1_ ) ) ( order ( parent0_.name parent0_.id name ) asc ( children1_.name children1_.id name ) desc ) )
14:14:00,335 DEBUG JoinProcessor:175 - Using FROM fragment [Parents parent0_]
14:14:00,335 DEBUG JoinProcessor:175 - Using FROM fragment [inner join chlidren children1_ on parent0_.id=children1_.parent_id]
14:14:00,336 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (chlidren,Parents)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'parent0_.id as id0_0_' {alias=p, className=org.hibernate.test.hqlfetchscroll.Parent, tableAlias=parent0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'children1_.id as id1_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=c,role=org.hibernate.test.hqlfetchscroll.Parent.children,tableName=chlidren,tableAlias=children1_,origin=Parents parent0_,columns={parent0_.id ,className=org.hibernate.test.hqlfetchscroll.Child}}}
    |  +-[SQL_TOKEN] SqlFragment: 'parent0_.name as name0_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'children1_.name as name1_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'children1_.parent_id as parent3_0_0__, children1_.id as id1_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[c, p], fromElementByTableAlias=[parent0_, children1_], fromElementsByPath=[p.children], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Parents parent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=Parents,tableAlias=parent0_,origin=null,columns={,className=org.hibernate.test.hqlfetchscroll.Parent}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join chlidren children1_ on parent0_.id=children1_.parent_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=c,role=org.hibernate.test.hqlfetchscroll.Parent.children,tableName=chlidren,tableAlias=children1_,origin=Parents parent0_,columns={parent0_.id ,className=org.hibernate.test.hqlfetchscroll.Child}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'parent0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=p.name,tableAlias=parent0_,className=org.hibernate.test.hqlfetchscroll.Parent,classAlias=p}
       |  +-[ALIAS_REF] IdentNode: 'parent0_.id' {alias=p, className=org.hibernate.test.hqlfetchscroll.Parent, tableAlias=parent0_}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       +-[ASCENDING] SqlNode: 'asc'
       +-[DOT] DotNode: 'children1_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=c.name,tableAlias=children1_,className=org.hibernate.test.hqlfetchscroll.Child,classAlias=c}
       |  +-[ALIAS_REF] IdentNode: 'children1_.id' {alias=c, className=org.hibernate.test.hqlfetchscroll.Child, tableAlias=children1_}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[DESCENDING] SqlNode: 'desc'

14:14:00,336 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:00,336 DEBUG QueryTranslatorImpl:235 - HQL: select p from org.hibernate.test.hqlfetchscroll.Parent p join fetch p.children c order by p.name asc, c.name desc
14:14:00,336 DEBUG QueryTranslatorImpl:236 - SQL: select parent0_.id as id0_0_, children1_.id as id1_1_, parent0_.name as name0_0_, children1_.name as name1_1_, children1_.parent_id as parent3_0_0__, children1_.id as id1_0__ from Parents parent0_ inner join chlidren children1_ on parent0_.id=children1_.parent_id order by parent0_.name asc, children1_.name desc
14:14:00,336 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:00,336 DEBUG SQL:104 - 
    select
        parent0_.id as id0_0_,
        children1_.id as id1_1_,
        parent0_.name as name0_0_,
        children1_.name as name1_1_,
        children1_.parent_id as parent3_0_0__,
        children1_.id as id1_0__ 
    from
        Parents parent0_ 
    inner join
        chlidren children1_ 
            on parent0_.id=children1_.parent_id 
    order by
        parent0_.name asc,
        children1_.name desc
14:14:00,354 DEBUG SQL:104 - 
    select
        parent0_.id as id0_,
        parent0_.name as name0_ 
    from
        Parents parent0_
14:14:00,355 DEBUG SQL:104 - 
    select
        children0_.parent_id as parent3_0_1_,
        children0_.id as id1_1_,
        children0_.id as id1_0_,
        children0_.name as name1_0_ 
    from
        chlidren children0_ 
    where
        children0_.parent_id=?
14:14:00,357 DEBUG SQL:104 - 
    select
        children0_.parent_id as parent3_0_1_,
        children0_.id as id1_1_,
        children0_.id as id1_0_,
        children0_.name as name1_0_ 
    from
        chlidren children0_ 
    where
        children0_.parent_id=?
14:14:00,358 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=null 
    where
        parent_id=?
14:14:00,365 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=null 
    where
        parent_id=?
14:14:00,366 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,366 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,367 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,367 DEBUG SQL:104 - 
    delete 
    from
        Parents 
    where
        id=?
14:14:00,376 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,377 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,378 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,378 DEBUG SQL:104 - 
    delete 
    from
        Parents 
    where
        id=?
14:14:00,382  INFO CustomRunner:139 - Test: testScrollOrderParentDesc
14:14:00,383 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:14:00,390 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:14:00,390 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:14:00,390 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:14:00,390 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:14:00,400 DEBUG SQL:104 - 
    insert 
    into
        chlidren
        (id, name) 
    values
        (null, ?)
14:14:00,401 DEBUG SQL:104 - 
    insert 
    into
        Parents
        (id, name) 
    values
        (null, ?)
14:14:00,401 DEBUG SQL:104 - 
    insert 
    into
        Parents
        (id, name) 
    values
        (null, ?)
14:14:00,402 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:14:00,412 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:14:00,412 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:14:00,412 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:14:00,413 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:14:00,413 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=? 
    where
        id=?
14:14:00,414 DEBUG QueryTranslatorImpl:265 - parse() - HQL: select p from org.hibernate.test.hqlfetchscroll.Parent p join fetch p.children c order by p.name desc
14:14:00,415 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  |  \-[IDENT] Node: 'hibernate'
    |  |  |  |  |  |  \-[IDENT] Node: 'test'
    |  |  |  |  |  \-[IDENT] Node: 'hqlfetchscroll'
    |  |  |  |  \-[IDENT] Node: 'Parent'
    |  |  |  \-[ALIAS] Node: 'p'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[FETCH] Node: 'fetch'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'p'
    |  |     |  \-[IDENT] Node: 'children'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'p'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'p'
       |  \-[IDENT] Node: 'name'
       \-[DESCENDING] Node: 'desc'

14:14:00,425 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:00,426 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hqlfetchscroll.Parent (p) -> parent0_
14:14:00,426 DEBUG FromReferenceNode:74 - Resolved : p -> parent0_.id
14:14:00,426 DEBUG DotNode:599 - getDataType() : children -> org.hibernate.type.SetType(org.hibernate.test.hqlfetchscroll.Parent.children)
14:14:00,426 DEBUG FromElementFactory:376 - createEntityAssociation() : One to many - path = p.children role = org.hibernate.test.hqlfetchscroll.Parent.children associatedEntityName = org.hibernate.test.hqlfetchscroll.Child
14:14:00,426 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.hqlfetchscroll.Child (c) -> children1_
14:14:00,426 DEBUG FromClause:282 - addJoinByPathMap() : p.children -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=chlidren,tableAlias=children1_,origin=Parents parent0_,columns={parent0_.id ,className=org.hibernate.test.hqlfetchscroll.Child}}
14:14:00,426 DEBUG DotNode:308 - dereferenceCollection() : Created new FROM element for p.children : chlidren children1_
14:14:00,426 DEBUG FromReferenceNode:74 - Resolved : p.children -> .
14:14:00,427 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'chlidren children1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=c,role=org.hibernate.test.hqlfetchscroll.Parent.children,tableName=chlidren,tableAlias=children1_,origin=Parents parent0_,columns={parent0_.id ,className=org.hibernate.test.hqlfetchscroll.Child}}

14:14:00,427 DEBUG FromReferenceNode:74 - Resolved : p -> parent0_.id
14:14:00,427 DEBUG FromReferenceNode:74 - Resolved : p -> parent0_.id
14:14:00,427 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:14:00,427 DEBUG FromReferenceNode:74 - Resolved : p.name -> parent0_.name
14:14:00,427 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( {select clause} parent0_.id ) ( FromClause{level=1} ( Parents parent0_ chlidren children1_ ) ) ( order ( parent0_.name parent0_.id name ) desc ) )
14:14:00,427 DEBUG JoinProcessor:175 - Using FROM fragment [Parents parent0_]
14:14:00,428 DEBUG JoinProcessor:175 - Using FROM fragment [inner join chlidren children1_ on parent0_.id=children1_.parent_id]
14:14:00,428 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (chlidren,Parents)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'parent0_.id as id0_0_' {alias=p, className=org.hibernate.test.hqlfetchscroll.Parent, tableAlias=parent0_}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'children1_.id as id1_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=c,role=org.hibernate.test.hqlfetchscroll.Parent.children,tableName=chlidren,tableAlias=children1_,origin=Parents parent0_,columns={parent0_.id ,className=org.hibernate.test.hqlfetchscroll.Child}}}
    |  +-[SQL_TOKEN] SqlFragment: 'parent0_.name as name0_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'children1_.name as name1_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'children1_.parent_id as parent3_0_0__, children1_.id as id1_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[c, p], fromElementByTableAlias=[parent0_, children1_], fromElementsByPath=[p.children], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Parents parent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=Parents,tableAlias=parent0_,origin=null,columns={,className=org.hibernate.test.hqlfetchscroll.Parent}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join chlidren children1_ on parent0_.id=children1_.parent_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=c,role=org.hibernate.test.hqlfetchscroll.Parent.children,tableName=chlidren,tableAlias=children1_,origin=Parents parent0_,columns={parent0_.id ,className=org.hibernate.test.hqlfetchscroll.Child}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'parent0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path=p.name,tableAlias=parent0_,className=org.hibernate.test.hqlfetchscroll.Parent,classAlias=p}
       |  +-[ALIAS_REF] IdentNode: 'parent0_.id' {alias=p, className=org.hibernate.test.hqlfetchscroll.Parent, tableAlias=parent0_}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[DESCENDING] SqlNode: 'desc'

14:14:00,437 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:00,437 DEBUG QueryTranslatorImpl:235 - HQL: select p from org.hibernate.test.hqlfetchscroll.Parent p join fetch p.children c order by p.name desc
14:14:00,437 DEBUG QueryTranslatorImpl:236 - SQL: select parent0_.id as id0_0_, children1_.id as id1_1_, parent0_.name as name0_0_, children1_.name as name1_1_, children1_.parent_id as parent3_0_0__, children1_.id as id1_0__ from Parents parent0_ inner join chlidren children1_ on parent0_.id=children1_.parent_id order by parent0_.name desc
14:14:00,437 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:14:00,437 DEBUG SQL:104 - 
    select
        parent0_.id as id0_0_,
        children1_.id as id1_1_,
        parent0_.name as name0_0_,
        children1_.name as name1_1_,
        children1_.parent_id as parent3_0_0__,
        children1_.id as id1_0__ 
    from
        Parents parent0_ 
    inner join
        chlidren children1_ 
            on parent0_.id=children1_.parent_id 
    order by
        parent0_.name desc
14:14:00,439 DEBUG SQL:104 - 
    select
        parent0_.id as id0_,
        parent0_.name as name0_ 
    from
        Parents parent0_
14:14:00,439 DEBUG SQL:104 - 
    select
        children0_.parent_id as parent3_0_1_,
        children0_.id as id1_1_,
        children0_.id as id1_0_,
        children0_.name as name1_0_ 
    from
        chlidren children0_ 
    where
        children0_.parent_id=?
14:14:00,460 DEBUG SQL:104 - 
    select
        children0_.parent_id as parent3_0_1_,
        children0_.id as id1_1_,
        children0_.id as id1_0_,
        children0_.name as name1_0_ 
    from
        chlidren children0_ 
    where
        children0_.parent_id=?
14:14:00,461 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=null 
    where
        parent_id=?
14:14:00,461 DEBUG SQL:104 - 
    update
        chlidren 
    set
        parent_id=null 
    where
        parent_id=?
14:14:00,461 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,461 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,472 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,473 DEBUG SQL:104 - 
    delete 
    from
        Parents 
    where
        id=?
14:14:00,473 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,473 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,473 DEBUG SQL:104 - 
    delete 
    from
        chlidren 
    where
        id=?
14:14:00,482 DEBUG SQL:104 - 
    delete 
    from
        Parents 
    where
        id=?
14:14:00,483  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:14:00,484 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:14:00,484 DEBUG SQL:104 - 
    alter table chlidren 
        drop constraint FK67DEA1599529F0AE
14:14:00,484 DEBUG SQL:104 - 
    drop table Parents if exists
14:14:00,485 DEBUG SQL:104 - 
    drop table chlidren if exists
14:14:00,485  INFO SchemaExport:405 - HHH000230: Schema export complete
14:14:00,485  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
