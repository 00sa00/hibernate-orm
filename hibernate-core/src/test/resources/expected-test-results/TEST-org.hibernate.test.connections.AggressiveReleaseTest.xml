<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" hostname="dhcp-10.15.208.168.stl.redhat.com" name="org.hibernate.test.connections.AggressiveReleaseTest" tests="13" time="0.433" timestamp="2013-02-28T20:12:01">
  <properties />
  <testcase classname="org.hibernate.test.connections.AggressiveReleaseTest" name="testBasicSessionUsage" time="0.075" />
  <testcase classname="org.hibernate.test.connections.AggressiveReleaseTest" name="testConnectedSerialization" time="0.04" />
  <testcase classname="org.hibernate.test.connections.AggressiveReleaseTest" name="testConnectionMaintanenceDuringFlush" time="0.103" />
  <testcase classname="org.hibernate.test.connections.AggressiveReleaseTest" name="testEnabledFilterSerialization" time="0.02" />
  <testcase classname="org.hibernate.test.connections.AggressiveReleaseTest" name="testManualDisconnectChain" time="0.002" />
  <testcase classname="org.hibernate.test.connections.AggressiveReleaseTest" name="testManualDisconnectWithOpenResources" time="0.008" />
  <testcase classname="org.hibernate.test.connections.AggressiveReleaseTest" name="testManualDisconnectedSerialization" time="0.001" />
  <testcase classname="org.hibernate.test.connections.AggressiveReleaseTest" name="testQueryIteration" time="0.032" />
  <testcase classname="org.hibernate.test.connections.AggressiveReleaseTest" name="testQueryScrolling" time="0.015" />
  <testcase classname="org.hibernate.test.connections.AggressiveReleaseTest" name="testSerializationFailsOnAfterStatementAggressiveReleaseWithOpenResources" time="0.011" />
  <testcase classname="org.hibernate.test.connections.AggressiveReleaseTest" name="testSerializationOnAfterStatementAggressiveRelease" time="0.003" />
  <testcase classname="org.hibernate.test.connections.AggressiveReleaseTest" name="testSessionClosedProtections" time="0.012" />
  <testcase classname="org.hibernate.test.connections.AggressiveReleaseTest" name="testSuppliedConnection" time="0.015" />
  <system-out><![CDATA[14:12:01,296  INFO CustomRunner:132 - BeforeClass: org.hibernate.test.connections.AggressiveReleaseTest
14:12:01,317  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/connections/Silly.hbm.xml
14:12:01,335  INFO ConnectionProviderInitiator:188 - HHH000130: Instantiating explicit connection provider: org.hibernate.testing.jta.JtaAwareConnectionProviderImpl
14:12:01,336  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:12:01,336  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 20
14:12:01,336  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:12:01,337  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:12:01,337  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa, autocommit=false, release_mode=AFTER_STATEMENT}
14:12:01,338  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:12:01,338  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:12:01,339  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:12:01,339  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:12:01,347  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:12:01,348 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:12:01,348 DEBUG SQL:104 - 
    alter table Silly 
        drop constraint FK4C2FCC34CE24B1
14:12:01,349 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Silly drop constraint FK4C2FCC34CE24B1
14:12:01,349 ERROR SchemaExport:426 - Table "SILLY" not found; SQL statement:

    alter table Silly 
        drop constraint FK4C2FCC34CE24B1 [42102-145]
14:12:01,349 DEBUG SQL:104 - 
    drop table Other if exists
14:12:01,349 DEBUG SQL:104 - 
    drop table Silly if exists
14:12:01,349 DEBUG SQL:104 - 
    create table Other (
        id bigint not null,
        name varchar(255),
        primary key (id)
    )
14:12:01,349 DEBUG SQL:104 - 
    create table Silly (
        id bigint not null,
        name varchar(255),
        other bigint,
        primary key (id)
    )
14:12:01,350 DEBUG SQL:104 - 
    alter table Silly 
        add constraint FK4C2FCC34CE24B1 
        foreign key (other) 
        references Other
14:12:01,350  INFO SchemaExport:405 - HHH000230: Schema export complete
14:12:01,360  INFO CustomRunner:139 - Test: testBasicSessionUsage
14:12:01,374  INFO arjuna:88 - ARJUNA012163: Starting service com.arjuna.ats.arjuna.recovery.ActionStatusService on port 52819
14:12:01,381  INFO arjuna:327 - ARJUNA012337: TransactionStatusManagerItem host: 127.0.0.1 port: 52819
14:12:01,382  INFO arjuna:138 - ARJUNA012170: TransactionStatusManager started on port 52819 and host 127.0.0.1 with service com.arjuna.ats.arjuna.recovery.ActionStatusService
14:12:01,426 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.connections.Silly
14:12:01,427 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'connections'
                \-[IDENT] Node: 'Silly'

14:12:01,427 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:01,428 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.connections.Silly (<no alias>) -> silly0_
14:12:01,428 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Silly silly0_ ) )
14:12:01,428 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:12:01,428 DEBUG JoinProcessor:175 - Using FROM fragment [Silly silly0_]
14:12:01,428 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Silly)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'silly0_.id as id1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Silly,tableAlias=silly0_,origin=null,columns={,className=org.hibernate.test.connections.Silly}}}
    |  \-[SQL_TOKEN] SqlFragment: 'silly0_.name as name1_, silly0_.other as other1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[silly0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Silly silly0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Silly,tableAlias=silly0_,origin=null,columns={,className=org.hibernate.test.connections.Silly}}

14:12:01,428 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:01,428 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.connections.Silly
14:12:01,428 DEBUG QueryTranslatorImpl:236 - SQL: select silly0_.id as id1_, silly0_.name as name1_, silly0_.other as other1_ from Silly silly0_
14:12:01,429 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:01,429 DEBUG SQL:104 - 
    select
        silly0_.id as id1_,
        silly0_.name as name1_,
        silly0_.other as other1_ 
    from
        Silly silly0_
14:12:01,436  INFO CustomRunner:139 - Test: testConnectedSerialization
14:12:01,438 DEBUG SQL:104 - 
    select
        silly0_.id as id1_,
        silly0_.name as name1_,
        silly0_.other as other1_ 
    from
        Silly silly0_
14:12:01,478  INFO CustomRunner:139 - Test: testConnectionMaintanenceDuringFlush
14:12:01,479 DEBUG SQL:104 - 
    select
        max(id) 
    from
        Silly
14:12:01,480 DEBUG SQL:104 - 
    select
        max(id) 
    from
        Other
14:12:01,483 DEBUG SQL:104 - 
    insert 
    into
        Other
        (name, id) 
    values
        (?, ?)
14:12:01,484 DEBUG SQL:104 - 
    insert 
    into
        Silly
        (name, other, id) 
    values
        (?, ?, ?)
14:12:01,484 DEBUG SQL:104 - 
    insert 
    into
        Other
        (name, id) 
    values
        (?, ?)
14:12:01,484 DEBUG SQL:104 - 
    insert 
    into
        Silly
        (name, other, id) 
    values
        (?, ?, ?)
14:12:01,484 DEBUG SQL:104 - 
    insert 
    into
        Other
        (name, id) 
    values
        (?, ?)
14:12:01,485 DEBUG SQL:104 - 
    insert 
    into
        Silly
        (name, other, id) 
    values
        (?, ?, ?)
14:12:01,485 DEBUG SQL:104 - 
    insert 
    into
        Other
        (name, id) 
    values
        (?, ?)
14:12:01,485 DEBUG SQL:104 - 
    insert 
    into
        Silly
        (name, other, id) 
    values
        (?, ?, ?)
14:12:01,486 DEBUG SQL:104 - 
    insert 
    into
        Other
        (name, id) 
    values
        (?, ?)
14:12:01,486 DEBUG SQL:104 - 
    insert 
    into
        Silly
        (name, other, id) 
    values
        (?, ?, ?)
14:12:01,486 DEBUG SQL:104 - 
    insert 
    into
        Other
        (name, id) 
    values
        (?, ?)
14:12:01,486 DEBUG SQL:104 - 
    insert 
    into
        Silly
        (name, other, id) 
    values
        (?, ?, ?)
14:12:01,486 DEBUG SQL:104 - 
    insert 
    into
        Other
        (name, id) 
    values
        (?, ?)
14:12:01,487 DEBUG SQL:104 - 
    insert 
    into
        Silly
        (name, other, id) 
    values
        (?, ?, ?)
14:12:01,493 DEBUG SQL:104 - 
    insert 
    into
        Other
        (name, id) 
    values
        (?, ?)
14:12:01,494 DEBUG SQL:104 - 
    insert 
    into
        Silly
        (name, other, id) 
    values
        (?, ?, ?)
14:12:01,495 DEBUG SQL:104 - 
    insert 
    into
        Other
        (name, id) 
    values
        (?, ?)
14:12:01,495 DEBUG SQL:104 - 
    insert 
    into
        Silly
        (name, other, id) 
    values
        (?, ?, ?)
14:12:01,495 DEBUG SQL:104 - 
    insert 
    into
        Other
        (name, id) 
    values
        (?, ?)
14:12:01,505 DEBUG SQL:104 - 
    insert 
    into
        Silly
        (name, other, id) 
    values
        (?, ?, ?)
14:12:01,506 DEBUG SQL:104 - 
    update
        Silly 
    set
        name=?,
        other=? 
    where
        id=?
14:12:01,507 DEBUG SQL:104 - 
    update
        Other 
    set
        name=? 
    where
        id=?
14:12:01,507 DEBUG SQL:104 - 
    update
        Silly 
    set
        name=?,
        other=? 
    where
        id=?
14:12:01,516 DEBUG SQL:104 - 
    update
        Other 
    set
        name=? 
    where
        id=?
14:12:01,517 DEBUG SQL:104 - 
    update
        Silly 
    set
        name=?,
        other=? 
    where
        id=?
14:12:01,517 DEBUG SQL:104 - 
    update
        Other 
    set
        name=? 
    where
        id=?
14:12:01,517 DEBUG SQL:104 - 
    update
        Silly 
    set
        name=?,
        other=? 
    where
        id=?
14:12:01,527 DEBUG SQL:104 - 
    update
        Other 
    set
        name=? 
    where
        id=?
14:12:01,527 DEBUG SQL:104 - 
    update
        Silly 
    set
        name=?,
        other=? 
    where
        id=?
14:12:01,527 DEBUG SQL:104 - 
    update
        Other 
    set
        name=? 
    where
        id=?
14:12:01,528 DEBUG SQL:104 - 
    update
        Silly 
    set
        name=?,
        other=? 
    where
        id=?
14:12:01,528 DEBUG SQL:104 - 
    update
        Other 
    set
        name=? 
    where
        id=?
14:12:01,528 DEBUG SQL:104 - 
    update
        Silly 
    set
        name=?,
        other=? 
    where
        id=?
14:12:01,529 DEBUG SQL:104 - 
    update
        Other 
    set
        name=? 
    where
        id=?
14:12:01,529 DEBUG SQL:104 - 
    update
        Silly 
    set
        name=?,
        other=? 
    where
        id=?
14:12:01,541 DEBUG SQL:104 - 
    update
        Other 
    set
        name=? 
    where
        id=?
14:12:01,541 DEBUG SQL:104 - 
    update
        Silly 
    set
        name=?,
        other=? 
    where
        id=?
14:12:01,541 DEBUG SQL:104 - 
    update
        Other 
    set
        name=? 
    where
        id=?
14:12:01,551 DEBUG SQL:104 - 
    update
        Silly 
    set
        name=?,
        other=? 
    where
        id=?
14:12:01,551 DEBUG SQL:104 - 
    update
        Other 
    set
        name=? 
    where
        id=?
14:12:01,552 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete from org.hibernate.test.connections.Silly
14:12:01,553 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'connections'
             \-[IDENT] Node: 'Silly'

14:12:01,553 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:01,554 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.connections.Silly (<no alias>) -> silly0_
14:12:01,554 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Silly)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[silly0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Silly' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Silly,tableAlias=silly0_,origin=null,columns={,className=org.hibernate.test.connections.Silly}}

14:12:01,554 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:01,554 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:01,555 DEBUG SQL:104 - 
    delete 
    from
        Silly
14:12:01,555 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete from org.hibernate.test.connections.Other
14:12:01,578 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'connections'
             \-[IDENT] Node: 'Other'

14:12:01,578 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:01,578 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.connections.Other (<no alias>) -> other0_
14:12:01,579 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Other)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[other0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Other' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Other,tableAlias=other0_,origin=null,columns={,className=org.hibernate.test.connections.Other}}

14:12:01,579 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:01,579 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:01,579 DEBUG SQL:104 - 
    delete 
    from
        Other
14:12:01,592  INFO CustomRunner:139 - Test: testEnabledFilterSerialization
14:12:01,613  INFO CustomRunner:139 - Test: testManualDisconnectChain
14:12:01,615  INFO CustomRunner:139 - Test: testManualDisconnectWithOpenResources
14:12:01,616 DEBUG SQL:104 - 
    insert 
    into
        Silly
        (name, other, id) 
    values
        (?, ?, ?)
14:12:01,617 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.connections.Silly
14:12:01,618 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'connections'
                \-[IDENT] Node: 'Silly'

14:12:01,618 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:01,619 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.connections.Silly (<no alias>) -> silly0_
14:12:01,619 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Silly silly0_ ) )
14:12:01,619 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:12:01,619 DEBUG JoinProcessor:175 - Using FROM fragment [Silly silly0_]
14:12:01,619 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Silly)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  \-[SELECT_EXPR] SelectExpressionImpl: 'silly0_.id as col_0_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Silly,tableAlias=silly0_,origin=null,columns={,className=org.hibernate.test.connections.Silly}}}
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[silly0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Silly silly0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Silly,tableAlias=silly0_,origin=null,columns={,className=org.hibernate.test.connections.Silly}}

14:12:01,619 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:01,619 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.connections.Silly
14:12:01,619 DEBUG QueryTranslatorImpl:236 - SQL: select silly0_.id as col_0_0_ from Silly silly0_
14:12:01,620 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:01,620 DEBUG SQL:104 - 
    select
        silly0_.id as col_0_0_ 
    from
        Silly silly0_
14:12:01,621 DEBUG SQL:104 - 
    select
        silly0_.id as id1_,
        silly0_.name as name1_,
        silly0_.other as other1_ 
    from
        Silly silly0_
14:12:01,622 DEBUG SQL:104 - 
    delete 
    from
        Silly 
    where
        id=?
14:12:01,623  INFO CustomRunner:139 - Test: testManualDisconnectedSerialization
14:12:01,624  INFO CustomRunner:139 - Test: testQueryIteration
14:12:01,626 DEBUG SQL:104 - 
    insert 
    into
        Silly
        (name, other, id) 
    values
        (?, ?, ?)
14:12:01,627 DEBUG SQL:104 - 
    select
        silly0_.id as col_0_0_ 
    from
        Silly silly0_
14:12:01,628 DEBUG SQL:104 - 
    select
        silly0_.id as col_0_0_ 
    from
        Silly silly0_
14:12:01,628 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.connections.Silly where name = 'silly'
14:12:01,631 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'org'
    |           |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  \-[IDENT] Node: 'test'
    |           |  \-[IDENT] Node: 'connections'
    |           \-[IDENT] Node: 'Silly'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'name'
          \-[QUOTED_STRING] Node: ''silly''

14:12:01,633 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:01,633 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.connections.Silly (<no alias>) -> silly0_
14:12:01,634 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:12:01,634 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:01,634 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> silly0_.name
14:12:01,634 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Silly silly0_ ) ( where ( = ( silly0_.name {synthetic-alias} name ) 'silly' ) ) )
14:12:01,634 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:12:01,634 DEBUG JoinProcessor:175 - Using FROM fragment [Silly silly0_]
14:12:01,635 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Silly)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'silly0_.id as id1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Silly,tableAlias=silly0_,origin=null,columns={,className=org.hibernate.test.connections.Silly}}}
    |  \-[SQL_TOKEN] SqlFragment: 'silly0_.name as name1_, silly0_.other as other1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[silly0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Silly silly0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Silly,tableAlias=silly0_,origin=null,columns={,className=org.hibernate.test.connections.Silly}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'silly0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=silly0_,className=org.hibernate.test.connections.Silly,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[QUOTED_STRING] LiteralNode: ''silly''

14:12:01,643 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:01,643 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.connections.Silly where name = 'silly'
14:12:01,643 DEBUG QueryTranslatorImpl:236 - SQL: select silly0_.id as id1_, silly0_.name as name1_, silly0_.other as other1_ from Silly silly0_ where silly0_.name='silly'
14:12:01,643 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:01,643 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.connections.Silly where name = 'silly'
14:12:01,644 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'org'
    |           |  |  |  \-[IDENT] Node: 'hibernate'
    |           |  |  \-[IDENT] Node: 'test'
    |           |  \-[IDENT] Node: 'connections'
    |           \-[IDENT] Node: 'Silly'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'name'
          \-[QUOTED_STRING] Node: ''silly''

14:12:01,654 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:01,654 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.connections.Silly (<no alias>) -> silly0_
14:12:01,654 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:12:01,654 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:12:01,654 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> silly0_.name
14:12:01,655 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Silly silly0_ ) ( where ( = ( silly0_.name {synthetic-alias} name ) 'silly' ) ) )
14:12:01,655 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:12:01,655 DEBUG JoinProcessor:175 - Using FROM fragment [Silly silly0_]
14:12:01,655 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Silly)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  \-[SELECT_EXPR] SelectExpressionImpl: 'silly0_.id as col_0_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Silly,tableAlias=silly0_,origin=null,columns={,className=org.hibernate.test.connections.Silly}}}
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[silly0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Silly silly0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Silly,tableAlias=silly0_,origin=null,columns={,className=org.hibernate.test.connections.Silly}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'silly0_.name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=silly0_,className=org.hibernate.test.connections.Silly,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[QUOTED_STRING] LiteralNode: ''silly''

14:12:01,655 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:01,655 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.connections.Silly where name = 'silly'
14:12:01,655 DEBUG QueryTranslatorImpl:236 - SQL: select silly0_.id as col_0_0_ from Silly silly0_ where silly0_.name='silly'
14:12:01,655 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:01,656 DEBUG SQL:104 - 
    select
        silly0_.id as col_0_0_ 
    from
        Silly silly0_ 
    where
        silly0_.name='silly'
14:12:01,657 DEBUG SQL:104 - 
    delete 
    from
        Silly 
    where
        id=?
14:12:01,657  INFO CustomRunner:139 - Test: testQueryScrolling
14:12:01,659 DEBUG SQL:104 - 
    insert 
    into
        Silly
        (name, other, id) 
    values
        (?, ?, ?)
14:12:01,660 DEBUG SQL:104 - 
    select
        silly0_.id as id1_,
        silly0_.name as name1_,
        silly0_.other as other1_ 
    from
        Silly silly0_
14:12:01,671 DEBUG SQL:104 - 
    select
        silly0_.id as id1_,
        silly0_.name as name1_,
        silly0_.other as other1_ 
    from
        Silly silly0_
14:12:01,672 DEBUG SQL:104 - 
    select
        silly0_.id as id1_,
        silly0_.name as name1_,
        silly0_.other as other1_ 
    from
        Silly silly0_ 
    where
        silly0_.name='silly'
14:12:01,672 DEBUG SQL:104 - 
    delete 
    from
        Silly 
    where
        id=?
14:12:01,673  INFO CustomRunner:139 - Test: testSerializationFailsOnAfterStatementAggressiveReleaseWithOpenResources
14:12:01,674 DEBUG SQL:104 - 
    insert 
    into
        Silly
        (name, other, id) 
    values
        (?, ?, ?)
14:12:01,682 DEBUG SQL:104 - 
    select
        silly0_.id as id1_,
        silly0_.name as name1_,
        silly0_.other as other1_ 
    from
        Silly silly0_
14:12:01,684 DEBUG SQL:104 - 
    delete 
    from
        Silly 
    where
        id=?
14:12:01,685  INFO CustomRunner:139 - Test: testSerializationOnAfterStatementAggressiveRelease
14:12:01,686 DEBUG SQL:104 - 
    insert 
    into
        Silly
        (name, other, id) 
    values
        (?, ?, ?)
14:12:01,687 DEBUG SQL:104 - 
    delete 
    from
        Silly 
    where
        id=?
14:12:01,688  INFO CustomRunner:139 - Test: testSessionClosedProtections
14:12:01,701  INFO CustomRunner:139 - Test: testSuppliedConnection
14:12:01,703 DEBUG SQL:104 - 
    insert 
    into
        Silly
        (name, other, id) 
    values
        (?, ?, ?)
14:12:01,715 DEBUG SQL:104 - 
    delete 
    from
        Silly 
    where
        id=?
14:12:01,716  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:12:01,717 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:12:01,717 DEBUG SQL:104 - 
    alter table Silly 
        drop constraint FK4C2FCC34CE24B1
14:12:01,717 DEBUG SQL:104 - 
    drop table Other if exists
14:12:01,717 DEBUG SQL:104 - 
    drop table Silly if exists
14:12:01,718  INFO SchemaExport:405 - HHH000230: Schema export complete
14:12:01,718  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
