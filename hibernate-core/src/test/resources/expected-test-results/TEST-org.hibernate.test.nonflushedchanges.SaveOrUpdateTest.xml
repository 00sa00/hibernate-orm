<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" hostname="dhcp-10.15.208.168.stl.redhat.com" name="org.hibernate.test.nonflushedchanges.SaveOrUpdateTest" tests="8" time="0.527" timestamp="2013-02-28T20:17:35">
  <properties />
  <testcase classname="org.hibernate.test.nonflushedchanges.SaveOrUpdateTest" name="testEvictThenSaveOrUpdate" time="0.022" />
  <testcase classname="org.hibernate.test.nonflushedchanges.SaveOrUpdateTest" name="testSaveOrUpdateDeepTree" time="0.12" />
  <testcase classname="org.hibernate.test.nonflushedchanges.SaveOrUpdateTest" name="testSaveOrUpdateDeepTreeWithGeneratedId" time="0.081" />
  <testcase classname="org.hibernate.test.nonflushedchanges.SaveOrUpdateTest" name="testSaveOrUpdateGot" time="0.032" />
  <testcase classname="org.hibernate.test.nonflushedchanges.SaveOrUpdateTest" name="testSaveOrUpdateGotWithMutableProp" time="0.045" />
  <testcase classname="org.hibernate.test.nonflushedchanges.SaveOrUpdateTest" name="testSaveOrUpdateManaged" time="0.029" />
  <testcase classname="org.hibernate.test.nonflushedchanges.SaveOrUpdateTest" name="testSaveOrUpdateTree" time="0.072" />
  <testcase classname="org.hibernate.test.nonflushedchanges.SaveOrUpdateTest" name="testSaveOrUpdateTreeWithGeneratedId" time="0.026" />
  <system-out><![CDATA[14:17:35,463  INFO CustomRunner:132 - BeforeClass: org.hibernate.test.nonflushedchanges.SaveOrUpdateTest
14:17:35,465  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/nonflushedchanges/Node.hbm.xml
14:17:35,489  INFO ConnectionProviderInitiator:188 - HHH000130: Instantiating explicit connection provider: org.hibernate.testing.jta.JtaAwareConnectionProviderImpl
14:17:35,490  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:17:35,490  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 20
14:17:35,490  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:17:35,490  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:17:35,491  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa, autocommit=false, release_mode=AFTER_STATEMENT}
14:17:35,492  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:17:35,493  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:17:35,493  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:17:35,494  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:17:35,509  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:17:35,509 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:17:35,510 DEBUG SQL:104 - 
    alter table Node 
        drop constraint FK252222D556A303
14:17:35,510 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Node drop constraint FK252222D556A303
14:17:35,510 ERROR SchemaExport:426 - Table "NODE" not found; SQL statement:

    alter table Node 
        drop constraint FK252222D556A303 [42102-145]
14:17:35,510 DEBUG SQL:104 - 
    alter table Node 
        drop constraint FK25222261DDD534
14:17:35,510 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Node drop constraint FK25222261DDD534
14:17:35,511 ERROR SchemaExport:426 - Table "NODE" not found; SQL statement:

    alter table Node 
        drop constraint FK25222261DDD534 [42102-145]
14:17:35,511 DEBUG SQL:104 - 
    alter table NumberedNode 
        drop constraint FK667A9BEA4467F5CB
14:17:35,511 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table NumberedNode drop constraint FK667A9BEA4467F5CB
14:17:35,511 ERROR SchemaExport:426 - Table "NUMBEREDNODE" not found; SQL statement:

    alter table NumberedNode 
        drop constraint FK667A9BEA4467F5CB [42102-145]
14:17:35,511 DEBUG SQL:104 - 
    drop table Node if exists
14:17:35,511 DEBUG SQL:104 - 
    drop table NumberedNode if exists
14:17:35,512 DEBUG SQL:104 - 
    create table Node (
        name varchar(255) not null,
        description varchar(255),
        parent varchar(255),
        created date not null,
        CASC_PARENT varchar(255),
        primary key (name)
    )
14:17:35,512 DEBUG SQL:104 - 
    create table NumberedNode (
        id bigint generated by default as identity,
        name varchar(255) not null,
        description varchar(255),
        created date not null,
        parent bigint,
        primary key (id)
    )
14:17:35,512 DEBUG SQL:104 - 
    alter table Node 
        add constraint FK252222D556A303 
        foreign key (parent) 
        references Node
14:17:35,513 DEBUG SQL:104 - 
    alter table Node 
        add constraint FK25222261DDD534 
        foreign key (CASC_PARENT) 
        references Node
14:17:35,513 DEBUG SQL:104 - 
    create index iname on NumberedNode (name)
14:17:35,514 DEBUG SQL:104 - 
    alter table NumberedNode 
        add constraint FK667A9BEA4467F5CB 
        foreign key (parent) 
        references NumberedNode
14:17:35,514  INFO SchemaExport:405 - HHH000230: Schema export complete
14:17:35,515  INFO CustomRunner:139 - Test: testEvictThenSaveOrUpdate
14:17:35,516 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,516 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,517 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,519 DEBUG SQL:104 - 
    insert 
    into
        Node
        (description, parent, created, name) 
    values
        (?, ?, ?, ?)
14:17:35,520 DEBUG SQL:104 - 
    insert 
    into
        Node
        (description, parent, created, name) 
    values
        (?, ?, ?, ?)
14:17:35,520 DEBUG SQL:104 - 
    insert 
    into
        Node
        (description, parent, created, name) 
    values
        (?, ?, ?, ?)
14:17:35,522 DEBUG SQL:104 - 
    select
        node0_.name as name0_0_,
        node0_.description as descript2_0_0_,
        node0_.parent as parent0_0_,
        node0_.created as created0_0_ 
    from
        Node node0_ 
    where
        node0_.name=?
14:17:35,526 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,527 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,529 DEBUG SQL:104 - 
    select
        children0_.parent as parent0_1_,
        children0_.name as name0_1_,
        children0_.name as name0_0_,
        children0_.description as descript2_0_0_,
        children0_.parent as parent0_0_,
        children0_.created as created0_0_ 
    from
        Node children0_ 
    where
        children0_.parent=?
14:17:35,530 DEBUG SQL:104 - 
    select
        node0_.name as name0_0_,
        node0_.description as descript2_0_0_,
        node0_.parent as parent0_0_,
        node0_.created as created0_0_ 
    from
        Node node0_ 
    where
        node0_.name=?
14:17:35,534 DEBUG SQL:104 - 
    select
        node0_.name as name0_0_,
        node0_.description as descript2_0_0_,
        node0_.parent as parent0_0_,
        node0_.created as created0_0_ 
    from
        Node node0_ 
    where
        node0_.name=?
14:17:35,534 DEBUG SQL:104 - 
    select
        cascadingc0_.CASC_PARENT as CASC5_0_1_,
        cascadingc0_.name as name0_1_,
        cascadingc0_.name as name0_0_,
        cascadingc0_.description as descript2_0_0_,
        cascadingc0_.parent as parent0_0_,
        cascadingc0_.created as created0_0_ 
    from
        Node cascadingc0_ 
    where
        cascadingc0_.CASC_PARENT=?
14:17:35,535 DEBUG SQL:104 - 
    select
        node0_.name as name0_0_,
        node0_.description as descript2_0_0_,
        node0_.parent as parent0_0_,
        node0_.created as created0_0_ 
    from
        Node node0_ 
    where
        node0_.name=?
14:17:35,535 DEBUG SQL:104 - 
    select
        cascadingc0_.CASC_PARENT as CASC5_0_1_,
        cascadingc0_.name as name0_1_,
        cascadingc0_.name as name0_0_,
        cascadingc0_.description as descript2_0_0_,
        cascadingc0_.parent as parent0_0_,
        cascadingc0_.created as created0_0_ 
    from
        Node cascadingc0_ 
    where
        cascadingc0_.CASC_PARENT=?
14:17:35,536 DEBUG SQL:104 - 
    select
        node0_.name as name0_0_,
        node0_.description as descript2_0_0_,
        node0_.parent as parent0_0_,
        node0_.created as created0_0_ 
    from
        Node node0_ 
    where
        node0_.name=?
14:17:35,536 DEBUG SQL:104 - 
    select
        cascadingc0_.CASC_PARENT as CASC5_0_1_,
        cascadingc0_.name as name0_1_,
        cascadingc0_.name as name0_0_,
        cascadingc0_.description as descript2_0_0_,
        cascadingc0_.parent as parent0_0_,
        cascadingc0_.created as created0_0_ 
    from
        Node cascadingc0_ 
    where
        cascadingc0_.CASC_PARENT=?
14:17:35,536 DEBUG SQL:104 - 
    delete 
    from
        Node 
    where
        name=?
14:17:35,537 DEBUG SQL:104 - 
    delete 
    from
        Node 
    where
        name=?
14:17:35,537 DEBUG SQL:104 - 
    delete 
    from
        Node 
    where
        name=?
14:17:35,537  INFO CustomRunner:139 - Test: testSaveOrUpdateDeepTree
14:17:35,538 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,539 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,565 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,569 DEBUG SQL:104 - 
    insert 
    into
        Node
        (description, parent, created, name) 
    values
        (?, ?, ?, ?)
14:17:35,569 DEBUG SQL:104 - 
    insert 
    into
        Node
        (description, parent, created, name) 
    values
        (?, ?, ?, ?)
14:17:35,569 DEBUG SQL:104 - 
    insert 
    into
        Node
        (description, parent, created, name) 
    values
        (?, ?, ?, ?)
14:17:35,570 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,571 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,571 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,579 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,582 DEBUG SQL:104 - 
    insert 
    into
        Node
        (description, parent, created, name) 
    values
        (?, ?, ?, ?)
14:17:35,583 DEBUG SQL:104 - 
    update
        Node 
    set
        description=?,
        parent=?,
        created=? 
    where
        name=?
14:17:35,584 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,591 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,592 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,593 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,593 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,615 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,619 DEBUG SQL:104 - 
    insert 
    into
        Node
        (description, parent, created, name) 
    values
        (?, ?, ?, ?)
14:17:35,620 DEBUG SQL:104 - 
    insert 
    into
        Node
        (description, parent, created, name) 
    values
        (?, ?, ?, ?)
14:17:35,620 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,628 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,630 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,631 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,637 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,638 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,638 DEBUG SQL:104 - 
    update
        Node 
    set
        CASC_PARENT=null 
    where
        CASC_PARENT=?
14:17:35,648 DEBUG SQL:104 - 
    update
        Node 
    set
        CASC_PARENT=null 
    where
        CASC_PARENT=?
14:17:35,648 DEBUG SQL:104 - 
    update
        Node 
    set
        CASC_PARENT=null 
    where
        CASC_PARENT=?
14:17:35,648 DEBUG SQL:104 - 
    delete 
    from
        Node 
    where
        name=?
14:17:35,648 DEBUG SQL:104 - 
    delete 
    from
        Node 
    where
        name=?
14:17:35,649 DEBUG SQL:104 - 
    delete 
    from
        Node 
    where
        name=?
14:17:35,657 DEBUG SQL:104 - 
    delete 
    from
        Node 
    where
        name=?
14:17:35,658 DEBUG SQL:104 - 
    delete 
    from
        Node 
    where
        name=?
14:17:35,658 DEBUG SQL:104 - 
    delete 
    from
        Node 
    where
        name=?
14:17:35,658  INFO CustomRunner:139 - Test: testSaveOrUpdateDeepTreeWithGeneratedId
14:17:35,660 DEBUG SQL:104 - 
    insert 
    into
        NumberedNode
        (id, name, description, created, parent) 
    values
        (null, ?, ?, ?, ?)
14:17:35,668 DEBUG SQL:104 - 
    insert 
    into
        NumberedNode
        (id, name, description, created, parent) 
    values
        (null, ?, ?, ?, ?)
14:17:35,668 DEBUG SQL:104 - 
    insert 
    into
        NumberedNode
        (id, name, description, created, parent) 
    values
        (null, ?, ?, ?, ?)
14:17:35,671 DEBUG SQL:104 - 
    insert 
    into
        NumberedNode
        (id, name, description, created, parent) 
    values
        (null, ?, ?, ?, ?)
14:17:35,673 DEBUG SQL:104 - 
    update
        NumberedNode 
    set
        name=?,
        description=?,
        created=?,
        parent=? 
    where
        id=?
14:17:35,679 DEBUG SQL:104 - 
    update
        NumberedNode 
    set
        name=?,
        description=?,
        created=?,
        parent=? 
    where
        id=?
14:17:35,679 DEBUG SQL:104 - 
    update
        NumberedNode 
    set
        name=?,
        description=?,
        created=?,
        parent=? 
    where
        id=?
14:17:35,680 DEBUG SQL:104 - 
    insert 
    into
        NumberedNode
        (id, name, description, created, parent) 
    values
        (null, ?, ?, ?, ?)
14:17:35,691 DEBUG SQL:104 - 
    insert 
    into
        NumberedNode
        (id, name, description, created, parent) 
    values
        (null, ?, ?, ?, ?)
14:17:35,694 DEBUG SQL:104 - 
    update
        NumberedNode 
    set
        name=?,
        description=?,
        created=?,
        parent=? 
    where
        id=?
14:17:35,694 DEBUG SQL:104 - 
    update
        NumberedNode 
    set
        name=?,
        description=?,
        created=?,
        parent=? 
    where
        id=?
14:17:35,694 DEBUG SQL:104 - 
    update
        NumberedNode 
    set
        name=?,
        description=?,
        created=?,
        parent=? 
    where
        id=?
14:17:35,695 DEBUG SQL:104 - 
    update
        NumberedNode 
    set
        name=?,
        description=?,
        created=?,
        parent=? 
    where
        id=?
14:17:35,696 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete from org.hibernate.test.nonflushedchanges.NumberedNode where name like 'grand%'
14:17:35,696 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'nonflushedchanges'
    |        \-[IDENT] Node: 'NumberedNode'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[IDENT] Node: 'name'
          \-[QUOTED_STRING] Node: ''grand%''

14:17:35,705 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:35,706 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.nonflushedchanges.NumberedNode (<no alias>) -> numberedno0_
14:17:35,706 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:17:35,706 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:17:35,706 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> name
14:17:35,707 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (NumberedNode)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[numberedno0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'NumberedNode' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=NumberedNode,tableAlias=numberedno0_,origin=null,columns={,className=org.hibernate.test.nonflushedchanges.NumberedNode}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=numberedno0_,className=org.hibernate.test.nonflushedchanges.NumberedNode,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[QUOTED_STRING] LiteralNode: ''grand%''

14:17:35,707 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:35,707 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:35,707 DEBUG SQL:104 - 
    delete 
    from
        NumberedNode 
    where
        name like 'grand%'
14:17:35,716 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete from org.hibernate.test.nonflushedchanges.NumberedNode where name like 'child%'
14:17:35,716 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'nonflushedchanges'
    |        \-[IDENT] Node: 'NumberedNode'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[IDENT] Node: 'name'
          \-[QUOTED_STRING] Node: ''child%''

14:17:35,716 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:35,717 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.nonflushedchanges.NumberedNode (<no alias>) -> numberedno0_
14:17:35,717 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:17:35,717 DEBUG DotNode:599 - getDataType() : name -> org.hibernate.type.StringType@2dc8de40
14:17:35,717 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.name -> name
14:17:35,717 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (NumberedNode)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[numberedno0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'NumberedNode' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=NumberedNode,tableAlias=numberedno0_,origin=null,columns={,className=org.hibernate.test.nonflushedchanges.NumberedNode}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'name' {propertyName=name,dereferenceType=ALL,propertyPath=name,path={synthetic-alias}.name,tableAlias=numberedno0_,className=org.hibernate.test.nonflushedchanges.NumberedNode,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[QUOTED_STRING] LiteralNode: ''child%''

14:17:35,717 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:35,717 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:35,718 DEBUG SQL:104 - 
    delete 
    from
        NumberedNode 
    where
        name like 'child%'
14:17:35,718 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete from org.hibernate.test.nonflushedchanges.NumberedNode
14:17:35,737 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'nonflushedchanges'
             \-[IDENT] Node: 'NumberedNode'

14:17:35,738 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:35,738 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.nonflushedchanges.NumberedNode (<no alias>) -> numberedno0_
14:17:35,738 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (NumberedNode)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[numberedno0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'NumberedNode' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=NumberedNode,tableAlias=numberedno0_,origin=null,columns={,className=org.hibernate.test.nonflushedchanges.NumberedNode}}

14:17:35,739 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:35,739 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:35,739 DEBUG SQL:104 - 
    delete 
    from
        NumberedNode
14:17:35,740  INFO CustomRunner:139 - Test: testSaveOrUpdateGot
14:17:35,750 DEBUG SQL:104 - 
    insert 
    into
        NumberedNode
        (id, name, description, created, parent) 
    values
        (null, ?, ?, ?, ?)
14:17:35,754 DEBUG SQL:104 - 
    update
        NumberedNode 
    set
        name=?,
        description=?,
        created=?,
        parent=? 
    where
        id=?
14:17:35,755 DEBUG SQL:104 - 
    select
        numberedno0_.id as id1_0_,
        numberedno0_.name as name1_0_,
        numberedno0_.description as descript3_1_0_,
        numberedno0_.created as created1_0_,
        numberedno0_.parent as parent1_0_ 
    from
        NumberedNode numberedno0_ 
    where
        numberedno0_.id=?
14:17:35,758 DEBUG SQL:104 - 
    select
        children0_.parent as parent1_1_,
        children0_.id as id1_1_,
        children0_.id as id1_0_,
        children0_.name as name1_0_,
        children0_.description as descript3_1_0_,
        children0_.created as created1_0_,
        children0_.parent as parent1_0_ 
    from
        NumberedNode children0_ 
    where
        children0_.parent=?
14:17:35,762 DEBUG SQL:104 - 
    insert 
    into
        NumberedNode
        (id, name, description, created, parent) 
    values
        (null, ?, ?, ?, ?)
14:17:35,764 DEBUG SQL:104 - 
    update
        NumberedNode 
    set
        name=?,
        description=?,
        created=?,
        parent=? 
    where
        id=?
14:17:35,765 DEBUG SQL:104 - 
    select
        count(*) as y0_ 
    from
        NumberedNode this_
14:17:35,772 DEBUG SQL:104 - 
    update
        NumberedNode 
    set
        name=?,
        description=?,
        created=?,
        parent=? 
    where
        id=?
14:17:35,773 DEBUG SQL:104 - 
    delete 
    from
        NumberedNode 
    where
        id=?
14:17:35,773 DEBUG SQL:104 - 
    delete 
    from
        NumberedNode 
    where
        id=?
14:17:35,774  INFO CustomRunner:139 - Test: testSaveOrUpdateGotWithMutableProp
14:17:35,775 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,785 DEBUG SQL:104 - 
    insert 
    into
        Node
        (description, parent, created, name) 
    values
        (?, ?, ?, ?)
14:17:35,786 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,788 DEBUG SQL:104 - 
    select
        node0_.name as name0_0_,
        node0_.description as descript2_0_0_,
        node0_.parent as parent0_0_,
        node0_.created as created0_0_ 
    from
        Node node0_ 
    where
        node0_.name=?
14:17:35,796 DEBUG SQL:104 - 
    select
        children0_.parent as parent0_1_,
        children0_.name as name0_1_,
        children0_.name as name0_0_,
        children0_.description as descript2_0_0_,
        children0_.parent as parent0_0_,
        children0_.created as created0_0_ 
    from
        Node children0_ 
    where
        children0_.parent=?
14:17:35,798 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,799 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,810 DEBUG SQL:104 - 
    insert 
    into
        Node
        (description, parent, created, name) 
    values
        (?, ?, ?, ?)
14:17:35,811 DEBUG SQL:104 - 
    select
        count(*) as y0_ 
    from
        Node this_
14:17:35,812 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,812 DEBUG SQL:104 - 
    select
        cascadingc0_.CASC_PARENT as CASC5_0_1_,
        cascadingc0_.name as name0_1_,
        cascadingc0_.name as name0_0_,
        cascadingc0_.description as descript2_0_0_,
        cascadingc0_.parent as parent0_0_,
        cascadingc0_.created as created0_0_ 
    from
        Node cascadingc0_ 
    where
        cascadingc0_.CASC_PARENT=?
14:17:35,817 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,818 DEBUG SQL:104 - 
    update
        Node 
    set
        description=?,
        parent=?,
        created=? 
    where
        name=?
14:17:35,818 DEBUG SQL:104 - 
    delete 
    from
        Node 
    where
        name=?
14:17:35,818 DEBUG SQL:104 - 
    delete 
    from
        Node 
    where
        name=?
14:17:35,819  INFO CustomRunner:139 - Test: testSaveOrUpdateManaged
14:17:35,821 DEBUG SQL:104 - 
    insert 
    into
        NumberedNode
        (id, name, description, created, parent) 
    values
        (null, ?, ?, ?, ?)
14:17:35,824 DEBUG SQL:104 - 
    select
        numberedno0_.id as id1_0_,
        numberedno0_.name as name1_0_,
        numberedno0_.description as descript3_1_0_,
        numberedno0_.created as created1_0_,
        numberedno0_.parent as parent1_0_ 
    from
        NumberedNode numberedno0_ 
    where
        numberedno0_.id=?
14:17:35,834 DEBUG SQL:104 - 
    select
        children0_.parent as parent1_1_,
        children0_.id as id1_1_,
        children0_.id as id1_0_,
        children0_.name as name1_0_,
        children0_.description as descript3_1_0_,
        children0_.created as created1_0_,
        children0_.parent as parent1_0_ 
    from
        NumberedNode children0_ 
    where
        children0_.parent=?
14:17:35,836 DEBUG SQL:104 - 
    insert 
    into
        NumberedNode
        (id, name, description, created, parent) 
    values
        (null, ?, ?, ?, ?)
14:17:35,840 DEBUG SQL:104 - 
    select
        count(*) as y0_ 
    from
        NumberedNode this_
14:17:35,841 DEBUG SQL:104 - 
    update
        NumberedNode 
    set
        name=?,
        description=?,
        created=?,
        parent=? 
    where
        id=?
14:17:35,847 DEBUG SQL:104 - 
    delete 
    from
        NumberedNode 
    where
        id=?
14:17:35,848 DEBUG SQL:104 - 
    delete 
    from
        NumberedNode 
    where
        id=?
14:17:35,848  INFO CustomRunner:139 - Test: testSaveOrUpdateTree
14:17:35,853 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,854 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,856 DEBUG SQL:104 - 
    insert 
    into
        Node
        (description, parent, created, name) 
    values
        (?, ?, ?, ?)
14:17:35,876 DEBUG SQL:104 - 
    insert 
    into
        Node
        (description, parent, created, name) 
    values
        (?, ?, ?, ?)
14:17:35,877 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,877 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,878 DEBUG SQL:104 - 
    select
        node_.name,
        node_.description as descript2_0_,
        node_.parent as parent0_,
        node_.created as created0_ 
    from
        Node node_ 
    where
        node_.name=?
14:17:35,880 DEBUG SQL:104 - 
    insert 
    into
        Node
        (description, parent, created, name) 
    values
        (?, ?, ?, ?)
14:17:35,880 DEBUG SQL:104 - 
    update
        Node 
    set
        description=?,
        parent=?,
        created=? 
    where
        name=?
14:17:35,881 DEBUG SQL:104 - 
    update
        Node 
    set
        description=?,
        parent=?,
        created=? 
    where
        name=?
14:17:35,882 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete from org.hibernate.test.nonflushedchanges.Node where parent is not null
14:17:35,882 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'nonflushedchanges'
    |        \-[IDENT] Node: 'Node'
    \-[WHERE] Node: 'where'
       \-[IS_NOT_NULL] Node: 'is not null'
          \-[IDENT] Node: 'parent'

14:17:35,900 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:35,901 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.nonflushedchanges.Node (<no alias>) -> node0_
14:17:35,901 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:17:35,901 DEBUG DotNode:599 - getDataType() : parent -> org.hibernate.type.ManyToOneType(org.hibernate.test.nonflushedchanges.Node)
14:17:35,901 DEBUG DotNode:562 - dereferenceShortcut() : property parent in org.hibernate.test.nonflushedchanges.Node does not require a join.
14:17:35,901 DEBUG DotNode:588 - Terminal propertyPath = [parent]
14:17:35,901 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.parent -> parent
14:17:35,902 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Node)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[node0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Node' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Node,tableAlias=node0_,origin=null,columns={,className=org.hibernate.test.nonflushedchanges.Node}}
    \-[WHERE] SqlNode: 'where'
       \-[IS_NOT_NULL] IsNotNullLogicOperatorNode: 'is not null'
          \-[DOT] DotNode: 'parent' {propertyName=parent,dereferenceType=0,propertyPath=parent,path={synthetic-alias}.parent,tableAlias=node0_,className=org.hibernate.test.nonflushedchanges.Node,classAlias=null}
             +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             \-[IDENT] IdentNode: 'parent' {originalText=parent}

14:17:35,902 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:35,902 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:35,902 DEBUG SQL:104 - 
    delete 
    from
        Node 
    where
        parent is not null
14:17:35,912 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete from org.hibernate.test.nonflushedchanges.Node
14:17:35,912 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'nonflushedchanges'
             \-[IDENT] Node: 'Node'

14:17:35,912 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:35,913 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.nonflushedchanges.Node (<no alias>) -> node0_
14:17:35,913 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Node)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[node0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Node' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Node,tableAlias=node0_,origin=null,columns={,className=org.hibernate.test.nonflushedchanges.Node}}

14:17:35,913 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:35,913 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:35,913 DEBUG SQL:104 - 
    delete 
    from
        Node
14:17:35,921  INFO CustomRunner:139 - Test: testSaveOrUpdateTreeWithGeneratedId
14:17:35,923 DEBUG SQL:104 - 
    insert 
    into
        NumberedNode
        (id, name, description, created, parent) 
    values
        (null, ?, ?, ?, ?)
14:17:35,924 DEBUG SQL:104 - 
    insert 
    into
        NumberedNode
        (id, name, description, created, parent) 
    values
        (null, ?, ?, ?, ?)
14:17:35,926 DEBUG SQL:104 - 
    insert 
    into
        NumberedNode
        (id, name, description, created, parent) 
    values
        (null, ?, ?, ?, ?)
14:17:35,928 DEBUG SQL:104 - 
    update
        NumberedNode 
    set
        name=?,
        description=?,
        created=?,
        parent=? 
    where
        id=?
14:17:35,936 DEBUG SQL:104 - 
    update
        NumberedNode 
    set
        name=?,
        description=?,
        created=?,
        parent=? 
    where
        id=?
14:17:35,937 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete from org.hibernate.test.nonflushedchanges.NumberedNode where parent is not null
14:17:35,938 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[IDENT] Node: 'org'
    |        |  |  |  \-[IDENT] Node: 'hibernate'
    |        |  |  \-[IDENT] Node: 'test'
    |        |  \-[IDENT] Node: 'nonflushedchanges'
    |        \-[IDENT] Node: 'NumberedNode'
    \-[WHERE] Node: 'where'
       \-[IS_NOT_NULL] Node: 'is not null'
          \-[IDENT] Node: 'parent'

14:17:35,945 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:35,946 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.nonflushedchanges.NumberedNode (<no alias>) -> numberedno0_
14:17:35,946 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:17:35,946 DEBUG DotNode:599 - getDataType() : parent -> org.hibernate.type.ManyToOneType(org.hibernate.test.nonflushedchanges.NumberedNode)
14:17:35,946 DEBUG DotNode:562 - dereferenceShortcut() : property parent in org.hibernate.test.nonflushedchanges.NumberedNode does not require a join.
14:17:35,946 DEBUG DotNode:588 - Terminal propertyPath = [parent]
14:17:35,946 DEBUG FromReferenceNode:74 - Resolved : {synthetic-alias}.parent -> parent
14:17:35,946 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (NumberedNode)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[numberedno0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'NumberedNode' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=NumberedNode,tableAlias=numberedno0_,origin=null,columns={,className=org.hibernate.test.nonflushedchanges.NumberedNode}}
    \-[WHERE] SqlNode: 'where'
       \-[IS_NOT_NULL] IsNotNullLogicOperatorNode: 'is not null'
          \-[DOT] DotNode: 'parent' {propertyName=parent,dereferenceType=0,propertyPath=parent,path={synthetic-alias}.parent,tableAlias=numberedno0_,className=org.hibernate.test.nonflushedchanges.NumberedNode,classAlias=null}
             +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             \-[IDENT] IdentNode: 'parent' {originalText=parent}

14:17:35,947 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:35,947 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:35,947 DEBUG SQL:104 - 
    delete 
    from
        NumberedNode 
    where
        parent is not null
14:17:35,948 DEBUG SQL:104 - 
    delete 
    from
        NumberedNode
14:17:35,948  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:17:35,949 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:17:35,949 DEBUG SQL:104 - 
    alter table Node 
        drop constraint FK252222D556A303
14:17:35,950 DEBUG SQL:104 - 
    alter table Node 
        drop constraint FK25222261DDD534
14:17:35,951 DEBUG SQL:104 - 
    alter table NumberedNode 
        drop constraint FK667A9BEA4467F5CB
14:17:35,951 DEBUG SQL:104 - 
    drop table Node if exists
14:17:35,951 DEBUG SQL:104 - 
    drop table NumberedNode if exists
14:17:35,951  INFO SchemaExport:405 - HHH000230: Schema export complete
14:17:35,951  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
