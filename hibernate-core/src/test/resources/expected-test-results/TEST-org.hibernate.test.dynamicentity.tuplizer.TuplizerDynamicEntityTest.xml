<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" hostname="dhcp-10.15.208.168.stl.redhat.com" name="org.hibernate.test.dynamicentity.tuplizer.TuplizerDynamicEntityTest" tests="1" time="0.125" timestamp="2013-02-28T20:12:16">
  <properties />
  <testcase classname="org.hibernate.test.dynamicentity.tuplizer.TuplizerDynamicEntityTest" name="testIt" time="0.075" />
  <system-out><![CDATA[14:12:16,022  INFO CustomRunner:132 - BeforeClass: org.hibernate.test.dynamicentity.tuplizer.TuplizerDynamicEntityTest
14:12:16,026  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/dynamicentity/tuplizer/Customer.hbm.xml
14:12:16,035  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:12:16,036  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:12:16,036  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:12:16,036  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:12:16,036  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:12:16,037  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:12:16,038  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:12:16,039  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:12:16,039  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:12:16,039  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:12:16,042  WARN EntityMetamodel:294 - HHH000084: Entity [org.hibernate.test.dynamicentity.Customer] is abstract-class/interface explicitly mapped as non-abstract; be sure to supply entity-names
14:12:16,046  WARN EntityMetamodel:294 - HHH000084: Entity [org.hibernate.test.dynamicentity.Company] is abstract-class/interface explicitly mapped as non-abstract; be sure to supply entity-names
14:12:16,047  WARN EntityMetamodel:294 - HHH000084: Entity [org.hibernate.test.dynamicentity.Address] is abstract-class/interface explicitly mapped as non-abstract; be sure to supply entity-names
14:12:16,048  WARN EntityMetamodel:294 - HHH000084: Entity [org.hibernate.test.dynamicentity.Person] is abstract-class/interface explicitly mapped as non-abstract; be sure to supply entity-names
14:12:16,052  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:12:16,053 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:12:16,053 DEBUG SQL:104 - 
    alter table t_person 
        drop constraint FK785BED80A4E62A7B
14:12:16,053 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table t_person drop constraint FK785BED80A4E62A7B
14:12:16,053 ERROR SchemaExport:426 - Table "T_PERSON" not found; SQL statement:

    alter table t_person 
        drop constraint FK785BED80A4E62A7B [42102-145]
14:12:16,054 DEBUG SQL:104 - 
    alter table t_person 
        drop constraint FK785BED809F057B26
14:12:16,054 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table t_person drop constraint FK785BED809F057B26
14:12:16,054 ERROR SchemaExport:426 - Table "T_PERSON" not found; SQL statement:

    alter table t_person 
        drop constraint FK785BED809F057B26 [42102-145]
14:12:16,054 DEBUG SQL:104 - 
    alter table t_person 
        drop constraint FK785BED8074A2603B
14:12:16,054 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table t_person drop constraint FK785BED8074A2603B
14:12:16,055 ERROR SchemaExport:426 - Table "T_PERSON" not found; SQL statement:

    alter table t_person 
        drop constraint FK785BED8074A2603B [42102-145]
14:12:16,055 DEBUG SQL:104 - 
    drop table t_address if exists
14:12:16,055 DEBUG SQL:104 - 
    drop table t_company if exists
14:12:16,055 DEBUG SQL:104 - 
    drop table t_person if exists
14:12:16,055 DEBUG SQL:104 - 
    create table t_address (
        id bigint generated by default as identity,
        street varchar(255),
        city varchar(255),
        postalCode varchar(255),
        primary key (id)
    )
14:12:16,056 DEBUG SQL:104 - 
    create table t_company (
        id bigint generated by default as identity,
        name varchar(255),
        primary key (id)
    )
14:12:16,056 DEBUG SQL:104 - 
    create table t_person (
        id bigint generated by default as identity,
        t_person_dis varchar(255) not null,
        name varchar(255),
        addr_id bigint,
        comp_id bigint,
        pers_id bigint,
        primary key (id)
    )
14:12:16,057 DEBUG SQL:104 - 
    alter table t_person 
        add constraint FK785BED80A4E62A7B 
        foreign key (addr_id) 
        references t_address
14:12:16,058 DEBUG SQL:104 - 
    alter table t_person 
        add constraint FK785BED809F057B26 
        foreign key (comp_id) 
        references t_company
14:12:16,059 DEBUG SQL:104 - 
    alter table t_person 
        add constraint FK785BED8074A2603B 
        foreign key (pers_id) 
        references t_person
14:12:16,059  INFO SchemaExport:405 - HHH000230: Schema export complete
14:12:16,060  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:12:16,060  INFO CustomRunner:139 - Test: testIt
14:12:16,062 DEBUG SQL:104 - 
    insert 
    into
        t_company
        (id, name) 
    values
        (null, ?)
14:12:16,067 DEBUG SQL:104 - 
    insert 
    into
        t_address
        (id, street, city, postalCode) 
    values
        (null, ?, ?, ?)
14:12:16,068 DEBUG SQL:104 - 
    insert 
    into
        t_person
        (id, name, addr_id, comp_id, t_person_dis) 
    values
        (null, ?, ?, ?, 'customer')
14:12:16,070 DEBUG SQL:104 - 
    insert 
    into
        t_person
        (id, name, addr_id, t_person_dis) 
    values
        (null, ?, ?, 'person')
14:12:16,070 DEBUG SQL:104 - 
    insert 
    into
        t_person
        (id, name, addr_id, t_person_dis) 
    values
        (null, ?, ?, 'person')
14:12:16,071 DEBUG SQL:104 - 
    update
        t_person 
    set
        pers_id=? 
    where
        id=?
14:12:16,072 DEBUG SQL:104 - 
    update
        t_person 
    set
        pers_id=? 
    where
        id=?
14:12:16,072 DEBUG SQL:104 - 
    select
        customer0_.id as id2_0_,
        customer0_.name as name2_0_,
        customer0_.addr_id as addr4_2_0_,
        customer0_.comp_id as comp5_2_0_ 
    from
        t_person customer0_ 
    where
        customer0_.id=? 
        and customer0_.t_person_dis='customer'
14:12:16,073 DEBUG SQL:104 - 
    update
        t_person 
    set
        name=?,
        addr_id=?,
        comp_id=? 
    where
        id=?
14:12:16,074 DEBUG SQL:104 - 
    select
        customer0_.id as id2_2_,
        customer0_.name as name2_2_,
        customer0_.addr_id as addr4_2_2_,
        customer0_.comp_id as comp5_2_2_,
        address1_.id as id0_0_,
        address1_.street as street0_0_,
        address1_.city as city0_0_,
        address1_.postalCode as postalCode0_0_,
        family2_.pers_id as pers6_2_4_,
        family2_.id as id2_4_,
        family2_.id as id2_1_,
        family2_.name as name2_1_,
        family2_.addr_id as addr4_2_1_,
        family2_.comp_id as comp5_2_1_,
        family2_.t_person_dis as t2_2_1_ 
    from
        t_person customer0_ 
    left outer join
        t_address address1_ 
            on customer0_.addr_id=address1_.id 
    left outer join
        t_person family2_ 
            on customer0_.id=family2_.pers_id 
    where
        customer0_.id=? 
        and customer0_.t_person_dis='customer'
14:12:16,075 DEBUG SQL:104 - 
    select
        company0_.id as id1_0_,
        company0_.name as name1_0_ 
    from
        t_company company0_ 
    where
        company0_.id=?
14:12:16,076 DEBUG SQL:104 - 
    update
        t_person 
    set
        name=?,
        addr_id=?,
        comp_id=? 
    where
        id=?
14:12:16,077 DEBUG SQL:104 - 
    update
        t_person 
    set
        name=?,
        addr_id=? 
    where
        id=?
14:12:16,077 DEBUG SQL:104 - 
    update
        t_person 
    set
        name=?,
        addr_id=? 
    where
        id=?
14:12:16,077 DEBUG SQL:104 - 
    select
        person0_.id as id2_2_,
        person0_.name as name2_2_,
        person0_.addr_id as addr4_2_2_,
        person0_.comp_id as comp5_2_2_,
        person0_.t_person_dis as t2_2_2_,
        address1_.id as id0_0_,
        address1_.street as street0_0_,
        address1_.city as city0_0_,
        address1_.postalCode as postalCode0_0_,
        family2_.pers_id as pers6_2_4_,
        family2_.id as id2_4_,
        family2_.id as id2_1_,
        family2_.name as name2_1_,
        family2_.addr_id as addr4_2_1_,
        family2_.comp_id as comp5_2_1_,
        family2_.t_person_dis as t2_2_1_ 
    from
        t_person person0_ 
    left outer join
        t_address address1_ 
            on person0_.addr_id=address1_.id 
    left outer join
        t_person family2_ 
            on person0_.id=family2_.pers_id 
    where
        person0_.id=?
14:12:16,078 DEBUG SQL:104 - 
    select
        person0_.id as id2_2_,
        person0_.name as name2_2_,
        person0_.addr_id as addr4_2_2_,
        person0_.comp_id as comp5_2_2_,
        person0_.t_person_dis as t2_2_2_,
        address1_.id as id0_0_,
        address1_.street as street0_0_,
        address1_.city as city0_0_,
        address1_.postalCode as postalCode0_0_,
        family2_.pers_id as pers6_2_4_,
        family2_.id as id2_4_,
        family2_.id as id2_1_,
        family2_.name as name2_1_,
        family2_.addr_id as addr4_2_1_,
        family2_.comp_id as comp5_2_1_,
        family2_.t_person_dis as t2_2_1_ 
    from
        t_person person0_ 
    left outer join
        t_address address1_ 
            on person0_.addr_id=address1_.id 
    left outer join
        t_person family2_ 
            on person0_.id=family2_.pers_id 
    where
        person0_.id=?
14:12:16,079 DEBUG SQL:104 - 
    select
        customer0_.id as id2_2_,
        customer0_.name as name2_2_,
        customer0_.addr_id as addr4_2_2_,
        customer0_.comp_id as comp5_2_2_,
        address1_.id as id0_0_,
        address1_.street as street0_0_,
        address1_.city as city0_0_,
        address1_.postalCode as postalCode0_0_,
        family2_.pers_id as pers6_2_4_,
        family2_.id as id2_4_,
        family2_.id as id2_1_,
        family2_.name as name2_1_,
        family2_.addr_id as addr4_2_1_,
        family2_.comp_id as comp5_2_1_,
        family2_.t_person_dis as t2_2_1_ 
    from
        t_person customer0_ 
    left outer join
        t_address address1_ 
            on customer0_.addr_id=address1_.id 
    left outer join
        t_person family2_ 
            on customer0_.id=family2_.pers_id 
    where
        customer0_.id=? 
        and customer0_.t_person_dis='customer'
14:12:16,080 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.dynamicentity.Customer
14:12:16,081 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'dynamicentity'
                \-[IDENT] Node: 'Customer'

14:12:16,081 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:16,081 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.dynamicentity.Customer (<no alias>) -> customer0_
14:12:16,081 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} t_person customer0_ ) )
14:12:16,081 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:12:16,081 DEBUG JoinProcessor:175 - Using FROM fragment [t_person customer0_]
14:12:16,082 DEBUG SyntheticAndFactory:92 - Using unprocessed WHERE-fragment [customer0_.t_person_dis='customer']
14:12:16,082 DEBUG SyntheticAndFactory:124 - Using processed WHERE-fragment [customer0_.t_person_dis='customer']
14:12:16,082 DEBUG QueryNode:73 - getWhereClause() : Creating a new WHERE clause...
14:12:16,082 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (t_person)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'customer0_.id as id2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=t_person,tableAlias=customer0_,origin=null,columns={,className=org.hibernate.test.dynamicentity.Customer}}}
    |  \-[SQL_TOKEN] SqlFragment: 'customer0_.name as name2_, customer0_.addr_id as addr4_2_, customer0_.comp_id as comp5_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[customer0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 't_person customer0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=t_person,tableAlias=customer0_,origin=null,columns={,className=org.hibernate.test.dynamicentity.Customer}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[FILTERS] SqlNode: '{filter conditions}'
          \-[SQL_TOKEN] SqlFragment: 'customer0_.t_person_dis='customer''

14:12:16,114 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:16,114 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.dynamicentity.Customer
14:12:16,114 DEBUG QueryTranslatorImpl:236 - SQL: select customer0_.id as id2_, customer0_.name as name2_, customer0_.addr_id as addr4_2_, customer0_.comp_id as comp5_2_ from t_person customer0_ where customer0_.t_person_dis='customer'
14:12:16,115 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:16,115 DEBUG SQL:104 - 
    select
        customer0_.id as id2_,
        customer0_.name as name2_,
        customer0_.addr_id as addr4_2_,
        customer0_.comp_id as comp5_2_ 
    from
        t_person customer0_ 
    where
        customer0_.t_person_dis='customer'
14:12:16,116 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.dynamicentity.Person
14:12:16,117 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'dynamicentity'
                \-[IDENT] Node: 'Person'

14:12:16,125 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:16,126 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.dynamicentity.Person (<no alias>) -> person0_
14:12:16,126 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} t_person person0_ ) )
14:12:16,126 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:12:16,126 DEBUG JoinProcessor:175 - Using FROM fragment [t_person person0_]
14:12:16,127 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (t_person)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'person0_.id as id2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=t_person,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.dynamicentity.Person}}}
    |  \-[SQL_TOKEN] SqlFragment: 'person0_.name as name2_, person0_.addr_id as addr4_2_, person0_.comp_id as comp5_2_, person0_.t_person_dis as t2_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[person0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 't_person person0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=t_person,tableAlias=person0_,origin=null,columns={,className=org.hibernate.test.dynamicentity.Person}}

14:12:16,127 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:16,127 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.dynamicentity.Person
14:12:16,127 DEBUG QueryTranslatorImpl:236 - SQL: select person0_.id as id2_, person0_.name as name2_, person0_.addr_id as addr4_2_, person0_.comp_id as comp5_2_, person0_.t_person_dis as t2_2_ from t_person person0_
14:12:16,127 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:12:16,127 DEBUG SQL:104 - 
    select
        person0_.id as id2_,
        person0_.name as name2_,
        person0_.addr_id as addr4_2_,
        person0_.comp_id as comp5_2_,
        person0_.t_person_dis as t2_2_ 
    from
        t_person person0_
14:12:16,132 DEBUG SQL:104 - 
    select
        address0_.id as id0_0_,
        address0_.street as street0_0_,
        address0_.city as city0_0_,
        address0_.postalCode as postalCode0_0_ 
    from
        t_address address0_ 
    where
        address0_.id=?
14:12:16,133 DEBUG SQL:104 - 
    update
        t_person 
    set
        name=?,
        addr_id=?,
        comp_id=? 
    where
        id=?
14:12:16,133 DEBUG SQL:104 - 
    update
        t_person 
    set
        pers_id=null 
    where
        pers_id=?
14:12:16,133 DEBUG SQL:104 - 
    delete 
    from
        t_company 
    where
        id=?
14:12:16,133 DEBUG SQL:104 - 
    delete 
    from
        t_person 
    where
        id=?
14:12:16,134 DEBUG SQL:104 - 
    delete 
    from
        t_person 
    where
        id=?
14:12:16,134 DEBUG SQL:104 - 
    delete 
    from
        t_person 
    where
        id=?
14:12:16,134 DEBUG SQL:104 - 
    delete 
    from
        t_address 
    where
        id=?
14:12:16,135  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:12:16,136 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:12:16,136 DEBUG SQL:104 - 
    alter table t_person 
        drop constraint FK785BED80A4E62A7B
14:12:16,143 DEBUG SQL:104 - 
    alter table t_person 
        drop constraint FK785BED809F057B26
14:12:16,143 DEBUG SQL:104 - 
    alter table t_person 
        drop constraint FK785BED8074A2603B
14:12:16,144 DEBUG SQL:104 - 
    drop table t_address if exists
14:12:16,144 DEBUG SQL:104 - 
    drop table t_company if exists
14:12:16,144 DEBUG SQL:104 - 
    drop table t_person if exists
14:12:16,145  INFO SchemaExport:405 - HHH000230: Schema export complete
14:12:16,145  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
