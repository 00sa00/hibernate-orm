<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" hostname="dhcp-10.15.208.168.stl.redhat.com" name="org.hibernate.test.stats.StatsTest" tests="2" time="0.249" timestamp="2013-02-28T20:19:21">
  <properties />
  <testcase classname="org.hibernate.test.stats.StatsTest" name="testCollectionFetchVsLoad" time="0.094" />
  <testcase classname="org.hibernate.test.stats.StatsTest" name="testQueryStatGathering" time="0.114" />
  <system-out><![CDATA[14:19:21,192  INFO CustomRunner:132 - BeforeClass: org.hibernate.test.stats.StatsTest
14:19:21,194  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/stats/Continent.hbm.xml
14:19:21,202  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:19:21,203  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:19:21,203  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:19:21,203  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:19:21,203  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:19:21,205  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:19:21,205  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:19:21,206  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:19:21,207  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:19:21,207  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:19:21,216  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:19:21,217 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:19:21,217 DEBUG SQL:104 - 
    alter table Country 
        drop constraint FK9C4FEF762700D073
14:19:21,217 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Country drop constraint FK9C4FEF762700D073
14:19:21,217 ERROR SchemaExport:426 - Table "COUNTRY" not found; SQL statement:

    alter table Country 
        drop constraint FK9C4FEF762700D073 [42102-145]
14:19:21,217 DEBUG SQL:104 - 
    alter table Province 
        drop constraint FKC8FE8F50C018C247
14:19:21,218 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Province drop constraint FKC8FE8F50C018C247
14:19:21,218 ERROR SchemaExport:426 - Table "PROVINCE" not found; SQL statement:

    alter table Province 
        drop constraint FKC8FE8F50C018C247 [42102-145]
14:19:21,218 DEBUG SQL:104 - 
    alter table State 
        drop constraint FK4C7D471C018C247
14:19:21,218 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table State drop constraint FK4C7D471C018C247
14:19:21,218 ERROR SchemaExport:426 - Table "STATE" not found; SQL statement:

    alter table State 
        drop constraint FK4C7D471C018C247 [42102-145]
14:19:21,219 DEBUG SQL:104 - 
    drop table Continent if exists
14:19:21,219 DEBUG SQL:104 - 
    drop table Country if exists
14:19:21,219 DEBUG SQL:104 - 
    drop table Province if exists
14:19:21,219 DEBUG SQL:104 - 
    drop table State if exists
14:19:21,219 DEBUG SQL:104 - 
    create table Continent (
        id integer generated by default as identity,
        name varchar(255),
        primary key (id)
    )
14:19:21,220 DEBUG SQL:104 - 
    create table Country (
        id integer generated by default as identity,
        name varchar(255),
        country_id integer,
        primary key (id)
    )
14:19:21,220 DEBUG SQL:104 - 
    create table Province (
        id bigint generated by default as identity,
        name varchar(255),
        country integer,
        primary key (id)
    )
14:19:21,221 DEBUG SQL:104 - 
    create table State (
        id bigint generated by default as identity,
        name varchar(255),
        country integer,
        primary key (id)
    )
14:19:21,221 DEBUG SQL:104 - 
    alter table Country 
        add constraint FK9C4FEF762700D073 
        foreign key (country_id) 
        references Continent
14:19:21,222 DEBUG SQL:104 - 
    alter table Province 
        add constraint FKC8FE8F50C018C247 
        foreign key (country) 
        references Country
14:19:21,222 DEBUG SQL:104 - 
    alter table State 
        add constraint FK4C7D471C018C247 
        foreign key (country) 
        references Country
14:19:21,223  INFO SchemaExport:405 - HHH000230: Schema export complete
14:19:21,223  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:19:21,223  INFO CustomRunner:139 - Test: testCollectionFetchVsLoad
14:19:21,225 DEBUG SQL:104 - 
    insert 
    into
        Country
        (id, name) 
    values
        (null, ?)
14:19:21,226 DEBUG SQL:104 - 
    insert 
    into
        Continent
        (id, name) 
    values
        (null, ?)
14:19:21,226 DEBUG SQL:104 - 
    update
        Country 
    set
        country_id=? 
    where
        id=?
14:19:21,227 DEBUG SQL:104 - 
    select
        continent0_.id as id0_0_,
        continent0_.name as name0_0_ 
    from
        Continent continent0_ 
    where
        continent0_.id=?
14:19:21,227 DEBUG SQL:104 - 
    select
        countries0_.country_id as country3_0_1_,
        countries0_.id as id1_1_,
        countries0_.id as id1_0_,
        countries0_.name as name1_0_ 
    from
        Country countries0_ 
    where
        countries0_.country_id=?
14:19:21,228 DEBUG SQL:104 - 
    insert 
    into
        Country
        (id, name) 
    values
        (null, ?)
14:19:21,228 DEBUG SQL:104 - 
    insert 
    into
        Continent
        (id, name) 
    values
        (null, ?)
14:19:21,229 DEBUG SQL:104 - 
    update
        Country 
    set
        country_id=? 
    where
        id=?
14:19:21,229 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.stats.Continent a join fetch a.countries where a.id = 2
14:19:21,230 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     +-[RANGE] Node: 'RANGE'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  |  +-[IDENT] Node: 'org'
    |     |  |  |  |  |  \-[IDENT] Node: 'hibernate'
    |     |  |  |  |  \-[IDENT] Node: 'test'
    |     |  |  |  \-[IDENT] Node: 'stats'
    |     |  |  \-[IDENT] Node: 'Continent'
    |     |  \-[ALIAS] Node: 'a'
    |     \-[JOIN] Node: 'join'
    |        +-[FETCH] Node: 'fetch'
    |        \-[DOT] Node: '.'
    |           +-[IDENT] Node: 'a'
    |           \-[IDENT] Node: 'countries'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'a'
          |  \-[IDENT] Node: 'id'
          \-[NUM_INT] Node: '2'

14:19:21,231 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,231 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.stats.Continent (a) -> continent0_
14:19:21,231 DEBUG FromReferenceNode:74 - Resolved : a -> continent0_.id
14:19:21,231 DEBUG DotNode:599 - getDataType() : countries -> org.hibernate.type.SetType(org.hibernate.test.stats.Continent.countries)
14:19:21,231 DEBUG FromElementFactory:376 - createEntityAssociation() : One to many - path = a.countries role = org.hibernate.test.stats.Continent.countries associatedEntityName = org.hibernate.test.stats.Country
14:19:21,231 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.stats.Country (<no alias>) -> countries1_
14:19:21,231 DEBUG FromClause:282 - addJoinByPathMap() : a.countries -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Country,tableAlias=countries1_,origin=Continent continent0_,columns={continent0_.id ,className=org.hibernate.test.stats.Country}}
14:19:21,231 DEBUG DotNode:308 - dereferenceCollection() : Created new FROM element for a.countries : Country countries1_
14:19:21,232 DEBUG FromReferenceNode:74 - Resolved : a.countries -> .
14:19:21,232 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'Country countries1_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.stats.Continent.countries,tableName=Country,tableAlias=countries1_,origin=Continent continent0_,columns={continent0_.id ,className=org.hibernate.test.stats.Country}}

14:19:21,232 DEBUG FromReferenceNode:74 - Resolved : a -> continent0_.id
14:19:21,232 DEBUG DotNode:599 - getDataType() : id -> org.hibernate.type.IntegerType@42252fee
14:19:21,232 DEBUG FromReferenceNode:74 - Resolved : a.id -> continent0_.id
14:19:21,232 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} ( Continent continent0_ Country countries1_ ) ) ( where ( = ( continent0_.id continent0_.id id ) 2 ) ) )
14:19:21,232 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:21,233 DEBUG JoinProcessor:175 - Using FROM fragment [Continent continent0_]
14:19:21,233 DEBUG JoinProcessor:175 - Using FROM fragment [inner join Country countries1_ on continent0_.id=countries1_.country_id]
14:19:21,233 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Continent,Country)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'continent0_.id as id0_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Continent,tableAlias=continent0_,origin=null,columns={,className=org.hibernate.test.stats.Continent}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'countries1_.id as id1_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.stats.Continent.countries,tableName=Country,tableAlias=countries1_,origin=Continent continent0_,columns={continent0_.id ,className=org.hibernate.test.stats.Country}}}
    |  +-[SQL_TOKEN] SqlFragment: 'continent0_.name as name0_0_'
    |  +-[SQL_TOKEN] SqlFragment: 'countries1_.name as name1_1_'
    |  \-[SQL_TOKEN] SqlFragment: 'countries1_.country_id as country3_0_0__, countries1_.id as id1_0__'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[a], fromElementByTableAlias=[countries1_, continent0_], fromElementsByPath=[a.countries], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Continent continent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Continent,tableAlias=continent0_,origin=null,columns={,className=org.hibernate.test.stats.Continent}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join Country countries1_ on continent0_.id=countries1_.country_id' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.stats.Continent.countries,tableName=Country,tableAlias=countries1_,origin=Continent continent0_,columns={continent0_.id ,className=org.hibernate.test.stats.Country}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'continent0_.id' {propertyName=id,dereferenceType=ALL,propertyPath=id,path=a.id,tableAlias=continent0_,className=org.hibernate.test.stats.Continent,classAlias=a}
          |  +-[ALIAS_REF] IdentNode: 'continent0_.id' {alias=a, className=org.hibernate.test.stats.Continent, tableAlias=continent0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_INT] LiteralNode: '2'

14:19:21,233 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,233 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.stats.Continent a join fetch a.countries where a.id = 2
14:19:21,233 DEBUG QueryTranslatorImpl:236 - SQL: select continent0_.id as id0_0_, countries1_.id as id1_1_, continent0_.name as name0_0_, countries1_.name as name1_1_, countries1_.country_id as country3_0_0__, countries1_.id as id1_0__ from Continent continent0_ inner join Country countries1_ on continent0_.id=countries1_.country_id where continent0_.id=2
14:19:21,233 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,234 DEBUG SQL:104 - 
    select
        continent0_.id as id0_0_,
        countries1_.id as id1_1_,
        continent0_.name as name0_0_,
        countries1_.name as name1_1_,
        countries1_.country_id as country3_0_0__,
        countries1_.id as id1_0__ 
    from
        Continent continent0_ 
    inner join
        Country countries1_ 
            on continent0_.id=countries1_.country_id 
    where
        continent0_.id=2
14:19:21,236  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:19:21,236  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:19:21,236  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:19:21,237  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:19:21,237  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:19:21,238  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:19:21,238  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:19:21,239  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:19:21,239  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:19:21,239  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:19:21,239  WARN TypeFactory:69 - HHH000233: Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@242eb530 after already scoped org.hibernate.internal.SessionFactoryImpl@767974de
14:19:21,246  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:19:21,247 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:19:21,247 DEBUG SQL:104 - 
    alter table Country 
        drop constraint FK9C4FEF762700D073
14:19:21,248 DEBUG SQL:104 - 
    alter table Province 
        drop constraint FKC8FE8F50C018C247
14:19:21,248 DEBUG SQL:104 - 
    alter table State 
        drop constraint FK4C7D471C018C247
14:19:21,248 DEBUG SQL:104 - 
    drop table Continent if exists
14:19:21,248 DEBUG SQL:104 - 
    drop table Country if exists
14:19:21,249 DEBUG SQL:104 - 
    drop table Province if exists
14:19:21,249 DEBUG SQL:104 - 
    drop table State if exists
14:19:21,249 DEBUG SQL:104 - 
    create table Continent (
        id integer generated by default as identity,
        name varchar(255),
        primary key (id)
    )
14:19:21,250 DEBUG SQL:104 - 
    create table Country (
        id integer generated by default as identity,
        name varchar(255),
        country_id integer,
        primary key (id)
    )
14:19:21,250 DEBUG SQL:104 - 
    create table Province (
        id bigint generated by default as identity,
        name varchar(255),
        country integer,
        primary key (id)
    )
14:19:21,251 DEBUG SQL:104 - 
    create table State (
        id bigint generated by default as identity,
        name varchar(255),
        country integer,
        primary key (id)
    )
14:19:21,251 DEBUG SQL:104 - 
    alter table Country 
        add constraint FK9C4FEF762700D073 
        foreign key (country_id) 
        references Continent
14:19:21,252 DEBUG SQL:104 - 
    alter table Province 
        add constraint FKC8FE8F50C018C247 
        foreign key (country) 
        references Country
14:19:21,252 DEBUG SQL:104 - 
    alter table State 
        add constraint FK4C7D471C018C247 
        foreign key (country) 
        references Country
14:19:21,252  INFO SchemaExport:405 - HHH000230: Schema export complete
14:19:21,253  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:19:21,253 DEBUG SQL:104 - 
    insert 
    into
        Country
        (id, name) 
    values
        (null, ?)
14:19:21,254 DEBUG SQL:104 - 
    insert 
    into
        Continent
        (id, name) 
    values
        (null, ?)
14:19:21,255 DEBUG SQL:104 - 
    update
        Country 
    set
        country_id=? 
    where
        id=?
14:19:21,255 DEBUG SQL:104 - 
    select
        continent0_.id as id0_1_,
        continent0_.name as name0_1_,
        countries1_.country_id as country3_0_3_,
        countries1_.id as id1_3_,
        countries1_.id as id1_0_,
        countries1_.name as name1_0_ 
    from
        Continent continent0_ 
    left outer join
        Country countries1_ 
            on continent0_.id=countries1_.country_id 
    where
        continent0_.id=?
14:19:21,256  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:19:21,256 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:19:21,257 DEBUG SQL:104 - 
    alter table Country 
        drop constraint FK9C4FEF762700D073
14:19:21,257 DEBUG SQL:104 - 
    alter table Province 
        drop constraint FKC8FE8F50C018C247
14:19:21,257 DEBUG SQL:104 - 
    alter table State 
        drop constraint FK4C7D471C018C247
14:19:21,257 DEBUG SQL:104 - 
    drop table Continent if exists
14:19:21,257 DEBUG SQL:104 - 
    drop table Country if exists
14:19:21,257 DEBUG SQL:104 - 
    drop table Province if exists
14:19:21,258 DEBUG SQL:104 - 
    drop table State if exists
14:19:21,258  INFO SchemaExport:405 - HHH000230: Schema export complete
14:19:21,258  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:19:21,259  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:19:21,260  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:19:21,260  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:19:21,260  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:19:21,260  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:19:21,261  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:19:21,262  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:19:21,263  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:19:21,263  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:19:21,263  WARN CachingRegionFactory:58 - CachingRegionFactory should be only used for testing.
14:19:21,263  WARN TypeFactory:69 - HHH000233: Scoping types to session factory org.hibernate.internal.SessionFactoryImpl@767974de after already scoped org.hibernate.internal.SessionFactoryImpl@129453f5
14:19:21,270  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:19:21,270 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:19:21,271 DEBUG SQL:104 - 
    alter table Country 
        drop constraint FK9C4FEF762700D073
14:19:21,271 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Country drop constraint FK9C4FEF762700D073
14:19:21,271 ERROR SchemaExport:426 - Table "COUNTRY" not found; SQL statement:

    alter table Country 
        drop constraint FK9C4FEF762700D073 [42102-145]
14:19:21,271 DEBUG SQL:104 - 
    alter table Province 
        drop constraint FKC8FE8F50C018C247
14:19:21,271 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table Province drop constraint FKC8FE8F50C018C247
14:19:21,271 ERROR SchemaExport:426 - Table "PROVINCE" not found; SQL statement:

    alter table Province 
        drop constraint FKC8FE8F50C018C247 [42102-145]
14:19:21,271 DEBUG SQL:104 - 
    alter table State 
        drop constraint FK4C7D471C018C247
14:19:21,271 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table State drop constraint FK4C7D471C018C247
14:19:21,271 ERROR SchemaExport:426 - Table "STATE" not found; SQL statement:

    alter table State 
        drop constraint FK4C7D471C018C247 [42102-145]
14:19:21,271 DEBUG SQL:104 - 
    drop table Continent if exists
14:19:21,272 DEBUG SQL:104 - 
    drop table Country if exists
14:19:21,272 DEBUG SQL:104 - 
    drop table Province if exists
14:19:21,272 DEBUG SQL:104 - 
    drop table State if exists
14:19:21,272 DEBUG SQL:104 - 
    create table Continent (
        id integer generated by default as identity,
        name varchar(255),
        primary key (id)
    )
14:19:21,272 DEBUG SQL:104 - 
    create table Country (
        id integer generated by default as identity,
        name varchar(255),
        country_id integer,
        primary key (id)
    )
14:19:21,272 DEBUG SQL:104 - 
    create table Province (
        id bigint generated by default as identity,
        name varchar(255),
        country integer,
        primary key (id)
    )
14:19:21,273 DEBUG SQL:104 - 
    create table State (
        id bigint generated by default as identity,
        name varchar(255),
        country integer,
        primary key (id)
    )
14:19:21,273 DEBUG SQL:104 - 
    alter table Country 
        add constraint FK9C4FEF762700D073 
        foreign key (country_id) 
        references Continent
14:19:21,273 DEBUG SQL:104 - 
    alter table Province 
        add constraint FKC8FE8F50C018C247 
        foreign key (country) 
        references Country
14:19:21,274 DEBUG SQL:104 - 
    alter table State 
        add constraint FK4C7D471C018C247 
        foreign key (country) 
        references Country
14:19:21,274  INFO SchemaExport:405 - HHH000230: Schema export complete
14:19:21,274  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:19:21,275 DEBUG SQL:104 - 
    insert 
    into
        Country
        (id, name) 
    values
        (null, ?)
14:19:21,276 DEBUG SQL:104 - 
    insert 
    into
        Continent
        (id, name) 
    values
        (null, ?)
14:19:21,276 DEBUG SQL:104 - 
    update
        Country 
    set
        country_id=? 
    where
        id=?
14:19:21,277 DEBUG SQL:104 - 
    select
        continent0_.id as id0_0_,
        continent0_.name as name0_0_ 
    from
        Continent continent0_ 
    where
        continent0_.id=?
14:19:21,277 DEBUG SQL:104 - 
    select
        countries0_.country_id as country3_0_1_,
        countries0_.id as id1_1_,
        countries0_.id as id1_0_,
        countries0_.name as name1_0_ 
    from
        Country countries0_ 
    where
        countries0_.country_id=?
14:19:21,278 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.stats.Province
14:19:21,279 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'stats'
             \-[IDENT] Node: 'Province'

14:19:21,279 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,279 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.stats.Province (<no alias>) -> province0_
14:19:21,279 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Province)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[province0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Province' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Province,tableAlias=province0_,origin=null,columns={,className=org.hibernate.test.stats.Province}}

14:19:21,282 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,282 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,282 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.stats.State
14:19:21,283 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'stats'
             \-[IDENT] Node: 'State'

14:19:21,283 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,283 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.stats.State (<no alias>) -> state0_
14:19:21,283 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (State)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[state0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'State' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=State,tableAlias=state0_,origin=null,columns={,className=org.hibernate.test.stats.State}}

14:19:21,284 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,284 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,292  WARN HQLQueryPlan:278 - HHH000245: Manipulation query [delete Locality] resulted in [2] split queries
14:19:21,293 DEBUG SQL:104 - 
    delete 
    from
        Province
14:19:21,293 DEBUG SQL:104 - 
    delete 
    from
        State
14:19:21,294 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.stats.Country
14:19:21,294 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'stats'
             \-[IDENT] Node: 'Country'

14:19:21,294 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,295 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.stats.Country (<no alias>) -> country0_
14:19:21,303 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Country)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[country0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Country' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Country,tableAlias=country0_,origin=null,columns={,className=org.hibernate.test.stats.Country}}

14:19:21,304 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,304 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,305 DEBUG SQL:104 - 
    delete 
    from
        Country 
    where
        id=?
14:19:21,305 DEBUG SQL:104 - 
    delete 
    from
        Country
14:19:21,305 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.stats.Continent
14:19:21,306 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'stats'
             \-[IDENT] Node: 'Continent'

14:19:21,315 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,317 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.stats.Continent (<no alias>) -> continent0_
14:19:21,317 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Continent)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[continent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Continent' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Continent,tableAlias=continent0_,origin=null,columns={,className=org.hibernate.test.stats.Continent}}

14:19:21,317 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,317 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,317 DEBUG SQL:104 - 
    delete 
    from
        Continent
14:19:21,318  INFO CustomRunner:139 - Test: testQueryStatGathering
14:19:21,319 DEBUG SQL:104 - 
    insert 
    into
        Country
        (id, name) 
    values
        (null, ?)
14:19:21,320 DEBUG SQL:104 - 
    insert 
    into
        Continent
        (id, name) 
    values
        (null, ?)
14:19:21,321 DEBUG SQL:104 - 
    update
        Country 
    set
        country_id=? 
    where
        id=?
14:19:21,322 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.stats.Continent
14:19:21,322 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'stats'
                \-[IDENT] Node: 'Continent'

14:19:21,323 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,323 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.stats.Continent (<no alias>) -> continent0_
14:19:21,323 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Continent continent0_ ) )
14:19:21,323 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:21,329 DEBUG JoinProcessor:175 - Using FROM fragment [Continent continent0_]
14:19:21,329 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Continent)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'continent0_.id as id0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Continent,tableAlias=continent0_,origin=null,columns={,className=org.hibernate.test.stats.Continent}}}
    |  \-[SQL_TOKEN] SqlFragment: 'continent0_.name as name0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[continent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Continent continent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Continent,tableAlias=continent0_,origin=null,columns={,className=org.hibernate.test.stats.Continent}}

14:19:21,329 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,330 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.stats.Continent
14:19:21,330 DEBUG QueryTranslatorImpl:236 - SQL: select continent0_.id as id0_, continent0_.name as name0_ from Continent continent0_
14:19:21,330 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,330 DEBUG SQL:104 - 
    select
        continent0_.id as id0_,
        continent0_.name as name0_ 
    from
        Continent continent0_
14:19:21,331 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.stats.Continent
14:19:21,332 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'stats'
                \-[IDENT] Node: 'Continent'

14:19:21,339 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,339 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.stats.Continent (<no alias>) -> continent0_
14:19:21,339 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Continent continent0_ ) )
14:19:21,340 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:21,340 DEBUG JoinProcessor:175 - Using FROM fragment [Continent continent0_]
14:19:21,340 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Continent)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  \-[SELECT_EXPR] SelectExpressionImpl: 'continent0_.id as col_0_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Continent,tableAlias=continent0_,origin=null,columns={,className=org.hibernate.test.stats.Continent}}}
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[continent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Continent continent0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Continent,tableAlias=continent0_,origin=null,columns={,className=org.hibernate.test.stats.Continent}}

14:19:21,340 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,340 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.stats.Continent
14:19:21,340 DEBUG QueryTranslatorImpl:236 - SQL: select continent0_.id as col_0_0_ from Continent continent0_
14:19:21,340 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,341 DEBUG SQL:104 - 
    select
        continent0_.id as col_0_0_ 
    from
        Continent continent0_
14:19:21,341 DEBUG SQL:104 - 
    select
        continent0_.id as id0_,
        continent0_.name as name0_ 
    from
        Continent continent0_
14:19:21,342 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.stats.Province
14:19:21,342 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'stats'
                \-[IDENT] Node: 'Province'

14:19:21,367 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,367 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.stats.Province (<no alias>) -> province0_
14:19:21,367 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} Province province0_ ) )
14:19:21,368 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:21,368 DEBUG JoinProcessor:175 - Using FROM fragment [Province province0_]
14:19:21,368 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Province)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'province0_.id as id2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Province,tableAlias=province0_,origin=null,columns={,className=org.hibernate.test.stats.Province}}}
    |  \-[SQL_TOKEN] SqlFragment: 'province0_.name as name2_, province0_.country as country2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[province0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Province province0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Province,tableAlias=province0_,origin=null,columns={,className=org.hibernate.test.stats.Province}}

14:19:21,368 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,369 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.stats.Province
14:19:21,369 DEBUG QueryTranslatorImpl:236 - SQL: select province0_.id as id2_, province0_.name as name2_, province0_.country as country2_ from Province province0_
14:19:21,369 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,369 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.stats.State
14:19:21,370 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[IDENT] Node: 'org'
                |  |  |  \-[IDENT] Node: 'hibernate'
                |  |  \-[IDENT] Node: 'test'
                |  \-[IDENT] Node: 'stats'
                \-[IDENT] Node: 'State'

14:19:21,376 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,377 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.stats.State (<no alias>) -> state0_
14:19:21,377 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} State state0_ ) )
14:19:21,377 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:19:21,377 DEBUG JoinProcessor:175 - Using FROM fragment [State state0_]
14:19:21,377 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (State)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'state0_.id as id3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=State,tableAlias=state0_,origin=null,columns={,className=org.hibernate.test.stats.State}}}
    |  \-[SQL_TOKEN] SqlFragment: 'state0_.name as name3_, state0_.country as country3_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[state0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'State state0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=State,tableAlias=state0_,origin=null,columns={,className=org.hibernate.test.stats.State}}

14:19:21,377 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,377 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.stats.State
14:19:21,377 DEBUG QueryTranslatorImpl:236 - SQL: select state0_.id as id3_, state0_.name as name3_, state0_.country as country3_ from State state0_
14:19:21,378 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,378 DEBUG SQL:104 - 
    select
        province0_.id as id2_,
        province0_.name as name2_,
        province0_.country as country2_ 
    from
        Province province0_
14:19:21,387 DEBUG SQL:104 - 
    select
        state0_.id as id3_,
        state0_.name as name3_,
        state0_.country as country3_ 
    from
        State state0_
14:19:21,388 DEBUG SQL:104 - 
    select
        id,
        name 
    from
        Country
14:19:21,389 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.stats.Province
14:19:21,390 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'stats'
             \-[IDENT] Node: 'Province'

14:19:21,399 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,400 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.stats.Province (<no alias>) -> province0_
14:19:21,400 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Province)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[province0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Province' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Province,tableAlias=province0_,origin=null,columns={,className=org.hibernate.test.stats.Province}}

14:19:21,400 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,400 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,400 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.stats.State
14:19:21,401 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'stats'
             \-[IDENT] Node: 'State'

14:19:21,401 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,401 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.stats.State (<no alias>) -> state0_
14:19:21,401 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (State)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[state0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'State' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=State,tableAlias=state0_,origin=null,columns={,className=org.hibernate.test.stats.State}}

14:19:21,410 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,410 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,410  WARN HQLQueryPlan:278 - HHH000245: Manipulation query [delete Locality] resulted in [2] split queries
14:19:21,410 DEBUG SQL:104 - 
    delete 
    from
        Province
14:19:21,411 DEBUG SQL:104 - 
    delete 
    from
        State
14:19:21,411 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.stats.Country
14:19:21,412 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'stats'
             \-[IDENT] Node: 'Country'

14:19:21,412 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,412 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.stats.Country (<no alias>) -> country0_
14:19:21,412 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Country)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[country0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Country' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Country,tableAlias=country0_,origin=null,columns={,className=org.hibernate.test.stats.Country}}

14:19:21,421 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,422 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,422 DEBUG SQL:104 - 
    delete 
    from
        Country
14:19:21,422 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete org.hibernate.test.stats.Continent
14:19:21,425 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'stats'
             \-[IDENT] Node: 'Continent'

14:19:21,425 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,425 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.stats.Continent (<no alias>) -> continent0_
14:19:21,426 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces (Continent)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[continent0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Continent' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Continent,tableAlias=continent0_,origin=null,columns={,className=org.hibernate.test.stats.Continent}}

14:19:21,432 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,433 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:19:21,433 DEBUG SQL:104 - 
    delete 
    from
        Continent
14:19:21,434  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:19:21,434 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:19:21,435 DEBUG SQL:104 - 
    alter table Country 
        drop constraint FK9C4FEF762700D073
14:19:21,435 DEBUG SQL:104 - 
    alter table Province 
        drop constraint FKC8FE8F50C018C247
14:19:21,435 DEBUG SQL:104 - 
    alter table State 
        drop constraint FK4C7D471C018C247
14:19:21,435 DEBUG SQL:104 - 
    drop table Continent if exists
14:19:21,436 DEBUG SQL:104 - 
    drop table Country if exists
14:19:21,436 DEBUG SQL:104 - 
    drop table Province if exists
14:19:21,436 DEBUG SQL:104 - 
    drop table State if exists
14:19:21,436  INFO SchemaExport:405 - HHH000230: Schema export complete
14:19:21,436  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
