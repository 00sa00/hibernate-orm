<?xml version="1.0" encoding="UTF-8"?>
<testsuite errors="0" failures="0" hostname="dhcp-10.15.208.168.stl.redhat.com" name="org.hibernate.test.manytomany.ManyToManyTest" tests="1" time="0.247" timestamp="2013-02-28T20:17:26">
  <properties />
  <testcase classname="org.hibernate.test.manytomany.ManyToManyTest" name="testManyToManyWithFormula" time="0.041" />
  <system-out><![CDATA[14:17:26,518  INFO CustomRunner:132 - BeforeClass: org.hibernate.test.manytomany.ManyToManyTest
14:17:26,520  INFO Configuration:706 - HHH000221: Reading mappings from resource: org/hibernate/test/manytomany/UserGroup.hbm.xml
14:17:26,675  WARN RootClass:288 - HHH000038: Composite-id class does not override equals(): org.hibernate.test.manytomany.Group
14:17:26,676  WARN RootClass:289 - HHH000039: Composite-id class does not override hashCode(): org.hibernate.test.manytomany.Group
14:17:26,676  WARN RootClass:288 - HHH000038: Composite-id class does not override equals(): org.hibernate.test.manytomany.User
14:17:26,676  WARN RootClass:289 - HHH000039: Composite-id class does not override hashCode(): org.hibernate.test.manytomany.User
14:17:26,677  INFO DriverManagerConnectionProviderImpl:99 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
14:17:26,677  INFO DriverManagerConnectionProviderImpl:135 - HHH000115: Hibernate connection pool size: 5
14:17:26,677  INFO DriverManagerConnectionProviderImpl:138 - HHH000006: Autocommit mode: false
14:17:26,677  INFO DriverManagerConnectionProviderImpl:153 - HHH000401: using driver [org.h2.Driver] at URL [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
14:17:26,678  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=sa}
14:17:26,679  INFO Dialect:103 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
14:17:26,679  INFO LobCreatorBuilder:94 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:17:26,680  INFO TransactionFactoryInitiator:66 - HHH000399: Using default transaction strategy (direct JDBC transactions)
14:17:26,680  INFO ASTQueryTranslatorFactory:48 - HHH000397: Using ASTQueryTranslatorFactory
14:17:26,704  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:17:26,705 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:17:26,705 DEBUG SQL:104 - 
    alter table UserGroup 
        drop constraint FK8A5BE154FDF98124
14:17:26,705 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table UserGroup drop constraint FK8A5BE154FDF98124
14:17:26,705 ERROR SchemaExport:426 - Table "USERGROUP" not found; SQL statement:

    alter table UserGroup 
        drop constraint FK8A5BE154FDF98124 [42102-145]
14:17:26,706 DEBUG SQL:104 - 
    alter table UserGroup 
        drop constraint FK8A5BE15454A1054E
14:17:26,706 ERROR SchemaExport:425 - HHH000389: Unsuccessful: alter table UserGroup drop constraint FK8A5BE15454A1054E
14:17:26,706 ERROR SchemaExport:426 - Table "USERGROUP" not found; SQL statement:

    alter table UserGroup 
        drop constraint FK8A5BE15454A1054E [42102-145]
14:17:26,706 DEBUG SQL:104 - 
    drop table UserGroup if exists
14:17:26,706 DEBUG SQL:104 - 
    drop table "Group" if exists
14:17:26,706 DEBUG SQL:104 - 
    drop table "User" if exists
14:17:26,706 DEBUG SQL:104 - 
    create table UserGroup (
        "userName" varchar(32) not null,
        org varchar(32) not null,
        groupName varchar(255) not null,
        primary key ("userName", org, groupName)
    )
14:17:26,707 DEBUG SQL:104 - 
    create table "Group" (
        name varchar(32) not null,
        org varchar(32) not null,
        description varchar(255),
        primary key (name, org)
    )
14:17:26,707 DEBUG SQL:104 - 
    create table "User" (
        name varchar(32) not null,
        org varchar(32) not null,
        primary key (name, org)
    )
14:17:26,707 DEBUG SQL:104 - 
    alter table UserGroup 
        add constraint FK8A5BE154FDF98124 
        foreign key ("userName", org) 
        references "User"
14:17:26,708 DEBUG SQL:104 - 
    alter table UserGroup 
        add constraint FK8A5BE15454A1054E 
        foreign key (groupName, org) 
        references "Group"
14:17:26,708  INFO SchemaExport:405 - HHH000230: Schema export complete
14:17:26,709  WARN SessionFactoryImpl:1554 - HHH000008: JTASessionContext being used with JDBCTransactionFactory; auto-flush will not operate correctly with getCurrentSession()
14:17:26,709  INFO CustomRunner:139 - Test: testManyToManyWithFormula
14:17:26,710 DEBUG SQL:104 - 
    insert 
    into
        "User"
        (name, org) 
    values
        (?, ?)
14:17:26,711 DEBUG SQL:104 - 
    insert 
    into
        "Group"
        (description, name, org) 
    values
        (?, ?, ?)
14:17:26,711 DEBUG SQL:104 - 
    insert 
    into
        "Group"
        (description, name, org) 
    values
        (?, ?, ?)
14:17:26,711 DEBUG SQL:104 - 
    insert 
    into
        UserGroup
        ("userName", org, groupName) 
    values
        (?, ?, ?)
14:17:26,711 DEBUG SQL:104 - 
    insert 
    into
        UserGroup
        ("userName", org, groupName) 
    values
        (?, ?, ?)
14:17:26,712 DEBUG SQL:104 - 
    select
        user0_.name as name2_0_,
        user0_.org as org2_0_ 
    from
        "User" user0_ 
    where
        user0_.name=? 
        and user0_.org=?
14:17:26,712 DEBUG SQL:104 - 
    select
        groups0_."userName" as userName1_2_1_,
        groups0_.org as org2_1_,
        groups0_.groupName as groupName0_1_,
        groups0_.org as formula94_1_,
        group1_.name as name1_0_,
        group1_.org as org1_0_,
        group1_.description as descript3_1_0_ 
    from
        UserGroup groups0_ 
    inner join
        "Group" group1_ 
            on groups0_.groupName=group1_.name 
            and groups0_.org=group1_.org 
    where
        groups0_."userName"=? 
        and groups0_.org=?
14:17:26,714 DEBUG SQL:104 - 
    select
        users0_.groupName as groupName1_1_,
        users0_.org as org1_1_,
        users0_."userName" as userName1_0_1_,
        users0_.org as formula95_1_,
        user1_.name as name2_0_,
        user1_.org as org2_0_ 
    from
        UserGroup users0_ 
    inner join
        "User" user1_ 
            on users0_."userName"=user1_.name 
            and users0_.org=user1_.org 
    where
        users0_.groupName=? 
        and users0_.org=?
14:17:26,714 DEBUG SQL:104 - 
    select
        this_.name as name2_1_,
        this_.org as org2_1_,
        groups2_."userName" as userName1_2_3_,
        groups2_.org as org2_3_,
        group3_.name as groupName0_3_,
        group3_.org as formula94_3_,
        group3_.name as name1_0_,
        group3_.org as org1_0_,
        group3_.description as descript3_1_0_ 
    from
        "User" this_ 
    left outer join
        UserGroup groups2_ 
            on this_.name=groups2_."userName" 
            and this_.org=groups2_.org 
    left outer join
        "Group" group3_ 
            on groups2_.groupName=group3_.name 
            and groups2_.org=group3_.org
14:17:26,715 DEBUG SQL:104 - 
    select
        users0_.groupName as groupName1_1_,
        users0_.org as org1_1_,
        users0_."userName" as userName1_0_1_,
        users0_.org as formula95_1_,
        user1_.name as name2_0_,
        user1_.org as org2_0_ 
    from
        UserGroup users0_ 
    inner join
        "User" user1_ 
            on users0_."userName"=user1_.name 
            and users0_.org=user1_.org 
    where
        users0_.groupName=? 
        and users0_.org=?
14:17:26,716 DEBUG SQL:104 - 
    select
        this_.name as name2_2_,
        this_.org as org2_2_,
        groups2_."userName" as userName1_2_4_,
        groups2_.org as org2_4_,
        group3_.name as groupName0_4_,
        group3_.org as formula94_4_,
        group3_.name as name1_0_,
        group3_.org as org1_0_,
        group3_.description as descript3_1_0_,
        users4_.groupName as groupName1_5_,
        users4_.org as org1_5_,
        user5_.name as userName1_0_5_,
        user5_.org as formula95_5_,
        user5_.name as name2_1_,
        user5_.org as org2_1_ 
    from
        "User" this_ 
    left outer join
        UserGroup groups2_ 
            on this_.name=groups2_."userName" 
            and this_.org=groups2_.org 
    left outer join
        "Group" group3_ 
            on groups2_.groupName=group3_.name 
            and groups2_.org=group3_.org 
    left outer join
        UserGroup users4_ 
            on group3_.name=users4_.groupName 
            and group3_.org=users4_.org 
    left outer join
        "User" user5_ 
            on users4_."userName"=user5_.name 
            and users4_.org=user5_.org
14:17:26,718 DEBUG QueryTranslatorImpl:265 - parse() - HQL: from org.hibernate.test.manytomany.User u join fetch u.groups g join fetch g.users
14:17:26,720 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          +-[RANGE] Node: 'RANGE'
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[DOT] Node: '.'
          |  |  |  |  |  +-[IDENT] Node: 'org'
          |  |  |  |  |  \-[IDENT] Node: 'hibernate'
          |  |  |  |  \-[IDENT] Node: 'test'
          |  |  |  \-[IDENT] Node: 'manytomany'
          |  |  \-[IDENT] Node: 'User'
          |  \-[ALIAS] Node: 'u'
          +-[JOIN] Node: 'join'
          |  +-[FETCH] Node: 'fetch'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'u'
          |  |  \-[IDENT] Node: 'groups'
          |  \-[ALIAS] Node: 'g'
          \-[JOIN] Node: 'join'
             +-[FETCH] Node: 'fetch'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'g'
                \-[IDENT] Node: 'users'

14:17:26,720 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:26,720 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.manytomany.User (u) -> user0_
14:17:26,720 DEBUG FromReferenceNode:74 - Resolved : u -> (user0_.name, user0_.org)
14:17:26,720 DEBUG DotNode:599 - getDataType() : groups -> org.hibernate.type.SetType(org.hibernate.test.manytomany.User.groups)
14:17:26,720 DEBUG FromElementFactory:385 - createManyToMany() : path = u.groups role = org.hibernate.test.manytomany.User.groups associatedEntityName = org.hibernate.test.manytomany.Group
14:17:26,720 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.manytomany.Group (g) -> group2_
14:17:26,721 DEBUG FromClause:282 - addJoinByPathMap() : u.groups -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=g,role=null,tableName="Group",tableAlias=group2_,origin="User" user0_,columns={user0_.name user0_.org ,className=org.hibernate.test.manytomany.Group}}
14:17:26,721 DEBUG DotNode:308 - dereferenceCollection() : Created new FROM element for u.groups : UserGroup group2_
14:17:26,721 DEBUG FromReferenceNode:74 - Resolved : u.groups -> .
14:17:26,721 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'UserGroup group2_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=g,role=org.hibernate.test.manytomany.User.groups,tableName="Group",tableAlias=group2_,origin="User" user0_,columns={user0_.name user0_.org ,className=org.hibernate.test.manytomany.Group}}

14:17:26,721 DEBUG FromReferenceNode:74 - Resolved : g -> (group2_.name, group2_.org)
14:17:26,721 DEBUG DotNode:599 - getDataType() : users -> org.hibernate.type.SetType(org.hibernate.test.manytomany.Group.users)
14:17:26,721 DEBUG FromElementFactory:385 - createManyToMany() : path = g.users role = org.hibernate.test.manytomany.Group.users associatedEntityName = org.hibernate.test.manytomany.User
14:17:26,721 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.manytomany.User (<no alias>) -> user4_
14:17:26,722 DEBUG FromClause:282 - addJoinByPathMap() : g.users -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName="User",tableAlias=user4_,origin=UserGroup group2_,columns={group2_.name group2_.org ,className=org.hibernate.test.manytomany.User}}
14:17:26,722 DEBUG DotNode:308 - dereferenceCollection() : Created new FROM element for g.users : UserGroup user4_
14:17:26,722 DEBUG FromReferenceNode:74 - Resolved : g.users -> .
14:17:26,722 DEBUG HqlSqlWalker:403 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'UserGroup user4_' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.manytomany.Group.users,tableName="User",tableAlias=user4_,origin=UserGroup group2_,columns={group2_.name group2_.org ,className=org.hibernate.test.manytomany.User}}

14:17:26,722 DEBUG HqlSqlWalker:629 - processQuery() :  ( SELECT ( FromClause{level=1} ( "User" user0_ ( UserGroup group2_ UserGroup user4_ ) ) ) )
14:17:26,722 DEBUG HqlSqlWalker:869 - Derived SELECT clause created.
14:17:26,722 DEBUG JoinProcessor:175 - Using FROM fragment ["User" user0_]
14:17:26,722 DEBUG JoinProcessor:175 - Using FROM fragment [inner join UserGroup groups1_ on user0_.name=groups1_."userName" and user0_.org=groups1_.org inner join "Group" group2_ on groups1_.groupName=group2_.name and groups1_.org=group2_.org]
14:17:26,723 DEBUG JoinProcessor:175 - Using FROM fragment [inner join UserGroup users3_ on group2_.name=users3_.groupName and group2_.org=users3_.org inner join "User" user4_ on users3_."userName"=user4_.name and users3_.org=user4_.org]
14:17:26,723 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (UserGroup,"Group","User")
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.name as name2_0_, user0_.org as org2_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName="User",tableAlias=user0_,origin=null,columns={,className=org.hibernate.test.manytomany.User}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'group2_.name as name1_1_, group2_.org as org1_1_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=g,role=org.hibernate.test.manytomany.User.groups,tableName="Group",tableAlias=group2_,origin="User" user0_,columns={user0_.name user0_.org ,className=org.hibernate.test.manytomany.Group}}}
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user4_.name as name2_2_, user4_.org as org2_2_' {FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.manytomany.Group.users,tableName="User",tableAlias=user4_,origin=inner join UserGroup groups1_ on user0_.name=groups1_."userName" and user0_.org=groups1_.org inner join "Group" group2_ on groups1_.groupName=group2_.name and groups1_.org=group2_.org,columns={group2_.name group2_.org ,className=org.hibernate.test.manytomany.User}}}
    |  +-[SQL_TOKEN] SqlFragment: 'group2_.description as descript3_1_1_'
    |  +-[SQL_TOKEN] SqlFragment: 'groups1_."userName" as userName1_2_0__, groups1_.org as org2_0__, groups1_.groupName as groupName0_0__, groups1_.org as formula94_0__'
    |  \-[SQL_TOKEN] SqlFragment: 'users3_.groupName as groupName1_1__, users3_.org as org1_1__, users3_."userName" as userName1_0_1__, users3_.org as formula95_1__'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[g, u], fromElementByTableAlias=[user4_, user0_, group2_], fromElementsByPath=[u.groups, g.users], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: '"User" user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName="User",tableAlias=user0_,origin=null,columns={,className=org.hibernate.test.manytomany.User}}
          \-[JOIN_FRAGMENT] FromElement: 'inner join UserGroup groups1_ on user0_.name=groups1_."userName" and user0_.org=groups1_.org inner join "Group" group2_ on groups1_.groupName=group2_.name and groups1_.org=group2_.org' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=g,role=org.hibernate.test.manytomany.User.groups,tableName="Group",tableAlias=group2_,origin="User" user0_,columns={user0_.name user0_.org ,className=org.hibernate.test.manytomany.Group}}
             \-[JOIN_FRAGMENT] FromElement: 'inner join UserGroup users3_ on group2_.name=users3_.groupName and group2_.org=users3_.org inner join "User" user4_ on users3_."userName"=user4_.name and users3_.org=user4_.org' FromElement{explicit,not a collection join,fetch join,fetch non-lazy properties,classAlias=null,role=org.hibernate.test.manytomany.Group.users,tableName="User",tableAlias=user4_,origin=inner join UserGroup groups1_ on user0_.name=groups1_."userName" and user0_.org=groups1_.org inner join "Group" group2_ on groups1_.groupName=group2_.name and groups1_.org=group2_.org,columns={group2_.name group2_.org ,className=org.hibernate.test.manytomany.User}}

14:17:26,723 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:26,723 DEBUG QueryTranslatorImpl:235 - HQL: from org.hibernate.test.manytomany.User u join fetch u.groups g join fetch g.users
14:17:26,723 DEBUG QueryTranslatorImpl:236 - SQL: select user0_.name as name2_0_, user0_.org as org2_0_, group2_.name as name1_1_, group2_.org as org1_1_, user4_.name as name2_2_, user4_.org as org2_2_, group2_.description as descript3_1_1_, groups1_."userName" as userName1_2_0__, groups1_.org as org2_0__, groups1_.groupName as groupName0_0__, groups1_.org as formula94_0__, users3_.groupName as groupName1_1__, users3_.org as org1_1__, users3_."userName" as userName1_0_1__, users3_.org as formula95_1__ from "User" user0_ inner join UserGroup groups1_ on user0_.name=groups1_."userName" and user0_.org=groups1_.org inner join "Group" group2_ on groups1_.groupName=group2_.name and groups1_.org=group2_.org inner join UserGroup users3_ on group2_.name=users3_.groupName and group2_.org=users3_.org inner join "User" user4_ on users3_."userName"=user4_.name and users3_.org=user4_.org
14:17:26,723 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:26,724 DEBUG SQL:104 - 
    select
        user0_.name as name2_0_,
        user0_.org as org2_0_,
        group2_.name as name1_1_,
        group2_.org as org1_1_,
        user4_.name as name2_2_,
        user4_.org as org2_2_,
        group2_.description as descript3_1_1_,
        groups1_."userName" as userName1_2_0__,
        groups1_.org as org2_0__,
        groups1_.groupName as groupName0_0__,
        groups1_.org as formula94_0__,
        users3_.groupName as groupName1_1__,
        users3_.org as org1_1__,
        users3_."userName" as userName1_0_1__,
        users3_.org as formula95_1__ 
    from
        "User" user0_ 
    inner join
        UserGroup groups1_ 
            on user0_.name=groups1_."userName" 
            and user0_.org=groups1_.org 
    inner join
        "Group" group2_ 
            on groups1_.groupName=group2_.name 
            and groups1_.org=group2_.org 
    inner join
        UserGroup users3_ 
            on group2_.name=users3_.groupName 
            and group2_.org=users3_.org 
    inner join
        "User" user4_ 
            on users3_."userName"=user4_.name 
            and users3_.org=user4_.org
14:17:26,743 DEBUG SQL:104 - 
    select
        user0_.name as name2_0_,
        user0_.org as org2_0_ 
    from
        "User" user0_ 
    where
        user0_.name=? 
        and user0_.org=?
14:17:26,743 DEBUG SQL:104 - 
    select
        group0_.name as name1_0_,
        group0_.org as org1_0_,
        group0_.description as descript3_1_0_ 
    from
        "Group" group0_ 
    where
        group0_.name=? 
        and group0_.org=?
14:17:26,744 DEBUG SQL:104 - 
    select
        groups0_."userName" as userName1_2_1_,
        groups0_.org as org2_1_,
        groups0_.groupName as groupName0_1_,
        groups0_.org as formula94_1_,
        group1_.name as name1_0_,
        group1_.org as org1_0_,
        group1_.description as descript3_1_0_ 
    from
        UserGroup groups0_ 
    inner join
        "Group" group1_ 
            on groups0_.groupName=group1_.name 
            and groups0_.org=group1_.org 
    where
        groups0_."userName"=? 
        and groups0_.org=?
14:17:26,744 DEBUG SQL:104 - 
    delete 
    from
        UserGroup 
    where
        "userName"=? 
        and org=? 
        and groupName=?
14:17:26,745 DEBUG SQL:104 - 
    select
        user0_.name as name2_0_,
        user0_.org as org2_0_ 
    from
        "User" user0_ 
    where
        user0_.name=? 
        and user0_.org=?
14:17:26,745 DEBUG SQL:104 - 
    select
        groups0_."userName" as userName1_2_1_,
        groups0_.org as org2_1_,
        groups0_.groupName as groupName0_1_,
        groups0_.org as formula94_1_,
        group1_.name as name1_0_,
        group1_.org as org1_0_,
        group1_.description as descript3_1_0_ 
    from
        UserGroup groups0_ 
    inner join
        "Group" group1_ 
            on groups0_.groupName=group1_.name 
            and groups0_.org=group1_.org 
    where
        groups0_."userName"=? 
        and groups0_.org=?
14:17:26,746 DEBUG SQL:104 - 
    select
        group0_.name as name1_0_,
        group0_.org as org1_0_,
        group0_.description as descript3_1_0_ 
    from
        "Group" group0_ 
    where
        group0_.name=? 
        and group0_.org=?
14:17:26,746 DEBUG SQL:104 - 
    select
        users0_.groupName as groupName1_1_,
        users0_.org as org1_1_,
        users0_."userName" as userName1_0_1_,
        users0_.org as formula95_1_,
        user1_.name as name2_0_,
        user1_.org as org2_0_ 
    from
        UserGroup users0_ 
    inner join
        "User" user1_ 
            on users0_."userName"=user1_.name 
            and users0_.org=user1_.org 
    where
        users0_.groupName=? 
        and users0_.org=?
14:17:26,747 DEBUG SQL:104 - 
    select
        user_.name,
        user_.org 
    from
        "User" user_ 
    where
        user_.name=? 
        and user_.org=?
14:17:26,747 DEBUG SQL:104 - 
    delete 
    from
        UserGroup 
    where
        "userName"=? 
        and org=?
14:17:26,747 DEBUG SQL:104 - 
    delete 
    from
        "User" 
    where
        name=? 
        and org=?
14:17:26,748 DEBUG QueryTranslatorImpl:265 - parse() - HQL: delete from org.hibernate.test.manytomany.Group
14:17:26,748 DEBUG HqlParser:347 - weakKeywords() : new LT(1) token - ["Group",<108> previously: <24>,line=1,col=43,possibleID=true]
14:17:26,749 DEBUG QueryTranslatorImpl:283 - --- HQL AST ---
 \-[DELETE] Node: 'delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[IDENT] Node: 'org'
             |  |  |  \-[IDENT] Node: 'hibernate'
             |  |  \-[IDENT] Node: 'test'
             |  \-[IDENT] Node: 'manytomany'
             \-[IDENT] Node: 'Group'

14:17:26,749 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:26,749 DEBUG FromElement:157 - FromClause{level=1} : org.hibernate.test.manytomany.Group (<no alias>) -> group0_
14:17:26,749 DEBUG QueryTranslatorImpl:252 - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'delete'  querySpaces ("Group")
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[group0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: '"Group"' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName="Group",tableAlias=group0_,origin=null,columns={,className=org.hibernate.test.manytomany.Group}}

14:17:26,749 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:26,749 DEBUG ErrorCounter:82 - throwQueryException() : no errors
14:17:26,749 DEBUG SQL:104 - 
    delete 
    from
        "Group"
14:17:26,750  INFO SchemaExport:343 - HHH000227: Running hbm2ddl schema export
14:17:26,750 DEBUG SchemaExport:353 - Import file not found: /import.sql
14:17:26,751 DEBUG SQL:104 - 
    alter table UserGroup 
        drop constraint FK8A5BE154FDF98124
14:17:26,751 DEBUG SQL:104 - 
    alter table UserGroup 
        drop constraint FK8A5BE15454A1054E
14:17:26,751 DEBUG SQL:104 - 
    drop table UserGroup if exists
14:17:26,751 DEBUG SQL:104 - 
    drop table "Group" if exists
14:17:26,751 DEBUG SQL:104 - 
    drop table "User" if exists
14:17:26,751  INFO SchemaExport:405 - HHH000230: Schema export complete
14:17:26,752  INFO DriverManagerConnectionProviderImpl:162 - HHH000030: Cleaning up connection pool [jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;MVCC=TRUE]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
