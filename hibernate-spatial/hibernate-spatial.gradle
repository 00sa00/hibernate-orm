import org.apache.tools.ant.filters.ReplaceTokens

/*
 * Hibernate, Relational Persistence for Idiomatic Java
 *
 * License: GNU Lesser General Public License (LGPL), version 2.1 or later.
 * See the lgpl.txt file in the root directory or <http://www.gnu.org/licenses/lgpl-2.1.html>.
 */

apply from: rootProject.file( 'gradle/published-java-module.gradle' )
apply plugin: 'hibernate-matrix-testing'

ext {
	db = project.hasProperty('db') ? project.getProperty('db') : 'h2'
	dbBundle = [
			h2 : [
					'db.dialect' : 'org.hibernate.spatial.dialect.h2geodb.GeoDBDialect',
					'jdbc.driver': 'org.h2.Driver',
					'jdbc.user'  : 'sa',
					'jdbc.pass'  : '',
					'jdbc.url'   : 'jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;LOCK_TIMEOUT=10000',
			]
	]
}

description = 'Integrate support for Spatial/GIS data into Hibernate O/RM'

dependencies {
    compile( project(':hibernate-core') )
    compile( libraries.geolatte )

    compile( 'org.postgresql:postgresql:42.1.4' )

    compile(libraries.dom4j) {
        transitive = false
    }

    testCompile(libraries.junit)
    testCompile(project(':hibernate-testing'))
    testCompile([group: 'commons-dbcp', name: 'commons-dbcp', version: '1.4'])
    testCompile(libraries.validation)
    testCompile(libraries.jandex)
    testCompile(libraries.classmate)
    testCompile(libraries.validator) {
        // for test runtime
        transitive = true
    }

    testRuntime( libraries.expression_language )

    testRuntime('jaxen:jaxen:1.1')
    testRuntime(libraries.byteBuddy)
}

sourceSets.test.resources {
    setSrcDirs(['src/test/java', 'src/test/resources'])
}

processTestResources {
	doLast {
		copy {
			from( sourceSets.test.java.srcDirs ) {
				include '**/*.properties'
				include '**/*.xml'
			}
			into sourceSets.test.java.outputDir
		}
		copy {
			from file( 'src/test/resources' )
			into file( "${buildDir}/resources/test" )
			exclude 'src/test/resources/arquillian.xml'
			exclude 'src/test/resources/hibernate.properties'
		}
		copy {
			from file( 'src/test/resources/hibernate.properties' )
			into file( "${buildDir}/resources/test" )
			filter( ReplaceTokens, tokens: dbBundle[db] )
		}
	}
}
